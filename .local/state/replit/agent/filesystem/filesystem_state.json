{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Life in UK Test E-Learning Platform\n\n## Overview\nThis is a full-stack web application serving as an e-learning platform for Life in UK test preparation. It offers video modules, interactive exercises, historical timeline exploration, and downloadable resources. The platform aims to provide comprehensive tools to help users prepare for the official UK citizenship test, covering areas such as UK history, culture, government, and geography. Key capabilities include customizable game variants with progression encouragement, an interactive UK map with cultural regions, and a wide array of matching games covering various topics like traditional foods, places of interest, prime ministers, rulers, acts, battles, international memberships, religion & demographics, and the justice system.\n\n## User Preferences\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React with TypeScript\n- **Routing**: Wouter\n- **UI Components**: Shadcn/ui (with Radix UI primitives)\n- **Styling**: Tailwind CSS (custom UK-themed color palette)\n- **State Management**: TanStack Query (React Query) for server state\n- **Form Handling**: React Hook Form with Zod validation\n- **Design System**: Comprehensive design system based on Shadcn/ui, consistent styling with CSS custom properties, responsive design, UK-themed color palette, dark mode support.\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js\n- **Language**: TypeScript with ES modules\n- **Database ORM**: Drizzle ORM with PostgreSQL\n- **Database Provider**: Neon Database (serverless PostgreSQL)\n- **AI Integration**: OpenAI GPT-4o for dynamic exercise generation (contextual fill-in-the-blank, multiple choice with explanations, difficulty scaling, topic-specific content).\n- **Build Tool**: Vite for frontend bundling, esbuild for backend compilation\n\n### System Design Choices\n- **Key Components**: Database Schema (Users, Video Modules, User Video Progress, Timeline Events, Exercises, Exercise Attempts, Learning Modules, User Module Progress, Resources), AI-Powered Exercise Generation, UI Component System.\n- **Data Flow**: RESTful API endpoints (Express.js), TanStack Query for client-side caching and synchronization, React useState/useReducer for local state, React Hook Form for form state, Wouter for URL state.\n- **System Diagrams Feature**: Visual diagrams section for UK government, justice, and parliament systems (including executive, legislative, judicial branches; regional justice systems; and parliamentary structure).\n- **Timeline Features**: Comprehensive historical timeline (Prehistoric to 21st Century), Church Evolution timeline, Inventions & Discoveries timeline, Population & Migration timeline, Sports & Athletics timeline, Music/Arts/Visual timeline, Literature timeline, British Holidays timeline, and British Sports timeline.\n- **Game Mechanics**: Interactive matching games (triple-column, category filtering, immediate feedback, confetti celebrations, progression tracking), True/False challenge game.\n\n## External Dependencies\n\n### Core Infrastructure\n- **Database**: Neon Database (serverless PostgreSQL)\n- **AI Service**: OpenAI API\n- **Development**: Replit (with cartographer plugin)\n\n### Key Libraries\n- **UI Framework**: React 18\n- **Styling**: Tailwind CSS, PostCSS\n- **Database**: Drizzle ORM, Drizzle Kit\n- **Validation**: Zod\n- **Date Handling**: date-fns\n- **Icons**: Lucide React\n\n### Integrations\n- **Amazon Book Purchase Integration**: Links to official Life in UK Test book on Amazon UK and US.\n- **Stripe Payment Processing**: Secure payment system with three pricing tiers in British Pounds (GBP).\n\n## Recent Feature Updates\n\n### Stripe Payment System Implementation (February 1, 2025)\n- **Complete payment integration** with three pricing tiers accessible via blue user profile icon in dashboard header\n- **Learning App Access (£60)** - One-off payment for 3 months complete platform access, ideal for intensive study preparation\n- **Group Video Sessions (£80)** - Premium package with live group video calls and UK test specialist support  \n- **Citizenship Application Guidance (£30)** - Dedicated support for completing UK citizenship application forms\n- **Professional payment interface** with feature comparisons, secure Stripe forms, and celebration success page\n- **User profile management** with subscription badges, progress tracking, and easy access to payment options\n- **Database schema enhanced** to track subscription types, status, and Stripe customer information\n\n### Customizable Game Variants with Progression Encouragement (January 31, 2025)\n- Added variant selection system for all matching games: students can choose between 4, 6, 8, or 12 items\n- Implemented VariantSelector component with difficulty progression: Starter (4), Standard (6), Advanced (8), Master (12)\n- Created GameCompletionEncouragement component that celebrates completing all variants and guides students to next games\n- Enhanced General Matching and Sports Heroes games with full variant support and completion tracking\n- Added automatic progression system that encourages students to move to next matching game group after mastering all variants\n- Color-coded difficulty levels: Easy (Green), Medium (Blue), Hard (Orange), Expert (Purple)\n- Statistics tracking shows completion status and encourages systematic learning progression\n- Confetti celebrations for both individual matches and complete variant mastery\n- Comprehensive \"How to Play\" instructions for each difficulty level and variant selection\n\n### Enhanced Timeline Content Implementation (February 6, 2025)\n- **Population & Migration Timeline** - Complete migration history from Norman Conquest to modern Eastern European migration, including Windrush Generation, Irish Famine migration, and Jewish immigration waves\n- **Sports & Athletics Timeline** - Development of British sports from Football Association founding (1863) to 2012 London Olympics success\n- **Music/Arts/Visual Timeline** - Cultural evolution from Elizabethan theatre to Britpop movement, including Beatles emergence, Swinging London, and contemporary electronic music innovation  \n- **Literature Timeline** - Literary development from Beowulf through Shakespeare to contemporary Harry Potter phenomenon\n- **British Holidays Timeline** - Evolution of British celebrations from Guy Fawkes Night to modern bank holidays and royal commemorations\n- **British Sports Timeline** - Sporting heritage from rugby invention at Rugby School to England's 1966 World Cup victory and Olympic achievements\n- **AI Exercise Optimization** - Limited AI-generated exercises to maximum 12 questions (reduced from 15-25) for improved attention management and user experience\n\n### Video Upload System Enhancement (February 6, 2025)\n- **Complete Video Integration** - Uploaded videos now properly display in their assigned categories and are fully watchable by students\n- **Dual Video Support** - System handles both uploaded MP4 files (via HTML5 video player) and external YouTube/embedded videos (via iframe)\n- **Category Organization** - Videos automatically group by category (Government, History, Geography, Culture) with proper visual indicators\n- **Student Accessibility** - All uploaded videos are immediately available to students with full controls (play, pause, volume, fullscreen)\n- **Fallback Thumbnails** - Videos without custom thumbnails display professional placeholder with play icon\n- **Seamless Playback** - Uploaded videos use native HTML5 player while external videos use iframe embedding for optimal compatibility\n\n### AI-Powered Study Assistant Chatbot (February 6, 2025)\n- **Floating Chatbot Widget** - Fixed position chatbot in bottom-right corner that follows users as they scroll through any page\n- **Comprehensive Knowledge Base** - Complete Life in UK handbook information including detailed British history, government structure, cultural traditions, and geography\n- **Authentic Content** - Accurate dates, names, and facts from official test materials covering Stone Age to modern Britain, all political systems, and cultural practices\n- **Smart Error Handling** - Robust fallback responses ensure students always receive helpful information even during API rate limits\n- **Enhanced Formatting** - Well-structured responses with bullet points and clear sections for optimal readability in chat interface\n- **Interactive Features** - Real-time conversation with typing indicators, contextual follow-up suggestions, and expandable/minimizable interface\n- **Educational Focus** - Designed specifically for citizenship test preparation with comprehensive coverage of all test topics and structured learning guidance\n\n### AI Exercises Game Integration (February 6, 2025)\n- **Dedicated AI Exercises Section** - Moved AI-generated exercises from dashboard to games page as separate category\n- **Enhanced AI Exercise Interface** - Comprehensive topic selection with 7 categories including Government, History, Culture, Values, Geography, Sports, and Legal System\n- **Difficulty Level Selection** - Three difficulty levels (Beginner, Intermediate, Advanced) with 8-12 questions per exercise\n- **Topic-Based Generation** - Students can choose specific topics with detailed descriptions and visual icons\n- **Improved User Experience** - Better exercise display with progress tracking, explanations, and score feedback\n- **Games Page Integration** - AI Exercises now prominently featured as first tab in games section with purple branding\n- **Student Progress Statistics** - Comprehensive category-based progress tracking showing performance across 6 Life in UK test areas\n\n### Authentic Life in UK Content Integration (August 14, 2025)\n- **Official Study Guide Integration** - Updated AI service to use only verified facts from lifeintheuktests.co.uk official study guide\n- **Interactive Text Passages** - AI exercises now generate complete readable paragraphs with clickable highlighted words for multiple choice selection\n- **Authentic Historical Content** - All generated text uses real dates (1066, AD 43, AD 410), genuine historical figures (William the Conqueror, Boudicca, Julius Caesar), and verified landmarks (Stonehenge, Hadrian's Wall, Skara Brae)\n- **Fill-in-the-Blank Format** - Students click on dashed underlined words to select from 4 authentic answer options within flowing text passages\n- **Verified Population Data** - Uses official population statistics and growth figures from the handbook\n- **Real Government Structure** - Incorporates authentic UK values (Democracy, Rule of law, Individual liberty) and constitutional information\n- **Plagiarism-Free Educational Content** - All generated passages are educationally sound while being completely original and based on verified official sources","size_bytes":10825},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2627},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"attached_assets/enhanced-key-dates-timeline.md":{"content":"# Life in UK Test - Enhanced Key Dates Timeline\n\n## Ancient & Medieval Britain (Pre-1500)\n\n### Stone Age to Roman Britain\n- **43 AD**: Roman invasion of Britain begins\n- **122 AD**: Hadrian's Wall built across northern England\n- **410 AD**: Romans leave Britain\n\n### Anglo-Saxon Period\n- **597 AD**: St Augustine brings Christianity to England\n- **793 AD**: Viking raids begin (Lindisfarne attacked)\n- **878 AD**: Alfred the Great defeats Vikings at Edington\n- **1016**: Cnut (Canute) becomes King of England\n\n### Norman Period\n- **1066**: Battle of Hastings - Norman Conquest\n- **1086**: Domesday Book completed\n- **1170**: Thomas Becket murdered in Canterbury Cathedral\n\n### Medieval England\n- **1215**: Magna Carta signed by King John\n- **1314**: Battle of Bannockburn - Scottish victory\n- **1348-1350**: Black Death kills one-third of population\n- **1381**: Peasants' Revolt\n- **1415**: Battle of Agincourt\n- **1455-1487**: Wars of the Roses\n\n## Tudor & Stuart Periods (1485-1714)\n\n### Tudor Dynasty\n- **1485**: Battle of Bosworth - Henry VII becomes king\n- **1509**: Henry VIII becomes king\n- **1534**: Act of Supremacy - Church of England established\n- **1558**: Elizabeth I becomes queen\n- **1588**: Spanish Armada defeated\n- **1603**: Union of Crowns - James I becomes king\n\n### English Civil War Period\n- **1642**: English Civil War begins\n- **1649**: Charles I executed\n- **1649-1660**: Commonwealth period under Oliver Cromwell\n- **1660**: Restoration - Charles II returns\n- **1665**: Great Plague of London\n- **1666**: Great Fire of London\n- **1688**: Glorious Revolution - William and Mary\n\n## Acts of Union & Empire (1707-1914)\n\n### Union & Expansion\n- **1707**: Act of Union creates Kingdom of Great Britain\n- **1745**: Battle of Culloden - last battle on British soil\n- **1776**: American Declaration of Independence\n- **1801**: Act of Union includes Ireland (United Kingdom)\n- **1805**: Battle of Trafalgar - Nelson's victory\n- **1815**: Battle of Waterloo - Napoleon defeated\n\n### Industrial Revolution\n- **1825**: First passenger railway opens\n- **1833**: Slavery abolished in British Empire\n- **1837**: Victoria becomes queen (reigns until 1901)\n- **1851**: Great Exhibition in Crystal Palace\n- **1854-1856**: Crimean War\n- **1858**: Government of India Act\n\n### Reform & Progress\n- **1832**: Great Reform Act extends voting rights\n- **1870**: Education Act makes school compulsory\n- **1872**: Secret ballot introduced\n- **1884**: Third Reform Act - more men get vote\n- **1901**: Edward VII becomes king\n\n## Modern Britain (1914-Present)\n\n### World Wars Era\n- **1914-1918**: World War I\n- **1916**: Easter Rising in Ireland\n- **1918**: Women over 30 get the vote\n- **1921**: Irish partition - Northern Ireland created\n- **1922**: Irish Free State established\n- **1928**: All women over 21 get the vote\n- **1936**: Edward VIII abdicates\n- **1939-1945**: World War II\n- **1940**: Battle of Britain\n- **1944**: D-Day landings\n\n### Post-War Britain\n- **1948**: NHS established\n- **1948**: Windrush generation arrives\n- **1952**: Elizabeth II becomes queen\n- **1953**: DNA structure discovered\n- **1969**: Voting age lowered to 18\n- **1973**: UK joins European Economic Community\n- **1979**: Margaret Thatcher becomes PM\n- **1982**: Falklands War\n\n### Contemporary Period\n- **1997**: Devolution referendums (Scotland & Wales)\n- **1998**: Good Friday Agreement (Northern Ireland)\n- **1999**: Scottish Parliament and Welsh Assembly established\n- **2005**: Civil partnerships introduced\n- **2012**: London Olympics\n- **2014**: Scottish independence referendum (No wins)\n- **2016**: Brexit referendum (Leave wins 52%-48%)\n- **2020**: UK leaves European Union\n- **2022**: Elizabeth II dies, Charles III becomes king\n\n## Test Success Tips for Dates\n\n### Most Important Dates to Memorize\n1. **1066** - Norman Conquest\n2. **1215** - Magna Carta\n3. **1707** - Act of Union (Great Britain)\n4. **1801** - Act of Union (includes Ireland)\n5. **1918** - Women over 30 get vote\n6. **1928** - All women over 21 get vote\n7. **1948** - NHS established\n8. **1973** - UK joins EEC\n\n### Memory Techniques\n- **1066**: \"Ten-sixty-six, Norman tricks\"\n- **1215**: \"Twelve-fifteen, Magna scene\"\n- **1707**: \"Seventeen-oh-seven, Great Britain's heaven\"\n- **1918**: \"Nineteen-eighteen, women's voting scene\"\n- **1948**: \"Nineteen-forty-eight, NHS creates\"\n\n### Date Patterns to Remember\n- **Union dates**: 1707 (Scotland), 1801 (Ireland)\n- **Women's suffrage**: 1918 (over 30), 1928 (over 21)\n- **World Wars**: 1914-1918 (WWI), 1939-1945 (WWII)\n- **Reform Acts**: 1832, 1867, 1884 (extending voting rights)\n\n### Common Test Question Formats\n1. \"In which year did...?\"\n2. \"What happened in [year]?\"\n3. \"Which came first...?\"\n4. \"How many years after...?\"\n\n---\n*Focus on the bolded dates - these appear most frequently on the Life in UK test*","size_bytes":4827},"attached_assets/life-in-uk-key-data-cheatsheet.md":{"content":"# Life in UK Test - Key Data Cheatsheet\n\n## Essential Facts & Figures\n\n### UK Geography & Population\n- **Total Population**: Approximately 67 million (2021)\n- **England**: 56 million | **Scotland**: 5.5 million | **Wales**: 3.1 million | **Northern Ireland**: 1.9 million\n- **Capital Cities**: London (England), Edinburgh (Scotland), Cardiff (Wales), Belfast (Northern Ireland)\n- **Highest Mountain**: Ben Nevis (Scotland) - 1,345m\n- **Longest River**: River Severn - 354km\n- **Currency**: Pound Sterling (£)\n\n### Key Historical Dates\n- **1066**: Norman Conquest - Battle of Hastings\n- **1215**: Magna Carta signed\n- **1314**: Battle of Bannockburn (Scotland defeats England)\n- **1536 & 1542**: Acts of Union (England and Wales)\n- **1588**: Spanish Armada defeated\n- **1642-1651**: English Civil War\n- **1707**: Act of Union creates Kingdom of Great Britain\n- **1801**: Act of Union includes Ireland\n- **1914-1918**: World War I\n- **1918**: Women over 30 get the vote\n- **1928**: All women over 21 get the vote\n- **1939-1945**: World War II\n- **1948**: NHS established\n- **1973**: UK joins EEC (European Economic Community)\n- **2016**: Brexit referendum\n- **2020**: UK leaves European Union\n\n### Government & Democracy\n- **Head of State**: The Monarch (currently King Charles III)\n- **Head of Government**: Prime Minister\n- **Parliament**: House of Commons (650 MPs) + House of Lords\n- **Voting Age**: 18 years old\n- **Election Frequency**: Maximum 5 years between general elections\n- **First Past the Post**: UK electoral system\n- **Devolved Parliaments**: Scotland, Wales, Northern Ireland\n\n### Legal System\n- **Age of Criminal Responsibility**: 10 years old in England, Wales & Northern Ireland; 12 in Scotland\n- **Jury Service**: Citizens aged 18-70\n- **Small Claims Court**: Up to £10,000 in England & Wales\n- **Legal Drinking Age**: 18 years old\n- **Legal Driving Age**: 17 years old (car), 16 years old (moped)\n\n### Education System\n- **Compulsory Education**: Ages 5-16 in England, 4-16 in Northern Ireland\n- **Key Stages**: KS1 (ages 5-7), KS2 (ages 7-11), KS3 (ages 11-14), KS4 (ages 14-16)\n- **GCSEs**: Taken at age 16\n- **A-levels**: Taken at age 18\n- **University Tuition**: Up to £9,250 per year in England\n\n### Work & Benefits\n- **Minimum Wage**: Varies by age (check current rates)\n- **Working Time**: Maximum 48 hours per week (can opt out)\n- **Holiday Entitlement**: Minimum 28 days per year (including bank holidays)\n- **Maternity Leave**: Up to 52 weeks\n- **Paternity Leave**: Up to 2 weeks\n- **National Insurance**: Required for work\n\n### Important Public Holidays\n- **New Year's Day**: January 1st\n- **Good Friday**: Friday before Easter Sunday\n- **Easter Monday**: Monday after Easter Sunday\n- **Early May Bank Holiday**: First Monday in May\n- **Spring Bank Holiday**: Last Monday in May\n- **Summer Bank Holiday**: Last Monday in August\n- **Christmas Day**: December 25th\n- **Boxing Day**: December 26th\n\n### Sports & Culture\n- **National Sports**: Football, rugby, cricket, tennis\n- **Wimbledon**: World's oldest tennis tournament\n- **Six Nations**: Annual rugby championship\n- **BBC**: Founded 1922, public service broadcaster\n- **Shakespeare**: Born 1564 in Stratford-upon-Avon\n- **Beatles**: From Liverpool, 1960s\n\n### Famous British People\n- **Scientists**: Isaac Newton, Charles Darwin, Alexander Fleming, Stephen Hawking\n- **Writers**: William Shakespeare, Charles Dickens, Jane Austen, Roald Dahl\n- **Leaders**: Winston Churchill, Margaret Thatcher, Emmeline Pankhurst\n- **Inventors**: Alexander Graham Bell, John Logie Baird, Tim Berners-Lee\n\n### UK Values & Traditions\n- **Democracy**: Free and fair elections\n- **Rule of Law**: Everyone equal under the law\n- **Individual Liberty**: Freedom of speech and belief\n- **Tolerance**: Respect for different opinions and beliefs\n- **Participation**: Civic duty and community involvement\n\n### Emergency Services\n- **Emergency Number**: 999 (or 112)\n- **Non-Emergency Police**: 101\n- **Non-Emergency Health**: 111 (NHS)\n\n### Housing & Council Tax\n- **Council Tax**: Local tax on property\n- **Bands A-H**: Different tax rates based on property value\n- **Housing Benefit**: Available for those on low income\n- **Right to Buy**: Council tenants can buy their homes\n\n### Banking & Finance\n- **Bank of England**: Central bank, sets interest rates\n- **Major Banks**: Barclays, HSBC, Lloyds, NatWest, Santander\n- **Credit Score**: Important for loans and mortgages\n- **ISA**: Individual Savings Account (tax-free savings)\n\n### Transport\n- **Driving**: Left side of the road\n- **MOT**: Annual vehicle safety test (cars over 3 years old)\n- **London Transport**: Underground (Tube), buses, overground\n- **National Rail**: Train network across Britain\n- **Oyster Card**: London public transport payment\n\n### Health Service (NHS)\n- **Founded**: 1948\n- **Free at Point of Use**: Funded by taxation\n- **GP**: General Practitioner (family doctor)\n- **A&E**: Accident & Emergency departments\n- **Prescription Charges**: Apply in England (free in Scotland, Wales, NI)\n\n## Quick Facts for Test Success\n\n### Most Tested Numbers\n- **67 million**: UK population\n- **650**: Number of MPs\n- **18**: Voting age\n- **16**: School leaving age\n- **1066**: Norman Conquest\n- **1215**: Magna Carta\n- **1707**: Act of Union (Great Britain)\n- **1918**: Women get the vote\n- **1948**: NHS established\n\n### Common Question Topics\n1. **Constitutional Monarchy**: UK system of government\n2. **Devolution**: Powers given to Scotland, Wales, Northern Ireland\n3. **Commonwealth**: Countries with historical links to Britain\n4. **Human Rights**: Protected under UK law\n5. **Volunteering**: Important part of UK society\n6. **Integration**: Contributing to local community\n\n### Remember These Key Concepts\n- **Constitutional Monarchy**: Monarch is Head of State, PM is Head of Government\n- **Parliamentary Democracy**: MPs elected by the people\n- **Devolved Administrations**: Scotland, Wales, NI have own parliaments\n- **Common Law**: Legal system based on precedent\n- **Civil Service**: Politically neutral government workers\n- **Cabinet**: Senior government ministers\n- **Opposition**: Largest non-government party\n- **Backbenchers**: MPs who are not government ministers\n\n## Test Day Tips\n1. Focus on dates, numbers, and key facts\n2. Understand the UK's democratic system\n3. Know the differences between England, Scotland, Wales, and Northern Ireland\n4. Remember important historical events and their significance\n5. Understand UK values and how they apply in practice\n\n---\n*This cheatsheet covers the most commonly tested facts and figures for the Life in UK test. Study these key points alongside your official handbook for best results.*","size_bytes":6680},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });","size_bytes":482},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport express from \"express\";\nimport { createServer, type Server } from \"http\";\nimport multer from \"multer\";\nimport path from \"path\";\nimport fs from \"fs\";\nimport bcrypt from \"bcrypt\";\nimport rateLimit from \"express-rate-limit\";\nimport { storage } from \"./storage\";\nimport { generateExercise, generateExerciseVariation } from \"./services/openai\";\nimport { generateStaticExercise, getAvailableTopics } from \"./services/static-exercises\";\nimport { generatePracticeTestQuestions } from \"./services/practice-test-generator\";\nimport { insertExerciseSchema, insertExerciseAttemptSchema, insertUserVideoProgressSchema, insertPracticeTestAttemptSchema, insertVideoModuleSchema, type Exercise, type ExerciseAttempt, loginSchema, registerSchema } from \"@shared/schema\";\nimport { generateTokenPair, getRefreshTokenExpiry, type JWTPayload } from \"./services/jwt\";\nimport { authenticateToken, requireAdmin, type AuthenticatedRequest } from \"./middleware/auth\";\nimport Stripe from \"stripe\";\n\nif (!process.env.STRIPE_SECRET_KEY) {\n  throw new Error('Missing required Stripe secret: STRIPE_SECRET_KEY');\n}\nconst stripe = new Stripe(process.env.STRIPE_SECRET_KEY);\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  \n  // Rate limiting for authentication endpoints\n  const authLimiter = rateLimit({\n    windowMs: 15 * 60 * 1000, // 15 minutes\n    max: 15 * 60 * 1000, // Limit each IP to 5 requests per windowMs\n    message: {\n      error: \"Too many authentication attempts, please try again later.\"\n    },\n    standardHeaders: true,\n    legacyHeaders: false,\n  });\n\n  const refreshLimiter = rateLimit({\n    windowMs: 15 * 60 * 1000, // 15 minutes\n    max: 10, // Limit each IP to 10 refresh requests per windowMs\n    message: {\n      error: \"Too many token refresh attempts, please try again later.\"\n    },\n    standardHeaders: true,\n    legacyHeaders: false,\n  });\n  \n  // Authentication routes\n  app.post(\"/api/auth/register\", authLimiter, async (req, res) => {\n    try {\n      const validatedData = registerSchema.parse(req.body);\n      \n      // Check if user already exists (generic message to prevent user enumeration)\n      const existingUser = await storage.getUserByUsername(validatedData.username);\n      const existingEmail = await storage.getUserByEmail(validatedData.email);\n      \n      if (existingUser || existingEmail) {\n        return res.status(400).json({ error: \"User with this username or email already exists\" });\n      }\n\n      // Hash password\n      const hashedPassword = await bcrypt.hash(validatedData.password, 12);\n\n      // Create user\n      const newUser = await storage.createUser({\n        ...validatedData,\n        password: hashedPassword,\n      });\n\n      // Generate tokens\n      const payload: JWTPayload = {\n        userId: newUser.id,\n        username: newUser.username,\n        email: newUser.email,\n        role: (newUser.role as 'student' | 'admin' | 'superadmin') || 'student',\n      };\n\n      const { accessToken, refreshToken } = generateTokenPair(payload);\n\n      // Store refresh token\n      await storage.createRefreshToken({\n        token: refreshToken,\n        userId: newUser.id,\n        expiresAt: getRefreshTokenExpiry(),\n      });\n\n      res.status(201).json({\n        message: \"Registration successful\",\n        user: {\n          id: newUser.id,\n          name: newUser.firstName,\n          username: newUser.username,\n          email: newUser.email,\n          role: newUser.role || 'student',\n        },\n        accessToken,\n        refreshToken,\n      });\n\n    } catch (error: any) {\n      console.error(\"Registration error:\", error);\n      res.status(400).json({ error: error.message || \"Registration failed\" });\n    }\n  });\n\n  app.post(\"/api/auth/login\", authLimiter, async (req, res) => {\n    try {\n      const validatedData = loginSchema.parse(req.body);\n\n      // Find user and verify password (generic message for both cases)\n      const user = await storage.getUserByEmail(validatedData.email);\n      const isPasswordValid = user ? await bcrypt.compare(validatedData.password, user.password) : false;\n      \n      if (!user || !isPasswordValid) {\n        return res.status(401).json({ error: \"Invalid email or password\" });\n      }\n\n      // Generate tokens\n      const payload: JWTPayload = {\n        userId: user.id,\n        username: user.username,\n        email: user.email,\n        role: (user.role as 'student' | 'admin' | 'superadmin') || 'student',\n      };\n\n      const { accessToken, refreshToken } = generateTokenPair(payload);\n\n      // Store refresh token\n      await storage.createRefreshToken({\n        token: refreshToken,\n        userId: user.id,\n        expiresAt: getRefreshTokenExpiry(),\n      });\n\n      res.json({\n        message: \"Login successful\",\n        user: {\n          id: user.id,\n          name: user.firstName,\n          username: user.username,\n          email: user.email,\n          role: user.role || 'student',\n        },\n        accessToken,\n        refreshToken,\n      });\n\n    } catch (error: any) {\n      console.error(\"Login error:\", error);\n      res.status(400).json({ error: error.message || \"Login failed\" });\n    }\n  });\n\n  app.post(\"/api/auth/refresh\", refreshLimiter, async (req, res) => {\n    try {\n      const { refreshToken } = req.body;\n\n      if (!refreshToken) {\n        return res.status(401).json({ error: \"Refresh token required\" });\n      }\n\n      // Find refresh token\n      const storedToken = await storage.getRefreshToken(refreshToken);\n      if (!storedToken || storedToken.expiresAt < new Date()) {\n        return res.status(403).json({ error: \"Invalid or expired refresh token\" });\n      }\n\n      // Get user\n      const user = await storage.getUser(storedToken.userId);\n      if (!user) {\n        return res.status(403).json({ error: \"User not found\" });\n      }\n\n      // Generate new access token\n      const payload: JWTPayload = {\n        userId: user.id,\n        username: user.username,\n        email: user.email,\n        role: (user.role as 'student' | 'admin' | 'superadmin') || 'student',\n      };\n\n      const { accessToken, refreshToken: newRefreshToken } = generateTokenPair(payload);\n\n      // Delete old refresh token and create new one\n      await storage.deleteRefreshToken(refreshToken);\n      await storage.createRefreshToken({\n        token: newRefreshToken,\n        userId: user.id,\n        expiresAt: getRefreshTokenExpiry(),\n      });\n\n      res.json({\n        accessToken,\n        refreshToken: newRefreshToken,\n      });\n\n    } catch (error: any) {\n      console.error(\"Refresh token error:\", error);\n      res.status(500).json({ error: \"Token refresh failed\" });\n    }\n  });\n\n  app.post(\"/api/auth/logout\", authenticateToken, async (req: AuthenticatedRequest, res) => {\n    try {\n      const { refreshToken } = req.body;\n\n      if (refreshToken) {\n        await storage.deleteRefreshToken(refreshToken);\n      }\n\n      // Optionally, delete all refresh tokens for the user\n      if (req.user) {\n        await storage.deleteUserRefreshTokens(req.user.userId);\n      }\n\n      res.json({ message: \"Logout successful\" });\n\n    } catch (error: any) {\n      console.error(\"Logout error:\", error);\n      res.status(500).json({ error: \"Logout failed\" });\n    }\n  });\n\n  app.get(\"/api/auth/me\", authenticateToken, async (req: AuthenticatedRequest, res) => {\n    try {\n      if (!req.user) {\n        return res.status(401).json({ error: \"User not authenticated\" });\n      }\n\n      const user = await storage.getUser(req.user.userId);\n      if (!user) {\n        return res.status(404).json({ error: \"User not found\" });\n      }\n\n      res.json({\n        id: user.id,\n        name: user.firstName,\n        username: user.username,\n        email: user.email,\n        role: user.role || 'student',\n        overallProgress: user.overallProgress || 0,\n        totalStudyTime: user.totalStudyTime || 0,\n        currentStreak: user.currentStreak || 0,\n        stripeCustomerId: user.stripeCustomerId,\n        stripeSubscriptionId: user.stripeSubscriptionId,\n        subscriptionType: user.subscriptionType,\n        subscriptionStatus: user.subscriptionStatus,\n      });\n\n    } catch (error: any) {\n      console.error(\"Get user error:\", error);\n      res.status(500).json({ error: \"Failed to get user data\" });\n    }\n  });\n\n  // Profile update endpoint\n  app.put(\"/api/user/profile\", authenticateToken, async (req: AuthenticatedRequest, res) => {\n    try {\n      const { firstName, email, username } = req.body;\n      \n      // Validate input\n      if (!firstName && !email && !username) {\n        return res.status(400).json({ error: \"At least one field must be provided\" });\n      }\n\n      // Basic validation\n      if (email && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n        return res.status(400).json({ error: \"Invalid email format\" });\n      }\n\n      if (username && username.length < 3) {\n        return res.status(400).json({ error: \"Username must be at least 3 characters\" });\n      }\n\n      if (firstName && firstName.trim().length === 0) {\n        return res.status(400).json({ error: \"First name cannot be empty\" });\n      }\n\n      const profileData: { firstName?: string; email?: string; username?: string } = {};\n      \n      if (firstName) profileData.firstName = firstName.trim();\n      if (email) profileData.email = email.trim().toLowerCase();\n      if (username) profileData.username = username.trim();\n\n      const updatedUser = await storage.updateUserProfile(req.user!.userId, profileData);\n\n      res.json({\n        message: \"Profile updated successfully\",\n        user: {\n          id: updatedUser.id,\n          name: updatedUser.firstName,\n          username: updatedUser.username,\n          email: updatedUser.email,\n          role: updatedUser.role || 'student',\n          overallProgress: updatedUser.overallProgress || 0,\n          totalStudyTime: updatedUser.totalStudyTime || 0,\n          currentStreak: updatedUser.currentStreak || 0,\n          stripeCustomerId: updatedUser.stripeCustomerId,\n          stripeSubscriptionId: updatedUser.stripeSubscriptionId,\n          subscriptionType: updatedUser.subscriptionType,\n          subscriptionStatus: updatedUser.subscriptionStatus,\n        }\n      });\n    } catch (error: any) {\n      console.error(\"Profile update error:\", error);\n      if (error.message === \"Email already exists\" || error.message === \"Username already exists\") {\n        res.status(409).json({ error: error.message });\n      } else if (error.message === \"User not found\") {\n        res.status(404).json({ error: error.message });\n      } else {\n        res.status(500).json({ error: \"Internal server error\" });\n      }\n    }\n  });\n  \n  // Configure multer for video uploads\n  const videoStorage = multer.diskStorage({\n    destination: (req, file, cb) => {\n      const uploadDir = path.join(process.cwd(), 'uploads', 'videos');\n      // Create directory if it doesn't exist\n      if (!fs.existsSync(uploadDir)) {\n        fs.mkdirSync(uploadDir, { recursive: true });\n      }\n      cb(null, uploadDir);\n    },\n    filename: (req, file, cb) => {\n      // Generate unique filename with timestamp\n      const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);\n      cb(null, 'video-' + uniqueSuffix + path.extname(file.originalname));\n    }\n  });\n\n  const uploadVideo = multer({\n    storage: videoStorage,\n    limits: {\n      fileSize: 500 * 1024 * 1024, // 500MB limit\n    },\n    fileFilter: (req, file, cb) => {\n      // Accept only video files\n      if (file.mimetype.startsWith('video/')) {\n        cb(null, true);\n      } else {\n        cb(new Error('Only video files are allowed!'));\n      }\n    }\n  });\n\n  // Serve uploaded videos statically\n  app.use('/uploads', express.static(path.join(process.cwd(), 'uploads')));\n\n  // Upload video endpoint\n  app.post(\"/api/videos/upload\", uploadVideo.single('video'), async (req, res) => {\n    try {\n      if (!req.file) {\n        return res.status(400).json({ message: \"No video file uploaded\" });\n      }\n\n      const { title, description, category, orderIndex, detailedContent } = req.body;\n      \n      if (!title || !description || !category) {\n        return res.status(400).json({ message: \"Title, description, and category are required\" });\n      }\n\n      // Create video URL relative to server\n      const videoUrl = `/uploads/videos/${req.file.filename}`;\n      \n      // Create video module in database\n      const videoData = {\n        title,\n        description,\n        videoUrl,\n        duration: 0, // Will be updated when user provides duration or we calculate it\n        category,\n        orderIndex: parseInt(orderIndex) || 0,\n        detailedContent: detailedContent || \"\",\n        thumbnail: null,\n        keyImages: null,\n        audioScript: null\n      };\n\n      const validated = insertVideoModuleSchema.parse(videoData);\n      const newVideo = await storage.createVideoModule(validated);\n      \n      res.json({\n        message: \"Video uploaded successfully\",\n        video: newVideo,\n        filePath: videoUrl\n      });\n    } catch (error) {\n      console.error('Video upload error:', error);\n      res.status(500).json({ message: \"Failed to upload video\" });\n    }\n  });\n\n  // Update video duration endpoint\n  app.patch(\"/api/videos/:id/duration\", async (req, res) => {\n    try {\n      const { id } = req.params;\n      const { duration } = req.body;\n      \n      if (!duration || typeof duration !== 'number') {\n        return res.status(400).json({ message: \"Valid duration is required\" });\n      }\n\n      const updatedVideo = await storage.updateVideoModule(id, { duration });\n      res.json(updatedVideo);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to update video duration\" });\n    }\n  });\n\n  // Get all video modules\n  app.get(\"/api/videos\", async (req, res) => {\n    try {\n      const videos = await storage.getAllVideoModules();\n      res.json(videos);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch videos\" });\n    }\n  });\n\n  // Get user video progress\n  app.get(\"/api/videos/progress/:userId\", async (req, res) => {\n    try {\n      const { userId } = req.params;\n      const progress = await storage.getUserVideoProgress(userId);\n      res.json(progress);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch video progress\" });\n    }\n  });\n\n  // Update video progress\n  app.post(\"/api/videos/progress\", async (req, res) => {\n    try {\n      const validated = insertUserVideoProgressSchema.parse(req.body);\n      const progress = await storage.updateVideoProgress(validated);\n      res.json(progress);\n    } catch (error) {\n      res.status(400).json({ message: \"Invalid video progress data\" });\n    }\n  });\n\n  // Get all timeline events\n  app.get(\"/api/timeline\", async (req, res) => {\n    try {\n      const topic = req.query.topic as string;\n      const events = await storage.getAllTimelineEvents();\n      \n      // Filter by timeline topic if specified\n      const filteredEvents = topic \n        ? events.filter(event => event.timelineTopic === topic)\n        : events;\n      \n      res.json(filteredEvents);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch timeline events\" });\n    }\n  });\n\n  // Get specific timeline event\n  app.get(\"/api/timeline/:id\", async (req, res) => {\n    try {\n      const { id } = req.params;\n      const event = await storage.getTimelineEvent(id);\n      if (!event) {\n        return res.status(404).json({ message: \"Timeline event not found\" });\n      }\n      res.json(event);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch timeline event\" });\n    }\n  });\n\n  // Generate new exercise\n  app.post(\"/api/exercises/generate\", async (req, res) => {\n    try {\n      const { userId, topic, difficulty = 1 } = req.body;\n      \n      if (!userId || !topic) {\n        return res.status(400).json({ message: \"userId and topic are required\" });\n      }\n\n      // Use static exercise generator instead of OpenAI to avoid quota issues\n      const exerciseContent = generateStaticExercise(topic, difficulty);\n      \n      const exercise = await storage.createExercise({\n        userId,\n        content: exerciseContent,\n        topic: exerciseContent.topic,\n        difficulty\n      });\n\n      res.json(exercise);\n    } catch (error) {\n      console.error(\"Exercise generation error:\", error);\n      res.status(500).json({ message: \"Failed to generate exercise: \" + (error as Error).message });\n    }\n  });\n\n  // Get available exercise topics\n  app.get(\"/api/exercises/topics\", async (req, res) => {\n    try {\n      const topics = getAvailableTopics();\n      res.json(topics);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch exercise topics\" });\n    }\n  });\n\n  // Generate exercise variation\n  app.post(\"/api/exercises/vary\", async (req, res) => {\n    try {\n      const { userId, exerciseId } = req.body;\n      \n      if (!userId || !exerciseId) {\n        return res.status(400).json({ message: \"userId and exerciseId are required\" });\n      }\n\n      const exercises = await storage.getUserExercises(userId);\n      const originalExercise = exercises.find(e => e.id === exerciseId);\n      \n      if (!originalExercise) {\n        return res.status(404).json({ message: \"Original exercise not found\" });\n      }\n\n      // Use static exercise generator for variations as well\n      const variationContent = generateStaticExercise(originalExercise.topic, originalExercise.difficulty);\n      \n      const newExercise = await storage.createExercise({\n        userId,\n        content: variationContent,\n        topic: variationContent.topic,\n        difficulty: originalExercise.difficulty\n      });\n\n      res.json(newExercise);\n    } catch (error) {\n      console.error(\"Exercise variation error:\", error);\n      res.status(500).json({ message: \"Failed to generate exercise variation: \" + (error as Error).message });\n    }\n  });\n\n  // Get user exercises\n  app.get(\"/api/exercises/:userId\", async (req, res) => {\n    try {\n      const { userId } = req.params;\n      const exercises = await storage.getUserExercises(userId);\n      res.json(exercises);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch exercises\" });\n    }\n  });\n\n  // Submit exercise attempt\n  app.post(\"/api/exercises/attempt\", async (req, res) => {\n    try {\n      const validated = insertExerciseAttemptSchema.parse(req.body);\n      const attempt = await storage.createExerciseAttempt(validated);\n      res.json(attempt);\n    } catch (error) {\n      res.status(400).json({ message: \"Invalid exercise attempt data\" });\n    }\n  });\n\n  // Get user exercise attempts\n  app.get(\"/api/exercises/attempts/:userId\", async (req, res) => {\n    try {\n      const { userId } = req.params;\n      const attempts = await storage.getUserExerciseAttempts(userId);\n      res.json(attempts);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch exercise attempts\" });\n    }\n  });\n\n  // Get learning modules\n  app.get(\"/api/modules\", async (req, res) => {\n    try {\n      const modules = await storage.getAllLearningModules();\n      res.json(modules);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch learning modules\" });\n    }\n  });\n\n  // Get user module progress\n  app.get(\"/api/modules/progress/:userId\", async (req, res) => {\n    try {\n      const { userId } = req.params;\n      const progress = await storage.getUserModuleProgress(userId);\n      res.json(progress);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch module progress\" });\n    }\n  });\n\n  // Get all resources\n  app.get(\"/api/resources\", async (req, res) => {\n    try {\n      const resources = await storage.getAllResources();\n      res.json(resources);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch resources\" });\n    }\n  });\n\n  // Download resource\n  app.get(\"/api/resources/download/:id\", async (req, res) => {\n    try {\n      const { id } = req.params;\n      const resource = await storage.getResource(id);\n      \n      if (!resource) {\n        return res.status(404).json({ message: \"Resource not found\" });\n      }\n\n      // In a real application, this would serve the actual file\n      // For now, we'll return the resource metadata\n      res.json({\n        message: \"Resource download initiated\",\n        resource: resource\n      });\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to download resource\" });\n    }\n  });\n\n  // Get user statistics\n  app.get(\"/api/stats/:userId\", async (req, res) => {\n    try {\n      const { userId } = req.params;\n      const user = await storage.getUser(userId);\n      const attempts = await storage.getUserExerciseAttempts(userId);\n      \n      if (!user) {\n        return res.status(404).json({ message: \"User not found\" });\n      }\n\n      const totalAttempts = attempts.length;\n      const averageScore = totalAttempts > 0 \n        ? Math.round(attempts.reduce((sum, attempt) => sum + (attempt.score / attempt.totalQuestions * 100), 0) / totalAttempts)\n        : 0;\n\n      const stats = {\n        totalStudyTime: `${Math.floor(user.totalStudyTime / 60)}h ${user.totalStudyTime % 60}m`,\n        exercisesCompleted: totalAttempts,\n        averageScore: `${averageScore}%`,\n        currentStreak: `${user.currentStreak} days`,\n        overallProgress: user.overallProgress\n      };\n\n      res.json(stats);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch user statistics\" });\n    }\n  });\n\n  // Student progress statistics by Life in UK test category\n  app.get(\"/api/student-stats/:userId\", async (req, res) => {\n    const { userId } = req.params;\n    \n    try {\n      // Get all exercise attempts for the user\n      const exerciseAttempts = await storage.getUserExerciseAttempts(userId);\n      const exercises = await storage.getUserExercises(userId);\n      \n      // Life in UK test categories\n      const categories = {\n        'british-history': 'British History',\n        'government-politics': 'Government & Politics', \n        'culture-traditions': 'Culture & Traditions',\n        'geography-demographics': 'Geography & Demographics',\n        'british-values': 'British Values',\n        'legal-system': 'Legal System'\n      };\n\n      const categoryStats: Record<string, any> = {};\n\n      // Initialize categories\n      Object.keys(categories).forEach(category => {\n        categoryStats[category] = {\n          totalExercises: 0,\n          completedExercises: 0,\n          averageScore: 0,\n          bestScore: 0,\n          totalTimeSpent: 0,\n          recentActivity: false,\n          scores: []\n        };\n      });\n\n      // Process exercises and categorize them\n      exercises.forEach((exercise: Exercise) => {\n        let category = 'british-history'; // default category\n        \n        // Categorize based on topic content\n        const topicLower = exercise.topic.toLowerCase();\n        if (topicLower.includes('parliament') || topicLower.includes('government') || topicLower.includes('politics') || topicLower.includes('prime minister')) {\n          category = 'government-politics';\n        } else if (topicLower.includes('culture') || topicLower.includes('tradition') || topicLower.includes('festival') || topicLower.includes('sport')) {\n          category = 'culture-traditions';\n        } else if (topicLower.includes('geography') || topicLower.includes('population') || topicLower.includes('demographic') || topicLower.includes('city')) {\n          category = 'geography-demographics';\n        } else if (topicLower.includes('values') || topicLower.includes('democracy') || topicLower.includes('liberty') || topicLower.includes('tolerance')) {\n          category = 'british-values';\n        } else if (topicLower.includes('law') || topicLower.includes('legal') || topicLower.includes('court') || topicLower.includes('justice')) {\n          category = 'legal-system';\n        }\n\n        categoryStats[category].totalExercises++;\n      });\n\n      // Process exercise attempts\n      exerciseAttempts.forEach((attempt: ExerciseAttempt) => {\n        // Find the corresponding exercise\n        const exercise = exercises.find((ex: Exercise) => ex.id === attempt.exerciseId);\n        if (!exercise) return;\n\n        // Determine category\n        let category = 'british-history';\n        const topicLower = exercise.topic.toLowerCase();\n        if (topicLower.includes('parliament') || topicLower.includes('government') || topicLower.includes('politics') || topicLower.includes('prime minister')) {\n          category = 'government-politics';\n        } else if (topicLower.includes('culture') || topicLower.includes('tradition') || topicLower.includes('festival') || topicLower.includes('sport')) {\n          category = 'culture-traditions';\n        } else if (topicLower.includes('geography') || topicLower.includes('population') || topicLower.includes('demographic') || topicLower.includes('city')) {\n          category = 'geography-demographics';\n        } else if (topicLower.includes('values') || topicLower.includes('democracy') || topicLower.includes('liberty') || topicLower.includes('tolerance')) {\n          category = 'british-values';\n        } else if (topicLower.includes('law') || topicLower.includes('legal') || topicLower.includes('court') || topicLower.includes('justice')) {\n          category = 'legal-system';\n        }\n\n        const scorePercentage = Math.round((attempt.score / attempt.totalQuestions) * 100);\n        categoryStats[category].completedExercises++;\n        categoryStats[category].scores.push(scorePercentage);\n        categoryStats[category].bestScore = Math.max(categoryStats[category].bestScore, scorePercentage);\n        \n        // Check for recent activity (within last 7 days)\n        if (attempt.completedAt) {\n          const attemptDate = new Date(attempt.completedAt);\n          const weekAgo = new Date();\n          weekAgo.setDate(weekAgo.getDate() - 7);\n          if (attemptDate > weekAgo) {\n            categoryStats[category].recentActivity = true;\n          }\n        }\n      });\n\n      // Calculate averages\n      Object.keys(categoryStats).forEach(category => {\n        const scores = categoryStats[category].scores;\n        if (scores.length > 0) {\n          categoryStats[category].averageScore = Math.round(\n            scores.reduce((sum: number, score: number) => sum + score, 0) / scores.length\n          );\n        }\n        // Remove scores array from response\n        delete categoryStats[category].scores;\n      });\n\n      res.json({ categoryStats });\n    } catch (error) {\n      console.error(\"Error fetching student stats:\", error);\n      res.status(500).json({ message: \"Failed to fetch student statistics\" });\n    }\n  });\n\n  // Practice test routes\n  \n  // Get all practice tests\n  app.get(\"/api/practice-tests\", async (req, res) => {\n    try {\n      const tests = await storage.getAllPracticeTests();\n      res.json(tests);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch practice tests\" });\n    }\n  });\n\n  // Get specific practice test with dynamically generated questions\n  app.get(\"/api/practice-tests/:id\", async (req, res) => {\n    try {\n      const { id } = req.params;\n      const test = await storage.getPracticeTest(id);\n      if (!test) {\n        return res.status(404).json({ message: \"Practice test not found\" });\n      }\n\n      // Generate questions dynamically based on test difficulty and category\n      try {\n        const questions = await generatePracticeTestQuestions({\n          testId: test.id,\n          difficulty: test.difficulty,\n          category: test.category,\n          title: test.title\n        });\n\n        // Return test with dynamically generated questions\n        const testWithQuestions = {\n          ...test,\n          questions: questions\n        };\n\n        res.json(testWithQuestions);\n      } catch (questionError) {\n        console.error(\"Error generating questions:\", questionError);\n        // Return test with empty questions array if generation fails\n        res.json({\n          ...test,\n          questions: []\n        });\n      }\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch practice test\" });\n    }\n  });\n\n  // Submit practice test attempt\n  app.post(\"/api/practice-tests/attempt\", async (req, res) => {\n    try {\n      const validated = insertPracticeTestAttemptSchema.parse(req.body);\n      const attempt = await storage.createPracticeTestAttempt(validated);\n      res.json(attempt);\n    } catch (error) {\n      res.status(400).json({ message: \"Invalid practice test attempt data\" });\n    }\n  });\n\n  // Get user practice test attempts\n  app.get(\"/api/practice-tests/attempts/:userId\", async (req, res) => {\n    try {\n      const { userId } = req.params;\n      const attempts = await storage.getUserPracticeTestAttempts(userId);\n      res.json(attempts);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch practice test attempts\" });\n    }\n  });\n\n  // Get user attempts for specific test\n  app.get(\"/api/practice-tests/attempts/:userId/:testId\", async (req, res) => {\n    try {\n      const { userId, testId } = req.params;\n      const attempts = await storage.getPracticeTestAttempts(userId, testId);\n      res.json(attempts);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch practice test attempts\" });\n    }\n  });\n\n  // Mock Tests Routes\n  app.get(\"/api/mock-tests\", async (req, res) => {\n    try {\n      const tests = await storage.getMockTests();\n      res.json(tests);\n    } catch (error) {\n      console.error(\"Error fetching mock tests:\", error);\n      res.status(500).json({ error: \"Failed to fetch mock tests\" });\n    }\n  });\n\n  app.get(\"/api/mock-tests/:id\", async (req, res) => {\n    try {\n      const test = await storage.getMockTest(req.params.id);\n      if (!test) {\n        return res.status(404).json({ error: \"Mock test not found\" });\n      }\n      res.json(test);\n    } catch (error) {\n      console.error(\"Error fetching mock test:\", error);\n      res.status(500).json({ error: \"Failed to fetch mock test\" });\n    }\n  });\n\n  app.post(\"/api/mock-tests/:id/submit\", async (req, res) => {\n    try {\n      const { userId, answers, timeSpent } = req.body;\n      const mockTestId = req.params.id;\n      \n      if (!userId || !answers || typeof timeSpent !== 'number') {\n        return res.status(400).json({ error: \"Missing required fields\" });\n      }\n\n      const mockTest = await storage.getMockTest(mockTestId);\n      if (!mockTest) {\n        return res.status(404).json({ error: \"Mock test not found\" });\n      }\n\n      // Calculate score\n      const questions = mockTest.questions as any[];\n      let score = 0;\n      answers.forEach((answer: number, index: number) => {\n        if (answer === questions[index].correctAnswer) {\n          score++;\n        }\n      });\n\n      const passed = score >= 18; // Need 18/24 to pass (75%)\n\n      const attempt = await storage.submitMockTest({\n        userId,\n        mockTestId,\n        answers,\n        score,\n        totalQuestions: 24,\n        passedTest: passed,\n        timeSpent\n      });\n\n      res.json(attempt);\n    } catch (error) {\n      console.error(\"Error submitting mock test:\", error);\n      res.status(500).json({ error: \"Failed to submit mock test\" });\n    }\n  });\n\n  app.get(\"/api/mock-tests/:id/attempts/:userId\", async (req, res) => {\n    try {\n      const attempts = await storage.getMockTestAttempts(req.params.id, req.params.userId);\n      res.json(attempts);\n    } catch (error) {\n      console.error(\"Error fetching mock test attempts:\", error);\n      res.status(500).json({ error: \"Failed to fetch attempts\" });\n    }\n  });\n\n  // Stripe payment routes\n  app.post(\"/api/create-payment-intent\", async (req, res) => {\n    try {\n      const { amount, planType } = req.body;\n      \n      // Convert pounds to pence (Stripe uses smallest currency unit)\n      const amountInPence = Math.round(amount * 100);\n      \n      const paymentIntent = await stripe.paymentIntents.create({\n        amount: amountInPence,\n        currency: \"gbp\",\n        metadata: {\n          planType: planType || 'basic'\n        },\n      });\n      \n      res.json({ clientSecret: paymentIntent.client_secret });\n    } catch (error: any) {\n      console.error(\"Stripe payment intent error:\", error);\n      res.status(500).json({ \n        message: \"Error creating payment intent: \" + error.message \n      });\n    }\n  });\n\n  // Get user subscription status\n  app.get(\"/api/user/:userId/subscription\", async (req, res) => {\n    try {\n      const user = await storage.getUser(req.params.userId);\n      if (!user) {\n        return res.status(404).json({ error: \"User not found\" });\n      }\n      \n      res.json({\n        subscriptionType: user.subscriptionType,\n        subscriptionStatus: user.subscriptionStatus,\n        stripeCustomerId: user.stripeCustomerId,\n        stripeSubscriptionId: user.stripeSubscriptionId\n      });\n    } catch (error) {\n      console.error(\"Error fetching user subscription:\", error);\n      res.status(500).json({ error: \"Failed to fetch subscription\" });\n    }\n  });\n\n  // Chatbot endpoint\n  app.post(\"/api/chatbot/ask\", async (req, res) => {\n    const { question } = req.body;\n    \n    if (!question) {\n      return res.status(400).json({ message: \"Question is required\" });\n    }\n\n    try {\n\n      // Use OpenAI to generate response with comprehensive Life in UK knowledge\n      const systemPrompt = `You are an expert Life in UK study assistant with complete knowledge from the official handbook and test materials. Provide accurate, detailed information about:\n\nBRITISH HISTORY & KEY DATES:\n- Stone Age (10,000 years ago), Bronze Age (4,000 years ago), Iron Age (2,500 years ago)\n- Roman Britain (43-410 AD): Hadrian's Wall, Roman roads, Boudicca's rebellion\n- Anglo-Saxons (5th-11th centuries): Alfred the Great, Anglo-Saxon kingdoms\n- Vikings (8th-11th centuries): raids and settlements\n- Norman Conquest (1066): Battle of Hastings, William the Conqueror, Domesday Book\n- Medieval Period: Magna Carta (1215), Black Death (1348), Wars of the Roses (1455-1485)\n- Tudor Dynasty: Henry VII, Henry VIII and 6 wives, Elizabeth I, Mary Queen of Scots\n- English Civil War (1642-1651): Charles I execution, Oliver Cromwell, Commonwealth\n- Restoration (1660): Charles II, Great Fire of London (1666), Great Plague (1665)\n- Union with Scotland (1707), Jacobite uprisings\n- Industrial Revolution (1750-1850): steam power, canals, railways, factories\n- British Empire: India, Australia, Canada, slavery abolition (1833)\n- World War I (1914-1918): trench warfare, conscription, women's roles\n- World War II (1939-1945): Churchill, Battle of Britain, Blitz, D-Day\n- Post-war: NHS creation (1948), EU membership (1973-2020), devolution (1997)\n\nGOVERNMENT & POLITICS:\n- Constitutional monarchy: Queen/King as Head of State, ceremonial role\n- Parliament: House of Commons (650 MPs), House of Lords (appointed peers)\n- Prime Minister: head of government, leader of majority party\n- Cabinet: senior ministers chosen by PM, collective responsibility\n- Civil Service: politically neutral, implements government policies\n- Electoral system: First Past the Post, constituencies, general elections every 5 years\n- Political parties: Conservative, Labour, Liberal Democrats, SNP, others\n- Devolution: Scottish Parliament, Welsh Assembly, Northern Ireland Assembly\n- Legal systems: England & Wales (common law), Scotland (mixed), Northern Ireland\n\nBRITISH VALUES & SOCIETY:\n- Democracy: free and fair elections, peaceful power transfer\n- Rule of Law: equality before law, independent judiciary, fair trials\n- Individual Liberty: freedom of speech, belief, assembly\n- Mutual Respect & Tolerance: respect for different backgrounds, beliefs, lifestyles\n- Human rights, equality legislation, community cohesion\n\nCULTURE & TRADITIONS:\n- National days: St George (England), St Andrew (Scotland), St David (Wales), St Patrick (N. Ireland)\n- Festivals: Christmas, Easter, Guy Fawkes Night (November 5th), Burns Night, Diwali, Eid\n- Sports: Football (1863), Rugby (1871), Cricket, Tennis (Wimbledon), Golf\n- Arts: Shakespeare, Charles Dickens, Jane Austen, The Beatles, Turner, Constable\n- Traditions: Pantomime, Morris dancing, Highland Games, Eisteddfod\n- Food: Fish and chips, Sunday roast, haggis, Welsh cakes, Ulster fry\n\nGEOGRAPHY & DEMOGRAPHICS:\n- Countries: England (capital London), Scotland (Edinburgh), Wales (Cardiff), Northern Ireland (Belfast)\n- Population: 67 million (England 56m, Scotland 5.5m, Wales 3.1m, N. Ireland 1.9m)\n- Major cities: London, Birmingham, Manchester, Liverpool, Leeds, Sheffield, Bristol, Glasgow\n- Landscapes: Lake District, Scottish Highlands, Snowdonia, Giant's Causeway\n- Languages: English (official), Welsh (Wales), Scottish Gaelic, Ulster Scots\n\nAnswer with specific facts, dates, and examples from the official Life in UK materials. Keep responses well-formatted with bullet points for readability.`;\n\n      const response = await fetch('https://api.openai.com/v1/chat/completions', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          model: 'gpt-4o',\n          messages: [\n            {\n              role: 'system',\n              content: systemPrompt\n            },\n            {\n              role: 'user',\n              content: question\n            }\n          ],\n          max_tokens: 300,\n          temperature: 0.7\n        })\n      });\n\n      if (!response.ok) {\n        // Handle rate limiting specifically\n        if (response.status === 429) {\n          const answer = getFallbackResponse(question);\n          const suggestions = generateSuggestions(question);\n          const resources = generateResources(question);\n          \n          return res.json({\n            answer,\n            suggestions,\n            resources\n          });\n        }\n        throw new Error(`OpenAI API error: ${response.status}`);\n      }\n\n      const data = await response.json();\n      const answer = data.choices[0]?.message?.content || \"I'm sorry, I couldn't generate a response. Please try again.\";\n      \n      // Generate contextual suggestions based on the question topic\n      const suggestions = generateSuggestions(question);\n      const resources = generateResources(question);\n\n      res.json({\n        answer,\n        suggestions,\n        resources\n      });\n    } catch (error: any) {\n      console.error('Chatbot error:', error);\n      \n      // Provide fallback response instead of error\n      const answer = getFallbackResponse(question);\n      const suggestions = generateSuggestions(question);\n      const resources = generateResources(question);\n      \n      res.json({\n        answer,\n        suggestions,\n        resources\n      });\n    }\n  });\n\n  // ================================\n  // ADMIN API ROUTES\n  // ================================\n  \n  // Admin user management - get all users\n  app.get(\"/api/admin/users\", authenticateToken, requireAdmin, async (req: AuthenticatedRequest, res) => {\n    try {\n      const { page = '1', limit = '20', role } = req.query;\n      const pageNum = parseInt(page as string);\n      const limitNum = parseInt(limit as string);\n      \n      // Get users with pagination and optional role filter\n      const users = await storage.getAllUsers({\n        page: pageNum,\n        limit: limitNum,\n        role: role as string\n      });\n      \n      // Remove sensitive data before sending\n      const safeUsers = users.map(user => ({\n        id: user.id,\n        firstName: user.firstName,\n        username: user.username,\n        email: user.email,\n        role: user.role,\n        overallProgress: user.overallProgress || 0,\n        totalStudyTime: user.totalStudyTime || 0,\n        currentStreak: user.currentStreak || 0,\n        subscriptionType: user.subscriptionType,\n        subscriptionStatus: user.subscriptionStatus,\n        createdAt: user.createdAt || new Date().toISOString()\n      }));\n      \n      res.json({\n        users: safeUsers,\n        pagination: {\n          page: pageNum,\n          limit: limitNum,\n          hasMore: users.length === limitNum\n        }\n      });\n      \n    } catch (error: any) {\n      console.error(\"Admin get users error:\", error);\n      res.status(500).json({ error: \"Failed to fetch users\" });\n    }\n  });\n\n  // Admin user management - update user role\n  app.put(\"/api/admin/users/:userId/role\", authenticateToken, requireAdmin, async (req: AuthenticatedRequest, res) => {\n    try {\n      const { userId } = req.params;\n      const { role } = req.body;\n      \n      // Validate role\n      if (!['student', 'admin', 'superadmin'].includes(role)) {\n        return res.status(400).json({ error: \"Invalid role specified\" });\n      }\n      \n      // Update user role\n      const success = await storage.updateUserRole(userId, role);\n      \n      if (!success) {\n        return res.status(404).json({ error: \"User not found\" });\n      }\n      \n      // Log the action for audit\n      await storage.createAuditLog({\n        adminId: req.user!.userId,\n        action: 'user_role_update',\n        targetUserId: userId,\n        details: { newRole: role },\n        timestamp: new Date()\n      });\n      \n      res.json({ message: \"User role updated successfully\" });\n      \n    } catch (error: any) {\n      console.error(\"Admin update user role error:\", error);\n      res.status(500).json({ error: \"Failed to update user role\" });\n    }\n  });\n\n  // Admin user management - suspend/unsuspend user\n  app.put(\"/api/admin/users/:userId/suspend\", authenticateToken, requireAdmin, async (req: AuthenticatedRequest, res) => {\n    try {\n      const { userId } = req.params;\n      const { suspended = true, reason } = req.body;\n      \n      // Update user suspension status\n      const success = await storage.updateUserSuspension(userId, suspended, reason);\n      \n      if (!success) {\n        return res.status(404).json({ error: \"User not found\" });\n      }\n      \n      // Log the action for audit\n      await storage.createAuditLog({\n        adminId: req.user!.userId,\n        action: suspended ? 'user_suspended' : 'user_unsuspended',\n        targetUserId: userId,\n        details: { reason },\n        timestamp: new Date()\n      });\n      \n      res.json({ message: `User ${suspended ? 'suspended' : 'unsuspended'} successfully` });\n      \n    } catch (error: any) {\n      console.error(\"Admin suspend user error:\", error);\n      res.status(500).json({ error: \"Failed to update user suspension status\" });\n    }\n  });\n\n  // Admin analytics - dashboard stats\n  app.get(\"/api/admin/analytics\", authenticateToken, requireAdmin, async (req: AuthenticatedRequest, res) => {\n    try {\n      // Get various analytics data\n      const totalUsers = await storage.getTotalUserCount();\n      const activeUsers = await storage.getActiveUserCount();\n      const subscriptionStats = await storage.getSubscriptionStats();\n      const recentSignups = await storage.getRecentSignups(7); // Last 7 days\n      \n      res.json({\n        totalUsers,\n        activeUsers,\n        subscriptionStats: {\n          premium: subscriptionStats.premium || 0,\n          free: subscriptionStats.free || 0,\n          total: subscriptionStats.total || 0\n        },\n        recentSignups,\n        lastUpdated: new Date().toISOString()\n      });\n      \n    } catch (error: any) {\n      console.error(\"Admin analytics error:\", error);\n      res.status(500).json({ error: \"Failed to fetch analytics data\" });\n    }\n  });\n\n  // Admin audit logs\n  app.get(\"/api/admin/audit-logs\", authenticateToken, requireAdmin, async (req: AuthenticatedRequest, res) => {\n    try {\n      const { page = '1', limit = '50' } = req.query;\n      const pageNum = parseInt(page as string);\n      const limitNum = parseInt(limit as string);\n      \n      const auditLogs = await storage.getAuditLogs({\n        page: pageNum,\n        limit: limitNum\n      });\n      \n      res.json({\n        logs: auditLogs,\n        pagination: {\n          page: pageNum,\n          limit: limitNum,\n          hasMore: auditLogs.length === limitNum\n        }\n      });\n      \n    } catch (error: any) {\n      console.error(\"Admin audit logs error:\", error);\n      res.status(500).json({ error: \"Failed to fetch audit logs\" });\n    }\n  });\n\n  // Admin system status\n  app.get(\"/api/admin/system-status\", authenticateToken, requireAdmin, async (req: AuthenticatedRequest, res) => {\n    try {\n      // Basic system health checks\n      const systemStatus = {\n        database: 'connected',\n        server: 'running',\n        timestamp: new Date().toISOString(),\n        uptime: process.uptime(),\n        memory: process.memoryUsage()\n      };\n      \n      res.json(systemStatus);\n      \n    } catch (error: any) {\n      console.error(\"Admin system status error:\", error);\n      res.status(500).json({ \n        error: \"Failed to fetch system status\",\n        database: 'error',\n        server: 'error',\n        timestamp: new Date().toISOString()\n      });\n    }\n  });\n\n  const httpServer = createServer(app);\n  return httpServer;\n}\n\n// Helper function to provide detailed fallback responses with authentic Life in UK content\nfunction getFallbackResponse(question: string): string {\n  const lowerQuestion = question.toLowerCase();\n  \n  if (lowerQuestion.includes('parliament') || lowerQuestion.includes('government') || lowerQuestion.includes('mp')) {\n    return \"UK Parliament structure:\\n\\n• **House of Commons**: 650 elected MPs, each represents a constituency\\n• **House of Lords**: Appointed peers, life peers, bishops\\n• **Prime Minister**: Leader of party with most MPs\\n• **Cabinet**: Senior ministers, collective responsibility\\n• **Speaker**: Chairs Commons debates, politically neutral\\n\\nParliament makes laws, debates policies, and holds government accountable through Prime Minister's Questions.\";\n  }\n  \n  if (lowerQuestion.includes('history') || lowerQuestion.includes('conquest') || lowerQuestion.includes('tudor') || lowerQuestion.includes('war')) {\n    return \"British history timeline:\\n\\n• **Roman Britain** (43-410 AD): Hadrian's Wall, Roman roads\\n• **Anglo-Saxons** (5th-11th century): Alfred the Great\\n• **Norman Conquest** (1066): Battle of Hastings, William the Conqueror\\n• **Medieval**: Magna Carta (1215), Black Death (1348)\\n• **Tudors**: Henry VIII (6 wives), Elizabeth I\\n• **Civil War** (1642-1651): Charles I executed\\n• **Industrial Revolution** (1750-1850): Steam power, railways\\n• **World Wars**: WWI (1914-1918), WWII (1939-1945)\";\n  }\n  \n  if (lowerQuestion.includes('culture') || lowerQuestion.includes('tradition') || lowerQuestion.includes('festival') || lowerQuestion.includes('sport')) {\n    return \"British culture highlights:\\n\\n• **National days**: St George (England), St Andrew (Scotland), St David (Wales), St Patrick (N. Ireland)\\n• **Festivals**: Christmas, Easter, Guy Fawkes Night (Nov 5th)\\n• **Sports**: Football (FA founded 1863), Rugby, Cricket, Wimbledon\\n• **Arts**: Shakespeare, Charles Dickens, The Beatles\\n• **Traditions**: Sunday roast, afternoon tea, pantomime\\n• **Food**: Fish & chips, haggis, Welsh cakes\";\n  }\n  \n  if (lowerQuestion.includes('value') || lowerQuestion.includes('british') || lowerQuestion.includes('democracy')) {\n    return \"British Values (required for citizenship):\\n\\n• **Democracy**: Free elections, peaceful power transfer, everyone's vote counts equally\\n• **Rule of Law**: Everyone equal before law, independent courts, fair trials\\n• **Individual Liberty**: Freedom of speech, belief, assembly (within the law)\\n• **Mutual Respect & Tolerance**: Respect for different backgrounds, beliefs, lifestyles\\n\\nThese values underpin British society and are essential for integration.\";\n  }\n  \n  if (lowerQuestion.includes('test') || lowerQuestion.includes('citizenship') || lowerQuestion.includes('exam')) {\n    return \"Life in UK Test details:\\n\\n• **Format**: 24 multiple choice questions\\n• **Pass mark**: 75% (18 correct answers)\\n• **Time**: 45 minutes\\n• **Topics**: British history, traditions, government, law, geography\\n• **Cost**: £50\\n• **Booking**: gov.uk website\\n• **Languages**: English only\\n• **Study**: Official handbook essential\\n• **ID required**: Passport or driving licence\";\n  }\n  \n  if (lowerQuestion.includes('scotland') || lowerQuestion.includes('wales') || lowerQuestion.includes('northern ireland') || lowerQuestion.includes('devolution')) {\n    return \"UK countries and devolution:\\n\\n• **England**: Population 56m, capital London\\n• **Scotland**: Population 5.5m, capital Edinburgh, Scottish Parliament (1999)\\n• **Wales**: Population 3.1m, capital Cardiff, Welsh Assembly/Senedd (1999)\\n• **Northern Ireland**: Population 1.9m, capital Belfast, Assembly (1999)\\n\\n**Devolved powers**: Education, health, transport, some taxation\\n**Reserved powers**: Defence, foreign policy, immigration, pensions\";\n  }\n  \n  if (lowerQuestion.includes('henry') || lowerQuestion.includes('tudor') || lowerQuestion.includes('elizabeth')) {\n    return \"Tudor Dynasty (1485-1603):\\n\\n• **Henry VII** (1485-1509): First Tudor king, Battle of Bosworth\\n• **Henry VIII** (1509-1547): 6 wives, broke from Rome, created Church of England\\n• **Edward VI** (1547-1553): Protestant, son of Henry VIII\\n• **Mary I** (1553-1558): \\\"Bloody Mary\\\", restored Catholicism\\n• **Elizabeth I** (1558-1603): \\\"Golden Age\\\", defeated Spanish Armada (1588)\\n\\nKey events: English Reformation, dissolution of monasteries, Spanish Armada defeat.\";\n  }\n  \n  if (lowerQuestion.includes('world war') || lowerQuestion.includes('churchill') || lowerQuestion.includes('blitz')) {\n    return \"World Wars:\\n\\n**WWI (1914-1918)**:\\n• Trench warfare, conscription introduced\\n• Women entered workforce\\n• 1 million British casualties\\n\\n**WWII (1939-1945)**:\\n• Winston Churchill PM (1940-1945, 1951-1955)\\n• Battle of Britain (1940): RAF victory\\n• The Blitz: German bombing of British cities\\n• D-Day landings (1944): Allied invasion of Europe\\n• Churchill's \\\"finest hour\\\" speech\";\n  }\n  \n  if (lowerQuestion.includes('religion') || lowerQuestion.includes('church') || lowerQuestion.includes('archbishop')) {\n    return \"Religion in the UK:\\n\\n• **England**: Church of England (Protestant), established church\\n• **Scotland**: Church of Scotland (Presbyterian), national church\\n• **Wales**: No established church\\n• **Northern Ireland**: No established church\\n\\n**Religious leaders**: Archbishop of Canterbury (England), Moderator (Scotland)\\n**Demographics**: 46% Christian, 37% no religion, others include Muslim, Hindu, Sikh, Jewish\\n**Religious freedom**: Protected by law\";\n  }\n  \n  return \"I have comprehensive knowledge from the official Life in UK handbook covering:\\n\\n• **History**: Stone Age to modern Britain, all monarchs and key events\\n• **Government**: Parliament, devolution, legal systems, elections\\n• **Culture**: Traditions, sports, arts, literature, festivals\\n• **Geography**: All four countries, major cities, landmarks\\n• **Society**: British values, demographics, international relations\\n• **Test prep**: Format, content, booking, study tips\\n\\nAsk about any specific topic!\";\n}\n\n// Helper function to generate contextual suggestions\nfunction generateSuggestions(question: string): string[] {\n  const lowerQuestion = question.toLowerCase();\n  \n  if (lowerQuestion.includes('parliament') || lowerQuestion.includes('government') || lowerQuestion.includes('political')) {\n    return [\n      \"How does the Prime Minister get chosen?\",\n      \"What's the difference between Parliament and Government?\",\n      \"Tell me about devolution in Scotland and Wales\"\n    ];\n  }\n  \n  if (lowerQuestion.includes('history') || lowerQuestion.includes('historical') || lowerQuestion.includes('past')) {\n    return [\n      \"What happened during the Norman Conquest?\",\n      \"Tell me about the Industrial Revolution\",\n      \"How did the British Empire develop?\"\n    ];\n  }\n  \n  if (lowerQuestion.includes('culture') || lowerQuestion.includes('tradition') || lowerQuestion.includes('festival')) {\n    return [\n      \"What are important British festivals?\",\n      \"Tell me about British sports traditions\",\n      \"What should I know about the Royal Family?\"\n    ];\n  }\n  \n  if (lowerQuestion.includes('test') || lowerQuestion.includes('exam') || lowerQuestion.includes('citizen')) {\n    return [\n      \"What topics are covered in the citizenship test?\",\n      \"How should I prepare for the Life in UK test?\",\n      \"What are the British values I need to know?\"\n    ];\n  }\n  \n  if (lowerQuestion.includes('law') || lowerQuestion.includes('legal') || lowerQuestion.includes('court')) {\n    return [\n      \"How does the UK legal system work?\",\n      \"What's the difference between civil and criminal law?\",\n      \"Tell me about the police and justice system\"\n    ];\n  }\n  \n  // Default suggestions\n  return [\n    \"What are the four countries of the UK?\",\n    \"Tell me about British democratic values\",\n    \"How does the UK electoral system work?\"\n  ];\n}\n\n// Helper function to generate relevant platform resources\nfunction generateResources(question: string): Array<{type: string, title: string, url: string}> {\n  const lowerQuestion = question.toLowerCase();\n  const resources = [];\n  \n  if (lowerQuestion.includes('parliament') || lowerQuestion.includes('government')) {\n    resources.push({\n      type: 'video',\n      title: 'Government & Parliament Videos',\n      url: '/dashboard'\n    });\n    resources.push({\n      type: 'game',\n      title: 'Government Structure Games',\n      url: '/games'\n    });\n  }\n  \n  if (lowerQuestion.includes('history') || lowerQuestion.includes('historical')) {\n    resources.push({\n      type: 'timeline',\n      title: 'Interactive Historical Timeline',\n      url: '/timeline'\n    });\n    resources.push({\n      type: 'video',\n      title: 'History Video Lessons',\n      url: '/dashboard'\n    });\n  }\n  \n  if (lowerQuestion.includes('test') || lowerQuestion.includes('practice') || lowerQuestion.includes('exam')) {\n    resources.push({\n      type: 'game',\n      title: 'Practice Exercises',\n      url: '/games'\n    });\n    resources.push({\n      type: 'resource',\n      title: 'Study Materials',\n      url: '/resources'\n    });\n  }\n  \n  // Always suggest the main dashboard as a starting point\n  if (resources.length === 0) {\n    resources.push({\n      type: 'video',\n      title: 'Browse All Learning Content',\n      url: '/dashboard'\n    });\n  }\n  \n  return resources;\n}\n","size_bytes":54677},"server/storage-old.ts":{"content":"import { eq, and } from \"drizzle-orm\";\nimport { db } from \"./db\";\nimport {\n  users,\n  videoModules,\n  userVideoProgress,\n  timelineEvents,\n  exercises,\n  exerciseAttempts,\n  learningModules,\n  userModuleProgress,\n  resources,\n  type User, \n  type InsertUser,\n  type VideoModule,\n  type InsertVideoModule,\n  type UserVideoProgress,\n  type InsertUserVideoProgress,\n  type TimelineEvent,\n  type InsertTimelineEvent,\n  type Exercise,\n  type InsertExercise,\n  type ExerciseAttempt,\n  type InsertExerciseAttempt,\n  type LearningModule,\n  type InsertLearningModule,\n  type UserModuleProgress,\n  type InsertUserModuleProgress,\n  type Resource,\n  type InsertResource\n} from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\nexport interface IStorage {\n  // User methods\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  updateUserProgress(userId: string, progress: number): Promise<void>;\n  updateUserStudyTime(userId: string, additionalMinutes: number): Promise<void>;\n\n  // Video methods\n  getAllVideoModules(): Promise<VideoModule[]>;\n  getVideoModule(id: string): Promise<VideoModule | undefined>;\n  createVideoModule(video: InsertVideoModule): Promise<VideoModule>;\n  getUserVideoProgress(userId: string): Promise<UserVideoProgress[]>;\n  updateVideoProgress(progress: InsertUserVideoProgress): Promise<UserVideoProgress>;\n\n  // Timeline methods\n  getAllTimelineEvents(): Promise<TimelineEvent[]>;\n  getTimelineEvent(id: string): Promise<TimelineEvent | undefined>;\n  createTimelineEvent(event: InsertTimelineEvent): Promise<TimelineEvent>;\n\n  // Exercise methods\n  createExercise(exercise: InsertExercise): Promise<Exercise>;\n  getUserExercises(userId: string): Promise<Exercise[]>;\n  createExerciseAttempt(attempt: InsertExerciseAttempt): Promise<ExerciseAttempt>;\n  getUserExerciseAttempts(userId: string): Promise<ExerciseAttempt[]>;\n\n  // Learning module methods\n  getAllLearningModules(): Promise<LearningModule[]>;\n  getUserModuleProgress(userId: string): Promise<UserModuleProgress[]>;\n  updateModuleProgress(progress: InsertUserModuleProgress): Promise<UserModuleProgress>;\n\n  // Resource methods\n  getAllResources(): Promise<Resource[]>;\n  getResource(id: string): Promise<Resource | undefined>;\n  createResource(resource: InsertResource): Promise<Resource>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  constructor() {\n    this.initializeDefaultData();\n  }\n\n  private initializeDefaultData() {\n    // Initialize default video modules\n    const defaultVideos: InsertVideoModule[] = [\n      {\n        title: \"British Political System\",\n        description: \"Learn about Parliament, the Prime Minister, and democratic processes\",\n        videoUrl: \"https://www.youtube.com/embed/dQw4w9WgXcQ\",\n        duration: 754,\n        thumbnail: \"https://images.unsplash.com/photo-1513635269975-59663e0ac1ad?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        category: \"Government\",\n        orderIndex: 1\n      },\n      {\n        title: \"British Culture & Traditions\",\n        description: \"Discover customs, festivals, and cultural practices of the UK\",\n        videoUrl: \"https://www.youtube.com/embed/dQw4w9WgXcQ\",\n        duration: 525,\n        thumbnail: \"https://images.unsplash.com/photo-1467987506553-8f3916508521?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        category: \"Culture\",\n        orderIndex: 2\n      },\n      {\n        title: \"British History Overview\",\n        description: \"Key historical events and figures that shaped modern Britain\",\n        videoUrl: \"https://www.youtube.com/embed/dQw4w9WgXcQ\",\n        duration: 922,\n        thumbnail: \"https://images.unsplash.com/photo-1486299267070-83823f5448dd?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        category: \"History\",\n        orderIndex: 3\n      },\n      {\n        title: \"UK Geography & Regions\",\n        description: \"Explore England, Scotland, Wales, and Northern Ireland\",\n        videoUrl: \"https://www.youtube.com/embed/dQw4w9WgXcQ\",\n        duration: 668,\n        thumbnail: \"https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        category: \"Geography\",\n        orderIndex: 4\n      }\n    ];\n\n    defaultVideos.forEach(video => {\n      this.createVideoModule(video);\n    });\n\n    // Initialize timeline events\n    const defaultEvents: InsertTimelineEvent[] = [\n      {\n        year: 1066,\n        title: \"Norman Conquest\",\n        description: \"William the Conqueror defeats Harold II at the Battle of Hastings, fundamentally changing English society and culture.\",\n        details: \"The Norman Conquest marked the beginning of Norman rule in England. William I introduced feudalism, built castles, and changed the English language by adding French influences.\",\n        category: \"Medieval\",\n        importance: 5\n      },\n      {\n        year: 1215,\n        title: \"Magna Carta\",\n        description: \"King John signs the Great Charter, establishing the principle that nobody, including the king, is above the law.\",\n        details: \"The Magna Carta limited the power of the monarch and established fundamental rights. It became the foundation for constitutional law and influenced legal systems worldwide.\",\n        category: \"Legal\",\n        importance: 5\n      },\n      {\n        year: 1707,\n        title: \"Act of Union\",\n        description: \"The Acts of Union unite the Kingdom of England and Kingdom of Scotland to form the Kingdom of Great Britain.\",\n        details: \"The political union created a single parliament and unified the kingdoms while preserving distinct legal and educational systems in Scotland.\",\n        category: \"Political\",\n        importance: 4\n      },\n      {\n        year: 1952,\n        title: \"Elizabeth II Becomes Queen\",\n        description: \"Following her father's death, Elizabeth II ascends to the throne, beginning the modern Elizabethan era.\",\n        details: \"Queen Elizabeth II became monarch at age 25 and ruled for over 70 years, overseeing the transformation of the British Empire into the Commonwealth.\",\n        category: \"Royal\",\n        importance: 3\n      }\n    ];\n\n    defaultEvents.forEach(event => {\n      this.createTimelineEvent(event);\n    });\n\n    // Initialize learning modules\n    const defaultModules: InsertLearningModule[] = [\n      {\n        title: \"British Values\",\n        description: \"Democracy, rule of law, liberty\",\n        orderIndex: 1,\n        totalItems: 10\n      },\n      {\n        title: \"Government & Politics\",\n        description: \"Parliament, elections, devolution\",\n        orderIndex: 2,\n        totalItems: 15\n      },\n      {\n        title: \"History\",\n        description: \"Key events and periods\",\n        orderIndex: 3,\n        totalItems: 20\n      },\n      {\n        title: \"Geography\",\n        description: \"Countries, regions, cities\",\n        orderIndex: 4,\n        totalItems: 12\n      },\n      {\n        title: \"Culture & Society\",\n        description: \"Traditions, sports, religion\",\n        orderIndex: 5,\n        totalItems: 18\n      }\n    ];\n\n    defaultModules.forEach(module => {\n      this.createLearningModule(module);\n    });\n\n    // Initialize resources\n    const defaultResources: InsertResource[] = [\n      {\n        title: \"Key Dates Cheatsheet\",\n        description: \"Important historical dates and events\",\n        fileUrl: \"/resources/key-dates.pdf\",\n        fileSize: \"2.3 MB\",\n        fileType: \"PDF\",\n        category: \"History\"\n      },\n      {\n        title: \"Government Structure\",\n        description: \"Overview of UK government and political system\",\n        fileUrl: \"/resources/government-structure.pdf\",\n        fileSize: \"1.8 MB\",\n        fileType: \"PDF\",\n        category: \"Government\"\n      },\n      {\n        title: \"UK Geography Map\",\n        description: \"Detailed map of the United Kingdom\",\n        fileUrl: \"/resources/uk-geography-map.pdf\",\n        fileSize: \"4.1 MB\",\n        fileType: \"PDF\",\n        category: \"Geography\"\n      },\n      {\n        title: \"Practice Test Questions\",\n        description: \"Sample questions for Life in UK test preparation\",\n        fileUrl: \"/resources/practice-questions.pdf\",\n        fileSize: \"956 KB\",\n        fileType: \"PDF\",\n        category: \"Practice\"\n      }\n    ];\n\n    defaultResources.forEach(resource => {\n      this.createResource(resource);\n    });\n\n    // Create demo user\n    this.createUser({\n      username: \"user123\",\n      firstName: \"Sarah\",\n      password: \"demo\"\n    });\n\n    // Add demo exercises\n    const demoExercise = {\n      userId: \"user123\",\n      content: {\n        topic: \"British Government\",\n        text: \"The United Kingdom has a parliamentary system where [BLANK_1] serves as the head of government, while [BLANK_2] serves as the head of state. The parliament consists of two houses: [BLANK_3] and [BLANK_4]. Elections are held every [BLANK_5] years to choose members of parliament.\",\n        questions: [\n          {\n            id: \"1\",\n            question: \"Who serves as the head of government?\",\n            options: [\"The Queen\", \"The Prime Minister\", \"The Speaker\", \"The Chancellor\"],\n            correctAnswer: 1,\n            explanation: \"The Prime Minister is the head of government in the UK parliamentary system.\"\n          },\n          {\n            id: \"2\", \n            question: \"Who serves as the head of state?\",\n            options: [\"The Prime Minister\", \"The President\", \"The Monarch\", \"The Speaker\"],\n            correctAnswer: 2,\n            explanation: \"The Monarch (currently King Charles III) serves as the head of state.\"\n          },\n          {\n            id: \"3\",\n            question: \"What is one house of parliament?\",\n            options: [\"House of Commons\", \"House of Lords\", \"Both A and B\", \"House of Representatives\"],\n            correctAnswer: 2,\n            explanation: \"Parliament consists of both the House of Commons and House of Lords.\"\n          },\n          {\n            id: \"4\",\n            question: \"What is the other house of parliament?\",\n            options: [\"House of Commons\", \"House of Lords\", \"Both A and B\", \"Senate\"],\n            correctAnswer: 2,\n            explanation: \"Parliament consists of both the House of Commons and House of Lords.\"\n          },\n          {\n            id: \"5\",\n            question: \"How often are elections held?\",\n            options: [\"Every 3 years\", \"Every 4 years\", \"Every 5 years\", \"Every 6 years\"],\n            correctAnswer: 2,\n            explanation: \"UK general elections are held every 5 years.\"\n          }\n        ]\n      },\n      topic: \"British Government\",\n      difficulty: 2\n    };\n\n    this.createExercise(demoExercise);\n  }\n\n  // User methods\n  async getUser(id: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.id, id));\n    return user || undefined;\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.username, username));\n    return user || undefined;\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const [user] = await db\n      .insert(users)\n      .values(insertUser)\n      .returning();\n    return user;\n  }\n\n  async updateUserProgress(userId: string, progress: number): Promise<void> {\n    await db\n      .update(users)\n      .set({ overallProgress: progress })\n      .where(eq(users.id, userId));\n  }\n\n  async updateUserStudyTime(userId: string, additionalMinutes: number): Promise<void> {\n    const user = await this.getUser(userId);\n    if (user) {\n      await db\n        .update(users)\n        .set({ totalStudyTime: user.totalStudyTime + additionalMinutes })\n        .where(eq(users.id, userId));\n    }\n  }\n\n  // Video methods\n  async getAllVideoModules(): Promise<VideoModule[]> {\n    return await db.select().from(videoModules).orderBy(videoModules.orderIndex);\n  }\n\n  async getVideoModule(id: string): Promise<VideoModule | undefined> {\n    const [video] = await db.select().from(videoModules).where(eq(videoModules.id, id));\n    return video || undefined;\n  }\n\n  async createVideoModule(video: InsertVideoModule): Promise<VideoModule> {\n    const [videoModule] = await db\n      .insert(videoModules)\n      .values(video)\n      .returning();\n    return videoModule;\n  }\n\n  async getUserVideoProgress(userId: string): Promise<UserVideoProgress[]> {\n    return await db.select().from(userVideoProgress).where(eq(userVideoProgress.userId, userId));\n  }\n\n  async updateVideoProgress(progress: InsertUserVideoProgress): Promise<UserVideoProgress> {\n    const [existingProgress] = await db\n      .select()\n      .from(userVideoProgress)\n      .where(\n        and(\n          eq(userVideoProgress.userId, progress.userId),\n          eq(userVideoProgress.videoId, progress.videoId)\n        )\n      );\n\n    if (existingProgress) {\n      const [updated] = await db\n        .update(userVideoProgress)\n        .set({\n          completed: progress.completed || false,\n          watchTime: progress.watchTime || 0,\n          lastWatched: new Date()\n        })\n        .where(eq(userVideoProgress.id, existingProgress.id))\n        .returning();\n      return updated;\n    } else {\n      const [newProgress] = await db\n        .insert(userVideoProgress)\n        .values({\n          ...progress,\n          completed: progress.completed || false,\n          watchTime: progress.watchTime || 0,\n          lastWatched: new Date()\n        })\n        .returning();\n      return newProgress;\n    }\n  }\n\n  // Timeline methods\n  async getAllTimelineEvents(): Promise<TimelineEvent[]> {\n    return await db.select().from(timelineEvents).orderBy(timelineEvents.year);\n  }\n\n  async getTimelineEvent(id: string): Promise<TimelineEvent | undefined> {\n    const [event] = await db.select().from(timelineEvents).where(eq(timelineEvents.id, id));\n    return event || undefined;\n  }\n\n  async createTimelineEvent(event: InsertTimelineEvent): Promise<TimelineEvent> {\n    const [timelineEvent] = await db\n      .insert(timelineEvents)\n      .values(event)\n      .returning();\n    return timelineEvent;\n  }\n\n  // Exercise methods\n  async createExercise(exercise: InsertExercise): Promise<Exercise> {\n    const id = randomUUID();\n    const newExercise: Exercise = {\n      ...exercise,\n      id,\n      difficulty: exercise.difficulty || 1,\n      createdAt: new Date()\n    };\n    this.exercises.set(id, newExercise);\n    return newExercise;\n  }\n\n  async getUserExercises(userId: string): Promise<Exercise[]> {\n    return Array.from(this.exercises.values()).filter(\n      exercise => exercise.userId === userId\n    );\n  }\n\n  async createExerciseAttempt(attempt: InsertExerciseAttempt): Promise<ExerciseAttempt> {\n    const id = randomUUID();\n    const exerciseAttempt: ExerciseAttempt = {\n      ...attempt,\n      id,\n      completedAt: new Date()\n    };\n    this.exerciseAttempts.set(id, exerciseAttempt);\n    return exerciseAttempt;\n  }\n\n  async getUserExerciseAttempts(userId: string): Promise<ExerciseAttempt[]> {\n    return Array.from(this.exerciseAttempts.values()).filter(\n      attempt => attempt.userId === userId\n    );\n  }\n\n  // Learning module methods\n  async getAllLearningModules(): Promise<LearningModule[]> {\n    return Array.from(this.learningModules.values()).sort((a, b) => a.orderIndex - b.orderIndex);\n  }\n\n  async getUserModuleProgress(userId: string): Promise<UserModuleProgress[]> {\n    return Array.from(this.userModuleProgress.values()).filter(\n      progress => progress.userId === userId\n    );\n  }\n\n  async updateModuleProgress(progress: InsertUserModuleProgress): Promise<UserModuleProgress> {\n    const existingProgress = Array.from(this.userModuleProgress.values()).find(\n      p => p.userId === progress.userId && p.moduleId === progress.moduleId\n    );\n\n    if (existingProgress) {\n      existingProgress.completedItems = progress.completedItems || 0;\n      existingProgress.progress = progress.progress || 0;\n      this.userModuleProgress.set(existingProgress.id, existingProgress);\n      return existingProgress;\n    } else {\n      const id = randomUUID();\n      const newProgress: UserModuleProgress = { \n        ...progress, \n        id,\n        completedItems: progress.completedItems || 0,\n        progress: progress.progress || 0\n      };\n      this.userModuleProgress.set(id, newProgress);\n      return newProgress;\n    }\n  }\n\n  private async createLearningModule(module: InsertLearningModule): Promise<LearningModule> {\n    const id = randomUUID();\n    const learningModule: LearningModule = { ...module, id };\n    this.learningModules.set(id, learningModule);\n    return learningModule;\n  }\n\n  // Resource methods\n  async getAllResources(): Promise<Resource[]> {\n    return Array.from(this.resources.values());\n  }\n\n  async getResource(id: string): Promise<Resource | undefined> {\n    return this.resources.get(id);\n  }\n\n  async createResource(resource: InsertResource): Promise<Resource> {\n    const id = randomUUID();\n    const newResource: Resource = { \n      ...resource, \n      id,\n      description: resource.description || null\n    };\n    this.resources.set(id, newResource);\n    return newResource;\n  }\n}\n\nexport const storage = new DatabaseStorage();\n","size_bytes":17256},"server/storage.ts":{"content":"import { eq, and } from \"drizzle-orm\";\nimport { db } from \"./db\";\nimport bcrypt from \"bcrypt\";\nimport {\n  users,\n  videoModules,\n  userVideoProgress,\n  timelineEvents,\n  exercises,\n  exerciseAttempts,\n  learningModules,\n  userModuleProgress,\n  resources,\n  practiceTests,\n  practiceTestAttempts,\n  mockTests,\n  mockTestAttempts,\n  refreshTokens,\n  adminAuditLogs,\n  type User, \n  type InsertUser,\n  type AdminAuditLog,\n  type InsertAdminAuditLog,\n  type VideoModule,\n  type InsertVideoModule,\n  type UserVideoProgress,\n  type InsertUserVideoProgress,\n  type TimelineEvent,\n  type InsertTimelineEvent,\n  type Exercise,\n  type InsertExercise,\n  type ExerciseAttempt,\n  type InsertExerciseAttempt,\n  type LearningModule,\n  type InsertLearningModule,\n  type UserModuleProgress,\n  type InsertUserModuleProgress,\n  type Resource,\n  type InsertResource,\n  type PracticeTest,\n  type InsertPracticeTest,\n  type PracticeTestAttempt,\n  type InsertPracticeTestAttempt,\n  type MockTest,\n  type InsertMockTest,\n  type MockTestAttempt,\n  type InsertMockTestAttempt,\n  type RefreshToken,\n  type InsertRefreshToken\n} from \"@shared/schema\";\n\nexport interface IStorage {\n  // User methods\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  getUserByEmail(email: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n  updateUserProgress(userId: string, progress: number): Promise<void>;\n  updateUserStudyTime(userId: string, additionalMinutes: number): Promise<void>;\n  updateUserStripeInfo(userId: string, stripeCustomerId: string, stripeSubscriptionId: string): Promise<User>;\n  updateUserSubscription(userId: string, subscriptionType: string, subscriptionStatus: string): Promise<User>;\n  updateUserProfile(userId: string, profileData: { firstName?: string; email?: string; username?: string }): Promise<User>;\n  updateUserRole(userId: string, role: string): Promise<boolean>;\n  updateUserSuspension(userId: string, suspended: boolean, reason?: string): Promise<boolean>;\n  getAllUsers(options?: { page?: number; limit?: number; role?: string }): Promise<User[]>;\n  getTotalUserCount(): Promise<number>;\n  getActiveUserCount(): Promise<number>;\n  getSubscriptionStats(): Promise<{ premium: number; free: number; total: number }>;\n  getRecentSignups(days: number): Promise<number>;\n  getUserStats(): Promise<{ totalUsers: number; activeUsers: number; adminUsers: number; }>;\n\n  // Admin audit methods\n  createAuditLog(log: { adminId: string; action: string; targetUserId?: string; details?: any; timestamp: Date }): Promise<void>;\n  getAuditLogs(options: { page: number; limit: number }): Promise<AdminAuditLog[]>;\n\n  // Authentication methods\n  createRefreshToken(token: InsertRefreshToken): Promise<RefreshToken>;\n  getRefreshToken(token: string): Promise<RefreshToken | undefined>;\n  deleteRefreshToken(token: string): Promise<void>;\n  deleteUserRefreshTokens(userId: string): Promise<void>;\n\n  // Video methods\n  getAllVideoModules(): Promise<VideoModule[]>;\n  getVideoModule(id: string): Promise<VideoModule | undefined>;\n  createVideoModule(video: InsertVideoModule): Promise<VideoModule>;\n  updateVideoModule(id: string, updates: Partial<InsertVideoModule>): Promise<VideoModule>;\n  getUserVideoProgress(userId: string): Promise<UserVideoProgress[]>;\n  updateVideoProgress(progress: InsertUserVideoProgress): Promise<UserVideoProgress>;\n\n  // Timeline methods\n  getAllTimelineEvents(): Promise<TimelineEvent[]>;\n  getTimelineEvent(id: string): Promise<TimelineEvent | undefined>;\n  createTimelineEvent(event: InsertTimelineEvent): Promise<TimelineEvent>;\n\n  // Exercise methods\n  createExercise(exercise: InsertExercise): Promise<Exercise>;\n  getUserExercises(userId: string): Promise<Exercise[]>;\n  createExerciseAttempt(attempt: InsertExerciseAttempt): Promise<ExerciseAttempt>;\n  getUserExerciseAttempts(userId: string): Promise<ExerciseAttempt[]>;\n\n  // Learning module methods\n  getAllLearningModules(): Promise<LearningModule[]>;\n  getUserModuleProgress(userId: string): Promise<UserModuleProgress[]>;\n  updateModuleProgress(progress: InsertUserModuleProgress): Promise<UserModuleProgress>;\n\n  // Resource methods\n  getAllResources(): Promise<Resource[]>;\n  getResource(id: string): Promise<Resource | undefined>;\n  createResource(resource: InsertResource): Promise<Resource>;\n\n  // Practice test methods\n  getAllPracticeTests(): Promise<PracticeTest[]>;\n  getPracticeTest(id: string): Promise<PracticeTest | undefined>;\n  createPracticeTest(test: InsertPracticeTest): Promise<PracticeTest>;\n  createPracticeTestAttempt(attempt: InsertPracticeTestAttempt): Promise<PracticeTestAttempt>;\n  getUserPracticeTestAttempts(userId: string): Promise<PracticeTestAttempt[]>;\n  getPracticeTestAttempts(userId: string, testId: string): Promise<PracticeTestAttempt[]>;\n\n  // Mock test methods\n  getMockTests(): Promise<MockTest[]>;\n  getMockTest(id: string): Promise<MockTest | undefined>;\n  createMockTest(test: InsertMockTest): Promise<MockTest>;\n  submitMockTest(attempt: InsertMockTestAttempt): Promise<MockTestAttempt>;\n  getMockTestAttempts(mockTestId: string, userId: string): Promise<MockTestAttempt[]>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  constructor() {\n    this.initializeDefaultData();\n  }\n\n  private async initializeDefaultData() {\n    // Initialize admin user first\n    await this.initializeAdminUser();\n    // Initialize mock tests\n    await this.initializeMockTests();\n    // Initialize default video modules\n    const existingVideos = await db.select().from(videoModules);\n    if (existingVideos.length === 0) {\n      const defaultVideos: InsertVideoModule[] = [\n        // Government Category Videos\n        {\n          title: \"How UK Parliament Works\",\n          description: \"Complete guide to the UK parliamentary system, democracy, and the legislative process for Life in UK test preparation\",\n          videoUrl: \"https://www.youtube.com/embed/BGVgjqbpRp0\",\n          duration: 450,\n          thumbnail: \"https://images.unsplash.com/photo-1513635269975-59663e0ac1ad?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n          category: \"Government\",\n          orderIndex: 1,\n          detailedContent: \"The UK Parliament is the supreme legislative body of the United Kingdom. It consists of two houses: the House of Commons and the House of Lords. The House of Commons is made up of 650 elected Members of Parliament (MPs) who represent constituencies across the UK. The House of Lords contains appointed members including life peers, bishops, and hereditary peers. Parliament's main functions include making laws, debating national issues, and scrutinizing the work of government. The legislative process involves three readings in each house, committee stages, and Royal Assent. Understanding Parliament is crucial for UK citizenship as it represents the democratic foundation of British society.\",\n          keyImages: JSON.stringify([\n            {\n              url: \"https://images.unsplash.com/photo-1513635269975-59663e0ac1ad?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n              description: \"Houses of Parliament and Big Ben - Symbol of British Democracy\"\n            },\n            {\n              url: \"https://images.unsplash.com/photo-1555469810-c9d4c0b9e6dc?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n              description: \"House of Commons Chamber - Where MPs debate and vote\"\n            }\n          ]),\n          audioScript: \"Welcome to understanding how the UK Parliament works. Parliament is the heart of British democracy, consisting of two houses: the House of Commons and the House of Lords. The House of Commons has 650 elected Members of Parliament who represent constituencies across England, Scotland, Wales, and Northern Ireland. These MPs are chosen by the people through democratic elections held at least every five years. The House of Lords contains appointed members including life peers who bring expertise from various fields, bishops from the Church of England, and a small number of hereditary peers. Parliament's primary role is to make laws that govern the United Kingdom. This happens through a careful process where proposed laws, called bills, go through multiple readings and committee stages in both houses before receiving Royal Assent from the monarch.\"\n        },\n        {\n          title: \"UK Electoral System Explained\",\n          description: \"Understanding elections, voting, political parties, and democratic processes in the United Kingdom\",\n          videoUrl: \"https://www.youtube.com/embed/r9rGX91rq5I\",\n          duration: 380,\n          thumbnail: \"https://images.unsplash.com/photo-1555469810-c9d4c0b9e6dc?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n          category: \"Government\",\n          orderIndex: 2,\n          detailedContent: \"The UK uses a First Past the Post electoral system for general elections. Citizens aged 18 and over can vote, and elections must be held at least every five years. The country is divided into 650 constituencies, each electing one MP. Political parties include Conservative, Labour, Liberal Democrats, Scottish National Party, and others. The party with the most MPs usually forms the government, with their leader becoming Prime Minister. Voters register with local councils and vote at polling stations or by post. Understanding the electoral system is essential for participating in UK democracy.\",\n          keyImages: JSON.stringify([\n            {\n              url: \"https://images.unsplash.com/photo-1586616925216-bed07ab60479?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n              description: \"Voting ballot box - Democratic participation in action\"\n            }\n          ]),\n          audioScript: \"The UK electoral system is based on First Past the Post voting. Every citizen aged 18 and over has the right to vote in general elections, which must be held at least every five years. The UK is divided into 650 constituencies, and each elects one Member of Parliament. The main political parties include the Conservative Party, Labour Party, Liberal Democrats, and regional parties like the Scottish National Party. The party that wins the most seats usually forms the government, and their leader becomes Prime Minister.\"\n        },\n        {\n          title: \"British Constitution and Laws\",\n          description: \"Learn about the UK's unwritten constitution, rule of law, and legal system fundamentals\",\n          videoUrl: \"https://www.youtube.com/embed/o8mQLtU7f7s\",\n          duration: 520,\n          thumbnail: \"https://images.unsplash.com/photo-1589829545856-d10d557cf95f?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n          category: \"Government\",\n          orderIndex: 3\n        },\n        \n        // History Category Videos\n        {\n          title: \"British History Overview\",\n          description: \"Key historical events, figures, and developments that shaped modern Britain for Life in UK test preparation\",\n          videoUrl: \"https://www.youtube.com/embed/Uc1vrO6iL0U\",\n          duration: 720,\n          thumbnail: \"https://images.unsplash.com/photo-1486299267070-83823f5448dd?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n          category: \"History\",\n          orderIndex: 4\n        },\n        {\n          title: \"Medieval Britain and Norman Conquest\",\n          description: \"The Norman Conquest of 1066, medieval period, and development of English society and institutions\",\n          videoUrl: \"https://www.youtube.com/embed/MD58X5n7npc\",\n          duration: 615,\n          thumbnail: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n          category: \"History\",\n          orderIndex: 5\n        },\n        {\n          title: \"Industrial Revolution in Britain\",\n          description: \"The transformation of Britain during the Industrial Revolution and its impact on modern society\",\n          videoUrl: \"https://www.youtube.com/embed/zhL5DCizj5c\",\n          duration: 480,\n          thumbnail: \"https://images.unsplash.com/photo-1581833971358-2c8b550f87b3?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n          category: \"History\",\n          orderIndex: 6\n        },\n        \n        // Geography Category Videos\n        {\n          title: \"Geography of the United Kingdom\",\n          description: \"Physical geography, countries, capitals, and regions of England, Scotland, Wales, and Northern Ireland\",\n          videoUrl: \"https://www.youtube.com/embed/O37yJBFRrfg\",\n          duration: 420,\n          thumbnail: \"https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n          category: \"Geography\",\n          orderIndex: 7\n        },\n        {\n          title: \"UK Counties and Cities\",\n          description: \"Major cities, counties, and administrative divisions across the four nations of the United Kingdom\",\n          videoUrl: \"https://www.youtube.com/embed/rNu8XDBSn10\",\n          duration: 360,\n          thumbnail: \"https://images.unsplash.com/photo-1533929736458-ca588d08c8be?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n          category: \"Geography\",\n          orderIndex: 8\n        },\n        \n        // Culture Category Videos\n        {\n          title: \"British Culture and Traditions\",\n          description: \"British values, customs, festivals, and multicultural society essential for Life in UK test success\",\n          videoUrl: \"https://www.youtube.com/embed/UM-Q_zpuJGU\",\n          duration: 540,\n          thumbnail: \"https://images.unsplash.com/photo-1520637836862-4d197d17c926?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n          category: \"Culture\",\n          orderIndex: 9\n        },\n        {\n          title: \"British Sports and Entertainment\",\n          description: \"Popular sports, entertainment, arts, and cultural activities that define British society\",\n          videoUrl: \"https://www.youtube.com/embed/FWo6_M3bXKo\",\n          duration: 435,\n          thumbnail: \"https://images.unsplash.com/photo-1467987506553-8f3916508521?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n          category: \"Culture\",\n          orderIndex: 10\n        },\n        {\n          title: \"British Values and Society\",\n          description: \"Democracy, rule of law, individual liberty, mutual respect, and tolerance in modern British society\",\n          videoUrl: \"https://www.youtube.com/embed/Tr4VHvL6YCA\",\n          duration: 390,\n          thumbnail: \"https://images.unsplash.com/photo-1474552226712-ac0f0961a954?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n          category: \"Culture\",\n          orderIndex: 11\n        }\n      ];\n\n      for (const video of defaultVideos) {\n        await this.createVideoModule(video);\n      }\n    }\n\n    // Initialize timeline events\n    const existingEvents = await db.select().from(timelineEvents);\n    if (existingEvents.length === 0) {\n      await this.initializeTimelineEvents();\n    }\n\n    // Initialize learning modules\n    const existingModules = await db.select().from(learningModules);\n    if (existingModules.length === 0) {\n      const defaultModules: InsertLearningModule[] = [\n        {\n          title: \"British Values\",\n          description: \"Democracy, Rule of Law, Individual Liberty, and Mutual Respect\",\n          totalItems: 8,\n          orderIndex: 1\n        },\n        {\n          title: \"UK Government\",\n          description: \"Parliament, Prime Minister, and the political system\",\n          totalItems: 12,\n          orderIndex: 2\n        },\n        {\n          title: \"British History\",\n          description: \"Key events and figures that shaped modern Britain\",\n          totalItems: 15,\n          orderIndex: 3\n        },\n        {\n          title: \"Geography & Culture\",\n          description: \"UK regions, traditions, and cultural practices\",\n          totalItems: 10,\n          orderIndex: 4\n        }\n      ];\n\n      for (const module of defaultModules) {\n        await db.insert(learningModules).values(module);\n      }\n    }\n\n    // Initialize resources\n    const existingResources = await db.select().from(resources);\n    if (existingResources.length === 0) {\n      const defaultResources: InsertResource[] = [\n        {\n          title: \"Key Dates Cheatsheet\",\n          description: \"Important historical dates for the Life in UK test\",\n          fileUrl: \"/downloads/key-dates.pdf\",\n          fileSize: \"2.4 MB\",\n          fileType: \"PDF\",\n          category: \"Study Guide\"\n        },\n        {\n          title: \"Government Structure Guide\",\n          description: \"Detailed breakdown of UK government structure\",\n          fileUrl: \"/downloads/government-guide.pdf\",\n          fileSize: \"1.8 MB\",\n          fileType: \"PDF\",\n          category: \"Reference\"\n        },\n        {\n          title: \"Practice Test Questions\",\n          description: \"100 sample questions similar to the actual test\",\n          fileUrl: \"/downloads/practice-questions.pdf\",\n          fileSize: \"3.2 MB\",\n          fileType: \"PDF\",\n          category: \"Practice\"\n        }\n      ];\n\n      for (const resource of defaultResources) {\n        await this.createResource(resource);\n      }\n    }\n\n    // TODO: Uncomment demo user creation after database schema is updated\n    // Create demo user and exercise\n    // const existingUsers = await db.select().from(users);\n    // if (existingUsers.length === 0) {\n    //   const demoUser = await this.createUser({\n    //     name: \"Sarah Johnson\",\n    //     username: \"user123\",\n    //     firstName: \"Sarah\",\n    //     password: \"demo\",\n    //     email: \"sarah@example.com\"\n    //   });\n    // }\n\n    // Initialize practice tests\n    await this.initializePracticeTestsIfNeeded();\n    \n    // Initialize historical timeline events\n    await this.initializeHistoricalTimelineIfNeeded();\n    \n    // Initialize cultural and social timeline events\n    await this.initializePopulationMigrationTimelineIfNeeded();\n    await this.initializeSportsAthleticsTimelineIfNeeded();\n    await this.initializeLiteratureTimelineIfNeeded();\n    await this.initializeBritishHolidaysTimelineIfNeeded();\n    await this.initializeBritishSportsTimelineIfNeeded();\n  }\n\n  private async initializeAdminUser() {\n    const adminEmail = process.env.ADMIN_EMAIL || 'admin@example.com';\n    const adminPassword = process.env.ADMIN_PASSWORD || 'admin123';\n    const adminUsername = process.env.ADMIN_USERNAME || 'admin';\n    \n    // Check if admin user already exists\n    const existingAdmin = await db.select().from(users).where(eq(users.role, 'admin'));\n    \n    if (existingAdmin.length === 0) {\n      console.log('No admin user found, creating initial admin user...');\n      \n      // Hash password\n      const hashedPassword = await bcrypt.hash(adminPassword, 12);\n      \n      // Create admin user\n      const adminUser = await db.insert(users).values({\n        firstName: 'Administrator',\n        username: adminUsername,\n        email: adminEmail,\n        password: hashedPassword,\n        role: 'admin',\n        overallProgress: 0,\n        totalStudyTime: 0,\n        currentStreak: 0\n      }).returning();\n      \n      console.log(`Admin user created with email: ${adminEmail}`);\n      console.log(`Admin username: ${adminUsername}`);\n      console.log(`Admin password: ${adminPassword}`);\n      console.log('Please change the password after first login!');\n    }\n  }\n\n  private async initializePracticeTestsIfNeeded() {\n    const { initializePracticeTests } = await import(\"./services/practice-tests\");\n    await initializePracticeTests(this);\n  }\n\n  private async initializeHistoricalTimelineIfNeeded() {\n    const existingHistoricalEvents = await db.select().from(timelineEvents).where(eq(timelineEvents.timelineTopic, 'historical'));\n    if (existingHistoricalEvents.length === 0) {\n      const historicalEvents: InsertTimelineEvent[] = [\n        {\n          year: -10000,\n          title: \"Early Stone Age Settlements\",\n          description: \"First evidence of human settlements in Britain during the Mesolithic period. Hunter-gatherer communities establish permanent settlements.\",\n          details: \"Archaeological evidence shows the first permanent human settlements in Britain during the Mesolithic period. These early communities developed sophisticated hunting and gathering techniques, establishing the foundation for future civilizations. Sites like Star Carr in Yorkshire provide evidence of these early settlements with advanced tool-making and seasonal migration patterns.\",\n          category: \"Prehistoric\",\n          importance: 4,\n          keyFigures: \"Mesolithic hunters and gatherers\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: -6000,\n          title: \"Neolithic Revolution Begins\",\n          description: \"Introduction of farming and permanent settlements. Construction of early monuments begins across Britain.\",\n          details: \"The Neolithic Revolution transforms Britain from a hunter-gatherer society to an agricultural one. This period sees the introduction of farming, domestication of animals, and the beginning of permanent settlements. Early monuments and ceremonial sites begin construction, showing sophisticated social organization and religious beliefs.\",\n          category: \"Prehistoric\",\n          importance: 4,\n          keyFigures: \"Neolithic farmers and monument builders\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: -4000,\n          title: \"Great Monument Building\",\n          description: \"Construction of major Neolithic monuments including early phases of Stonehenge and long barrows across Britain.\",\n          details: \"This period marks the construction of Britain's most famous prehistoric monuments. The early phases of Stonehenge begin, along with numerous long barrows, cursus monuments, and causewayed enclosures. These massive undertakings demonstrate sophisticated social organization, astronomical knowledge, and religious practices that would influence British culture for millennia.\",\n          category: \"Prehistoric\",\n          importance: 5,\n          keyFigures: \"Neolithic architects and astronomers\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: -3000,\n          title: \"Bronze Age Begins\",\n          description: \"Introduction of bronze working and trade networks. Sophisticated burial practices and ceremonial sites develop.\",\n          details: \"The Bronze Age brings revolutionary changes to British society with the introduction of metal working. Trade networks extend across Europe, bringing new technologies and cultural influences. Sophisticated burial practices emerge, including the famous burial mounds and the completion of Stonehenge's iconic stone circle arrangement.\",\n          category: \"Prehistoric\",\n          importance: 4,\n          keyFigures: \"Bronze Age metalworkers and traders\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: -55,\n          title: \"Julius Caesar's First Invasion\",\n          description: \"Julius Caesar launches the first Roman invasion of Britain, encountering fierce resistance from Celtic tribes.\",\n          details: \"Julius Caesar leads the first Roman expedition to Britain, landing in Kent with two legions. Though the invasion is brief and primarily a reconnaissance mission, it marks the first recorded contact between Britain and the Roman Empire. Caesar encounters sophisticated Celtic societies with advanced weaponry, fortified settlements, and complex political structures. The invasion establishes Britain's place in Roman consciousness and sets the stage for future conquest.\",\n          category: \"Roman\",\n          importance: 4,\n          keyFigures: \"Julius Caesar, Celtic tribal leaders\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 43,\n          title: \"Roman Conquest of Britain\",\n          description: \"Emperor Claudius launches the successful Roman conquest of Britain. Beginning of 400 years of Roman rule.\",\n          details: \"Emperor Claudius orders the invasion of Britain under Aulus Plautius, marking the beginning of nearly four centuries of Roman rule. The conquest transforms Britain dramatically, introducing Roman law, architecture, engineering, and urban planning. Major cities like Londinium (London), Camulodunum (Colchester), and Eboracum (York) are established. The Romans build extensive road networks, aqueducts, and defensive structures including Hadrian's Wall.\",\n          category: \"Roman\",\n          importance: 5,\n          keyFigures: \"Emperor Claudius, Aulus Plautius, Caratacus\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 410,\n          title: \"End of Roman Rule\",\n          description: \"Romans withdraw from Britain. Beginning of the Anglo-Saxon period and the Dark Ages.\",\n          details: \"The Roman Empire withdraws from Britain as it faces mounting pressures elsewhere. Emperor Honorius tells British cities to arrange their own defenses. This marks the end of nearly 400 years of Roman rule and the beginning of the Anglo-Saxon period. Without Roman protection, Britain becomes vulnerable to invasions from Angles, Saxons, and Jutes from Germanic lands, fundamentally changing the cultural and linguistic landscape.\",\n          category: \"Roman\",\n          importance: 5,\n          keyFigures: \"Emperor Honorius, Romano-British leaders\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 600,\n          title: \"Anglo-Saxon Kingdoms Established\",\n          description: \"Anglo-Saxon kingdoms dominate Britain. Conversion to Christianity spreads across the land.\",\n          details: \"The Anglo-Saxon kingdoms of Wessex, Mercia, Northumbria, and others become firmly established across England. This period sees the gradual conversion to Christianity, largely through the missions of Augustine of Canterbury and Irish monks. Anglo-Saxon culture, language, and law systems develop, laying the foundation for English identity. The period produces remarkable art, literature (including early English poetry), and the development of Anglo-Saxon English language.\",\n          category: \"Anglo-Saxon\",\n          importance: 4,\n          keyFigures: \"St. Augustine, Anglo-Saxon kings\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 789,\n          title: \"First Viking Raids\",\n          description: \"Vikings begin raiding British coasts. Start of the Viking Age in Britain with attacks on monasteries and settlements.\",\n          details: \"The first recorded Viking raid occurs at Portland in Dorset, followed by the famous attack on Lindisfarne monastery in 793. These raids mark the beginning of the Viking Age in Britain, bringing centuries of conflict, settlement, and cultural exchange. Vikings establish settlements, trade routes, and eventually kingdoms in parts of Britain, significantly influencing British culture, language, and society.\",\n          category: \"Viking\",\n          importance: 4,\n          keyFigures: \"Viking raiders and settlers\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1066,\n          title: \"Norman Conquest\",\n          description: \"William the Conqueror defeats Harold II at the Battle of Hastings. Norman rule transforms English society.\",\n          details: \"The Norman Conquest fundamentally transforms England when William of Normandy defeats King Harold II at the Battle of Hastings. This pivotal event introduces Norman-French culture, language, and feudal system to England. The Normans build castles, cathedrals, and establish a new aristocracy. The conquest affects language, law, architecture, and social structure, creating the foundation of medieval English society that influences Britain to this day.\",\n          category: \"Norman\",\n          importance: 5,\n          keyFigures: \"William the Conqueror, King Harold II\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1215,\n          title: \"Magna Carta Signed\",\n          description: \"King John signs the Magna Carta at Runnymede, establishing limits on royal power and foundation of constitutional government.\",\n          details: \"King John signs the Magna Carta at Runnymede under pressure from rebellious barons. This historic document establishes the principle that even the king is subject to the law and limits royal power. It guarantees certain rights and liberties, including due process and protection from illegal imprisonment. The Magna Carta becomes the foundation of constitutional government and influences legal systems worldwide, including the US Constitution.\",\n          category: \"Constitutional\",\n          importance: 5,\n          keyFigures: \"King John, rebellious barons, Archbishop Stephen Langton\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1284,\n          title: \"Conquest of Wales\",\n          description: \"Edward I completes the conquest of Wales. The Statute of Rhuddlan establishes English rule over Wales.\",\n          details: \"Edward I completes the conquest of Wales with the defeat of Llywelyn ap Gruffudd, the last native Prince of Wales. The Statute of Rhuddlan introduces English law and administration to Wales, though Welsh customs are partially preserved. Edward builds a ring of massive castles including Caernarfon, Conwy, and Harlech to secure English rule. This marks the beginning of formal English dominion over Wales, though Welsh identity and culture persist.\",\n          category: \"Territorial\",\n          importance: 4,\n          keyFigures: \"Edward I, Llywelyn ap Gruffudd\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1314,\n          title: \"Battle of Bannockburn\",\n          description: \"Robert the Bruce defeats Edward II, securing Scottish independence. Scotland remains independent for centuries.\",\n          details: \"Robert the Bruce leads the Scots to a decisive victory over Edward II's English army at Bannockburn, near Stirling. This victory secures Scottish independence and establishes Robert as undisputed King of Scotland. The battle demonstrates superior Scottish military tactics and national determination. Scotland remains independent from England for several more centuries, maintaining its own monarchy, laws, and institutions.\",\n          category: \"Military\",\n          importance: 4,\n          keyFigures: \"Robert the Bruce, Edward II\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1348,\n          title: \"Black Death Arrives\",\n          description: \"The Black Death reaches Britain, killing one-third of the population. Profound social and economic changes follow.\",\n          details: \"The Black Death (bubonic plague) reaches Britain through trade routes, devastating the population. An estimated one-third of Britain's population dies, causing profound social, economic, and religious upheaval. The massive population decline leads to labor shortages, rising wages, and social mobility. Traditional feudal structures begin to break down, and survivors question religious and social authorities. This tragedy paradoxically contributes to long-term social progress and economic development.\",\n          category: \"Social\",\n          importance: 5,\n          keyFigures: \"Plague victims and survivors across Britain\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1415,\n          title: \"Battle of Agincourt\",\n          description: \"Henry V's victory over French forces during the Hundred Years' War. Demonstrates English military prowess.\",\n          details: \"Henry V leads English forces to a stunning victory over a much larger French army at Agincourt during the Hundred Years' War. The battle showcases the effectiveness of English longbowmen and military tactics. This victory makes Henry V a legendary figure and demonstrates English military capability. The battle is immortalized in Shakespeare's plays and remains a symbol of English courage and determination against overwhelming odds.\",\n          category: \"Military\",\n          importance: 4,\n          keyFigures: \"Henry V, English longbowmen\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1455,\n          title: \"Wars of the Roses Begin\",\n          description: \"Civil wars between the Houses of York and Lancaster begin. Three decades of intermittent conflict for the English throne.\",\n          details: \"The Wars of the Roses begin between the Houses of York (white rose) and Lancaster (red rose) for control of the English throne. These civil wars span thirty years with intermittent battles, political intrigue, and changing fortunes. The conflict involves major battles like Towton and Bosworth Field, and produces legendary figures like Richard III and Henry Tudor. The wars ultimately end feudalism and establish the Tudor dynasty.\",\n          category: \"Civil War\",\n          importance: 4,\n          keyFigures: \"Richard III, Henry Tudor, various nobles\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1485,\n          title: \"Battle of Bosworth Field\",\n          description: \"Henry Tudor defeats Richard III, ending the Wars of the Roses and founding the Tudor dynasty.\",\n          details: \"Henry Tudor defeats Richard III at the Battle of Bosworth Field, ending the Wars of the Roses and founding the Tudor dynasty. Richard III dies in battle, and Henry becomes Henry VII. The victory unites the Houses of York and Lancaster through Henry's marriage to Elizabeth of York. This marks the end of medieval England and the beginning of the Tudor period, which brings stability, prosperity, and cultural renaissance to England.\",\n          category: \"Dynasty\",\n          importance: 5,\n          keyFigures: \"Henry VII, Richard III\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1509,\n          title: \"Henry VIII Becomes King\",\n          description: \"Henry VIII ascends to the throne at age 17. His reign will transform England's relationship with Europe and religion.\",\n          details: \"Henry VIII becomes king at age 17, inheriting a stable and prosperous kingdom from his father Henry VII. Initially a Catholic king who earns the title 'Defender of the Faith' from the Pope, Henry will later break with Rome over his desire to divorce Catherine of Aragon. His reign brings the English Reformation, the dissolution of monasteries, and England's emergence as a major European power with a strong navy.\",\n          category: \"Monarchy\",\n          importance: 5,\n          keyFigures: \"Henry VIII\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1547,\n          title: \"Edward VI Becomes King\",\n          description: \"Henry VIII dies; his 9-year-old son Edward VI becomes king. Protestant reforms accelerate under his regency.\",\n          details: \"Edward VI becomes king at age 9 following Henry VIII's death. During his minority, Protestant reforms accelerate under the influence of his regents, particularly Edward Seymour and John Dudley. The Book of Common Prayer is introduced, and Protestant doctrine becomes more firmly established. Though his reign is brief, Edward's Protestant policies significantly advance the English Reformation and shape England's religious future.\",\n          category: \"Religious\",\n          importance: 3,\n          keyFigures: \"Edward VI, Edward Seymour, John Dudley\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1553,\n          title: \"Mary I Becomes Queen\",\n          description: \"Mary Tudor becomes queen and attempts to restore Catholicism. Beginning of the Marian persecution of Protestants.\",\n          details: \"Mary I, daughter of Henry VIII and Catherine of Aragon, becomes queen and attempts to restore Catholicism to England. Her reign sees the persecution of Protestants, earning her the nickname 'Bloody Mary.' Nearly 300 Protestants are burned at the stake, including prominent religious leaders like Thomas Cranmer. Despite her efforts, Mary fails to permanently restore Catholicism, and her persecution creates Protestant martyrs who strengthen the Protestant cause.\",\n          category: \"Religious\",\n          importance: 3,\n          keyFigures: \"Mary I, Thomas Cranmer, Protestant martyrs\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1558,\n          title: \"Elizabeth I Becomes Queen\",\n          description: \"Elizabeth I ascends to the throne, beginning the Elizabethan Age. Golden age of English culture and maritime power.\",\n          details: \"Elizabeth I becomes queen at age 25, beginning one of England's most celebrated reigns. The Elizabethan Age sees a flowering of English culture with Shakespeare, Marlowe, and other literary giants. England becomes a major maritime power, defeating the Spanish Armada in 1588. Elizabeth establishes religious compromise, promotes trade and exploration, and creates the foundation for England's later emergence as a global power.\",\n          category: \"Golden Age\",\n          importance: 5,\n          keyFigures: \"Elizabeth I, William Shakespeare, Francis Drake\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1588,\n          title: \"Defeat of the Spanish Armada\",\n          description: \"English navy defeats the Spanish Armada, establishing England as a major naval power and securing Protestant rule.\",\n          details: \"The English navy, aided by storms, defeats the Spanish Armada sent by Philip II to invade England and restore Catholicism. This victory establishes England as a major European naval power and secures Elizabeth I's Protestant rule. The defeat ends Spanish dominance of the seas and opens the way for English colonial expansion. The victory is celebrated as divine providence protecting Protestant England and marks England's emergence as a maritime superpower.\",\n          category: \"Naval\",\n          importance: 5,\n          keyFigures: \"Elizabeth I, Francis Drake, Charles Howard\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1603,\n          title: \"Union of Crowns\",\n          description: \"James VI of Scotland becomes James I of England, uniting the Scottish and English crowns under one monarch.\",\n          details: \"James VI of Scotland becomes James I of England following Elizabeth I's death, creating the Union of Crowns. This personal union unites Scotland and England under one monarch for the first time, though they remain separate kingdoms with separate parliaments and laws. James brings ideas about divine right of kings and works toward closer union between the kingdoms. This begins the Stuart dynasty in England and sets the stage for eventual political union.\",\n          category: \"Union\",\n          importance: 4,\n          keyFigures: \"James VI/I\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1625,\n          title: \"Charles I Becomes King\",\n          description: \"Charles I ascends to the throne. His belief in divine right and conflicts with Parliament lead toward civil war.\",\n          details: \"Charles I becomes king with strong beliefs in divine right of kings and absolute monarchy. His conflicts with Parliament over taxation, religion, and royal prerogatives create constitutional crises. Charles attempts to rule without Parliament, imposes ship money, and promotes High Church Anglicanism that many consider too close to Catholicism. These actions create the conditions that lead to civil war and eventually his own execution.\",\n          category: \"Constitutional Crisis\",\n          importance: 4,\n          keyFigures: \"Charles I, Parliamentary leaders\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1640,\n          title: \"Long Parliament Begins\",\n          description: \"Charles I recalls Parliament after 11 years of personal rule. Beginning of constitutional conflict that leads to civil war.\",\n          details: \"After 11 years of ruling without Parliament, Charles I is forced to recall Parliament due to financial pressures from war with Scotland. The Long Parliament immediately begins attacking royal policies, impeaching the king's ministers, and demanding constitutional reforms. Parliament refuses to be dissolved and passes acts limiting royal power. This marks the point of no return in the constitutional conflict between king and Parliament.\",\n          category: \"Parliamentary\",\n          importance: 4,\n          keyFigures: \"Charles I, John Pym, parliamentary leaders\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1642,\n          title: \"English Civil War Begins\",\n          description: \"Civil war breaks out between King Charles I and Parliament. Beginning of revolutionary period in British history.\",\n          details: \"The English Civil War begins when Charles I raises his standard at Nottingham, marking the start of armed conflict between Royalists (Cavaliers) and Parliamentarians (Roundheads). The war divides families and communities across England. Parliament's forces, eventually led by Oliver Cromwell's New Model Army, prove superior. The conflict fundamentally questions the nature of government, royal authority, and religious settlement in England.\",\n          category: \"Civil War\",\n          importance: 5,\n          keyFigures: \"Charles I, Oliver Cromwell, parliamentary generals\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1646,\n          title: \"First Civil War Ends\",\n          description: \"Charles I surrenders to Scottish forces. Parliament gains control but struggles to reach settlement with the king.\",\n          details: \"The First Civil War ends with Charles I's surrender to Scottish forces, who later hand him over to Parliament. Parliament has won militarily but struggles to reach a political settlement. Charles refuses to accept limitations on royal power and continues to negotiate from captivity. His intransigence and secret negotiations with foreign powers convince many that he cannot be trusted, leading toward more radical solutions.\",\n          category: \"Civil War\",\n          importance: 4,\n          keyFigures: \"Charles I, Oliver Cromwell, Scottish Covenanters\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1658,\n          title: \"Death of Oliver Cromwell\",\n          description: \"Oliver Cromwell dies. His son Richard proves unable to maintain the Protectorate, leading toward restoration.\",\n          details: \"Oliver Cromwell, Lord Protector of England, dies after nearly a decade of republican rule. His son Richard Cromwell becomes Lord Protector but lacks his father's authority and political skill. The Protectorate begins to collapse as military leaders, Parliament, and the public grow weary of republican government. General George Monck begins negotiations for the restoration of monarchy, recognizing that only a king can provide the stability England needs.\",\n          category: \"Republican\",\n          importance: 4,\n          keyFigures: \"Oliver Cromwell, Richard Cromwell, George Monck\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1660,\n          title: \"Restoration of Monarchy\",\n          description: \"Charles II restored to the throne. End of the Commonwealth and return to constitutional monarchy.\",\n          details: \"Charles II is restored to the throne, ending the Commonwealth period and returning England to monarchy. The Restoration brings relief after years of republican government, but also establishes important precedents about parliamentary power. Charles II rules as a constitutional monarch, acknowledging Parliament's crucial role. The period sees cultural flowering, scientific advancement through the Royal Society, and the beginning of party politics with Whigs and Tories.\",\n          category: \"Restoration\",\n          importance: 5,\n          keyFigures: \"Charles II, George Monck\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1665,\n          title: \"Great Plague of London\",\n          description: \"Bubonic plague devastates London, killing about 100,000 people. Major public health crisis of the 17th century.\",\n          details: \"The Great Plague of London kills approximately 100,000 people, about a quarter of London's population. The plague spreads rapidly through overcrowded areas, causing panic and social disruption. Many wealthy citizens flee to the countryside, while the poor bear the brunt of the disease. The crisis leads to improved understanding of disease transmission and public health measures. The plague ends mysteriously in 1666, possibly due to the Great Fire of London destroying infected areas.\",\n          category: \"Health Crisis\",\n          importance: 3,\n          keyFigures: \"London plague victims, medical practitioners\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1679,\n          title: \"Habeas Corpus Act\",\n          description: \"Parliament passes the Habeas Corpus Act, protecting citizens from arbitrary imprisonment and strengthening civil liberties.\",\n          details: \"Parliament passes the Habeas Corpus Act, one of the most important civil liberties laws in British history. The act requires that anyone detained must be brought before a court and prevents arbitrary imprisonment. It strengthens the principle established in the Magna Carta that no one can be imprisoned without due process. This law becomes a cornerstone of English liberty and influences legal systems throughout the English-speaking world.\",\n          category: \"Civil Rights\",\n          importance: 4,\n          keyFigures: \"Parliamentary leaders, legal reformers\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1685,\n          title: \"James II Becomes King\",\n          description: \"James II, a Catholic, becomes king. His attempts to restore Catholicism create constitutional crisis.\",\n          details: \"James II becomes king as England's first openly Catholic monarch since Mary I. His attempts to restore Catholic influence through the Declaration of Indulgence, appointment of Catholics to key positions, and maintenance of a standing army create widespread Protestant opposition. James's actions violate established laws and customs, leading to fears of Catholic tyranny. His policies unite Whigs and Tories in opposition and set the stage for revolution.\",\n          category: \"Religious Crisis\",\n          importance: 4,\n          keyFigures: \"James II, Protestant opponents\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1688,\n          title: \"Glorious Revolution\",\n          description: \"William of Orange invited to take the throne. James II flees, establishing constitutional monarchy and parliamentary supremacy.\",\n          details: \"Protestant nobles invite William of Orange to take the throne, leading to James II's flight and the Glorious Revolution. This bloodless revolution establishes the principle of parliamentary supremacy and constitutional monarchy. William and Mary accept the throne under conditions that limit royal power and guarantee Protestant succession. The revolution creates the foundation of modern British democracy and constitutional government.\",\n          category: \"Constitutional Revolution\",\n          importance: 5,\n          keyFigures: \"William III, Mary II, James II\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1689,\n          title: \"Bill of Rights\",\n          description: \"Parliament passes the Bill of Rights, establishing limits on royal power and guaranteeing parliamentary rights.\",\n          details: \"Parliament passes the Bill of Rights, which establishes fundamental principles of constitutional monarchy. The bill limits royal power, guarantees parliamentary rights, ensures regular parliaments, and prohibits Catholic succession. It establishes freedom of speech in Parliament, the right to petition the crown, and prohibits cruel and unusual punishment. This document becomes a model for constitutional governments worldwide and forms part of Britain's unwritten constitution.\",\n          category: \"Constitutional\",\n          importance: 5,\n          keyFigures: \"William III, Mary II, Parliamentary leaders\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1695,\n          title: \"End of Press Censorship\",\n          description: \"The Licensing Act expires, ending pre-publication censorship and establishing freedom of the press.\",\n          details: \"The Licensing Act expires and Parliament chooses not to renew it, effectively ending pre-publication censorship in England. This marks the beginning of press freedom and allows newspapers, pamphlets, and books to be published without government approval. The end of censorship promotes political debate, scientific discussion, and cultural development. England becomes one of the first countries with a relatively free press, contributing to the development of public opinion and democratic discourse.\",\n          category: \"Press Freedom\",\n          importance: 4,\n          keyFigures: \"Publishers, writers, parliamentarians\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1702,\n          title: \"Anne Becomes Queen\",\n          description: \"Anne becomes the last Stuart monarch. Her reign sees the Act of Union with Scotland and major military victories.\",\n          details: \"Anne becomes queen as the last Stuart monarch, inheriting the throne from William III. Her reign sees major achievements including the Act of Union with Scotland in 1707, creating the Kingdom of Great Britain. Under the Duke of Marlborough's military leadership, Britain wins major victories in the War of Spanish Succession. Anne's reign establishes Britain as a major European power and creates the political and military foundation for future expansion.\",\n          category: \"Monarchy\",\n          importance: 4,\n          keyFigures: \"Queen Anne, Duke of Marlborough\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1707,\n          title: \"Act of Union with Scotland\",\n          description: \"England and Scotland unite to form the Kingdom of Great Britain. End of separate Scottish Parliament.\",\n          details: \"The Act of Union unites England and Scotland into the Kingdom of Great Britain, creating a single Parliament at Westminster. Scotland retains its legal system, church, and educational system but loses its separate parliament. The union creates economic benefits for Scotland through access to English markets and colonies, while England gains security and stability. This political union, combined with the earlier Union of Crowns, creates the foundation of modern Britain.\",\n          category: \"Political Union\",\n          importance: 5,\n          keyFigures: \"Queen Anne, Scottish and English negotiators\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1714,\n          title: \"Hanoverian Succession\",\n          description: \"George I becomes king, beginning the Hanoverian dynasty. Protestant succession secured.\",\n          details: \"George I of Hanover becomes king following Anne's death, securing the Protestant succession as established by the Act of Settlement. As a German prince with limited English, George relies heavily on ministers, inadvertently strengthening parliamentary government and the role of the Prime Minister. The Hanoverian succession ensures Protestant rule and creates closer ties with continental Europe, while also leading to Jacobite attempts to restore the Stuart line.\",\n          category: \"Dynasty\",\n          importance: 4,\n          keyFigures: \"George I, Hanoverian courtiers\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1721,\n          title: \"Robert Walpole Becomes First Prime Minister\",\n          description: \"Robert Walpole becomes Britain's first Prime Minister, establishing the office and cabinet government.\",\n          details: \"Robert Walpole becomes Britain's first Prime Minister, though the title isn't officially used until later. His long tenure (1721-1742) establishes the office and cabinet government system. Walpole demonstrates that effective government requires parliamentary support and creates precedents for ministerial responsibility. His policies promote trade, avoid foreign wars, and encourage economic growth, laying the foundation for Britain's later prosperity and power.\",\n          category: \"Constitutional Development\",\n          importance: 4,\n          keyFigures: \"Robert Walpole\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1746,\n          title: \"Battle of Culloden\",\n          description: \"Government forces defeat Jacobite army at Culloden, ending the Jacobite rising and Highland clan system.\",\n          details: \"The Battle of Culloden ends the Jacobite rising of 1745 and effectively ends the clan system in the Scottish Highlands. The Duke of Cumberland's government forces decisively defeat Charles Edward Stuart's Jacobite army, ending hopes of Stuart restoration. The aftermath sees harsh suppression of Highland culture, including bans on Highland dress and weapons. This victory secures the Hanoverian succession and begins the transformation of the Highlands into part of modern Britain.\",\n          category: \"Military\",\n          importance: 4,\n          keyFigures: \"Duke of Cumberland, Charles Edward Stuart (Bonnie Prince Charlie)\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1760,\n          title: \"George III Becomes King\",\n          description: \"George III ascends to the throne at age 22, beginning a 60-year reign that spans the Industrial Revolution and American independence.\",\n          details: \"George III becomes king, determined to restore royal authority and be more involved in government than his predecessors. His reign sees major challenges including the American Revolution, Napoleonic Wars, and the beginning of the Industrial Revolution. Despite periods of mental illness, George III's long reign witnesses Britain's transformation into a global industrial and naval power, though it also sees the loss of the American colonies.\",\n          category: \"Monarchy\",\n          importance: 4,\n          keyFigures: \"George III, Lord Bute, various Prime Ministers\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1766,\n          title: \"Declaratory Act\",\n          description: \"Parliament passes the Declaratory Act asserting its right to tax American colonies, escalating tensions that lead to revolution.\",\n          details: \"Following the repeal of the Stamp Act, Parliament passes the Declaratory Act asserting its absolute authority to make laws binding the American colonies 'in all cases whatsoever.' This act demonstrates Parliament's unwillingness to accept limitations on its authority over the colonies. The act escalates constitutional tensions between Britain and America, contributing to the chain of events that leads to the American Revolution and the loss of Britain's most valuable colonies.\",\n          category: \"Colonial\",\n          importance: 3,\n          keyFigures: \"King George III, Parliamentary leaders, American colonial representatives\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1801,\n          title: \"Act of Union with Ireland\",\n          description: \"Ireland formally joins Great Britain to create the United Kingdom of Great Britain and Ireland.\",\n          details: \"The Act of Union merges the Kingdom of Ireland with Great Britain, creating the United Kingdom of Great Britain and Ireland. The Irish Parliament is dissolved, and Ireland sends representatives to Westminster. This union follows the 1798 Irish Rebellion and is designed to strengthen British control over Ireland. The union creates the political framework that lasts until Irish independence in 1922, though it generates ongoing tensions about Irish representation and autonomy.\",\n          category: \"Political Union\",\n          importance: 5,\n          keyFigures: \"William Pitt the Younger, Irish parliamentary leaders\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1805,\n          title: \"Battle of Trafalgar\",\n          description: \"Admiral Nelson's decisive naval victory establishes British naval supremacy for over a century.\",\n          details: \"Admiral Horatio Nelson leads the British fleet to a crushing victory over the combined French and Spanish fleets at Trafalgar. Though Nelson dies in the battle, the victory establishes British naval supremacy that lasts over a century. Trafalgar ends Napoleon's invasion plans and secures Britain's control of the seas, enabling the expansion of trade and empire. The victory becomes a defining moment of British national identity and naval tradition.\",\n          category: \"Naval\",\n          importance: 5,\n          keyFigures: \"Admiral Horatio Nelson, Napoleon Bonaparte\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1815,\n          title: \"Battle of Waterloo\",\n          description: \"Wellington and Blücher defeat Napoleon, ending the Napoleonic Wars and establishing Britain as Europe's dominant power.\",\n          details: \"The Duke of Wellington, with Prussian support under Blücher, defeats Napoleon at Waterloo, ending the Napoleonic Wars and Napoleon's Hundred Days return. This victory establishes Britain as Europe's dominant power and begins the 'Pax Britannica' period. The Congress of Vienna reshapes Europe, with Britain playing a leading role. Waterloo becomes legendary in British culture and marks the beginning of Britain's century of global dominance.\",\n          category: \"Military\",\n          importance: 5,\n          keyFigures: \"Duke of Wellington, Napoleon Bonaparte, Field Marshal Blücher\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1750,\n          title: \"18th Century Enlightenment Peak\",\n          description: \"The Scottish Enlightenment reaches its peak with major contributions to philosophy, economics, and science.\",\n          details: \"The 18th century Enlightenment flourishes in Britain, particularly in Scotland with figures like David Hume, Adam Smith, and Robert Burns. This intellectual movement emphasizes reason, scientific method, and individual rights. British Enlightenment thinkers make fundamental contributions to philosophy, economics, political theory, and natural science. The movement influences the American Revolution, British political reform, and global intellectual development, establishing Britain as a center of learning and rational inquiry.\",\n          category: \"Intellectual\",\n          importance: 4,\n          keyFigures: \"David Hume, Adam Smith, Robert Burns, Samuel Johnson\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1820,\n          title: \"George IV Becomes King\",\n          description: \"George IV becomes king amid personal scandals and growing demands for political reform.\",\n          details: \"George IV becomes king after serving as Prince Regent during his father's illness. His reign is marked by personal scandals, extravagant lifestyle, and growing political tensions. The period sees increasing demands for parliamentary reform, Catholic emancipation, and social change. Despite the king's personal failings, the 1820s witness cultural flowering in the Romantic movement and continued industrial expansion that transforms British society.\",\n          category: \"Monarchy\",\n          importance: 3,\n          keyFigures: \"George IV, Lord Liverpool, reform advocates\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1830,\n          title: \"George IV Dies, William IV Becomes King\",\n          description: \"William IV becomes king as political reform movement intensifies, leading toward the Great Reform Act.\",\n          details: \"William IV becomes king as Britain faces growing demands for political reform. Unlike his brother George IV, William supports moderate reform and helps navigate the political crisis surrounding the Great Reform Act. His reign sees the beginning of fundamental changes to the British political system, including the expansion of voting rights and the reform of Parliament. The 1830s mark the beginning of the Victorian era's political and social transformations.\",\n          category: \"Political Reform\",\n          importance: 4,\n          keyFigures: \"William IV, Earl Grey, reform movement leaders\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1832,\n          title: \"Great Reform Act\",\n          description: \"The Reform Act expands voting rights and redistributes parliamentary seats, beginning democratic reform.\",\n          details: \"The Great Reform Act fundamentally changes the British electoral system by expanding voting rights to middle-class men and redistributing parliamentary seats from rotten boroughs to industrial cities. Though it only increases the electorate by about 50%, the act establishes the principle of parliamentary reform and democratic representation. This first Reform Act begins a series of democratic reforms that gradually transform Britain into a modern democracy over the following century.\",\n          category: \"Democratic Reform\",\n          importance: 5,\n          keyFigures: \"Earl Grey, William IV, reform campaigners\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1833,\n          title: \"Slavery Abolition Act\",\n          description: \"Britain abolishes slavery throughout its empire, compensating owners but not enslaved people.\",\n          details: \"The Slavery Abolition Act ends slavery throughout the British Empire, affecting over 800,000 enslaved people. The act provides £20 million compensation to slave owners but nothing to formerly enslaved people. This legislation makes Britain a leader in the global abolition movement and transforms colonial economies. The act demonstrates the growing influence of humanitarian movements and moral reform campaigns in British politics, though the compensation system reveals ongoing inequalities.\",\n          category: \"Social Reform\",\n          importance: 5,\n          keyFigures: \"William Wilberforce, Thomas Clarkson, abolition campaigners\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1837,\n          title: \"Victoria Becomes Queen\",\n          description: \"18-year-old Victoria becomes queen, beginning the longest reign in British history and the Victorian era.\",\n          details: \"Victoria becomes queen at age 18, beginning a 63-year reign that defines an era. The Victorian period sees unprecedented industrial growth, imperial expansion, and social change. Victoria's reign witnesses the railway revolution, telegraph communications, and massive urban growth. Her marriage to Prince Albert brings German influences and emphasis on moral respectability. The Victorian era establishes Britain as the world's dominant industrial and imperial power.\",\n          category: \"Monarchy\",\n          importance: 5,\n          keyFigures: \"Queen Victoria, Prince Albert\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1853,\n          title: \"Crimean War Begins\",\n          description: \"Britain joins France and Ottoman Empire against Russia in the Crimean War, exposing military weaknesses.\",\n          details: \"Britain enters the Crimean War alongside France and the Ottoman Empire against Russia. The war exposes serious deficiencies in British military organization, medical care, and logistics. Florence Nightingale's nursing work revolutionizes military medicine and establishes modern nursing. Though Britain and its allies ultimately win, the war's mismanagement leads to military reforms and changes in public attitudes toward war and government competence.\",\n          category: \"Military\",\n          importance: 4,\n          keyFigures: \"Lord Aberdeen, Florence Nightingale, Lord Cardigan\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1867,\n          title: \"Second Reform Act\",\n          description: \"Disraeli's Reform Act further expands voting rights, nearly doubling the electorate.\",\n          details: \"The Second Reform Act, passed by Disraeli's Conservative government, extends voting rights to working-class men in urban areas, nearly doubling the electorate. This unexpected Conservative initiative outflanks the Liberals and demonstrates growing acceptance of democratic principles. The act represents a major step toward universal male suffrage and forces political parties to adapt to a broader, more diverse electorate, fundamentally changing British political campaigns and representation.\",\n          category: \"Democratic Reform\",\n          importance: 4,\n          keyFigures: \"Benjamin Disraeli, William Gladstone, reform advocates\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1889,\n          title: \"London Dock Strike\",\n          description: \"Successful dock workers' strike marks the rise of new unionism and organized labor power.\",\n          details: \"The London Dock Strike sees 100,000 dock workers successfully strike for better pay and conditions, supported by public sympathy and international donations. The strike marks the emergence of 'new unionism' that organizes unskilled workers, not just skilled craftsmen. This victory demonstrates the growing power of organized labor and leads to rapid union growth. The strike influences labor relations and contributes to the formation of the Labour Party as workers seek political representation.\",\n          category: \"Labor Movement\",\n          importance: 4,\n          keyFigures: \"Ben Tillett, John Burns, dock workers' leaders\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1899,\n          title: \"Second Boer War Begins\",\n          description: \"Britain fights the Boer War in South Africa, exposing military weaknesses and imperial tensions.\",\n          details: \"The Second Boer War begins in South Africa between Britain and the Boer republics. The conflict lasts three years and costs Britain heavily in men, money, and international reputation. The war exposes British military weaknesses and leads to important army reforms. The use of concentration camps damages Britain's international image. Though Britain ultimately wins, the war demonstrates the costs of empire and contributes to growing questions about imperial policy.\",\n          category: \"Imperial\",\n          importance: 4,\n          keyFigures: \"Lord Kitchener, General Roberts, Boer leaders\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1901,\n          title: \"Victoria Dies, Edward VII Becomes King\",\n          description: \"Queen Victoria's death ends the Victorian era. Edward VII begins the Edwardian period of social and political change.\",\n          details: \"Queen Victoria dies after 63 years on the throne, ending the Victorian era. Her son Edward VII becomes king, beginning the Edwardian period characterized by social change, political reform, and international tensions. Edward's reign sees the rise of the Labour Party, women's suffrage campaigns, and constitutional crises. The period combines Belle Époque elegance with growing social tensions that ultimately lead to World War I.\",\n          category: \"Monarchy\",\n          importance: 4,\n          keyFigures: \"Edward VII, Queen Alexandra\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1910,\n          title: \"George V Becomes King\",\n          description: \"George V becomes king during constitutional crisis over House of Lords powers and Irish Home Rule.\",\n          details: \"George V becomes king amid constitutional crisis over the House of Lords' power to veto legislation. His reign begins with the Parliament Act 1911 limiting Lords' powers and continues through World War I, Irish independence, and the General Strike. George V's steady leadership during wartime and social upheaval helps maintain royal popularity. His reign witnesses fundamental changes in British society, politics, and the empire's transformation into the Commonwealth.\",\n          category: \"Constitutional Crisis\",\n          importance: 4,\n          keyFigures: \"George V, Lloyd George, Asquith\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1914,\n          title: \"World War I Begins\",\n          description: \"Britain declares war on Germany, beginning four years of total war that transforms British society.\",\n          details: \"Britain declares war on Germany following the German invasion of Belgium, beginning World War I. The war initially expected to last months extends to four years, transforming British society completely. The conflict sees unprecedented casualties, total war mobilization, and social changes including women entering the workforce en masse. The war costs Britain enormously in human and financial terms but ultimately establishes Britain as a major victor, though weakened by the effort.\",\n          category: \"World War\",\n          importance: 5,\n          keyFigures: \"George V, H.H. Asquith, Lloyd George, military commanders\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1918,\n          title: \"World War I Ends\",\n          description: \"Armistice ends World War I. Britain emerges victorious but economically weakened with massive social changes.\",\n          details: \"The Armistice ends World War I with Britain among the victors, but the country is fundamentally changed. Over 700,000 British soldiers have died, and the economy is strained by war debt. Women gain the vote, class structures shift, and the empire faces new challenges. The war's end brings relief but also economic difficulties, social tensions, and international responsibilities that shape Britain's interwar period and eventual decline as a global power.\",\n          category: \"World War\",\n          importance: 5,\n          keyFigures: \"Lloyd George, military leaders, war veterans\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1922,\n          title: \"Irish Independence\",\n          description: \"The Anglo-Irish Treaty creates the Irish Free State, partitioning Ireland and beginning the modern UK.\",\n          details: \"The Anglo-Irish Treaty establishes the Irish Free State, ending the War of Independence but partitioning Ireland. Northern Ireland remains part of the UK while the South becomes a self-governing dominion. The treaty creates the modern United Kingdom of Great Britain and Northern Ireland. This partition generates ongoing tensions and violence, particularly in Northern Ireland, while the Irish Free State eventually becomes the fully independent Republic of Ireland.\",\n          category: \"Constitutional Change\",\n          importance: 5,\n          keyFigures: \"Lloyd George, Michael Collins, partition negotiators\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1928,\n          title: \"Universal Suffrage Achieved\",\n          description: \"The Equal Franchise Act grants voting rights to all women over 21, achieving universal adult suffrage.\",\n          details: \"The Equal Franchise Act extends voting rights to all women over 21, matching men's voting age and achieving universal adult suffrage. This culminates decades of suffragette campaigns and women's contributions during World War I. The act adds over 5 million women to the electorate, fundamentally changing British politics. Universal suffrage represents the completion of democratic reform that began with the 1832 Great Reform Act, establishing Britain as a full democracy.\",\n          category: \"Democratic Achievement\",\n          importance: 5,\n          keyFigures: \"Stanley Baldwin, women's suffrage campaigners\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1936,\n          title: \"Edward VIII Abdication Crisis\",\n          description: \"Edward VIII abdicates to marry Wallis Simpson, creating constitutional crisis and bringing George VI to throne.\",\n          details: \"Edward VIII abdicates after less than a year as king to marry American divorcée Wallis Simpson, creating a constitutional crisis. His brother George VI becomes king reluctantly, with his wife Elizabeth (later Queen Mother) and daughters Elizabeth and Margaret. The abdication demonstrates the constitutional monarchy's strength and the importance of duty over personal desires. George VI's subsequent leadership during World War II restores royal prestige.\",\n          category: \"Constitutional Crisis\",\n          importance: 4,\n          keyFigures: \"Edward VIII, George VI, Wallis Simpson, Stanley Baldwin\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1939,\n          title: \"World War II Begins\",\n          description: \"Britain declares war on Germany following the invasion of Poland, beginning six years of total war.\",\n          details: \"Britain declares war on Germany after Hitler's invasion of Poland, beginning World War II. Initially fighting alone after France falls, Britain faces the threat of invasion during the Battle of Britain. The war sees unprecedented bombing of British cities, total mobilization of society, and eventual victory as part of the Allied coalition. The war effort transforms British society, accelerates decolonization, and ultimately establishes the welfare state.\",\n          category: \"World War\",\n          importance: 5,\n          keyFigures: \"Neville Chamberlain, Winston Churchill, George VI\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1940,\n          title: \"Churchill Becomes Prime Minister\",\n          description: \"Winston Churchill becomes Prime Minister during Britain's darkest hour, providing inspirational wartime leadership.\",\n          details: \"Winston Churchill becomes Prime Minister as Nazi Germany conquers Western Europe, leaving Britain standing alone. His inspirational speeches, including 'We shall never surrender' and 'Their finest hour,' rally British morale during the darkest period of World War II. Churchill's leadership during the Battle of Britain, the Blitz, and the long struggle to ultimate victory makes him Britain's greatest wartime leader and one of history's most significant figures.\",\n          category: \"Wartime Leadership\",\n          importance: 5,\n          keyFigures: \"Winston Churchill, Clement Attlee, wartime coalition government\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1940,\n          title: \"Battle of Britain\",\n          description: \"RAF defeats the Luftwaffe in the Battle of Britain, preventing German invasion and saving Britain.\",\n          details: \"The Royal Air Force defeats the German Luftwaffe in the Battle of Britain, preventing Operation Sea Lion, Hitler's planned invasion of Britain. Churchill's tribute 'Never was so much owed by so many to so few' honors the RAF pilots who saved Britain's independence. The victory marks the first major German defeat and proves that Nazi Germany can be beaten. The battle becomes legendary in British history and demonstrates the decisive importance of air power in modern warfare.\",\n          category: \"Military Victory\",\n          importance: 5,\n          keyFigures: \"RAF pilots, Lord Beaverbrook, Hugh Dowding\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1944,\n          title: \"D-Day Normandy Landings\",\n          description: \"Allied forces land in Normandy, beginning the liberation of Western Europe from Nazi occupation.\",\n          details: \"Operation Overlord sees Allied forces, with significant British participation, land in Normandy on D-Day, beginning the liberation of Western Europe. The largest seaborne invasion in history demonstrates Allied military coordination and marks the beginning of the end for Nazi Germany. British forces play crucial roles in the landings and subsequent campaigns. D-Day represents the culmination of years of British resistance and preparation for the final assault on Nazi-occupied Europe.\",\n          category: \"Military Operation\",\n          importance: 5,\n          keyFigures: \"Montgomery, Eisenhower, Churchill, Allied commanders\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1944,\n          title: \"Education Act (Butler Act)\",\n          description: \"The Education Act establishes free secondary education for all children, transforming British education.\",\n          details: \"The Education Act, known as the Butler Act, establishes the principle of free secondary education for all children in England and Wales. The act creates a tripartite system of grammar schools, technical schools, and secondary modern schools, with selection at age 11. This major social reform provides educational opportunities regardless of family income and contributes to post-war social mobility. The act represents wartime planning for a better post-war society.\",\n          category: \"Social Reform\",\n          importance: 4,\n          keyFigures: \"R.A. Butler, wartime coalition government\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1945,\n          title: \"Labour Landslide Victory\",\n          description: \"Clement Attlee's Labour Party wins landslide victory, beginning the creation of the welfare state.\",\n          details: \"Labour wins a landslide victory under Clement Attlee, defeating Winston Churchill's Conservatives despite Churchill's wartime heroism. The election demonstrates public desire for social change and post-war reconstruction. Attlee's government creates the welfare state, including the National Health Service, nationalizes key industries, and grants independence to India. This election marks a fundamental shift toward social democracy and the mixed economy that dominates post-war Britain.\",\n          category: \"Political Revolution\",\n          importance: 5,\n          keyFigures: \"Clement Attlee, Aneurin Bevan, Ernest Bevin\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1947,\n          title: \"Indian Independence\",\n          description: \"Britain grants independence to India and Pakistan, beginning rapid decolonization of the British Empire.\",\n          details: \"Britain grants independence to India and Pakistan, partitioning the subcontinent along religious lines. Lord Mountbatten oversees the transfer of power that affects over 400 million people. The partition triggers massive population movements and communal violence, while ending the 'jewel in the crown' of the British Empire. Indian independence begins rapid decolonization that transforms the British Empire into the Commonwealth and marks Britain's transition from imperial to post-imperial power.\",\n          category: \"Decolonization\",\n          importance: 5,\n          keyFigures: \"Lord Mountbatten, Nehru, Jinnah, Gandhi\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1951,\n          title: \"Festival of Britain\",\n          description: \"The Festival of Britain celebrates recovery from war and showcases British design, science, and culture.\",\n          details: \"The Festival of Britain marks the centenary of the Great Exhibition and celebrates Britain's recovery from World War II. The South Bank exhibition showcases British achievements in science, technology, design, and the arts. The Royal Festival Hall and other modernist structures demonstrate Britain's embrace of contemporary design. Though Conservative critics call it socialist propaganda, the festival successfully promotes British culture and design, boosting national morale during austerity.\",\n          category: \"Cultural\",\n          importance: 3,\n          keyFigures: \"Herbert Morrison, festival organizers, British designers\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1952,\n          title: \"Elizabeth II Becomes Queen\",\n          description: \"Elizabeth II becomes queen at age 25 following her father's death, beginning the current reign.\",\n          details: \"Princess Elizabeth becomes Queen Elizabeth II at age 25 following George VI's unexpected death. Her coronation in 1953 is the first major event televised globally, demonstrating the media's new power. Elizabeth's reign witnesses Britain's transformation from imperial power to modern European state, the rise and fall of the welfare state consensus, and major constitutional changes. Her long reign provides stability through decades of rapid social and political change.\",\n          category: \"Monarchy\",\n          importance: 5,\n          keyFigures: \"Elizabeth II, Duke of Edinburgh, Queen Mother\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1960,\n          title: \"Wind of Change Speech\",\n          description: \"Macmillan's 'Wind of Change' speech signals Britain's acceptance of African decolonization.\",\n          details: \"Prime Minister Harold Macmillan delivers his 'Wind of Change' speech to the South African Parliament, signaling Britain's acceptance that decolonization is inevitable across Africa. The speech marks a fundamental shift in British imperial policy and contributes to the rapid independence of African colonies throughout the 1960s. Macmillan's acknowledgment of African nationalism helps Britain manage decolonization relatively peacefully compared to other European powers.\",\n          category: \"Decolonization\",\n          importance: 4,\n          keyFigures: \"Harold Macmillan, African nationalist leaders\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1970,\n          title: \"1970s Economic Crisis\",\n          description: \"Britain faces severe economic crisis with inflation, strikes, and the 'three-day week' during the 1970s.\",\n          details: \"The 1970s see Britain face severe economic crisis with high inflation, industrial disputes, and economic stagnation ('stagflation'). The decade includes the three-day week, power cuts, rubbish strikes, and the 'Winter of Discontent.' Both Conservative and Labour governments struggle with union power, economic decline, and social tensions. The crisis culminates in IMF intervention in 1976 and sets the stage for Margaret Thatcher's radical economic reforms.\",\n          category: \"Economic Crisis\",\n          importance: 4,\n          keyFigures: \"Edward Heath, Harold Wilson, James Callaghan, union leaders\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1979,\n          title: \"Margaret Thatcher Becomes Prime Minister\",\n          description: \"Margaret Thatcher becomes Britain's first woman Prime Minister, beginning radical economic and social transformation.\",\n          details: \"Margaret Thatcher becomes Britain's first woman Prime Minister, promising to transform the country's declining economy and reverse social democratic consensus. Her governments pursue privatization, deregulation, reduced union power, and free-market economics. Thatcherism fundamentally changes British society, reducing the state's economic role while increasing inequality. Her strong leadership during the Falklands War and confrontation with miners establishes her as one of Britain's most influential Prime Ministers.\",\n          category: \"Political Revolution\",\n          importance: 5,\n          keyFigures: \"Margaret Thatcher, Conservative government ministers\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1982,\n          title: \"Falklands War\",\n          description: \"Britain successfully retakes the Falkland Islands from Argentina, boosting national pride and Thatcher's popularity.\",\n          details: \"Argentina invades the Falkland Islands, leading Britain to dispatch a naval task force to retake the islands. The successful military campaign, fought 8,000 miles from Britain, demonstrates British military capability and resolve. The victory boosts national pride and Margaret Thatcher's popularity, contributing to her 1983 election victory. The war marks one of the last successful British military campaigns and reinforces Britain's determination to defend its remaining overseas territories.\",\n          category: \"Military Campaign\",\n          importance: 4,\n          keyFigures: \"Margaret Thatcher, Admiral Woodward, Falklands veterans\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 1990,\n          title: \"Margaret Thatcher Resigns\",\n          description: \"Margaret Thatcher resigns as Prime Minister after 11 years, ending the Thatcher era of radical change.\",\n          details: \"Margaret Thatcher resigns as Prime Minister after losing Conservative Party support over the poll tax and European policy. Her 11-year tenure transforms Britain through privatization, deregulation, and reduced union power, but also increases social divisions and inequality. John Major succeeds her, promising a gentler conservatism. Thatcher's departure ends an era of radical change and begins a period of consolidation of her reforms.\",\n          category: \"Political Change\",\n          importance: 4,\n          keyFigures: \"Margaret Thatcher, John Major, Conservative MPs\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 2000,\n          title: \"New Millennium and Labour Reforms\",\n          description: \"Britain enters the new millennium under Tony Blair's New Labour with constitutional reforms and economic growth.\",\n          details: \"Britain enters the 21st century under Tony Blair's New Labour government, which combines free-market economics with social investment. The period sees major constitutional reforms including devolution to Scotland and Wales, House of Lords reform, and the Human Rights Act. The economy experiences sustained growth, and Britain plays a leading role in international affairs. The millennium celebration demonstrates Britain's confidence as a modern, multicultural society.\",\n          category: \"Constitutional Reform\",\n          importance: 4,\n          keyFigures: \"Tony Blair, Gordon Brown, New Labour ministers\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 2010,\n          title: \"Coalition Government\",\n          description: \"Conservative-Liberal Democrat coalition forms after hung parliament, implementing austerity policies.\",\n          details: \"No party wins a majority in the 2010 election, leading to Britain's first coalition government since World War II. David Cameron's Conservatives form a coalition with Nick Clegg's Liberal Democrats, implementing austerity policies to reduce the budget deficit following the 2008 financial crisis. The coalition introduces significant welfare reforms, education changes, and constitutional reforms including the Fixed-term Parliaments Act and AV referendum.\",\n          category: \"Political Coalition\",\n          importance: 4,\n          keyFigures: \"David Cameron, Nick Clegg, coalition ministers\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 2020,\n          title: \"COVID-19 Pandemic and Brexit\",\n          description: \"Britain faces the COVID-19 pandemic while completing Brexit, creating unprecedented challenges.\",\n          details: \"Britain faces the COVID-19 pandemic while implementing Brexit after leaving the EU in January 2020. The pandemic causes the deepest recession in 300 years, while Brexit creates new trading relationships and constitutional arrangements. The government's response includes lockdowns, furlough schemes, and rapid vaccine development. These simultaneous challenges test Britain's resilience and reshape its relationship with Europe and the world.\",\n          category: \"National Crisis\",\n          importance: 5,\n          keyFigures: \"Boris Johnson, government scientists, healthcare workers\",\n          timelineTopic: \"historical\"\n        },\n        {\n          year: 2022,\n          title: \"Platinum Jubilee and Political Turmoil\",\n          description: \"Queen Elizabeth II's Platinum Jubilee celebrated amid political instability and economic challenges.\",\n          details: \"Britain celebrates Queen Elizabeth II's Platinum Jubilee, marking 70 years on the throne, while facing political turmoil and economic challenges. The year sees three different Prime Ministers (Boris Johnson, Liz Truss, Rishi Sunak), economic instability, and the Queen's death in September. The transition to King Charles III marks the end of the Elizabethan era and the beginning of a new reign facing climate change, economic pressures, and constitutional questions about the monarchy's future role.\",\n          category: \"Constitutional Transition\",\n          importance: 5,\n          keyFigures: \"Elizabeth II, Charles III, Boris Johnson, Liz Truss, Rishi Sunak\",\n          timelineTopic: \"historical\"\n        }\n      ];\n\n      for (const event of historicalEvents) {\n        await this.createTimelineEvent(event);\n      }\n    }\n  }\n\n  // User methods\n  async getUser(id: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.id, id));\n    return user || undefined;\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.username, username));\n    return user || undefined;\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const [user] = await db\n      .insert(users)\n      .values(insertUser)\n      .returning();\n    return user;\n  }\n\n  async updateUserProgress(userId: string, progress: number): Promise<void> {\n    await db\n      .update(users)\n      .set({ overallProgress: progress })\n      .where(eq(users.id, userId));\n  }\n\n  async updateUserStudyTime(userId: string, additionalMinutes: number): Promise<void> {\n    const user = await this.getUser(userId);\n    if (user) {\n      await db\n        .update(users)\n        .set({ totalStudyTime: user.totalStudyTime + additionalMinutes })\n        .where(eq(users.id, userId));\n    }\n  }\n\n  async getUserByEmail(email: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.email, email));\n    return user || undefined;\n  }\n\n  // Authentication methods\n  async createRefreshToken(token: InsertRefreshToken): Promise<RefreshToken> {\n    const [refreshToken] = await db\n      .insert(refreshTokens)\n      .values(token)\n      .returning();\n    return refreshToken;\n  }\n\n  async getRefreshToken(token: string): Promise<RefreshToken | undefined> {\n    const [refreshToken] = await db.select().from(refreshTokens).where(eq(refreshTokens.token, token));\n    return refreshToken || undefined;\n  }\n\n  async deleteRefreshToken(token: string): Promise<void> {\n    await db.delete(refreshTokens).where(eq(refreshTokens.token, token));\n  }\n\n  async deleteUserRefreshTokens(userId: string): Promise<void> {\n    await db.delete(refreshTokens).where(eq(refreshTokens.userId, userId));\n  }\n\n  // Video methods\n  async getAllVideoModules(): Promise<VideoModule[]> {\n    return await db.select().from(videoModules).orderBy(videoModules.orderIndex);\n  }\n\n  async getVideoModule(id: string): Promise<VideoModule | undefined> {\n    const [video] = await db.select().from(videoModules).where(eq(videoModules.id, id));\n    return video || undefined;\n  }\n\n  async createVideoModule(video: InsertVideoModule): Promise<VideoModule> {\n    const [videoModule] = await db\n      .insert(videoModules)\n      .values(video)\n      .returning();\n    return videoModule;\n  }\n\n  async updateVideoModule(id: string, updates: Partial<InsertVideoModule>): Promise<VideoModule> {\n    const [updatedVideo] = await db\n      .update(videoModules)\n      .set(updates)\n      .where(eq(videoModules.id, id))\n      .returning();\n    return updatedVideo;\n  }\n\n  async getUserVideoProgress(userId: string): Promise<UserVideoProgress[]> {\n    return await db.select().from(userVideoProgress).where(eq(userVideoProgress.userId, userId));\n  }\n\n  async updateVideoProgress(progress: InsertUserVideoProgress): Promise<UserVideoProgress> {\n    const [existingProgress] = await db\n      .select()\n      .from(userVideoProgress)\n      .where(\n        and(\n          eq(userVideoProgress.userId, progress.userId),\n          eq(userVideoProgress.videoId, progress.videoId)\n        )\n      );\n\n    if (existingProgress) {\n      const [updated] = await db\n        .update(userVideoProgress)\n        .set({\n          completed: progress.completed || false,\n          watchTime: progress.watchTime || 0,\n          lastWatched: new Date()\n        })\n        .where(eq(userVideoProgress.id, existingProgress.id))\n        .returning();\n      return updated;\n    } else {\n      const [newProgress] = await db\n        .insert(userVideoProgress)\n        .values({\n          ...progress,\n          completed: progress.completed || false,\n          watchTime: progress.watchTime || 0,\n          lastWatched: new Date()\n        })\n        .returning();\n      return newProgress;\n    }\n  }\n\n  // Timeline methods\n  async getAllTimelineEvents(): Promise<TimelineEvent[]> {\n    return await db.select().from(timelineEvents).orderBy(timelineEvents.year);\n  }\n\n  async getTimelineEvent(id: string): Promise<TimelineEvent | undefined> {\n    const [event] = await db.select().from(timelineEvents).where(eq(timelineEvents.id, id));\n    return event || undefined;\n  }\n\n  async createTimelineEvent(event: InsertTimelineEvent): Promise<TimelineEvent> {\n    const [timelineEvent] = await db\n      .insert(timelineEvents)\n      .values(event)\n      .returning();\n    return timelineEvent;\n  }\n\n  // Exercise methods\n  async createExercise(exercise: InsertExercise): Promise<Exercise> {\n    const [newExercise] = await db\n      .insert(exercises)\n      .values(exercise)\n      .returning();\n    return newExercise;\n  }\n\n  async getUserExercises(userId: string): Promise<Exercise[]> {\n    return await db.select().from(exercises).where(eq(exercises.userId, userId));\n  }\n\n  async createExerciseAttempt(attempt: InsertExerciseAttempt): Promise<ExerciseAttempt> {\n    const [exerciseAttempt] = await db\n      .insert(exerciseAttempts)\n      .values(attempt)\n      .returning();\n    return exerciseAttempt;\n  }\n\n  async getUserExerciseAttempts(userId: string): Promise<ExerciseAttempt[]> {\n    return await db.select().from(exerciseAttempts).where(eq(exerciseAttempts.userId, userId));\n  }\n\n  // Learning module methods\n  async getAllLearningModules(): Promise<LearningModule[]> {\n    return await db.select().from(learningModules);\n  }\n\n  async getUserModuleProgress(userId: string): Promise<UserModuleProgress[]> {\n    return await db.select().from(userModuleProgress).where(eq(userModuleProgress.userId, userId));\n  }\n\n  async updateModuleProgress(progress: InsertUserModuleProgress): Promise<UserModuleProgress> {\n    const [existingProgress] = await db\n      .select()\n      .from(userModuleProgress)\n      .where(\n        and(\n          eq(userModuleProgress.userId, progress.userId),\n          eq(userModuleProgress.moduleId, progress.moduleId)\n        )\n      );\n\n    if (existingProgress) {\n      const [updated] = await db\n        .update(userModuleProgress)\n        .set({\n          completedItems: progress.completedItems || 0,\n          progress: progress.progress || 0\n        })\n        .where(eq(userModuleProgress.id, existingProgress.id))\n        .returning();\n      return updated;\n    } else {\n      const [newProgress] = await db\n        .insert(userModuleProgress)\n        .values({\n          ...progress,\n          completedItems: progress.completedItems || 0,\n          progress: progress.progress || 0\n        })\n        .returning();\n      return newProgress;\n    }\n  }\n\n  // Resource methods\n  async getAllResources(): Promise<Resource[]> {\n    return await db.select().from(resources);\n  }\n\n  async getResource(id: string): Promise<Resource | undefined> {\n    const [resource] = await db.select().from(resources).where(eq(resources.id, id));\n    return resource || undefined;\n  }\n\n  async createResource(resource: InsertResource): Promise<Resource> {\n    const [newResource] = await db\n      .insert(resources)\n      .values(resource)\n      .returning();\n    return newResource;\n  }\n\n  // Practice test methods\n  async getAllPracticeTests(): Promise<PracticeTest[]> {\n    return await db.select().from(practiceTests).orderBy(practiceTests.orderIndex);\n  }\n\n  async getPracticeTest(id: string): Promise<PracticeTest | undefined> {\n    const [test] = await db.select().from(practiceTests).where(eq(practiceTests.id, id));\n    return test || undefined;\n  }\n\n  async createPracticeTest(test: InsertPracticeTest): Promise<PracticeTest> {\n    const [newTest] = await db\n      .insert(practiceTests)\n      .values(test)\n      .returning();\n    return newTest;\n  }\n\n  async createPracticeTestAttempt(attempt: InsertPracticeTestAttempt): Promise<PracticeTestAttempt> {\n    const [newAttempt] = await db\n      .insert(practiceTestAttempts)\n      .values(attempt)\n      .returning();\n    return newAttempt;\n  }\n\n  async getUserPracticeTestAttempts(userId: string): Promise<PracticeTestAttempt[]> {\n    return await db.select().from(practiceTestAttempts).where(eq(practiceTestAttempts.userId, userId));\n  }\n\n  async getPracticeTestAttempts(userId: string, testId: string): Promise<PracticeTestAttempt[]> {\n    return await db\n      .select()\n      .from(practiceTestAttempts)\n      .where(\n        and(\n          eq(practiceTestAttempts.userId, userId),\n          eq(practiceTestAttempts.testId, testId)\n        )\n      );\n  }\n\n  // Mock Test Methods\n  async getMockTests(): Promise<MockTest[]> {\n    return await db.select().from(mockTests).orderBy(mockTests.orderIndex);\n  }\n\n  async getMockTest(id: string): Promise<MockTest | undefined> {\n    const [test] = await db.select().from(mockTests).where(eq(mockTests.id, id));\n    return test || undefined;\n  }\n\n  async createMockTest(test: InsertMockTest): Promise<MockTest> {\n    const [newTest] = await db\n      .insert(mockTests)\n      .values(test)\n      .returning();\n    return newTest;\n  }\n\n  async submitMockTest(attempt: InsertMockTestAttempt): Promise<MockTestAttempt> {\n    const [newAttempt] = await db\n      .insert(mockTestAttempts)\n      .values(attempt)\n      .returning();\n    return newAttempt;\n  }\n\n  async getMockTestAttempts(mockTestId: string, userId: string): Promise<MockTestAttempt[]> {\n    return await db\n      .select()\n      .from(mockTestAttempts)\n      .where(\n        and(\n          eq(mockTestAttempts.mockTestId, mockTestId),\n          eq(mockTestAttempts.userId, userId)\n        )\n      );\n  }\n\n  private async initializeMockTests() {\n    const { mockTestGenerator } = await import(\"./services/mock-test-generator\");\n    await mockTestGenerator.initializeMockTests();\n  }\n\n  private async initializeTimelineEvents() {\n    const timelineData = [\n      // Parliament Evolution\n      {\n        year: 1066,\n        title: \"Norman Conquest\",\n        description: \"William the Conqueror establishes Norman rule\",\n        details: \"The Norman Conquest fundamentally changed English governance, introducing feudalism and Norman administrative practices that would influence parliamentary development.\",\n        category: \"conquest\",\n        importance: 5,\n        keyFigures: \"William the Conqueror, King Harold II\",\n        timelineTopic: \"parliament\",\n        eventImage: \"https://images.unsplash.com/photo-1594736797933-d0c1d06854d3?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Medieval castle representing Norman architecture introduced after 1066\"\n      },\n      {\n        year: 1215,\n        title: \"Magna Carta\",\n        description: \"King John signs the Magna Carta, limiting royal power\",\n        details: \"This foundational document established that even the king was subject to law, creating principles that would later influence parliamentary sovereignty.\",\n        category: \"constitutional\",\n        importance: 5,\n        keyFigures: \"King John, Stephen Langton, Baron rebels\",\n        timelineTopic: \"parliament\",\n        eventImage: \"https://images.unsplash.com/photo-1481627834876-b7833e8f5570?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Ancient manuscript representing the Magna Carta document\"\n      },\n      {\n        year: 1265,\n        title: \"First Parliament\",\n        description: \"Simon de Montfort calls the first parliament including commoners\",\n        details: \"This marked the beginning of representative government in England, with both nobles and commoners participating in governance.\",\n        category: \"parliamentary\",\n        importance: 5,\n        keyFigures: \"Simon de Montfort, Henry III\",\n        timelineTopic: \"parliament\",\n        eventImage: \"https://images.unsplash.com/photo-1513635269975-59663e0ac1ad?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Houses of Parliament - Symbol of British parliamentary democracy\"\n      },\n      {\n        year: 1297,\n        title: \"Model Parliament\",\n        description: \"Edward I summons representatives from all social classes\",\n        details: \"Established the principle that taxation required parliamentary consent, laying groundwork for Parliament's financial powers.\",\n        category: \"parliamentary\",\n        importance: 4,\n        keyFigures: \"Edward I\",\n        timelineTopic: \"parliament\",\n        eventImage: \"https://images.unsplash.com/photo-1553729459-efe14ef6055d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Medieval royal court representing Edward I's Model Parliament\"\n      },\n      {\n        year: 1642,\n        title: \"English Civil War Begins\",\n        description: \"Parliament challenges King Charles I's absolute rule\",\n        details: \"This conflict established parliamentary supremacy over royal prerogative and led to temporary abolition of monarchy.\",\n        category: \"civil_war\",\n        importance: 5,\n        keyFigures: \"Charles I, Oliver Cromwell, John Pym\",\n        timelineTopic: \"parliament\",\n        eventImage: \"https://images.unsplash.com/photo-1578662996442-48f60103fc96?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Historic battlefield representing the English Civil War period\"\n      },\n      {\n        year: 1689,\n        title: \"Bill of Rights\",\n        description: \"Parliament's supremacy over monarchy established\",\n        details: \"Following the Glorious Revolution, this bill confirmed Parliament's control over taxation, military, and law-making.\",\n        category: \"constitutional\",\n        importance: 5,\n        keyFigures: \"William III, Mary II\",\n        timelineTopic: \"parliament\",\n        eventImage: \"https://images.unsplash.com/photo-1589829085413-56de8ae18c73?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Royal crown and scepter representing constitutional monarchy after 1689\"\n      },\n      {\n        year: 1707,\n        title: \"Act of Union\",\n        description: \"English and Scottish Parliaments merge\",\n        details: \"Created the Parliament of Great Britain, uniting the kingdoms under one legislative body.\",\n        category: \"union\",\n        importance: 5,\n        keyFigures: \"Queen Anne\",\n        timelineTopic: \"parliament\",\n        eventImage: \"https://images.unsplash.com/photo-1486299267070-83823f5448dd?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Union Jack flag representing the union of England and Scotland\"\n      },\n      {\n        year: 1832,\n        title: \"Great Reform Act\",\n        description: \"First major expansion of voting rights\",\n        details: \"Redistributed seats and extended voting to middle-class men, beginning democratization of Parliament.\",\n        category: \"reform\",\n        importance: 4,\n        keyFigures: \"Lord Grey, William IV\",\n        timelineTopic: \"parliament\",\n        eventImage: \"https://images.unsplash.com/photo-1541872705-1f73c6400ec9?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Voting ballot box representing democratic reform and voting rights expansion\"\n      },\n      {\n        year: 1911,\n        title: \"Parliament Act\",\n        description: \"House of Lords' power limited\",\n        details: \"Reduced the Lords' ability to block Commons legislation, establishing clear democratic hierarchy.\",\n        category: \"reform\",\n        importance: 4,\n        keyFigures: \"H.H. Asquith, Lloyd George\",\n        timelineTopic: \"parliament\"\n      },\n\n      // Important Documents\n      {\n        year: 1215,\n        title: \"Magna Carta\",\n        description: \"First constitutional document limiting royal power\",\n        details: \"King John forced to sign this charter guaranteeing certain liberties and establishing rule of law principles.\",\n        category: \"charter\",\n        importance: 5,\n        keyFigures: \"King John, Archbishop Stephen Langton\",\n        timelineTopic: \"documents\"\n      },\n      {\n        year: 1628,\n        title: \"Petition of Right\",\n        description: \"Parliament demands protection of civil liberties\",\n        details: \"Established that the king could not tax without parliamentary consent or imprison subjects without legal cause.\",\n        category: \"petition\",\n        importance: 4,\n        keyFigures: \"Charles I, Sir Edward Coke\",\n        timelineTopic: \"documents\"\n      },\n      {\n        year: 1679,\n        title: \"Habeas Corpus Act\",\n        description: \"Protection against unlawful imprisonment\",\n        details: \"Established the right to challenge detention and demand legal justification for imprisonment.\",\n        category: \"legal\",\n        importance: 4,\n        keyFigures: \"Charles II\",\n        timelineTopic: \"documents\"\n      },\n      {\n        year: 1689,\n        title: \"Bill of Rights\",\n        description: \"Constitutional settlement after Glorious Revolution\",\n        details: \"Established parliamentary supremacy, guaranteed free elections, and protected civil liberties.\",\n        category: \"constitutional\",\n        importance: 5,\n        keyFigures: \"William III, Mary II\",\n        timelineTopic: \"documents\"\n      },\n      {\n        year: 1707,\n        title: \"Act of Union\",\n        description: \"Treaty uniting England and Scotland\",\n        details: \"Created the Kingdom of Great Britain with a single parliament, preserving Scottish legal system.\",\n        category: \"treaty\",\n        importance: 5,\n        keyFigures: \"Queen Anne\",\n        timelineTopic: \"documents\"\n      },\n      {\n        year: 1832,\n        title: \"Reform Act\",\n        description: \"First major electoral reform legislation\",\n        details: \"Redistributed parliamentary seats and extended voting rights to property-owning middle class.\",\n        category: \"electoral\",\n        importance: 4,\n        keyFigures: \"Lord Grey\",\n        timelineTopic: \"documents\"\n      },\n\n      // Voting Rights Evolution\n      {\n        year: 1430,\n        title: \"County Franchise Established\",\n        description: \"Voting restricted to 40-shilling freeholders\",\n        details: \"First formal voting qualification in England, limiting electoral participation to substantial property owners.\",\n        category: \"franchise\",\n        importance: 3,\n        keyFigures: \"Henry VI\",\n        timelineTopic: \"voting_rights\"\n      },\n      {\n        year: 1832,\n        title: \"Great Reform Act\",\n        description: \"Voting extended to middle-class men\",\n        details: \"Added 217,000 voters, about 3% of population, and redistributed seats from 'rotten boroughs' to industrial cities.\",\n        category: \"reform\",\n        importance: 5,\n        keyFigures: \"Lord Grey, Earl Russell\",\n        timelineTopic: \"voting_rights\"\n      },\n      {\n        year: 1867,\n        title: \"Second Reform Act\",\n        description: \"Working-class men in towns gain vote\",\n        details: \"Extended franchise to urban working men, doubling the electorate and including skilled workers.\",\n        category: \"reform\",\n        importance: 4,\n        keyFigures: \"Benjamin Disraeli\",\n        timelineTopic: \"voting_rights\"\n      },\n      {\n        year: 1872,\n        title: \"Secret Ballot Act\",\n        description: \"Introduction of secret voting\",\n        details: \"Replaced public voting with private ballot, reducing bribery and intimidation in elections.\",\n        category: \"electoral\",\n        importance: 4,\n        keyFigures: \"William Gladstone\",\n        timelineTopic: \"voting_rights\"\n      },\n      {\n        year: 1884,\n        title: \"Third Reform Act\",\n        description: \"Rural workers gain voting rights\",\n        details: \"Extended franchise to agricultural workers, creating near-universal male suffrage.\",\n        category: \"reform\",\n        importance: 4,\n        keyFigures: \"William Gladstone\",\n        timelineTopic: \"voting_rights\"\n      },\n      {\n        year: 1918,\n        title: \"Representation of the People Act\",\n        description: \"Women over 30 and all men over 21 gain vote\",\n        details: \"First women's suffrage act, also removed most property qualifications for men.\",\n        category: \"suffrage\",\n        importance: 5,\n        keyFigures: \"Emmeline Pankhurst, Millicent Fawcett\",\n        timelineTopic: \"voting_rights\"\n      },\n      {\n        year: 1928,\n        title: \"Equal Franchise Act\",\n        description: \"Equal voting rights for all adults over 21\",\n        details: \"Gave women equal voting rights with men, achieving universal adult suffrage.\",\n        category: \"suffrage\",\n        importance: 5,\n        keyFigures: \"Stanley Baldwin\",\n        timelineTopic: \"voting_rights\"\n      },\n      {\n        year: 1969,\n        title: \"Voting Age Lowered\",\n        description: \"Voting age reduced from 21 to 18\",\n        details: \"Extended democratic participation to younger adults, reflecting social changes of the 1960s.\",\n        category: \"reform\",\n        importance: 3,\n        keyFigures: \"Harold Wilson\",\n        timelineTopic: \"voting_rights\"\n      },\n\n      // Territorial Evolution\n      {\n        year: 1066,\n        title: \"Norman Conquest of England\",\n        description: \"William conquers Anglo-Saxon England\",\n        details: \"Established Norman control over England, bringing continental European influences to British governance.\",\n        category: \"conquest\",\n        importance: 5,\n        keyFigures: \"William the Conqueror\",\n        timelineTopic: \"territories\"\n      },\n      {\n        year: 1169,\n        title: \"Anglo-Norman Invasion of Ireland\",\n        description: \"English begin conquest of Ireland\",\n        details: \"Started centuries of English/British rule in Ireland, creating complex colonial relationship.\",\n        category: \"invasion\",\n        importance: 4,\n        keyFigures: \"Richard de Clare (Strongbow)\",\n        timelineTopic: \"territories\"\n      },\n      {\n        year: 1283,\n        title: \"Conquest of Wales\",\n        description: \"Edward I completes conquest of Wales\",\n        details: \"Wales incorporated into English kingdom, ending independent Welsh principalities.\",\n        category: \"conquest\",\n        importance: 4,\n        keyFigures: \"Edward I, Llywelyn ap Gruffudd\",\n        timelineTopic: \"territories\"\n      },\n      {\n        year: 1707,\n        title: \"Act of Union with Scotland\",\n        description: \"England and Scotland unite as Great Britain\",\n        details: \"Created unified kingdom while preserving distinct Scottish institutions like legal system.\",\n        category: \"union\",\n        importance: 5,\n        keyFigures: \"Queen Anne\",\n        timelineTopic: \"territories\"\n      },\n      {\n        year: 1801,\n        title: \"Act of Union with Ireland\",\n        description: \"Ireland incorporated into United Kingdom\",\n        details: \"Created United Kingdom of Great Britain and Ireland, dissolving Irish Parliament.\",\n        category: \"union\",\n        importance: 4,\n        keyFigures: \"George III, William Pitt\",\n        timelineTopic: \"territories\"\n      },\n      {\n        year: 1922,\n        title: \"Irish Partition\",\n        description: \"Ireland divided, southern part becomes independent\",\n        details: \"Irish Free State created, Northern Ireland remains in UK, establishing current boundaries.\",\n        category: \"partition\",\n        importance: 5,\n        keyFigures: \"Michael Collins, David Lloyd George\",\n        timelineTopic: \"territories\"\n      },\n\n      // Trade Evolution\n      {\n        year: 1600,\n        title: \"East India Company Founded\",\n        description: \"First major English trading corporation established\",\n        details: \"Launched British commercial expansion into Asia, eventually leading to colonial empire.\",\n        category: \"commerce\",\n        importance: 4,\n        keyFigures: \"Elizabeth I\",\n        timelineTopic: \"trades\"\n      },\n      {\n        year: 1651,\n        title: \"Navigation Acts\",\n        description: \"Laws requiring colonial trade through England\",\n        details: \"Established mercantilist system controlling colonial commerce and protecting English shipping.\",\n        category: \"regulation\",\n        importance: 3,\n        keyFigures: \"Oliver Cromwell\",\n        timelineTopic: \"trades\"\n      },\n      {\n        year: 1750,\n        title: \"Industrial Revolution Begins\",\n        description: \"Manufacturing transforms British economy\",\n        details: \"Steam power and mechanization revolutionize production, making Britain 'workshop of the world'.\",\n        category: \"industrial\",\n        importance: 5,\n        keyFigures: \"James Watt, Abraham Darby\",\n        timelineTopic: \"trades\"\n      },\n      {\n        year: 1846,\n        title: \"Corn Laws Repealed\",\n        description: \"Move toward free trade begins\",\n        details: \"Abolished protective tariffs on grain, marking shift from protectionism to free trade.\",\n        category: \"policy\",\n        importance: 4,\n        keyFigures: \"Robert Peel, Richard Cobden\",\n        timelineTopic: \"trades\"\n      },\n      {\n        year: 1860,\n        title: \"Cobden-Chevalier Treaty\",\n        description: \"Free trade agreement with France\",\n        details: \"First major bilateral free trade agreement, launching era of international trade liberalization.\",\n        category: \"treaty\",\n        importance: 3,\n        keyFigures: \"Richard Cobden, Michel Chevalier\",\n        timelineTopic: \"trades\"\n      },\n      {\n        year: 1973,\n        title: \"UK Joins European Economic Community\",\n        description: \"Britain enters European common market\",\n        details: \"Joined EEC to access European markets, marking shift toward European economic integration.\",\n        category: \"integration\",\n        importance: 4,\n        keyFigures: \"Edward Heath\",\n        timelineTopic: \"trades\"\n      },\n      {\n        year: 2020,\n        title: \"Brexit Completed\",\n        description: \"UK leaves European Union\",\n        details: \"After 47 years in EU/EEC, Britain pursues independent trade policy and global partnerships.\",\n        category: \"separation\",\n        importance: 5,\n        keyFigures: \"Boris Johnson\",\n        timelineTopic: \"trades\"\n      },\n\n      // Inventions & Discoveries - British Scientific and Technological Achievements\n      {\n        year: 1476,\n        title: \"William Caxton's Printing Press\",\n        description: \"First printing press established in England\",\n        details: \"William Caxton brought printing technology to England, setting up the first press at Westminster. This revolutionized the spread of literacy and knowledge, making books accessible to the English-speaking public.\",\n        category: \"technology\",\n        importance: 4,\n        keyFigures: \"William Caxton\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1481627834876-b7833e8f5570?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Ancient printing press representing Caxton's revolutionary technology\"\n      },\n      {\n        year: 1687,\n        title: \"Newton's Principia Mathematica\",\n        description: \"Isaac Newton publishes laws of motion and gravity\",\n        details: \"Sir Isaac Newton's Mathematical Principles of Natural Philosophy laid the foundation for classical mechanics and our understanding of gravity. His three laws of motion and universal law of gravitation revolutionized physics and mathematics.\",\n        category: \"science\",\n        importance: 5,\n        keyFigures: \"Isaac Newton\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1446776653964-20c1d3a81b06?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Scientific instruments representing Newton's mathematical and physical discoveries\"\n      },\n      {\n        year: 1776,\n        title: \"Adam Smith's Wealth of Nations\",\n        description: \"Foundation of modern economic theory published\",\n        details: \"Adam Smith's 'An Inquiry into the Nature and Causes of the Wealth of Nations' established the principles of free market economics and the concept of the 'invisible hand' that guides economic activity.\",\n        category: \"economics\",\n        importance: 5,\n        keyFigures: \"Adam Smith\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1460925895917-afdab827c52f?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Economic charts and documents representing Smith's economic theories\"\n      },\n      {\n        year: 1776,\n        title: \"James Watt's Steam Engine\",\n        description: \"Improved steam engine powers Industrial Revolution\",\n        details: \"James Watt's separate condenser greatly improved the efficiency of steam engines, making them practical for widespread industrial use. This innovation was crucial to the Industrial Revolution and modern manufacturing.\",\n        category: \"engineering\",\n        importance: 5,\n        keyFigures: \"James Watt\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1581833971358-2c8b550f87b3?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Industrial machinery representing Watt's revolutionary steam engine\"\n      },\n      {\n        year: 1776,\n        title: \"David Hume's Philosophy\",\n        description: \"Major contributions to empiricism and skepticism\",\n        details: \"David Hume's philosophical works, including 'An Enquiry Concerning Human Understanding,' profoundly influenced Western philosophy. His empiricist approach and skeptical arguments about causation and induction shaped modern philosophical thought.\",\n        category: \"philosophy\",\n        importance: 4,\n        keyFigures: \"David Hume\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Books and manuscripts representing Hume's philosophical writings\"\n      },\n      {\n        year: 1769,\n        title: \"Richard Arkwright's Water Frame\",\n        description: \"Water-powered spinning machine revolutionizes textile production\",\n        details: \"Richard Arkwright's water frame was the first successful water-powered spinning machine, producing stronger cotton thread than previous methods. This innovation helped establish the factory system and mass production.\",\n        category: \"manufacturing\",\n        importance: 4,\n        keyFigures: \"Richard Arkwright\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1558618666-fcd25c85cd64?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Textile machinery representing Arkwright's water frame innovation\"\n      },\n      {\n        year: 1814,\n        title: \"George Stephenson's Steam Locomotive\",\n        description: \"First practical steam locomotive for railways\",\n        details: \"George Stephenson built the first practical steam locomotive 'Blücher' and later 'The Rocket.' His innovations in railway engineering made steam trains viable for both passenger and freight transport, revolutionizing transportation.\",\n        category: \"transportation\",\n        importance: 5,\n        keyFigures: \"George Stephenson\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1474487548417-781cb71495f3?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Historic steam locomotive representing Stephenson's railway innovations\"\n      },\n      {\n        year: 1825,\n        title: \"Robert Stephenson's Railway Engineering\",\n        description: \"Advanced locomotive design and railway infrastructure\",\n        details: \"Robert Stephenson, son of George, designed the 'Rocket' locomotive and pioneered railway engineering. He built major railway lines and bridges, including the High Level Bridge in Newcastle, advancing railway technology.\",\n        category: \"engineering\",\n        importance: 4,\n        keyFigures: \"Robert Stephenson\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1469474968028-56623f02e42e?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Railway bridge and engineering representing Robert Stephenson's innovations\"\n      },\n      {\n        year: 1926,\n        title: \"John Logie Baird's Television\",\n        description: \"First successful television transmission\",\n        details: \"John Logie Baird demonstrated the first working television system, transmitting moving images with his mechanical television. His work laid the foundation for modern television broadcasting and visual communications.\",\n        category: \"communication\",\n        importance: 5,\n        keyFigures: \"John Logie Baird\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1522869635100-9f4c5e86aa37?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Early television equipment representing Baird's broadcasting innovation\"\n      },\n      {\n        year: 1922,\n        title: \"John Macleod's Insulin Discovery\",\n        description: \"Co-discovery of insulin treatment for diabetes\",\n        details: \"John James Rickard Macleod, working with Frederick Banting, co-discovered insulin as a treatment for diabetes. This breakthrough saved millions of lives and earned them the Nobel Prize in Physiology or Medicine.\",\n        category: \"medicine\",\n        importance: 5,\n        keyFigures: \"John Macleod, Frederick Banting\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1559757148-5c350d0d3c56?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Medical laboratory equipment representing insulin discovery\"\n      },\n      {\n        year: 1928,\n        title: \"Alexander Fleming's Penicillin\",\n        description: \"Discovery of first widely-used antibiotic\",\n        details: \"Alexander Fleming discovered penicillin when he noticed that a mold had killed bacteria in a petri dish. This accidental discovery led to the development of antibiotics, revolutionizing medicine and saving countless lives.\",\n        category: \"medicine\",\n        importance: 5,\n        keyFigures: \"Alexander Fleming\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1582719471384-894fbb16e074?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Laboratory petri dishes representing Fleming's penicillin discovery\"\n      },\n      {\n        year: 1935,\n        title: \"Robert Watson-Watt's Radar\",\n        description: \"Development of radar detection system\",\n        details: \"Robert Watson-Watt developed the first practical radar system, which became crucial during World War II for detecting enemy aircraft. His work on radio detection and ranging technology revolutionized military defense and air traffic control.\",\n        category: \"technology\",\n        importance: 5,\n        keyFigures: \"Robert Watson-Watt\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1446776877081-d282a0f896e2?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Radar equipment and radio towers representing Watson-Watt's detection system\"\n      },\n      {\n        year: 1936,\n        title: \"John Maynard Keynes' Economic Theory\",\n        description: \"Revolutionary macroeconomic theory published\",\n        details: \"John Maynard Keynes published 'The General Theory of Employment, Interest and Money,' introducing Keynesian economics. His theories about government intervention during economic downturns influenced economic policy worldwide.\",\n        category: \"economics\",\n        importance: 5,\n        keyFigures: \"John Maynard Keynes\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1611974789855-9c2a0a7236a3?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Economic graphs and government buildings representing Keynesian economic theory\"\n      },\n      {\n        year: 1937,\n        title: \"Frank Whittle's Jet Engine\",\n        description: \"First turbojet engine revolutionizes aviation\",\n        details: \"Frank Whittle invented and tested the first turbojet engine, fundamentally changing aviation. His Power Jets WU became the basis for modern jet propulsion, making high-speed flight and commercial aviation possible.\",\n        category: \"aviation\",\n        importance: 5,\n        keyFigures: \"Frank Whittle\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1436491865332-7a61a109cc05?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Jet aircraft and engine representing Whittle's aviation innovation\"\n      },\n      {\n        year: 1936,\n        title: \"Alan Turing's Theoretical Computer\",\n        description: \"Turing machine concept laid foundation for computing\",\n        details: \"Alan Turing described the theoretical 'Turing machine,' establishing the mathematical foundation for computer science. His work on computation, artificial intelligence, and code-breaking during WWII shaped the modern digital age.\",\n        category: \"computing\",\n        importance: 5,\n        keyFigures: \"Alan Turing\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1518314916381-77a37c2a49ae?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Early computer equipment and mathematical symbols representing Turing's computational theories\"\n      },\n      {\n        year: 1810,\n        title: \"Sake Dean Mahomet's Shampooing\",\n        description: \"Introduced Indian head massage and therapeutic bathing to Britain\",\n        details: \"Sake Dean Mahomet, an Indian-British entrepreneur, opened the first curry house in Britain and introduced 'shampooing' (therapeutic head massage) to British society, founding the first commercial steam baths in England.\",\n        category: \"wellness\",\n        importance: 3,\n        keyFigures: \"Sake Dean Mahomet\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Spa and wellness treatments representing Mahomet's therapeutic innovations\"\n      },\n      {\n        year: 1833,\n        title: \"Isambard Kingdom Brunel's Engineering Marvels\",\n        description: \"Revolutionary railway, bridge, and ship engineering\",\n        details: \"Isambard Kingdom Brunel designed the Great Western Railway, the Clifton Suspension Bridge, and pioneering steamships including the SS Great Britain. His innovative engineering transformed British infrastructure and maritime transport.\",\n        category: \"engineering\",\n        importance: 5,\n        keyFigures: \"Isambard Kingdom Brunel\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1558618666-fcd25c85cd64?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Historic suspension bridge representing Brunel's engineering achievements\"\n      },\n      {\n        year: 1854,\n        title: \"Florence Nightingale's Modern Nursing\",\n        description: \"Founded modern nursing practices and hospital sanitation\",\n        details: \"Florence Nightingale revolutionized nursing during the Crimean War, introducing sanitary practices that dramatically reduced death rates. She established the first secular nursing school and created the foundation of modern healthcare.\",\n        category: \"medicine\",\n        importance: 5,\n        keyFigures: \"Florence Nightingale\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1559757148-5c350d0d3c56?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Medical care and nursing equipment representing Nightingale's healthcare reforms\"\n      },\n      {\n        year: 1953,\n        title: \"Francis Crick's DNA Structure Discovery\",\n        description: \"Co-discovered the double helix structure of DNA\",\n        details: \"Francis Crick, along with James Watson, discovered the double helix structure of DNA using X-ray crystallography data. This breakthrough revolutionized biology and genetics, earning them the Nobel Prize and launching the modern genetic age.\",\n        category: \"biology\",\n        importance: 5,\n        keyFigures: \"Francis Crick, James Watson\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1576319155264-c7d4c609774e?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"DNA helix models and genetic research representing Crick's biological discovery\"\n      },\n      {\n        year: 1955,\n        title: \"Chris Cockerell's Hovercraft\",\n        description: \"Invented the air-cushion vehicle (hovercraft)\",\n        details: \"Christopher Cockerell invented the hovercraft, a revolutionary vehicle that travels on a cushion of air. His innovation enabled transportation over various surfaces including water, ice, and swamps, transforming both military and civilian transport.\",\n        category: \"transportation\",\n        importance: 4,\n        keyFigures: \"Chris Cockerell\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1544551763-46a013bb70d5?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Hovercraft on water representing Cockerell's air-cushion vehicle innovation\"\n      },\n      {\n        year: 1957,\n        title: \"Bernard Lovell's Radio Astronomy\",\n        description: \"Pioneer of radio astronomy and space tracking\",\n        details: \"Sir Bernard Lovell founded the Jodrell Bank Observatory and built the world's first large steerable radio telescope. His work revolutionized astronomy, enabling the study of distant galaxies and tracking of early space missions.\",\n        category: \"astronomy\",\n        importance: 4,\n        keyFigures: \"Bernard Lovell\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1446776877081-d282a0f896e2?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Radio telescope and space observatory representing Lovell's astronomical achievements\"\n      },\n      {\n        year: 1967,\n        title: \"Harrier Jump Jet Development\",\n        description: \"First operational vertical takeoff fighter aircraft\",\n        details: \"British engineers developed the Harrier Jump Jet, the world's first successful vertical/short takeoff and landing (V/STOL) fighter aircraft. This revolutionary design allowed operations from small aircraft carriers and forward bases.\",\n        category: \"aviation\",\n        importance: 4,\n        keyFigures: \"British Aerospace Team\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1436491865332-7a61a109cc05?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Military jet aircraft representing the Harrier's revolutionary VTOL technology\"\n      },\n      {\n        year: 1967,\n        title: \"James Goodfellow's ATM PIN System\",\n        description: \"Invented the Personal Identification Number for ATMs\",\n        details: \"James Goodfellow invented the Personal Identification Number (PIN) system for Automated Teller Machines, revolutionizing banking security. His cryptographic principles became the foundation for secure electronic transactions worldwide.\",\n        category: \"technology\",\n        importance: 4,\n        keyFigures: \"James Goodfellow\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1556742049-0cfed4f6a45d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"ATM machine and banking technology representing Goodfellow's PIN security system\"\n      },\n      {\n        year: 1973,\n        title: \"Peter Mansfield's MRI Technology\",\n        description: \"Co-developed Magnetic Resonance Imaging\",\n        details: \"Sir Peter Mansfield developed the mathematical foundations and practical techniques for Magnetic Resonance Imaging (MRI). His work made medical imaging safer and more detailed, earning him the Nobel Prize in Medicine.\",\n        category: \"medicine\",\n        importance: 5,\n        keyFigures: \"Peter Mansfield\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1559757148-5c350d0d3c56?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Medical imaging equipment representing Mansfield's MRI technology\"\n      },\n      {\n        year: 1978,\n        title: \"Robert Edwards & Patrick Steptoe's IVF\",\n        description: \"First successful in-vitro fertilization treatment\",\n        details: \"Robert Edwards and Patrick Steptoe developed in-vitro fertilization (IVF), leading to the birth of Louise Brown, the world's first 'test-tube baby.' Their pioneering work gave hope to millions of infertile couples worldwide.\",\n        category: \"medicine\",\n        importance: 5,\n        keyFigures: \"Robert Edwards, Patrick Steptoe\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1559757148-5c350d0d3c56?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Medical laboratory representing Edwards and Steptoe's fertility research\"\n      },\n      {\n        year: 1989,\n        title: \"Tim Berners-Lee's World Wide Web\",\n        description: \"Invented the World Wide Web and HTML\",\n        details: \"Tim Berners-Lee created the World Wide Web while working at CERN, inventing HTML, HTTP, and URLs. He chose not to patent his invention, making the web free for everyone and transforming global communication and information sharing.\",\n        category: \"computing\",\n        importance: 5,\n        keyFigures: \"Tim Berners-Lee\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1518314916381-77a37c2a49ae?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Computer networks and web connections representing Berners-Lee's internet revolution\"\n      },\n      {\n        year: 1996,\n        title: \"Ian Wilmut's Dolly the Sheep Cloning\",\n        description: \"First successful cloning of an adult mammal\",\n        details: \"Ian Wilmut and Keith Campbell successfully cloned Dolly the sheep at the Roslin Institute, the first mammal cloned from an adult somatic cell. This breakthrough opened new possibilities in genetics, medicine, and regenerative therapy.\",\n        category: \"biology\",\n        importance: 5,\n        keyFigures: \"Ian Wilmut, Keith Campbell\",\n        timelineTopic: \"inventions\",\n        eventImage: \"https://images.unsplash.com/photo-1576319155264-c7d4c609774e?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Genetic laboratory equipment representing Wilmut and Campbell's cloning achievement\"\n      },\n\n      // British Sporting Heroes - Life in UK Test Sportsmen\n      {\n        year: 1954,\n        title: \"Roger Bannister Breaks Four-Minute Mile\",\n        description: \"First person to run a mile in under four minutes\",\n        details: \"Roger Bannister achieved the seemingly impossible by running a mile in 3 minutes 59.4 seconds at Oxford's Iffley Road track. This breakthrough barrier inspired athletes worldwide and demonstrated British excellence in middle-distance running.\",\n        category: \"Athletics\",\n        importance: 5,\n        keyFigures: \"Roger Bannister\",\n        timelineTopic: \"british_sportsmen\",\n        sport: \"Athletics\",\n        accomplishment: \"First person to break the four-minute mile barrier - 3:59.4\",\n        videoLink: null\n      },\n      {\n        year: 2012,\n        title: \"Mo Farah Olympic Double Gold\",\n        description: \"Wins 5000m and 10000m at London Olympics\",\n        details: \"Mohamed 'Mo' Farah captured the hearts of the nation by winning both long-distance events at the 2012 London Olympics. His 'Mobot' celebration became iconic, and he repeated this double at Rio 2016.\",\n        category: \"Athletics\",\n        importance: 5,\n        keyFigures: \"Mo Farah\",\n        timelineTopic: \"british_sportsmen\",\n        sport: \"Athletics\",\n        accomplishment: \"Four-time Olympic gold medalist in 5000m and 10000m (2012, 2016)\",\n        videoLink: null\n      },\n      {\n        year: 2013,\n        title: \"Andy Murray Wins Wimbledon\",\n        description: \"First British man to win Wimbledon in 77 years\",\n        details: \"Andy Murray ended Britain's 77-year wait for a men's Wimbledon champion by defeating Novak Djokovic in straight sets. This victory followed his emotional 2012 final loss and 2012 Olympic gold medal.\",\n        category: \"Tennis\",\n        importance: 5,\n        keyFigures: \"Andy Murray\",\n        timelineTopic: \"british_sportsmen\",\n        sport: \"Tennis\",\n        accomplishment: \"Three-time Grand Slam champion and two-time Olympic gold medalist\",\n        videoLink: null\n      },\n      {\n        year: 2012,\n        title: \"Jessica Ennis-Hill Olympic Heptathlon Gold\",\n        description: \"Wins heptathlon at London Olympics as poster girl of Games\",\n        details: \"Jessica Ennis-Hill became the face of the London 2012 Olympics, delivering under immense pressure to win heptathlon gold. Her victory in front of a home crowd was one of the defining moments of the Games.\",\n        category: \"Athletics\",\n        importance: 5,\n        keyFigures: \"Jessica Ennis-Hill\",\n        timelineTopic: \"british_sportsmen\",\n        sport: \"Athletics\",\n        accomplishment: \"Olympic heptathlon champion and three-time world champion\",\n        videoLink: null\n      },\n      {\n        year: 2008,\n        title: \"Chris Hoy's Triple Olympic Gold\",\n        description: \"Wins three cycling gold medals at Beijing Olympics\",\n        details: \"Sir Chris Hoy became the most successful British Olympian (at the time) by winning three gold medals in track cycling at Beijing 2008. His achievements helped establish Britain as a cycling powerhouse.\",\n        category: \"Cycling\",\n        importance: 5,\n        keyFigures: \"Chris Hoy\",\n        timelineTopic: \"british_sportsmen\",\n        sport: \"Cycling\",\n        accomplishment: \"Six-time Olympic cycling gold medalist, most successful British track cyclist\",\n        videoLink: null\n      },\n      {\n        year: 2004,\n        title: \"Kelly Holmes Double Olympic Gold\",\n        description: \"Wins 800m and 1500m at Athens Olympics\",\n        details: \"Dame Kelly Holmes achieved her lifetime dream by winning double gold in the 800m and 1500m at Athens 2004. Her emotional victory celebrations highlighted years of injury struggles and determination.\",\n        category: \"Athletics\",\n        importance: 5,\n        keyFigures: \"Kelly Holmes\",\n        timelineTopic: \"british_sportsmen\",\n        sport: \"Athletics\",\n        accomplishment: \"Double Olympic gold medalist in 800m and 1500m at Athens 2004\",\n        videoLink: null\n      },\n      {\n        year: 2000,\n        title: \"Steve Redgrave's Fifth Olympic Gold\",\n        description: \"Wins unprecedented fifth consecutive Olympic rowing gold\",\n        details: \"Sir Steve Redgrave achieved the remarkable feat of winning rowing gold at five consecutive Olympics (1984-2000). His coxless four victory at Sydney 2000 completed one of sport's greatest achievements.\",\n        category: \"Rowing\",\n        importance: 5,\n        keyFigures: \"Steve Redgrave\",\n        timelineTopic: \"british_sportsmen\",\n        sport: \"Rowing\",\n        accomplishment: \"Five consecutive Olympic rowing gold medals from 1984 to 2000\",\n        videoLink: null\n      },\n      {\n        year: 1966,\n        title: \"England Wins World Cup\",\n        description: \"Bobby Charlton leads England to World Cup victory\",\n        details: \"Sir Bobby Charlton was instrumental in England's 4-2 victory over West Germany at Wembley. His goalscoring throughout the tournament and leadership helped deliver England's only World Cup triumph.\",\n        category: \"Football\",\n        importance: 5,\n        keyFigures: \"Bobby Charlton, Geoff Hurst\",\n        timelineTopic: \"british_sportsmen\",\n        sport: \"Football\",\n        accomplishment: \"1966 World Cup winner and Manchester United legend with 249 goals\",\n        videoLink: null\n      },\n      {\n        year: 1966,\n        title: \"Geoff Hurst's World Cup Hat-trick\",\n        description: \"Only player to score hat-trick in World Cup final\",\n        details: \"Sir Geoff Hurst made history by scoring a hat-trick in the 1966 World Cup final against West Germany. His third goal with the famous commentary 'They think it's all over... it is now!' became legendary.\",\n        category: \"Football\",\n        importance: 5,\n        keyFigures: \"Geoff Hurst\",\n        timelineTopic: \"british_sportsmen\",\n        sport: \"Football\",\n        accomplishment: \"Only player to score hat-trick in World Cup final (1966 vs West Germany)\",\n        videoLink: null\n      },\n      {\n        year: 2012,\n        title: \"Bradley Wiggins Wins Tour de France\",\n        description: \"First British winner of cycling's most prestigious race\",\n        details: \"Sir Bradley Wiggins became the first British rider to win the Tour de France, achieving a childhood dream. His victory was followed by time trial gold at the London Olympics weeks later.\",\n        category: \"Cycling\",\n        importance: 5,\n        keyFigures: \"Bradley Wiggins\",\n        timelineTopic: \"british_sportsmen\",\n        sport: \"Cycling\",\n        accomplishment: \"First Briton to win Tour de France and eight-time Olympic medalist\",\n        videoLink: null\n      },\n      {\n        year: 2008,\n        title: \"Lewis Hamilton's First F1 Championship\",\n        description: \"Youngest Formula 1 world champion at the time\",\n        details: \"Lewis Hamilton won his first Formula 1 World Championship in dramatic fashion, overtaking Timo Glock on the final corner of the final lap of the season. He went on to become Britain's most successful F1 driver.\",\n        category: \"Formula 1\",\n        importance: 5,\n        keyFigures: \"Lewis Hamilton\",\n        timelineTopic: \"british_sportsmen\",\n        sport: \"Formula 1\",\n        accomplishment: \"Seven-time Formula 1 World Champion, joint-record holder\",\n        videoLink: null\n      },\n      {\n        year: 1987,\n        title: \"Nick Faldo's First Major\",\n        description: \"Wins first of six major golf championships\",\n        details: \"Sir Nick Faldo won the 1987 Open Championship, beginning a dominant period in golf. He went on to win six majors including three Masters and three Open Championships, becoming Europe's greatest golfer.\",\n        category: \"Golf\",\n        importance: 4,\n        keyFigures: \"Nick Faldo\",\n        timelineTopic: \"british_sportsmen\",\n        sport: \"Golf\",\n        accomplishment: \"Six-time major golf champion including three Masters and three Open Championships\",\n        videoLink: null\n      },\n      {\n        year: 2003,\n        title: \"Jonny Wilkinson's World Cup Drop Goal\",\n        description: \"Wins Rugby World Cup with iconic drop goal\",\n        details: \"Jonny Wilkinson's drop goal in extra time secured England's 20-17 victory over Australia in the 2003 Rugby World Cup final. His accuracy and mental strength under pressure became legendary.\",\n        category: \"Rugby\",\n        importance: 5,\n        keyFigures: \"Jonny Wilkinson\",\n        timelineTopic: \"british_sportsmen\",\n        sport: \"Rugby\",\n        accomplishment: \"Scored winning drop goal in 2003 Rugby World Cup final for England\",\n        videoLink: null\n      },\n      {\n        year: 2016,\n        title: \"Sarah Storey's Paralympic Dominance\",\n        description: \"Becomes Britain's most successful Paralympian\",\n        details: \"Dame Sarah Storey became Britain's most successful Paralympian with her achievements in swimming and cycling. Her 17 Paralympic gold medals across two sports demonstrate remarkable versatility and longevity.\",\n        category: \"Paralympics\",\n        importance: 5,\n        keyFigures: \"Sarah Storey\",\n        timelineTopic: \"british_sportsmen\",\n        sport: \"Paralympics\",\n        accomplishment: \"Britain's most successful Paralympian with 17 gold medals in swimming and cycling\",\n        videoLink: null\n      },\n      {\n        year: 1995,\n        title: \"AP McCoy's Champion Jockey Dominance\",\n        description: \"Begins unprecedented run of 20 consecutive champion jockey titles\",\n        details: \"Sir Anthony 'AP' McCoy began his extraordinary dominance of National Hunt racing, becoming champion jockey 20 consecutive times. His dedication and fearlessness redefined professional horse racing.\",\n        category: \"Horse Racing\",\n        importance: 4,\n        keyFigures: \"AP McCoy\",\n        timelineTopic: \"british_sportsmen\",\n        sport: \"Horse Racing\",\n        accomplishment: \"Champion jockey 20 consecutive times with over 4,300 career wins\",\n        videoLink: null\n      },\n\n      // Church Evolution Timeline\n      {\n        year: 43,\n        title: \"Roman Christianity Arrives in Britain\",\n        description: \"Christianity first introduced to Britain during Roman occupation\",\n        details: \"Roman soldiers and merchants brought Christianity to Britain during the Roman occupation. Early Christian communities developed in major Roman towns, particularly in England and Wales, laying the foundation for the future church.\",\n        category: \"religion\",\n        importance: 4,\n        keyFigures: \"Roman missionaries\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Ancient Roman architecture and Christian symbols representing early Christianity in Britain\"\n      },\n      {\n        year: 397,\n        title: \"St. Ninian's Mission to Scotland\",\n        description: \"First recorded Christian mission to Scotland\",\n        details: \"St. Ninian established the first Christian church in Scotland at Whithorn, bringing Christianity to the Picts and other Celtic tribes. This marked the beginning of organized Christianity in Scotland, predating St. Columba's mission.\",\n        category: \"religion\",\n        importance: 4,\n        keyFigures: \"St. Ninian\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Ancient stone church representing early Christian missions in Scotland\"\n      },\n      {\n        year: 432,\n        title: \"St. Patrick's Mission to Ireland\",\n        description: \"Christianity firmly established in Ireland\",\n        details: \"St. Patrick's mission brought organized Christianity to Ireland, establishing the Celtic Church tradition. This influenced the later Christianization of Northern Ireland and provided the foundation for Irish monasticism that would spread throughout Britain.\",\n        category: \"religion\",\n        importance: 5,\n        keyFigures: \"St. Patrick\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Celtic cross and monastery representing St. Patrick's mission to Ireland\"\n      },\n      {\n        year: 563,\n        title: \"St. Columba Founds Iona Abbey\",\n        description: \"Celtic Christianity spreads throughout Scotland\",\n        details: \"St. Columba established Iona Abbey, which became the center of Celtic Christianity in Scotland. The monastery served as a base for converting the Picts and Scots, establishing the unique Celtic Christian tradition that differed from Roman Christianity.\",\n        category: \"religion\",\n        importance: 5,\n        keyFigures: \"St. Columba\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Medieval abbey on island representing Iona and Celtic Christianity\"\n      },\n      {\n        year: 597,\n        title: \"St. Augustine's Mission to England\",\n        description: \"Roman Christianity officially established in England\",\n        details: \"Pope Gregory I sent St. Augustine to convert the Anglo-Saxons. Augustine became the first Archbishop of Canterbury, establishing the Roman Catholic Church in England and founding Canterbury Cathedral as the mother church of English Christianity.\",\n        category: \"religion\",\n        importance: 5,\n        keyFigures: \"St. Augustine of Canterbury\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Canterbury Cathedral representing the establishment of English Christianity\"\n      },\n      {\n        year: 664,\n        title: \"Synod of Whitby\",\n        description: \"Roman Christianity becomes dominant over Celtic traditions\",\n        details: \"The Synod of Whitby decided in favor of Roman rather than Celtic Christian practices, unifying the English church under Roman authority. This decision affected church organization across Britain, though Celtic traditions persisted longer in Scotland, Wales, and Ireland.\",\n        category: \"religion\",\n        importance: 4,\n        keyFigures: \"King Oswiu of Northumbria\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Medieval church assembly representing the Synod of Whitby\"\n      },\n      {\n        year: 1170,\n        title: \"Norman Church Reforms\",\n        description: \"Norman conquest transforms church organization across Britain\",\n        details: \"Following the Norman Conquest, church organization was reformed with Norman bishops appointed across England and Wales. New cathedrals and abbeys were built in Norman style, centralizing church authority and connecting British churches more closely to continental Europe.\",\n        category: \"religion\",\n        importance: 4,\n        keyFigures: \"Norman bishops\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Norman cathedral architecture representing church reforms\"\n      },\n      {\n        year: 1472,\n        title: \"St. Andrews Archbishopric Established\",\n        description: \"Scotland gains ecclesiastical independence\",\n        details: \"The Pope elevated St. Andrews to an archbishopric, giving Scotland ecclesiastical independence from English church authority. This strengthened Scottish church identity and reduced English influence over Scottish religious affairs.\",\n        category: \"religion\",\n        importance: 4,\n        keyFigures: \"Archbishop Patrick Graham\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"St. Andrews Cathedral ruins representing Scottish ecclesiastical independence\"\n      },\n      {\n        year: 1534,\n        title: \"English Reformation Begins\",\n        description: \"Henry VIII breaks from Rome, establishing Church of England\",\n        details: \"Henry VIII's Act of Supremacy declared him Supreme Head of the Church of England, breaking from papal authority. This created the Anglican Church and began the English Reformation, fundamentally changing religion in England and Wales while initially having less impact on Scotland and Ireland.\",\n        category: \"religion\",\n        importance: 5,\n        keyFigures: \"Henry VIII, Thomas Cranmer\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Tudor church interior representing the English Reformation\"\n      },\n      {\n        year: 1560,\n        title: \"Scottish Reformation\",\n        description: \"Presbyterian Church established in Scotland\",\n        details: \"John Knox led the Scottish Reformation, establishing Presbyterianism as Scotland's national church. The Scottish Parliament rejected papal authority and adopted a Protestant confession of faith, creating the Church of Scotland (Kirk) with its distinctive presbyterian governance structure.\",\n        category: \"religion\",\n        importance: 5,\n        keyFigures: \"John Knox\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Scottish kirk interior representing Presbyterian reformation\"\n      },\n      {\n        year: 1536,\n        title: \"Dissolution of Welsh Monasteries\",\n        description: \"Reformation extends to Wales under English rule\",\n        details: \"The dissolution of monasteries extended to Wales as part of the English Reformation. Welsh religious houses were closed, and the Church in Wales came under the authority of the Church of England, though Welsh language and culture influenced local church practices.\",\n        category: \"religion\",\n        importance: 3,\n        keyFigures: \"Thomas Cromwell\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Ruined Welsh abbey representing monastic dissolution\"\n      },\n      {\n        year: 1588,\n        title: \"Welsh Bible Translation\",\n        description: \"William Morgan translates Bible into Welsh\",\n        details: \"William Morgan's Welsh Bible translation helped preserve Welsh language and culture within the Protestant church. This translation became central to Welsh religious and cultural identity, ensuring Welsh-language church services and strengthening Welsh Protestant traditions.\",\n        category: \"religion\",\n        importance: 4,\n        keyFigures: \"William Morgan\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Ancient Welsh Bible representing translation and cultural preservation\"\n      },\n      {\n        year: 1609,\n        title: \"Plantation of Ulster\",\n        description: \"Protestant settlement reshapes Northern Ireland church landscape\",\n        details: \"The Plantation of Ulster brought Protestant settlers from Scotland and England to Northern Ireland, establishing Presbyterian and Anglican churches alongside existing Catholic communities. This created the complex religious landscape that defines Northern Ireland today.\",\n        category: \"religion\",\n        importance: 4,\n        keyFigures: \"Ulster Planters\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Ulster plantation church representing Protestant settlement\"\n      },\n      {\n        year: 1689,\n        title: \"Presbyterian Church in Ireland Organized\",\n        description: \"Formal organization of Presbyterian Church in Ulster\",\n        details: \"The Presbyterian Church in Ireland was formally organized following the Williamite Wars, establishing a strong Presbyterian presence in Ulster. This created a distinct Protestant denomination alongside Anglicanism, contributing to Northern Ireland's complex religious identity.\",\n        category: \"religion\",\n        importance: 4,\n        keyFigures: \"Ulster Presbyterian ministers\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Presbyterian church in Ulster representing organized Presbyterianism\"\n      },\n      {\n        year: 1707,\n        title: \"Act of Union Preserves Scottish Church\",\n        description: \"Union protects Presbyterian Church of Scotland\",\n        details: \"The Act of Union between England and Scotland specifically protected the Presbyterian Church of Scotland, ensuring it remained the established church north of the border. This preserved Scotland's distinct religious identity within the new United Kingdom.\",\n        category: \"religion\",\n        importance: 4,\n        keyFigures: \"Scottish negotiators\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Scottish Presbyterian church representing protected religious traditions\"\n      },\n      {\n        year: 1738,\n        title: \"Methodist Revival Begins\",\n        description: \"Methodism spreads across Britain, particularly Wales\",\n        details: \"John Wesley's Methodist revival movement spread across Britain, with particularly strong growth in Wales where it complemented Welsh nonconformist traditions. Methodism provided an alternative to established churches and became influential in working-class communities throughout the UK.\",\n        category: \"religion\",\n        importance: 4,\n        keyFigures: \"John Wesley, George Whitefield\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Methodist chapel representing evangelical revival movement\"\n      },\n      {\n        year: 1829,\n        title: \"Catholic Emancipation\",\n        description: \"Catholics gain civil rights across the UK\",\n        details: \"The Catholic Emancipation Act removed most restrictions on Catholics throughout the UK, allowing them to participate fully in public life. This was particularly significant in Ireland and marked the beginning of the end of Protestant ascendancy, though tensions remained especially in Ulster.\",\n        category: \"religion\",\n        importance: 5,\n        keyFigures: \"Daniel O'Connell, Duke of Wellington\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Catholic church representing religious emancipation and equality\"\n      },\n      {\n        year: 1843,\n        title: \"Disruption of Church of Scotland\",\n        description: \"Free Church of Scotland formed over independence issues\",\n        details: \"The Disruption saw about one-third of Church of Scotland ministers leave to form the Free Church of Scotland over the issue of patronage and church independence from state control. This created a major division in Scottish Presbyterianism that lasted for decades.\",\n        category: \"religion\",\n        importance: 4,\n        keyFigures: \"Thomas Chalmers\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Free Church building representing Scottish church disruption\"\n      },\n      {\n        year: 1869,\n        title: \"Irish Church Disestablishment\",\n        description: \"Church of Ireland loses established status\",\n        details: \"The Irish Church Act disestablished the Church of Ireland, ending Protestant religious privilege in Ireland. This was part of broader reforms addressing Irish grievances and reduced the Anglican Church's formal role in Irish society, though it remained influential among the Protestant minority.\",\n        category: \"religion\",\n        importance: 4,\n        keyFigures: \"William Gladstone\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Church of Ireland building representing disestablishment\"\n      },\n      {\n        year: 1920,\n        title: \"Church in Wales Disestablished\",\n        description: \"Welsh Anglican Church gains independence\",\n        details: \"The Church in Wales was disestablished from the Church of England, becoming an independent Anglican province. This reflected growing Welsh national consciousness and gave the Welsh church greater autonomy to address distinctly Welsh religious and cultural needs.\",\n        category: \"religion\",\n        importance: 3,\n        keyFigures: \"Welsh church leaders\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Welsh cathedral representing church independence\"\n      },\n      {\n        year: 1929,\n        title: \"Church of Scotland Reunion\",\n        description: \"United Free Church reunites with Church of Scotland\",\n        details: \"The United Free Church of Scotland reunited with the Church of Scotland, healing much of the division caused by the 1843 Disruption. This strengthened Scottish Presbyterianism and created a more unified national church while maintaining independence from state control.\",\n        category: \"religion\",\n        importance: 4,\n        keyFigures: \"Church leaders\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"United Scottish church representing Presbyterian reunion\"\n      },\n      {\n        year: 1969,\n        title: \"Northern Ireland Troubles Begin\",\n        description: \"Religious divisions intensify during conflict period\",\n        details: \"The Northern Ireland conflict intensified existing religious divisions, with Catholic and Protestant communities often aligned with nationalist and unionist political positions. Churches played complex roles as both sources of division and agents of peace-making throughout the Troubles.\",\n        category: \"religion\",\n        importance: 4,\n        keyFigures: \"Religious leaders\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Peace wall and churches representing religious divisions and reconciliation\"\n      },\n      {\n        year: 1992,\n        title: \"Church of England Ordains Women Priests\",\n        description: \"Anglican Church allows women's ordination despite controversy\",\n        details: \"The Church of England voted to ordain women as priests, causing significant controversy and some departures to Rome. This reform was gradually adopted by other Anglican churches in the UK, representing major social change in church leadership and gender equality.\",\n        category: \"religion\",\n        importance: 4,\n        keyFigures: \"Women clergy\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Female priest representing women's ordination in Anglican Church\"\n      },\n      {\n        year: 1998,\n        title: \"Good Friday Agreement\",\n        description: \"Peace process recognizes religious equality in Northern Ireland\",\n        details: \"The Good Friday Agreement established principles of religious equality and mutual respect in Northern Ireland, formally recognizing both traditions. This marked a turning point in church relations and began a new era of interfaith cooperation and shared governance.\",\n        category: \"religion\",\n        importance: 5,\n        keyFigures: \"Church leaders, politicians\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Churches and peace symbols representing Good Friday Agreement\"\n      },\n      {\n        year: 2003,\n        title: \"Gene Robinson Controversy\",\n        description: \"Anglican Communion faces divisions over sexuality\",\n        details: \"The consecration of openly gay bishop Gene Robinson in the US caused major divisions within the worldwide Anglican Communion, affecting UK Anglican churches. This highlighted ongoing debates about sexuality, tradition, and modern church teaching across all UK denominations.\",\n        category: \"religion\",\n        importance: 3,\n        keyFigures: \"Anglican bishops\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Anglican church interior representing contemporary church controversies\"\n      },\n      {\n        year: 2014,\n        title: \"Church of England Approves Women Bishops\",\n        description: \"Final barrier to women's leadership removed in Anglican Church\",\n        details: \"The Church of England voted to allow women to become bishops, completing the process of gender equality in church leadership begun with women's ordination. The first women bishops were consecrated in 2015, representing the culmination of decades of reform.\",\n        category: \"religion\",\n        importance: 4,\n        keyFigures: \"Women bishops\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Female bishop in cathedral representing women's equality in church leadership\"\n      },\n      {\n        year: 2020,\n        title: \"COVID-19 Transforms Church Practices\",\n        description: \"Pandemic forces digital transformation across all UK churches\",\n        details: \"The COVID-19 pandemic forced churches across all UK regions to rapidly adopt digital technologies, livestreaming services, and virtual pastoral care. This accelerated technological adoption and changed how churches engage with communities, creating new forms of worship and outreach.\",\n        category: \"religion\",\n        importance: 4,\n        keyFigures: \"Church leaders\",\n        timelineTopic: \"church\",\n        eventImage: \"https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?ixlib=rb-4.0.3&auto=format&fit=crop&w=800&h=450\",\n        imageDescription: \"Digital church service representing pandemic transformation of worship\"\n      }\n    ];\n\n    for (const event of timelineData) {\n      await this.createTimelineEvent(event);\n    }\n  }\n\n  // Stripe payment methods\n  async updateUserStripeInfo(userId: string, stripeCustomerId: string, stripeSubscriptionId: string): Promise<User> {\n    const result = await db.update(users)\n      .set({ \n        stripeCustomerId,\n        stripeSubscriptionId,\n        subscriptionStatus: 'active'\n      })\n      .where(eq(users.id, userId))\n      .returning();\n    \n    return result[0];\n  }\n\n  async updateUserSubscription(userId: string, subscriptionType: string, subscriptionStatus: string): Promise<User> {\n    const result = await db.update(users)\n      .set({ \n        subscriptionType,\n        subscriptionStatus\n      })\n      .where(eq(users.id, userId))\n      .returning();\n    \n    return result[0];\n  }\n\n  async updateUserProfile(userId: string, profileData: { firstName?: string; email?: string; username?: string }): Promise<User> {\n    // Check if email or username already exists (excluding current user)\n    if (profileData.email) {\n      const existingUser = await this.getUserByEmail(profileData.email);\n      if (existingUser && existingUser.id !== userId) {\n        throw new Error(\"Email already exists\");\n      }\n    }\n\n    if (profileData.username) {\n      const existingUser = await this.getUserByUsername(profileData.username);\n      if (existingUser && existingUser.id !== userId) {\n        throw new Error(\"Username already exists\");\n      }\n    }\n\n    const result = await db.update(users)\n      .set(profileData)\n      .where(eq(users.id, userId))\n      .returning();\n    \n    if (!result[0]) {\n      throw new Error(\"User not found\");\n    }\n    \n    return result[0];\n  }\n\n  // New timeline initialization methods\n  private async initializePopulationMigrationTimelineIfNeeded() {\n    const existingEvents = await db.select().from(timelineEvents).where(eq(timelineEvents.timelineTopic, 'population-migration'));\n    if (existingEvents.length === 0) {\n      const populationEvents: InsertTimelineEvent[] = [\n        {\n          year: 1066,\n          title: \"Norman Migration to England\",\n          description: \"Norman conquest brings French-speaking population to England. Establishment of Norman aristocracy.\",\n          details: \"The Norman conquest resulted in significant population changes with Norman nobles, knights, and administrators settling in England. This introduced French culture and language, fundamentally changing the demographic makeup of English leadership and aristocracy.\",\n          category: \"Migration\",\n          importance: 4,\n          keyFigures: \"Norman settlers, William the Conqueror\",\n          timelineTopic: \"population-migration\"\n        },\n        {\n          year: 1290,\n          title: \"Expulsion of Jews from England\",\n          description: \"Edward I expels all Jews from England. First major ethnic expulsion in English history.\",\n          details: \"Edward I expelled approximately 16,000 Jews from England in 1290, making England the first European country to do so. This dramatically reduced religious and ethnic diversity and wouldn't be reversed until the 1650s under Oliver Cromwell.\",\n          category: \"Expulsion\",\n          importance: 4,\n          keyFigures: \"Edward I, Jewish communities\",\n          timelineTopic: \"population-migration\"\n        },\n        {\n          year: 1600,\n          title: \"Irish Migration to England\",\n          description: \"Large-scale Irish migration begins due to economic opportunities and religious persecution in Ireland.\",\n          details: \"Significant numbers of Irish people began migrating to England seeking better economic opportunities and fleeing religious discrimination. This established the foundation of large Irish communities in English cities, particularly London, Liverpool, and Manchester.\",\n          category: \"Migration\",\n          importance: 3,\n          keyFigures: \"Irish migrants\",\n          timelineTopic: \"population-migration\"\n        },\n        {\n          year: 1750,\n          title: \"Highland Clearances Migration\",\n          description: \"Scottish Highlanders forced to migrate due to land clearances. Many move to Lowland cities or emigrate overseas.\",\n          details: \"The Highland Clearances forced thousands of Scottish Highlanders from their ancestral lands as landlords converted to sheep farming. Many migrated to industrial cities in Scotland and England, while others emigrated to North America and Australia.\",\n          category: \"Forced Migration\",\n          importance: 4,\n          keyFigures: \"Highland Scottish families\",\n          timelineTopic: \"population-migration\"\n        },\n        {\n          year: 1840,\n          title: \"Great Famine Irish Migration\",\n          description: \"Irish Potato Famine causes massive migration to Britain. Over 1 million Irish people flee starvation.\",\n          details: \"The Irish Potato Famine (1845-1852) caused massive migration to Britain, with over 1 million Irish people fleeing starvation and disease. This created large Irish communities in British cities and significantly changed the demographic composition of urban areas.\",\n          category: \"Refugee Migration\",\n          importance: 5,\n          keyFigures: \"Irish famine refugees\",\n          timelineTopic: \"population-migration\"\n        },\n        {\n          year: 1880,\n          title: \"Eastern European Jewish Immigration\",\n          description: \"Large wave of Jewish immigration from Eastern Europe fleeing pogroms and persecution.\",\n          details: \"Between 1880-1914, approximately 150,000 Jews immigrated to Britain from Eastern Europe, particularly Russia and Poland, fleeing persecution and pogroms. They established communities in London's East End, Leeds, and Manchester, contributing to British cultural and economic life.\",\n          category: \"Refugee Migration\",\n          importance: 4,\n          keyFigures: \"Eastern European Jewish refugees\",\n          timelineTopic: \"population-migration\"\n        },\n        {\n          year: 1948,\n          title: \"Windrush Generation Arrives\",\n          description: \"First large group of Caribbean migrants arrives on the Empire Windrush, beginning post-war Commonwealth migration.\",\n          details: \"The Empire Windrush brought 492 Caribbean migrants to Britain, marking the beginning of large-scale post-war Commonwealth migration. These migrants filled labor shortages in transport, healthcare, and manufacturing, fundamentally changing British society and culture.\",\n          category: \"Commonwealth Migration\",\n          importance: 5,\n          keyFigures: \"Caribbean migrants, Windrush passengers\",\n          timelineTopic: \"population-migration\"\n        },\n        {\n          year: 1960,\n          title: \"South Asian Migration Peak\",\n          description: \"Large-scale migration from India, Pakistan, and Bangladesh following decolonization.\",\n          details: \"The 1960s saw peak migration from the Indian subcontinent as people from India, Pakistan, and Bangladesh moved to Britain for economic opportunities. This created significant South Asian communities, particularly in London, Birmingham, Bradford, and Leicester.\",\n          category: \"Commonwealth Migration\",\n          importance: 4,\n          keyFigures: \"South Asian migrants\",\n          timelineTopic: \"population-migration\"\n        },\n        {\n          year: 1972,\n          title: \"Ugandan Asian Expulsion\",\n          description: \"40,000 Ugandan Asians expelled by Idi Amin arrive in Britain as refugees.\",\n          details: \"Idi Amin's expulsion of Uganda's Asian population brought 40,000 refugees to Britain in 1972. Despite initial challenges, these refugees successfully integrated and made significant contributions to British business, particularly in retail and manufacturing.\",\n          category: \"Refugee Migration\",\n          importance: 4,\n          keyFigures: \"Ugandan Asian refugees, Idi Amin\",\n          timelineTopic: \"population-migration\"\n        },\n        {\n          year: 1990,\n          title: \"Eastern European Migration\",\n          description: \"Fall of communism brings new wave of Eastern European migrants seeking opportunities in democratic Britain.\",\n          details: \"The collapse of communist regimes in Eastern Europe led to increased migration to Britain from countries like Poland, Czech Republic, and Hungary. This migration accelerated after EU enlargement in 2004, bringing significant demographic changes.\",\n          category: \"Economic Migration\",\n          importance: 3,\n          keyFigures: \"Eastern European migrants\",\n          timelineTopic: \"population-migration\"\n        }\n      ];\n\n      for (const event of populationEvents) {\n        await this.createTimelineEvent(event);\n      }\n    }\n  }\n\n  private async initializeSportsAthleticsTimelineIfNeeded() {\n    const existingEvents = await db.select().from(timelineEvents).where(eq(timelineEvents.timelineTopic, 'sports-athletics'));\n    if (existingEvents.length === 0) {\n      const sportsEvents: InsertTimelineEvent[] = [\n        {\n          year: 1863,\n          title: \"Football Association Founded\",\n          description: \"The Football Association established in London, creating standardized rules for football (soccer).\",\n          details: \"The FA was formed at Freeman's Tavern in London, establishing the first standardized rules for football. This led to the development of modern soccer and its spread worldwide, making Britain the birthplace of the world's most popular sport.\",\n          category: \"Football\",\n          importance: 5,\n          keyFigures: \"Ebenezer Cobb Morley, founding members\",\n          timelineTopic: \"sports-athletics\"\n        },\n        {\n          year: 1871,\n          title: \"First FA Cup Final\",\n          description: \"First FA Cup Final held at Kennington Oval. Wanderers defeat Royal Engineers 1-0.\",\n          details: \"The FA Cup became the world's oldest football knockout competition. The first final drew 2,000 spectators and established a tradition that continues today, with the final now held at Wembley Stadium.\",\n          category: \"Football\",\n          importance: 4,\n          keyFigures: \"Wanderers FC, Royal Engineers FC\",\n          timelineTopic: \"sports-athletics\"\n        },\n        {\n          year: 1871,\n          title: \"First International Rugby Match\",\n          description: \"England plays Scotland in the first international rugby match in Edinburgh.\",\n          details: \"Rugby, invented at Rugby School, saw its first international match between England and Scotland in Edinburgh. Scotland won, establishing rugby as a major sport that would spread throughout the British Empire and beyond.\",\n          category: \"Rugby\",\n          importance: 4,\n          keyFigures: \"Players from England and Scotland\",\n          timelineTopic: \"sports-athletics\"\n        },\n        {\n          year: 1877,\n          title: \"First Wimbledon Championship\",\n          description: \"The first Wimbledon tennis championship held at the All England Croquet and Lawn Tennis Club.\",\n          details: \"Wimbledon became the world's oldest tennis tournament, establishing lawn tennis as a major sport. The tournament attracted 22 men in its first year and has grown to become one of sport's most prestigious events.\",\n          category: \"Tennis\",\n          importance: 4,\n          keyFigures: \"Spencer Gore (first champion)\",\n          timelineTopic: \"sports-athletics\"\n        },\n        {\n          year: 1888,\n          title: \"Football League Founded\",\n          description: \"The world's first football league established with 12 founding clubs from the Midlands and North of England.\",\n          details: \"The Football League created the first organized professional football competition, with Preston North End becoming the first champions. This model was copied worldwide and established professional football as we know it today.\",\n          category: \"Football\",\n          importance: 5,\n          keyFigures: \"William McGregor, founding club representatives\",\n          timelineTopic: \"sports-athletics\"\n        },\n        {\n          year: 1900,\n          title: \"British Athletes Dominate Early Olympics\",\n          description: \"British athletes achieve significant success in early modern Olympic Games in Paris.\",\n          details: \"British athletes were highly successful in the early Olympic Games, reflecting the country's role in developing modern sports. British success in athletics, tennis, golf, and other sports demonstrated the nation's sporting prowess.\",\n          category: \"Olympics\",\n          importance: 3,\n          keyFigures: \"British Olympic athletes\",\n          timelineTopic: \"sports-athletics\"\n        },\n        {\n          year: 1930,\n          title: \"Arsenal's Rise to Prominence\",\n          description: \"Arsenal becomes the first southern club to win the Football League, breaking northern dominance.\",\n          details: \"Arsenal's success marked a shift in football power from the industrial north to London, helping establish football as a truly national sport. Their innovative tactics and professional approach influenced football development.\",\n          category: \"Football\",\n          importance: 3,\n          keyFigures: \"Herbert Chapman, Arsenal players\",\n          timelineTopic: \"sports-athletics\"\n        },\n        {\n          year: 1966,\n          title: \"England Wins FIFA World Cup\",\n          description: \"England defeats West Germany 4-2 at Wembley to win their first and only FIFA World Cup.\",\n          details: \"England's World Cup victory was a defining moment in British sport, with Geoff Hurst scoring a hat-trick in the final. The victory united the nation and established football as central to British cultural identity.\",\n          category: \"Football\",\n          importance: 5,\n          keyFigures: \"Bobby Moore, Geoff Hurst, Alf Ramsey\",\n          timelineTopic: \"sports-athletics\"\n        },\n        {\n          year: 1992,\n          title: \"Premier League Founded\",\n          description: \"The FA Premier League established, revolutionizing English football with increased commercialization and global reach.\",\n          details: \"The Premier League transformed English football through massive TV deals and global marketing. It became the world's most-watched football league, attracting international stars and investment while maintaining its position as the world's most competitive league.\",\n          category: \"Football\",\n          importance: 4,\n          keyFigures: \"Premier League founders\",\n          timelineTopic: \"sports-athletics\"\n        },\n        {\n          year: 2012,\n          title: \"London Olympics Success\",\n          description: \"London hosts successful Olympic Games. Team GB achieves third place in medal table with 65 medals.\",\n          details: \"The London Olympics showcased Britain's organizational capabilities and sporting excellence. Team GB's success, including multiple gold medals in cycling, rowing, and athletics, inspired a generation and left a lasting sporting legacy.\",\n          category: \"Olympics\",\n          importance: 4,\n          keyFigures: \"Mo Farah, Bradley Wiggins, Jessica Ennis-Hill\",\n          timelineTopic: \"sports-athletics\"\n        }\n      ];\n\n      for (const event of sportsEvents) {\n        await this.createTimelineEvent(event);\n      }\n    }\n  }\n\n\n\n  private async initializeLiteratureTimelineIfNeeded() {\n    const existingEvents = await db.select().from(timelineEvents).where(eq(timelineEvents.timelineTopic, 'literature'));\n    if (existingEvents.length === 0) {\n      const literatureEvents: InsertTimelineEvent[] = [\n        {\n          year: 700,\n          title: \"Beowulf Composed\",\n          description: \"The epic poem Beowulf, one of the earliest major works of English literature, is composed in Old English.\",\n          details: \"Beowulf represents the earliest major work of English literature, written in Old English (Anglo-Saxon). This epic poem tells the story of a Scandinavian hero and reflects the values and culture of early medieval England, establishing the foundation of English literary tradition.\",\n          category: \"Epic Poetry\",\n          importance: 5,\n          keyFigures: \"Anonymous Anglo-Saxon poets\",\n          timelineTopic: \"literature\"\n        },\n        {\n          year: 1387,\n          title: \"Chaucer Writes Canterbury Tales\",\n          description: \"Geoffrey Chaucer begins writing The Canterbury Tales, establishing Middle English as a literary language.\",\n          details: \"Geoffrey Chaucer's Canterbury Tales marked the emergence of Middle English as a sophisticated literary language. The work's realistic characters and social commentary established Chaucer as the father of English poetry and demonstrated English literature's potential.\",\n          category: \"Medieval Literature\",\n          importance: 5,\n          keyFigures: \"Geoffrey Chaucer\",\n          timelineTopic: \"literature\"\n        },\n        {\n          year: 1590,\n          title: \"Shakespeare's Career Begins\",\n          description: \"William Shakespeare begins his theatrical career in London, eventually writing 39 plays and 154 sonnets.\",\n          details: \"William Shakespeare's career transformed English literature and theatre. His plays and sonnets explore universal themes of love, power, jealousy, and mortality. His works remain central to English-speaking education and continue to be performed worldwide.\",\n          category: \"Elizabethan Literature\",\n          importance: 5,\n          keyFigures: \"William Shakespeare\",\n          timelineTopic: \"literature\"\n        },\n        {\n          year: 1667,\n          title: \"Paradise Lost Published\",\n          description: \"John Milton publishes Paradise Lost, one of the greatest epic poems in English literature.\",\n          details: \"John Milton's Paradise Lost retells the biblical story of the Fall of Man in blank verse. Despite Milton's blindness, he created this monumental work that explores themes of free will, obedience, and rebellion, establishing the epic tradition in English poetry.\",\n          category: \"Epic Poetry\",\n          importance: 4,\n          keyFigures: \"John Milton\",\n          timelineTopic: \"literature\"\n        },\n        {\n          year: 1719,\n          title: \"Robinson Crusoe Published\",\n          description: \"Daniel Defoe publishes Robinson Crusoe, often considered the first English novel.\",\n          details: \"Daniel Defoe's Robinson Crusoe is often cited as the first English novel, establishing the realistic narrative style and psychological depth that would characterize the novel form. The work explores themes of survival, civilization, and human nature.\",\n          category: \"Early Novel\",\n          importance: 4,\n          keyFigures: \"Daniel Defoe\",\n          timelineTopic: \"literature\"\n        },\n        {\n          year: 1813,\n          title: \"Pride and Prejudice Published\",\n          description: \"Jane Austen publishes Pride and Prejudice, establishing the novel of manners and social commentary.\",\n          details: \"Jane Austen's Pride and Prejudice perfected the novel of manners, combining romance with sharp social observation. Austen's wit, character development, and social commentary established her as one of English literature's greatest novelists.\",\n          category: \"Regency Literature\",\n          importance: 4,\n          keyFigures: \"Jane Austen\",\n          timelineTopic: \"literature\"\n        },\n        {\n          year: 1859,\n          title: \"Darwin's Origin of Species\",\n          description: \"Charles Darwin publishes On the Origin of Species, revolutionizing scientific thought and literature.\",\n          details: \"Darwin's Origin of Species transformed not only science but literature, influencing writers' understanding of human nature and society. The work's impact extended beyond science to philosophy, religion, and literary thought.\",\n          category: \"Scientific Literature\",\n          importance: 5,\n          keyFigures: \"Charles Darwin\",\n          timelineTopic: \"literature\"\n        },\n        {\n          year: 1887,\n          title: \"Sherlock Holmes Debuts\",\n          description: \"Arthur Conan Doyle introduces Sherlock Holmes in A Study in Scarlet, creating the detective fiction genre.\",\n          details: \"Arthur Conan Doyle's Sherlock Holmes stories created the modern detective fiction genre. Holmes became one of literature's most famous characters, inspiring countless adaptations and establishing the logical detective as a literary archetype.\",\n          category: \"Detective Fiction\",\n          importance: 4,\n          keyFigures: \"Arthur Conan Doyle\",\n          timelineTopic: \"literature\"\n        },\n        {\n          year: 1922,\n          title: \"Modernist Revolution\",\n          description: \"T.S. Eliot publishes The Waste Land and James Joyce publishes Ulysses, revolutionizing modern literature.\",\n          details: \"1922 marked a revolutionary year for modernist literature with T.S. Eliot's The Waste Land and James Joyce's Ulysses. These experimental works broke traditional literary forms and established new techniques that influenced literature throughout the 20th century.\",\n          category: \"Modernist Literature\",\n          importance: 5,\n          keyFigures: \"T.S. Eliot, James Joyce\",\n          timelineTopic: \"literature\"\n        },\n        {\n          year: 1997,\n          title: \"Harry Potter Published\",\n          description: \"J.K. Rowling publishes Harry Potter and the Philosopher's Stone, creating a global literary phenomenon.\",\n          details: \"J.K. Rowling's Harry Potter series became the best-selling book series in history, reinvigorating children's literature and reading. The series achieved unprecedented global success, spawning films, theme parks, and a lasting cultural impact.\",\n          category: \"Contemporary Literature\",\n          importance: 4,\n          keyFigures: \"J.K. Rowling\",\n          timelineTopic: \"literature\"\n        }\n      ];\n\n      for (const event of literatureEvents) {\n        await this.createTimelineEvent(event);\n      }\n    }\n  }\n\n  private async initializeBritishHolidaysTimelineIfNeeded() {\n    const existingEvents = await db.select().from(timelineEvents).where(eq(timelineEvents.timelineTopic, 'british-holidays'));\n    if (existingEvents.length === 0) {\n      const holidayEvents: InsertTimelineEvent[] = [\n        {\n          year: 1066,\n          title: \"Christmas Traditions Established\",\n          description: \"Norman conquest brings Continental Christmas traditions to Britain, including Christmas feasting and gift-giving.\",\n          details: \"The Norman conquest introduced Continental Christmas traditions that merged with existing Anglo-Saxon customs. Christmas became a major celebration combining religious observance with feasting, gift-giving, and community festivities that continue today.\",\n          category: \"Religious Holiday\",\n          importance: 4,\n          keyFigures: \"Norman nobility, medieval clergy\",\n          timelineTopic: \"british-holidays\"\n        },\n        {\n          year: 1605,\n          title: \"Guy Fawkes Night Established\",\n          description: \"The Gunpowder Plot failure leads to the establishment of Guy Fawkes Night (Bonfire Night) on November 5th.\",\n          details: \"After Guy Fawkes and fellow conspirators attempted to blow up Parliament, November 5th became a national celebration. Bonfire Night involves lighting bonfires, burning Guy Fawkes effigies, and fireworks, commemorating the preservation of Protestant monarchy and Parliament.\",\n          category: \"National Holiday\",\n          importance: 4,\n          keyFigures: \"Guy Fawkes, King James I\",\n          timelineTopic: \"british-holidays\"\n        },\n        {\n          year: 1660,\n          title: \"Oak Apple Day\",\n          description: \"Charles II's escape and restoration leads to Oak Apple Day celebration on May 29th.\",\n          details: \"Oak Apple Day commemorated Charles II's escape from Parliamentary forces by hiding in an oak tree and his eventual restoration to the throne. Though less celebrated now, it was a major holiday celebrating the monarchy's return after the Commonwealth period.\",\n          category: \"Royal Holiday\",\n          importance: 3,\n          keyFigures: \"Charles II\",\n          timelineTopic: \"british-holidays\"\n        },\n        {\n          year: 1707,\n          title: \"Union Day Celebrations\",\n          description: \"Act of Union between England and Scotland creates celebrations of British unity.\",\n          details: \"The political union of England and Scotland was marked by celebrations that emphasized shared British identity. Though not a permanent holiday, these celebrations established precedents for later national commemorations.\",\n          category: \"National Holiday\",\n          importance: 3,\n          keyFigures: \"Queen Anne, Union commissioners\",\n          timelineTopic: \"british-holidays\"\n        },\n        {\n          year: 1838,\n          title: \"Boxing Day Formalized\",\n          description: \"Boxing Day becomes an official holiday, traditionally for giving gifts to servants and the poor.\",\n          details: \"Boxing Day, December 26th, became formalized as a holiday when servants and tradespeople received Christmas boxes from their employers. The tradition evolved into a general day of gift-giving and family visits, remaining a major British holiday.\",\n          category: \"Traditional Holiday\",\n          importance: 4,\n          keyFigures: \"Victorian employers and servants\",\n          timelineTopic: \"british-holidays\"\n        },\n        {\n          year: 1871,\n          title: \"Bank Holidays Act\",\n          description: \"Sir John Lubbock's Bank Holidays Act creates the first official public holidays in Britain.\",\n          details: \"The Bank Holidays Act established Easter Monday, Whit Monday, the first Monday in August, and Boxing Day as official public holidays. These 'St. Lubbock's Days' gave workers guaranteed time off and established the modern British holiday system.\",\n          category: \"Legal Holiday\",\n          importance: 5,\n          keyFigures: \"Sir John Lubbock\",\n          timelineTopic: \"british-holidays\"\n        },\n        {\n          year: 1919,\n          title: \"Remembrance Day Established\",\n          description: \"Armistice Day becomes a national day of remembrance for those who died in World War I.\",\n          details: \"Remembrance Day, observed on November 11th, was established to honor those who died in World War I. The two-minute silence at 11am and poppy wearing traditions became central to British culture, later extended to remember all war dead.\",\n          category: \"Commemoration\",\n          importance: 5,\n          keyFigures: \"World War I veterans, King George V\",\n          timelineTopic: \"british-holidays\"\n        },\n        {\n          year: 1953,\n          title: \"Coronation Day Celebration\",\n          description: \"Queen Elizabeth II's coronation creates nationwide celebration and establishes television's role in national events.\",\n          details: \"Elizabeth II's coronation was the first major royal event broadcast on television, watched by 20 million people. The day became a national celebration with street parties, community events, and the beginning of television as the medium for shared national experiences.\",\n          category: \"Royal Holiday\",\n          importance: 4,\n          keyFigures: \"Queen Elizabeth II\",\n          timelineTopic: \"british-holidays\"\n        },\n        {\n          year: 1977,\n          title: \"Silver Jubilee Celebrations\",\n          description: \"Queen Elizabeth II's Silver Jubilee creates nationwide community celebrations and street parties.\",\n          details: \"The Silver Jubilee saw millions participate in street parties and community celebrations across Britain. The jubilee established the tradition of community-organized royal celebrations and demonstrated the monarchy's role in bringing communities together.\",\n          category: \"Royal Holiday\",\n          importance: 4,\n          keyFigures: \"Queen Elizabeth II, local communities\",\n          timelineTopic: \"british-holidays\"\n        },\n        {\n          year: 1995,\n          title: \"Spring Bank Holiday Moved\",\n          description: \"The late May Bank Holiday is moved to accommodate special occasions like VE Day commemorations.\",\n          details: \"The flexibility of moving bank holidays for special commemorations was demonstrated with VE Day's 50th anniversary. This established the precedent for adjusting holidays to mark significant national anniversaries and royal celebrations.\",\n          category: \"Legal Holiday\",\n          importance: 3,\n          keyFigures: \"Government officials\",\n          timelineTopic: \"british-holidays\"\n        }\n      ];\n\n      for (const event of holidayEvents) {\n        await this.createTimelineEvent(event);\n      }\n    }\n  }\n\n  private async initializeBritishSportsTimelineIfNeeded() {\n    const existingEvents = await db.select().from(timelineEvents).where(eq(timelineEvents.timelineTopic, 'british-sports'));\n    if (existingEvents.length === 0) {\n      const sportsEvents: InsertTimelineEvent[] = [\n        {\n          year: 1823,\n          title: \"Rugby Invented at Rugby School\",\n          description: \"William Webb Ellis allegedly picks up the ball during a football match, inventing rugby.\",\n          details: \"According to legend, William Webb Ellis picked up the ball and ran with it during a football match at Rugby School, creating rugby. Whether true or not, Rugby School codified the rules that became rugby football, spreading throughout the British Empire.\",\n          category: \"Rugby\",\n          importance: 4,\n          keyFigures: \"William Webb Ellis, Rugby School\",\n          timelineTopic: \"british-sports\"\n        },\n        {\n          year: 1860,\n          title: \"The Open Championship First Held\",\n          description: \"The first Open Championship (golf) held at Prestwick Golf Club in Scotland.\",\n          details: \"The Open Championship became golf's oldest major championship, held annually in Britain. This established golf's competitive structure and helped spread the sport globally, with British golf courses remaining among the world's most prestigious.\",\n          category: \"Golf\",\n          importance: 4,\n          keyFigures: \"Willie Park Sr. (first winner)\",\n          timelineTopic: \"british-sports\"\n        },\n        {\n          year: 1872,\n          title: \"First FA Cup Final\",\n          description: \"The first FA Cup Final held at Kennington Oval, establishing football's premier knockout competition.\",\n          details: \"The FA Cup became the world's oldest football knockout competition, with the first final drawing 2,000 spectators. The competition established traditions that continue today, including the final being held at Wembley Stadium.\",\n          category: \"Football\",\n          importance: 5,\n          keyFigures: \"Wanderers FC, Royal Engineers FC\",\n          timelineTopic: \"british-sports\"\n        },\n        {\n          year: 1877,\n          title: \"First Wimbledon Championships\",\n          description: \"The first Wimbledon Lawn Tennis Championships held, establishing tennis's most prestigious tournament.\",\n          details: \"The first Wimbledon Championships attracted 22 men competing for the title. The tournament established traditions including strawberries and cream, the all-white dress code, and grass court tennis that continue to define Wimbledon's unique character.\",\n          category: \"Tennis\",\n          importance: 5,\n          keyFigures: \"Spencer Gore (first champion)\",\n          timelineTopic: \"british-sports\"\n        },\n        {\n          year: 1895,\n          title: \"Rugby League Splits from Union\",\n          description: \"Northern rugby clubs form rugby league, allowing professionalism and creating a new sport.\",\n          details: \"Twenty-two rugby clubs from northern England broke away from rugby union to form rugby league, allowing players to be paid. This created two distinct sports and reflected class divisions in British society, with league popular in working-class areas.\",\n          category: \"Rugby\",\n          importance: 4,\n          keyFigures: \"Northern rugby club representatives\",\n          timelineTopic: \"british-sports\"\n        },\n        {\n          year: 1908,\n          title: \"London Olympics\",\n          description: \"London hosts the 1908 Olympic Games, establishing Britain's role in international sport.\",\n          details: \"The 1908 London Olympics were the first properly organized modern Olympics, establishing standards for future games. British athletes performed excellently, and the games demonstrated Britain's organizational capabilities and sporting culture.\",\n          category: \"Olympics\",\n          importance: 4,\n          keyFigures: \"British Olympic organizers and athletes\",\n          timelineTopic: \"british-sports\"\n        },\n        {\n          year: 1923,\n          title: \"First Wembley Cup Final\",\n          description: \"The first FA Cup Final held at the new Wembley Stadium, establishing it as football's cathedral.\",\n          details: \"The 1923 Cup Final between Bolton and West Ham was the first at new Wembley Stadium. The match, known as the 'White Horse Final' due to crowd control by police on horseback, established Wembley as the home of English football.\",\n          category: \"Football\",\n          importance: 4,\n          keyFigures: \"Bolton Wanderers, West Ham United\",\n          timelineTopic: \"british-sports\"\n        },\n        {\n          year: 1948,\n          title: \"London Olympics Post-War\",\n          description: \"London hosts the first post-World War II Olympics, demonstrating Britain's recovery and sporting spirit.\",\n          details: \"The 1948 London Olympics, known as the 'Austerity Olympics,' were held despite post-war rationing and economic challenges. The games demonstrated British resilience and established London's reputation for successful major sporting events.\",\n          category: \"Olympics\",\n          importance: 4,\n          keyFigures: \"Post-war British Olympic organizers\",\n          timelineTopic: \"british-sports\"\n        },\n        {\n          year: 1966,\n          title: \"England Wins World Cup\",\n          description: \"England defeats West Germany 4-2 at Wembley to win their first and only FIFA World Cup.\",\n          details: \"England's World Cup victory was the pinnacle of British football achievement. Geoff Hurst's hat-trick in the final and Bobby Moore lifting the trophy created lasting memories and established football as central to British national identity.\",\n          category: \"Football\",\n          importance: 5,\n          keyFigures: \"Bobby Moore, Geoff Hurst, Alf Ramsey\",\n          timelineTopic: \"british-sports\"\n        },\n        {\n          year: 2012,\n          title: \"London Olympics Success\",\n          description: \"London successfully hosts the Olympic Games, with Team GB achieving third place in the medal table.\",\n          details: \"The 2012 London Olympics showcased modern Britain's organizational excellence and sporting prowess. Team GB's success, including Mo Farah's double gold and Bradley Wiggins' cycling achievements, inspired a generation and left lasting sporting facilities.\",\n          category: \"Olympics\",\n          importance: 5,\n          keyFigures: \"Mo Farah, Bradley Wiggins, Jessica Ennis-Hill\",\n          timelineTopic: \"british-sports\"\n        }\n      ];\n\n      for (const event of sportsEvents) {\n        await this.createTimelineEvent(event);\n      }\n    }\n  }\n\n  // Admin methods\n  async updateUserRole(userId: string, role: string): Promise<boolean> {\n    const [updatedUser] = await db\n      .update(users)\n      .set({ role })\n      .where(eq(users.id, userId))\n      .returning();\n    \n    return !!updatedUser;\n  }\n\n  async getAllUsers(options?: { page?: number; limit?: number; role?: string }): Promise<User[]> {\n    let query = db.select().from(users);\n    \n    // Apply role filter if provided\n    if (options?.role) {\n      query = query.where(eq(users.role, options.role));\n    }\n    \n    // Apply pagination if provided\n    if (options?.page && options?.limit) {\n      const offset = (options.page - 1) * options.limit;\n      query = query.limit(options.limit).offset(offset);\n    }\n    \n    return await query;\n  }\n\n  async getUserStats(): Promise<{ totalUsers: number; activeUsers: number; adminUsers: number; }> {\n    const allUsers = await db.select().from(users);\n    \n    return {\n      totalUsers: allUsers.length,\n      activeUsers: allUsers.filter(user => \n        user.subscriptionStatus === 'active' || \n        (user.subscriptionStatus !== 'canceled' && user.overallProgress > 0)\n      ).length,\n      adminUsers: allUsers.filter(user => user.role === 'admin' || user.role === 'superadmin').length\n    };\n  }\n\n  async updateUserSuspension(userId: string, suspended: boolean, reason?: string): Promise<boolean> {\n    const [updatedUser] = await db\n      .update(users)\n      .set({ \n        // Add suspended fields if they exist in schema, otherwise skip\n        // For now, we'll track this in audit logs only\n      })\n      .where(eq(users.id, userId))\n      .returning();\n    \n    return !!updatedUser;\n  }\n\n  async getTotalUserCount(): Promise<number> {\n    const result = await db.select().from(users);\n    return result.length;\n  }\n\n  async getActiveUserCount(): Promise<number> {\n    const allUsers = await db.select().from(users);\n    return allUsers.filter(user => \n      user.subscriptionStatus === 'active' || \n      (user.subscriptionStatus !== 'canceled' && user.overallProgress && user.overallProgress > 0)\n    ).length;\n  }\n\n  async getSubscriptionStats(): Promise<{ premium: number; free: number; total: number }> {\n    const allUsers = await db.select().from(users);\n    const premiumUsers = allUsers.filter(user => user.subscriptionType === 'premium').length;\n    const freeUsers = allUsers.filter(user => !user.subscriptionType || user.subscriptionType === 'free').length;\n    \n    return {\n      premium: premiumUsers,\n      free: freeUsers,\n      total: allUsers.length\n    };\n  }\n\n  async getRecentSignups(days: number): Promise<number> {\n    // Calculate the cutoff date\n    const cutoffDate = new Date();\n    cutoffDate.setDate(cutoffDate.getDate() - days);\n    \n    const allUsers = await db.select().from(users);\n    // Since we don't have createdAt in our schema, we'll return 0 for now\n    // In a real app, you'd filter by createdAt field\n    return allUsers.length; // This would be filtered by createdAt >= cutoffDate\n  }\n\n  async createAuditLog(log: { adminId: string; action: string; targetUserId?: string; details?: any; timestamp: Date }): Promise<void> {\n    await db.insert(adminAuditLogs).values({\n      adminUserId: log.adminId,\n      action: log.action,\n      entity: 'user', // Default entity type\n      entityId: log.targetUserId || 'system',\n      before: null,\n      after: log.details ? JSON.stringify(log.details) : null,\n      ip: null\n    });\n  }\n\n  async getAuditLogs(options: { page: number; limit: number }): Promise<AdminAuditLog[]> {\n    const offset = (options.page - 1) * options.limit;\n    \n    const logs = await db.select()\n      .from(adminAuditLogs)\n      .limit(options.limit)\n      .offset(offset);\n    \n    return logs;\n  }\n}\n\nexport const storage = new DatabaseStorage();","size_bytes":207874},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, integer, boolean, jsonb, timestamp } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  firstName: text(\"first_name\").notNull(),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n  email: text(\"email\").notNull().unique(),\n  role: text(\"role\").notNull().default('student'), // 'student' | 'admin' | 'superadmin'\n  overallProgress: integer(\"overall_progress\").notNull().default(0),\n  totalStudyTime: integer(\"total_study_time\").notNull().default(0), // in minutes\n  currentStreak: integer(\"current_streak\").notNull().default(0),\n  stripeCustomerId: text(\"stripe_customer_id\"),\n  stripeSubscriptionId: text(\"stripe_subscription_id\"),\n  subscriptionType: text(\"subscription_type\"), // 'basic', 'group', 'guidance'\n  subscriptionStatus: text(\"subscription_status\"), // 'active', 'canceled', 'past_due'\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const videoModules = pgTable(\"video_modules\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  description: text(\"description\").notNull(),\n  videoUrl: text(\"video_url\").notNull(),\n  duration: integer(\"duration\").notNull(), // in seconds\n  thumbnail: text(\"thumbnail\"),\n  category: text(\"category\").notNull(),\n  orderIndex: integer(\"order_index\").notNull(),\n  detailedContent: text(\"detailed_content\"), // Rich text content about the topic\n  keyImages: jsonb(\"key_images\"), // Array of relevant images with descriptions\n  audioScript: text(\"audio_script\"), // Script for AI voice generation\n});\n\nexport const userVideoProgress = pgTable(\"user_video_progress\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id).notNull(),\n  videoId: varchar(\"video_id\").references(() => videoModules.id).notNull(),\n  completed: boolean(\"completed\").notNull().default(false),\n  watchTime: integer(\"watch_time\").notNull().default(0), // in seconds\n  lastWatched: timestamp(\"last_watched\").defaultNow(),\n});\n\nexport const timelineEvents = pgTable(\"timeline_events\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  year: integer(\"year\").notNull(),\n  title: text(\"title\").notNull(),\n  description: text(\"description\").notNull(),\n  details: text(\"details\"),\n  category: text(\"category\").notNull(), // parliament, documents, voting_rights, territories, trades\n  importance: integer(\"importance\").notNull().default(1), // 1-5 scale\n  keyFigures: text(\"key_figures\"), // Notable personalities involved\n  timelineTopic: text(\"timeline_topic\").notNull(), // Which timeline this belongs to\n  eventImage: text(\"event_image\"), // URL to representative image\n  imageDescription: text(\"image_description\"), // Description of the image\n});\n\nexport const exercises = pgTable(\"exercises\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id).notNull(),\n  content: jsonb(\"content\").notNull(), // AI-generated exercise content\n  topic: text(\"topic\").notNull(),\n  difficulty: integer(\"difficulty\").notNull().default(1), // 1-5 scale\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const exerciseAttempts = pgTable(\"exercise_attempts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id).notNull(),\n  exerciseId: varchar(\"exercise_id\").references(() => exercises.id).notNull(),\n  answers: jsonb(\"answers\").notNull(),\n  score: integer(\"score\").notNull(),\n  totalQuestions: integer(\"total_questions\").notNull(),\n  completedAt: timestamp(\"completed_at\").defaultNow(),\n});\n\nexport const learningModules = pgTable(\"learning_modules\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  description: text(\"description\").notNull(),\n  orderIndex: integer(\"order_index\").notNull(),\n  totalItems: integer(\"total_items\").notNull(),\n});\n\nexport const userModuleProgress = pgTable(\"user_module_progress\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id).notNull(),\n  moduleId: varchar(\"module_id\").references(() => learningModules.id).notNull(),\n  completedItems: integer(\"completed_items\").notNull().default(0),\n  progress: integer(\"progress\").notNull().default(0), // percentage\n});\n\nexport const resources = pgTable(\"resources\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  description: text(\"description\"),\n  fileUrl: text(\"file_url\").notNull(),\n  fileSize: text(\"file_size\").notNull(),\n  fileType: text(\"file_type\").notNull(),\n  category: text(\"category\").notNull(),\n});\n\nexport const practiceTests = pgTable(\"practice_tests\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  description: text(\"description\").notNull(),\n  category: text(\"category\").notNull(),\n  difficulty: integer(\"difficulty\").notNull().default(1), // 1-5 scale\n  questions: jsonb(\"questions\").notNull(), // Array of 24 questions with 4 options each\n  orderIndex: integer(\"order_index\").notNull(),\n});\n\nexport const practiceTestAttempts = pgTable(\"practice_test_attempts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id).notNull(),\n  testId: varchar(\"test_id\").references(() => practiceTests.id).notNull(),\n  answers: jsonb(\"answers\").notNull(), // User's selected answers\n  score: integer(\"score\").notNull(),\n  totalQuestions: integer(\"total_questions\").notNull().default(24),\n  passedTest: boolean(\"passed_test\").notNull(), // true if score >= 18/24 (75%)\n  completedAt: timestamp(\"completed_at\").defaultNow(),\n});\n\nexport const mockTests = pgTable(\"mock_tests\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  description: text(\"description\").notNull(),\n  questions: jsonb(\"questions\").notNull(), // Array of exactly 24 questions with 4 options each\n  orderIndex: integer(\"order_index\").notNull(),\n  difficulty: integer(\"difficulty\").notNull().default(3), // Mock tests are typically medium difficulty\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const mockTestAttempts = pgTable(\"mock_test_attempts\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id).notNull(),\n  mockTestId: varchar(\"mock_test_id\").references(() => mockTests.id).notNull(),\n  answers: jsonb(\"answers\").notNull(), // User's selected answers (array of 24 numbers)\n  score: integer(\"score\").notNull(),\n  totalQuestions: integer(\"total_questions\").notNull().default(24),\n  passedTest: boolean(\"passed_test\").notNull(), // true if score >= 18/24 (75%)\n  timeSpent: integer(\"time_spent\").notNull(), // in seconds (max 2700 = 45 minutes)\n  completedAt: timestamp(\"completed_at\").defaultNow(),\n});\n\nexport const refreshTokens = pgTable(\"refresh_tokens\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  token: text(\"token\").notNull().unique(),\n  userId: varchar(\"user_id\").references(() => users.id).notNull(),\n  expiresAt: timestamp(\"expires_at\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\nexport const adminAuditLogs = pgTable(\"admin_audit_logs\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  adminUserId: varchar(\"admin_user_id\").references(() => users.id).notNull(),\n  action: text(\"action\").notNull(), // 'create', 'update', 'delete'\n  entity: text(\"entity\").notNull(), // 'user', 'practiceTest', 'mockTest', etc.\n  entityId: text(\"entity_id\").notNull(),\n  before: jsonb(\"before\"), // Previous state\n  after: jsonb(\"after\"), // New state\n  ip: text(\"ip\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Insert schemas\nexport const insertUserSchema = createInsertSchema(users).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertVideoModuleSchema = createInsertSchema(videoModules).omit({\n  id: true,\n});\n\nexport const insertUserVideoProgressSchema = createInsertSchema(userVideoProgress).omit({\n  id: true,\n  lastWatched: true,\n});\n\nexport const insertTimelineEventSchema = createInsertSchema(timelineEvents).omit({\n  id: true,\n});\n\nexport const insertExerciseSchema = createInsertSchema(exercises).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertExerciseAttemptSchema = createInsertSchema(exerciseAttempts).omit({\n  id: true,\n  completedAt: true,\n});\n\nexport const insertLearningModuleSchema = createInsertSchema(learningModules).omit({\n  id: true,\n});\n\nexport const insertUserModuleProgressSchema = createInsertSchema(userModuleProgress).omit({\n  id: true,\n});\n\nexport const insertResourceSchema = createInsertSchema(resources).omit({\n  id: true,\n});\n\nexport const insertPracticeTestSchema = createInsertSchema(practiceTests).omit({\n  id: true,\n});\n\nexport const insertPracticeTestAttemptSchema = createInsertSchema(practiceTestAttempts).omit({\n  id: true,\n  completedAt: true,\n});\n\nexport const insertMockTestSchema = createInsertSchema(mockTests).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertMockTestAttemptSchema = createInsertSchema(mockTestAttempts).omit({\n  id: true,\n  completedAt: true,\n});\n\nexport const insertRefreshTokenSchema = createInsertSchema(refreshTokens).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertAdminAuditLogSchema = createInsertSchema(adminAuditLogs).omit({\n  id: true,\n  createdAt: true,\n});\n\n// Authentication schemas\nexport const loginSchema = z.object({\n  email: z.string().email(\"Invalid email address\"),\n  password: z.string().min(1, \"Password is required\"),\n});\n\nexport const registerSchema = z.object({\n  firstName: z.string().min(1, \"First name is required\"),\n  username: z.string().min(3, \"Username must be at least 3 characters\"),\n  email: z.string().email(\"Invalid email address\"),\n  password: z.string().min(6, \"Password must be at least 6 characters\"),\n});\n\n// Types\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n\nexport type InsertRefreshToken = z.infer<typeof insertRefreshTokenSchema>;\nexport type RefreshToken = typeof refreshTokens.$inferSelect;\n\nexport type LoginData = z.infer<typeof loginSchema>;\nexport type RegisterData = z.infer<typeof registerSchema>;\n\nexport type InsertVideoModule = z.infer<typeof insertVideoModuleSchema>;\nexport type VideoModule = typeof videoModules.$inferSelect;\n\n\n\nexport type InsertUserVideoProgress = z.infer<typeof insertUserVideoProgressSchema>;\nexport type UserVideoProgress = typeof userVideoProgress.$inferSelect;\n\nexport type InsertTimelineEvent = z.infer<typeof insertTimelineEventSchema>;\nexport type TimelineEvent = typeof timelineEvents.$inferSelect;\n\nexport type InsertExercise = z.infer<typeof insertExerciseSchema>;\nexport type Exercise = typeof exercises.$inferSelect;\n\nexport type InsertExerciseAttempt = z.infer<typeof insertExerciseAttemptSchema>;\nexport type ExerciseAttempt = typeof exerciseAttempts.$inferSelect;\n\n\n\nexport type InsertLearningModule = z.infer<typeof insertLearningModuleSchema>;\nexport type LearningModule = typeof learningModules.$inferSelect;\n\nexport type InsertUserModuleProgress = z.infer<typeof insertUserModuleProgressSchema>;\nexport type UserModuleProgress = typeof userModuleProgress.$inferSelect;\n\nexport type InsertResource = z.infer<typeof insertResourceSchema>;\nexport type Resource = typeof resources.$inferSelect;\n\nexport type InsertPracticeTest = z.infer<typeof insertPracticeTestSchema>;\nexport type PracticeTest = typeof practiceTests.$inferSelect;\n\nexport type InsertPracticeTestAttempt = z.infer<typeof insertPracticeTestAttemptSchema>;\nexport type PracticeTestAttempt = typeof practiceTestAttempts.$inferSelect;\n\nexport type InsertMockTest = z.infer<typeof insertMockTestSchema>;\nexport type MockTest = typeof mockTests.$inferSelect;\n\nexport type InsertMockTestAttempt = z.infer<typeof insertMockTestAttemptSchema>;\nexport type MockTestAttempt = typeof mockTestAttempts.$inferSelect;\n\nexport type InsertAdminAuditLog = z.infer<typeof insertAdminAuditLogSchema>;\nexport type AdminAuditLog = typeof adminAuditLogs.$inferSelect;\n\n// Role validation schema\nexport const roleSchema = z.enum(['student', 'admin', 'superadmin']);\n","size_bytes":12546},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { AuthProvider } from \"@/contexts/AuthContext\";\nimport { ThemeProvider } from \"@/contexts/ThemeContext\";\nimport ProtectedRoute from \"@/components/ProtectedRoute\";\nimport NotFound from \"@/pages/not-found\";\nimport Dashboard from \"@/pages/dashboard\";\nimport LandingPage from \"@/pages/LandingPage\";\nimport GamesPage from \"@/pages/games\";\nimport PracticeTestsPage from \"@/pages/practice-tests\";\nimport PracticeTestPage from \"@/pages/practice-test\";\nimport MockTestsPage from \"@/pages/mock-tests\";\nimport MockTestPage from \"@/pages/mock-test\";\nimport TimelinePage from \"@/pages/timeline\";\nimport TimelineTestPage from \"@/pages/timeline-test\";\nimport DiagramsPage from \"@/pages/diagrams\";\nimport VideoUploadPage from \"@/pages/video-upload\";\nimport InteractiveMapPage from \"@/pages/interactive-map\";\nimport PaymentPage from \"@/pages/payment\";\nimport PaymentSuccessPage from \"@/pages/payment-success\";\nimport ProfilePage from \"@/pages/profile\";\nimport ChatBotPage from \"@/pages/chatbot\";\nimport LoginPage from \"@/pages/LoginPage\";\nimport RegisterPage from \"@/pages/RegisterPage\";\nimport AdminLoginPage from \"@/pages/AdminLoginPage\";\nimport AdminRoute from \"@/components/AdminRoute\";\nimport AdminDashboard from \"@/pages/admin/AdminDashboard\";\nimport AdminUsers from \"@/pages/admin/AdminUsers\";\nimport AdminAuditLogs from \"@/pages/admin/AdminAuditLogs\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { Loader2 } from \"lucide-react\";\n\n// Component for public routes (landing page)\nfunction PublicRoute({ children }: { children: React.ReactNode }) {\n  const { isAuthenticated, isLoading } = useAuth();\n  const [, setLocation] = useLocation();\n\n  useEffect(() => {\n    if (!isLoading && isAuthenticated) {\n      setLocation(\"/dashboard\");\n    }\n  }, [isAuthenticated, isLoading, setLocation]);\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900\">\n        <div className=\"flex flex-col items-center space-y-4\">\n          <Loader2 className=\"w-8 h-8 animate-spin text-blue-600\" />\n          <p className=\"text-gray-600 dark:text-gray-400\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (isAuthenticated) {\n    return null; // Will be redirected by useEffect\n  }\n\n  return <>{children}</>;\n}\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/login\" component={LoginPage} />\n      <Route path=\"/register\" component={RegisterPage} />\n      <Route path=\"/admin/login\" component={AdminLoginPage} />\n      <Route path=\"/\">\n        <PublicRoute>\n          <LandingPage />\n        </PublicRoute>\n      </Route>\n      <Route path=\"/dashboard\">\n        <ProtectedRoute>\n          <Dashboard />\n        </ProtectedRoute>\n      </Route>\n      <Route path=\"/games\">\n        <ProtectedRoute>\n          <GamesPage />\n        </ProtectedRoute>\n      </Route>\n      <Route path=\"/practice-tests\">\n        <ProtectedRoute>\n          <PracticeTestsPage />\n        </ProtectedRoute>\n      </Route>\n      <Route path=\"/practice-test/:id\">\n        <ProtectedRoute>\n          <PracticeTestPage />\n        </ProtectedRoute>\n      </Route>\n      <Route path=\"/mock-tests\">\n        <ProtectedRoute>\n          <MockTestsPage />\n        </ProtectedRoute>\n      </Route>\n      <Route path=\"/mock-test/:id\">\n        <ProtectedRoute>\n          <MockTestPage />\n        </ProtectedRoute>\n      </Route>\n      <Route path=\"/timeline\">\n        <ProtectedRoute>\n          <TimelinePage />\n        </ProtectedRoute>\n      </Route>\n      <Route path=\"/timeline-test/:topicId\">\n        <ProtectedRoute>\n          <TimelineTestPage />\n        </ProtectedRoute>\n      </Route>\n      <Route path=\"/diagrams\">\n        <ProtectedRoute>\n          <DiagramsPage />\n        </ProtectedRoute>\n      </Route>\n      <Route path=\"/video-upload\">\n        <ProtectedRoute requireRole=\"admin\">\n          <VideoUploadPage />\n        </ProtectedRoute>\n      </Route>\n      <Route path=\"/interactive-map\">\n        <ProtectedRoute>\n          <InteractiveMapPage />\n        </ProtectedRoute>\n      </Route>\n      <Route path=\"/payment\">\n        <ProtectedRoute>\n          <PaymentPage />\n        </ProtectedRoute>\n      </Route>\n      <Route path=\"/payment-success\">\n        <ProtectedRoute>\n          <PaymentSuccessPage />\n        </ProtectedRoute>\n      </Route>\n      <Route path=\"/profile\">\n        <ProtectedRoute>\n          <ProfilePage />\n        </ProtectedRoute>\n      </Route>\n      <Route path=\"/chatbot\">\n        <ProtectedRoute>\n          <ChatBotPage />\n        </ProtectedRoute>\n      </Route>\n      <Route path=\"/admin/dashboard\">\n        <AdminRoute>\n          <AdminDashboard />\n        </AdminRoute>\n      </Route>\n      <Route path=\"/admin/users\">\n        <AdminRoute>\n          <AdminUsers />\n        </AdminRoute>\n      </Route>\n      <Route path=\"/admin/audit-logs\">\n        <AdminRoute>\n          <AdminAuditLogs />\n        </AdminRoute>\n      </Route>\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider>\n        <AuthProvider>\n          <TooltipProvider>\n            <Toaster />\n            <Router />\n          </TooltipProvider>\n        </AuthProvider>\n      </ThemeProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":5646},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(20, 14.3%, 4.1%);\n  --muted: hsl(60, 4.8%, 95.9%);\n  --muted-foreground: hsl(25, 5.3%, 44.7%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(20, 14.3%, 4.1%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(20, 14.3%, 4.1%);\n  --border: hsl(20, 5.9%, 90%);\n  --input: hsl(20, 5.9%, 90%);\n  --primary: hsl(207, 90%, 54%);\n  --primary-foreground: hsl(211, 100%, 99%);\n  --secondary: hsl(60, 4.8%, 95.9%);\n  --secondary-foreground: hsl(24, 9.8%, 10%);\n  --accent: hsl(60, 4.8%, 95.9%);\n  --accent-foreground: hsl(24, 9.8%, 10%);\n  --destructive: hsl(0, 84.2%, 60.2%);\n  --destructive-foreground: hsl(60, 9.1%, 97.8%);\n  --ring: hsl(20, 14.3%, 4.1%);\n  --radius: 0.5rem;\n  \n  /* UK-themed colors */\n  --uk-blue: hsl(225, 73%, 57%);\n  --uk-red: hsl(0, 73%, 50%);\n  --royal-purple: hsl(258, 73%, 57%);\n  --success: hsl(142, 76%, 43%);\n  --warning: hsl(41, 96%, 48%);\n}\n\n.dark {\n  --background: hsl(240, 10%, 3.9%);\n  --foreground: hsl(0, 0%, 98%);\n  --muted: hsl(240, 3.7%, 15.9%);\n  --muted-foreground: hsl(240, 5%, 64.9%);\n  --popover: hsl(240, 10%, 3.9%);\n  --popover-foreground: hsl(0, 0%, 98%);\n  --card: hsl(240, 10%, 3.9%);\n  --card-foreground: hsl(0, 0%, 98%);\n  --border: hsl(240, 3.7%, 15.9%);\n  --input: hsl(240, 3.7%, 15.9%);\n  --primary: hsl(207, 90%, 54%);\n  --primary-foreground: hsl(211, 100%, 99%);\n  --secondary: hsl(240, 3.7%, 15.9%);\n  --secondary-foreground: hsl(0, 0%, 98%);\n  --accent: hsl(240, 3.7%, 15.9%);\n  --accent-foreground: hsl(0, 0%, 98%);\n  --destructive: hsl(0, 62.8%, 30.6%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --ring: hsl(240, 4.9%, 83.9%);\n  --radius: 0.5rem;\n  \n  /* UK-themed colors for dark mode */\n  --uk-blue: hsl(225, 73%, 57%);\n  --uk-red: hsl(0, 73%, 50%);\n  --royal-purple: hsl(258, 73%, 57%);\n  --success: hsl(142, 76%, 43%);\n  --warning: hsl(41, 96%, 48%);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n@layer utilities {\n  .uk-blue {\n    color: var(--uk-blue);\n  }\n  .bg-uk-blue {\n    background-color: var(--uk-blue);\n  }\n  .uk-red {\n    color: var(--uk-red);\n  }\n  .bg-uk-red {\n    background-color: var(--uk-red);\n  }\n  .royal-purple {\n    color: var(--royal-purple);\n  }\n  .bg-royal-purple {\n    background-color: var(--royal-purple);\n  }\n  .success {\n    color: var(--success);\n  }\n  .bg-success {\n    background-color: var(--success);\n  }\n  .warning {\n    color: var(--warning);\n  }\n  .bg-warning {\n    background-color: var(--warning);\n  }\n\n  /* Flip card animations */\n  .flip-card {\n    perspective: 1000px;\n  }\n\n  .transform-style-preserve-3d {\n    transform-style: preserve-3d;\n  }\n\n  .backface-hidden {\n    backface-visibility: hidden;\n  }\n\n  .rotate-y-180 {\n    transform: rotateY(180deg);\n  }\n}\n","size_bytes":2892},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"server/services/mock-test-generator.ts":{"content":"import { MockTest, InsertMockTest } from \"@shared/schema\";\nimport { storage } from \"../storage\";\n\ninterface MockQuestion {\n  id: number;\n  question: string;\n  options: [string, string, string, string];\n  correctAnswer: number;\n  explanation: string;\n  category: string;\n}\n\n// Comprehensive question bank for Life in UK mock tests\nconst MOCK_QUESTION_BANK: MockQuestion[] = [\n  // British History\n  {\n    id: 1,\n    question: \"When did the Norman Conquest take place?\",\n    options: [\"1066\", \"1076\", \"1056\", \"1086\"],\n    correctAnswer: 0,\n    explanation: \"The Norman Conquest occurred in 1066 when William the Conqueror defeated Harold II at the Battle of Hastings.\",\n    category: \"British History\"\n  },\n  {\n    id: 2,\n    question: \"Who was the first Prime Minister of the United Kingdom?\",\n    options: [\"Winston Churchill\", \"Robert Walpole\", \"Benjamin Disraeli\", \"William Pitt\"],\n    correctAnswer: 1,\n    explanation: \"Sir Robert Walpole is generally considered the first Prime Minister, serving from 1721 to 1742.\",\n    category: \"British History\"\n  },\n  {\n    id: 3,\n    question: \"Which battle ended Napoleon's rule in 1815?\",\n    options: [\"Battle of Trafalgar\", \"Battle of Waterloo\", \"Battle of Hastings\", \"Battle of Agincourt\"],\n    correctAnswer: 1,\n    explanation: \"The Battle of Waterloo in 1815 ended Napoleon's rule and established British naval supremacy.\",\n    category: \"British History\"\n  },\n  {\n    id: 4,\n    question: \"When did women get the right to vote in the UK?\",\n    options: [\"1918\", \"1920\", \"1928\", \"1935\"],\n    correctAnswer: 0,\n    explanation: \"Women over 30 gained the right to vote in 1918, and all women over 21 in 1928.\",\n    category: \"British History\"\n  },\n  {\n    id: 5,\n    question: \"Which monarch was executed during the English Civil War?\",\n    options: [\"Charles I\", \"Charles II\", \"James I\", \"Henry VIII\"],\n    correctAnswer: 0,\n    explanation: \"Charles I was executed in 1649 during the English Civil War, leading to the Commonwealth period.\",\n    category: \"British History\"\n  },\n\n  // Government & Politics\n  {\n    id: 6,\n    question: \"How often must a General Election be held in the UK?\",\n    options: [\"Every 3 years\", \"Every 4 years\", \"Every 5 years\", \"Every 6 years\"],\n    correctAnswer: 2,\n    explanation: \"A General Election must be held at least every 5 years in the UK.\",\n    category: \"Government & Politics\"\n  },\n  {\n    id: 7,\n    question: \"Who is the head of state in the UK?\",\n    options: [\"Prime Minister\", \"The Monarch\", \"Speaker of the House\", \"Lord Chancellor\"],\n    correctAnswer: 1,\n    explanation: \"The Monarch is the head of state, while the Prime Minister is the head of government.\",\n    category: \"Government & Politics\"\n  },\n  {\n    id: 8,\n    question: \"What is the upper house of Parliament called?\",\n    options: [\"House of Commons\", \"House of Lords\", \"House of Representatives\", \"Senate\"],\n    correctAnswer: 1,\n    explanation: \"The House of Lords is the upper house of Parliament, with the House of Commons being the lower house.\",\n    category: \"Government & Politics\"\n  },\n  {\n    id: 9,\n    question: \"At what age can you vote in UK general elections?\",\n    options: [\"16\", \"17\", \"18\", \"21\"],\n    correctAnswer: 2,\n    explanation: \"You must be 18 or over to vote in UK general elections.\",\n    category: \"Government & Politics\"\n  },\n  {\n    id: 10,\n    question: \"Which party forms the government?\",\n    options: [\"The party with the most seats\", \"The party with the most votes\", \"The oldest party\", \"The party chosen by the Queen\"],\n    correctAnswer: 0,\n    explanation: \"The party with the most seats in the House of Commons forms the government.\",\n    category: \"Government & Politics\"\n  },\n\n  // Geography & Culture\n  {\n    id: 11,\n    question: \"What is the capital of Scotland?\",\n    options: [\"Glasgow\", \"Aberdeen\", \"Edinburgh\", \"Dundee\"],\n    correctAnswer: 2,\n    explanation: \"Edinburgh is the capital city of Scotland.\",\n    category: \"Geography & Culture\"\n  },\n  {\n    id: 12,\n    question: \"Which sport was invented in England?\",\n    options: [\"Basketball\", \"Football (Soccer)\", \"Tennis\", \"Baseball\"],\n    correctAnswer: 1,\n    explanation: \"Football (soccer) was invented in England in the 19th century.\",\n    category: \"Geography & Culture\"\n  },\n  {\n    id: 13,\n    question: \"What is the longest river in the UK?\",\n    options: [\"River Thames\", \"River Severn\", \"River Trent\", \"River Mersey\"],\n    correctAnswer: 1,\n    explanation: \"The River Severn is the longest river in the UK at 220 miles (354 km).\",\n    category: \"Geography & Culture\"\n  },\n  {\n    id: 14,\n    question: \"Which university is the oldest in the English-speaking world?\",\n    options: [\"Cambridge\", \"Oxford\", \"Harvard\", \"Trinity College Dublin\"],\n    correctAnswer: 1,\n    explanation: \"The University of Oxford, founded around 1096, is the oldest university in the English-speaking world.\",\n    category: \"Geography & Culture\"\n  },\n  {\n    id: 15,\n    question: \"What is the patron saint of England?\",\n    options: [\"St. Patrick\", \"St. Andrew\", \"St. David\", \"St. George\"],\n    correctAnswer: 3,\n    explanation: \"St. George is the patron saint of England, celebrated on April 23rd.\",\n    category: \"Geography & Culture\"\n  },\n\n  // Laws & Society\n  {\n    id: 16,\n    question: \"What is the minimum age for buying alcohol in the UK?\",\n    options: [\"16\", \"17\", \"18\", \"21\"],\n    correctAnswer: 2,\n    explanation: \"The minimum age for buying alcohol in the UK is 18 years old.\",\n    category: \"Laws & Society\"\n  },\n  {\n    id: 17,\n    question: \"Which courts deal with minor criminal cases in England and Wales?\",\n    options: [\"Crown Courts\", \"Magistrates' Courts\", \"High Court\", \"County Courts\"],\n    correctAnswer: 1,\n    explanation: \"Magistrates' Courts deal with minor criminal cases in England and Wales.\",\n    category: \"Laws & Society\"\n  },\n  {\n    id: 18,\n    question: \"What is the emergency telephone number in the UK?\",\n    options: [\"911\", \"999\", \"112\", \"Both 999 and 112\"],\n    correctAnswer: 3,\n    explanation: \"Both 999 and 112 work as emergency numbers in the UK.\",\n    category: \"Laws & Society\"\n  },\n  {\n    id: 19,\n    question: \"When do children in England have to start school?\",\n    options: [\"Age 4\", \"Age 5\", \"Age 6\", \"Age 7\"],\n    correctAnswer: 1,\n    explanation: \"Children in England must start school by the age of 5.\",\n    category: \"Laws & Society\"\n  },\n  {\n    id: 20,\n    question: \"What is the National Health Service (NHS)?\",\n    options: [\"Private healthcare\", \"Insurance system\", \"Free healthcare system\", \"Emergency services only\"],\n    correctAnswer: 2,\n    explanation: \"The NHS provides free healthcare to all UK residents, funded by taxation.\",\n    category: \"Laws & Society\"\n  },\n\n  // Additional questions to reach 100+ total\n  {\n    id: 21,\n    question: \"When did the Second World War end?\",\n    options: [\"1944\", \"1945\", \"1946\", \"1947\"],\n    correctAnswer: 1,\n    explanation: \"World War II ended in 1945 with the defeat of Germany and Japan.\",\n    category: \"British History\"\n  },\n  {\n    id: 22,\n    question: \"What is the currency of the UK?\",\n    options: [\"Euro\", \"Dollar\", \"Pound Sterling\", \"Franc\"],\n    correctAnswer: 2,\n    explanation: \"The currency of the UK is the Pound Sterling (£).\",\n    category: \"Geography & Culture\"\n  },\n  {\n    id: 23,\n    question: \"Which document established principles of law in 1215?\",\n    options: [\"Magna Carta\", \"Bill of Rights\", \"Common Law\", \"Constitution\"],\n    correctAnswer: 0,\n    explanation: \"The Magna Carta, signed in 1215, established important principles of law and governance.\",\n    category: \"British History\"\n  },\n  {\n    id: 24,\n    question: \"What is the official residence of the Prime Minister?\",\n    options: [\"Buckingham Palace\", \"10 Downing Street\", \"Westminster Palace\", \"Whitehall\"],\n    correctAnswer: 1,\n    explanation: \"10 Downing Street is the official residence of the British Prime Minister.\",\n    category: \"Government & Politics\"\n  },\n  {\n    id: 25,\n    question: \"Which country is NOT part of the UK?\",\n    options: [\"Northern Ireland\", \"Wales\", \"Republic of Ireland\", \"Scotland\"],\n    correctAnswer: 2,\n    explanation: \"The Republic of Ireland is not part of the UK; it's an independent country.\",\n    category: \"Geography & Culture\"\n  },\n  {\n    id: 26,\n    question: \"When was the Act of Union between England and Scotland?\",\n    options: [\"1603\", \"1707\", \"1745\", \"1800\"],\n    correctAnswer: 1,\n    explanation: \"The Act of Union in 1707 united England and Scotland to form Great Britain.\",\n    category: \"British History\"\n  },\n  {\n    id: 27,\n    question: \"What is the age of criminal responsibility in England and Wales?\",\n    options: [\"8\", \"10\", \"12\", \"14\"],\n    correctAnswer: 1,\n    explanation: \"The age of criminal responsibility in England and Wales is 10 years old.\",\n    category: \"Laws & Society\"\n  },\n  {\n    id: 28,\n    question: \"Which sport is Wimbledon famous for?\",\n    options: [\"Football\", \"Cricket\", \"Tennis\", \"Rugby\"],\n    correctAnswer: 2,\n    explanation: \"Wimbledon is famous for tennis, hosting the oldest tennis tournament in the world.\",\n    category: \"Geography & Culture\"\n  },\n  {\n    id: 29,\n    question: \"What is the House of Commons?\",\n    options: [\"Upper house of Parliament\", \"Lower house of Parliament\", \"Local government\", \"Court system\"],\n    correctAnswer: 1,\n    explanation: \"The House of Commons is the lower house of Parliament where MPs represent constituencies.\",\n    category: \"Government & Politics\"\n  },\n  {\n    id: 30,\n    question: \"When did the UK join the European Union?\",\n    options: [\"1957\", \"1973\", \"1979\", \"1985\"],\n    correctAnswer: 1,\n    explanation: \"The UK joined the European Economic Community (later EU) in 1973.\",\n    category: \"British History\"\n  }\n];\n\n// Extend the question bank to have 100+ questions\nconst EXTENDED_QUESTION_BANK: MockQuestion[] = [\n  ...MOCK_QUESTION_BANK,\n  // Add more questions following the same pattern...\n  // For brevity, I'll add a few more examples\n  {\n    id: 31,\n    question: \"What is the population of the UK approximately?\",\n    options: [\"55 million\", \"67 million\", \"72 million\", \"80 million\"],\n    correctAnswer: 1,\n    explanation: \"The UK has a population of approximately 67 million people.\",\n    category: \"Geography & Culture\"\n  },\n  {\n    id: 32,\n    question: \"Which language is spoken by the most people in Wales?\",\n    options: [\"Welsh\", \"English\", \"Gaelic\", \"Irish\"],\n    correctAnswer: 1,\n    explanation: \"While Welsh is an official language, English is spoken by the most people in Wales.\",\n    category: \"Geography & Culture\"\n  },\n  // Continue adding questions up to 100+...\n];\n\nexport class MockTestGenerator {\n  private static instance: MockTestGenerator;\n  private questionBank: MockQuestion[] = EXTENDED_QUESTION_BANK;\n\n  private constructor() {}\n\n  public static getInstance(): MockTestGenerator {\n    if (!MockTestGenerator.instance) {\n      MockTestGenerator.instance = new MockTestGenerator();\n    }\n    return MockTestGenerator.instance;\n  }\n\n  // Generate a mock test with exactly 24 questions\n  public generateMockTest(title: string, orderIndex: number): InsertMockTest {\n    const shuffledQuestions = this.shuffleArray([...this.questionBank]);\n    const selectedQuestions = shuffledQuestions.slice(0, 24);\n\n    // Ensure good distribution across categories\n    const categories = ['British History', 'Government & Politics', 'Geography & Culture', 'Laws & Society'];\n    const questionsPerCategory = 6; // 24 / 4 = 6 questions per category\n    \n    const balancedQuestions: MockQuestion[] = [];\n    \n    categories.forEach(category => {\n      const categoryQuestions = shuffledQuestions.filter(q => q.category === category);\n      balancedQuestions.push(...categoryQuestions.slice(0, questionsPerCategory));\n    });\n\n    // If we don't have enough questions in a category, fill with others\n    while (balancedQuestions.length < 24) {\n      const remaining = shuffledQuestions.filter(q => !balancedQuestions.includes(q));\n      if (remaining.length > 0) {\n        balancedQuestions.push(remaining[0]);\n      } else {\n        break;\n      }\n    }\n\n    const finalQuestions = this.shuffleArray(balancedQuestions.slice(0, 24));\n\n    return {\n      title,\n      description: `A comprehensive mock test with 24 questions covering British History, Government & Politics, Geography & Culture, and Laws & Society. Complete within 45 minutes to simulate real exam conditions.`,\n      questions: finalQuestions,\n      orderIndex,\n      difficulty: 3 // Medium difficulty for mock tests\n    };\n  }\n\n  // Generate 50 mock tests for the database\n  public generateMockTestSuite(): InsertMockTest[] {\n    const mockTests: InsertMockTest[] = [];\n    \n    for (let i = 1; i <= 50; i++) {\n      const test = this.generateMockTest(`Life in UK Mock Test ${i}`, i);\n      mockTests.push(test);\n    }\n\n    return mockTests;\n  }\n\n  private shuffleArray<T>(array: T[]): T[] {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  }\n\n  // Initialize mock tests in the database\n  public async initializeMockTests(): Promise<void> {\n    try {\n      const existingTests = await storage.getMockTests();\n      \n      if (existingTests.length === 0) {\n        console.log(\"Initializing mock tests...\");\n        const mockTestSuite = this.generateMockTestSuite();\n        \n        for (const test of mockTestSuite) {\n          await storage.createMockTest(test);\n        }\n        \n        console.log(`Initialized ${mockTestSuite.length} mock tests`);\n      }\n    } catch (error) {\n      console.error(\"Error initializing mock tests:\", error);\n    }\n  }\n}\n\nexport const mockTestGenerator = MockTestGenerator.getInstance();","size_bytes":13812},"server/services/openai.ts":{"content":"import OpenAI from \"openai\";\n\n// the newest OpenAI model is \"gpt-4o\" which was released May 13, 2024. do not change this unless explicitly requested by the user\nconst openai = new OpenAI({ \n  apiKey: process.env.OPENAI_API_KEY || process.env.OPENAI_API_KEY_ENV_VAR || \"default_key\"\n});\n\nexport interface ExerciseContent {\n  topic: string;\n  text: string;\n}\n\nexport async function generateExercise(topic: string, difficulty: number = 1): Promise<ExerciseContent> {\n  try {\n    // Authentic Life in UK test content from official study guide\n    const lifeInUKFacts = `\n    OFFICIAL LIFE IN UK TEST FACTS (from lifeintheuktests.co.uk study guide):\n    \n    FUNDAMENTAL VALUES & PRINCIPLES:\n    British society founded on fundamental values: Democracy, Rule of law, Individual liberty, Tolerance of different faiths and beliefs, Participation in community life.\n    New citizens pledge: \"I will give my loyalty to the United Kingdom and respect its rights and freedoms. I will uphold its democratic values. I will observe its laws faithfully and fulfil my duties and obligations as a British citizen.\"\n    Responsibilities: respect and obey the law, respect rights of others, treat others with fairness, look after yourself and your family, look after the area in which you live and the environment.\n    Rights offered: freedom of belief and religion, freedom of speech, freedom from unfair discrimination, right to a fair trial, right to join in election of a government.\n    \n    UK STRUCTURE & GEOGRAPHY:\n    UK made up of England, Scotland, Wales and Northern Ireland. Rest of Ireland is independent country.\n    Official name: United Kingdom of Great Britain and Northern Ireland.\n    'Great Britain' refers only to England, Scotland and Wales, not Northern Ireland.\n    Crown dependencies: Channel Islands and Isle of Man (own governments, not part of UK).\n    British overseas territories: St Helena, Falkland Islands (linked to UK but not part of it).\n    Governed by parliament sitting in Westminster. Scotland, Wales and Northern Ireland have own parliaments/assemblies with devolved powers.\n    \n    CAPITAL CITIES:\n    UK capital: London\n    Scotland capital: Edinburgh  \n    Wales capital: Cardiff\n    Northern Ireland capital: Belfast\n    \n    MAJOR CITIES:\n    England: London, Birmingham, Liverpool, Leeds, Sheffield, Bristol, Manchester, Bradford, Newcastle Upon Tyne, Plymouth, Southampton, Norwich\n    Wales: Cardiff, Swansea, Newport\n    Scotland: Edinburgh, Glasgow, Dundee, Aberdeen\n    Northern Ireland: Belfast\n    \n    CURRENCY:\n    Pound sterling (symbol £). 100 pence in a pound.\n    Coins: 1p, 2p, 5p, 10p, 20p, 50p, £1, £2\n    Notes: £5, £10, £20, £50\n    Northern Ireland and Scotland have own banknotes, valid everywhere in UK but shops don't have to accept them.\n    \n    POPULATION GROWTH:\n    1600: Just over 4 million\n    1700: 5 million  \n    1801: 8 million\n    1851: 20 million\n    1901: 40 million\n    1951: 50 million\n    1998: 57 million\n    2005: Just under 60 million\n    2010: Just over 62 million\n    Nearly 10% of population has parent or grandparent born outside UK.\n    England consistently 84% of total population, Wales around 5%, Scotland just over 8%, Northern Ireland less than 3%.\n    \n    LANGUAGES:\n    English has many accents and dialects across UK.\n    Wales: Many people speak Welsh, taught in schools and universities.\n    Scotland: Gaelic spoken in some parts of Highlands and Islands.\n    Northern Ireland: Some people speak Irish Gaelic.\n    \n    EARLY BRITISH HISTORY:\n    Stone Age: First people were hunter-gatherers. Britain connected to continent by land bridge. First farmers arrived 6,000 years ago from south-east Europe.\n    Stonehenge: Stone Age monument in Wiltshire, probably gathering place for seasonal ceremonies.\n    Skara Brae: Best preserved prehistoric village in northern Europe, on Orkney off north coast of Scotland.\n    Bronze Age (4,000 years ago): People made bronze, lived in roundhouses, buried dead in round barrows.\n    Iron Age: Made weapons and tools from iron, lived in roundhouses in larger settlements, defended hill forts. Maiden Castle in Dorset is impressive hill fort.\n    Celtic language family spoken, related languages still spoken in Wales, Scotland, Ireland.\n    First coins minted in Britain, some inscribed with Iron Age kings' names.\n    \n    ROMANS IN BRITAIN:\n    Julius Caesar led unsuccessful Roman invasion 55 BC.\n    AD 43: Emperor Claudius led successful Roman invasion.\n    Boudicca: Queen of Iceni in eastern England, fought against Romans. Statue on Westminster Bridge in London.\n    Areas of Scotland never conquered by Romans.\n    Hadrian's Wall: Built by Emperor Hadrian in north England to keep out Picts (Scottish ancestors). Forts include Housesteads and Vindolanda. UNESCO World Heritage Site.\n    Romans remained 400 years. Built roads, public buildings, created law structure, introduced new plants and animals.\n    3rd and 4th centuries AD: First Christian communities appeared in Britain.\n    \n    ANGLO-SAXONS:\n    AD 410: Roman army left Britain, never returned.\n    Invaded by Jutes, Angles, and Saxons from northern Europe.\n    Their languages basis of modern English.\n    By AD 600: Anglo-Saxon kingdoms established in Britain, mainly in England.\n    Sutton Hoo in Suffolk: Burial place of Anglo-Saxon king with treasure and armour in ship under earth mound.\n    West Britain (Wales) and Scotland remained free of Anglo-Saxon rule.\n    Not Christians initially. Missionaries came to preach Christianity.\n    St Patrick: Patron saint of Ireland. St Columba: Founded monastery on Iona island off Scotland.\n    St Augustine: Led missionaries from Rome, spread Christianity in south, became first Archbishop of Canterbury.\n    \n    VIKINGS:\n    Came from Denmark and Norway. First visited AD 789 to raid coastal towns.\n    Stayed and formed communities in east England and Scotland.\n    King Alfred the Great united Anglo-Saxon kingdoms and defeated Vikings.\n    Many Vikings stayed in Britain, especially east and north England in area called Danelaw.\n    Place names like Grimsby and Scunthorpe come from Viking languages.\n    Viking settlers mixed with local communities, some converted to Christianity.\n    Danish kings ruled briefly: first was Cnut (also called Canute).\n    In north, Viking threat encouraged people to unite under King Kenneth MacAlpin. Term Scotland began to be used.\n    \n    NORMAN CONQUEST:\n    1066: William, Duke of Normandy, defeated Harold (Saxon king) at Battle of Hastings. Harold killed in battle.\n    William became king of England, known as William the Conqueror.\n    Battle commemorated in Bayeux Tapestry, still seen in France today.\n    Last successful foreign invasion of England.\n    Led to changes in government and social structures.\n    Norman French influenced development of English language.\n    Normans conquered Wales initially but Welsh gradually won territory back.\n    Scots and Normans fought on border; Normans took some border land but didn't invade Scotland.\n    Domesday Book: William sent people across England to list towns, villages, people, land ownership, animals. Still exists today.\n    \n    EQUAL SOCIETY:\n    Legal requirement: no discrimination against men and women because of gender or marital status.\n    Equal rights to work, own property, marry and divorce.\n    Both parents equally responsible for children.\n    Women make up about half workforce.\n    Girls leave school with better qualifications than boys.\n    More women than men study at university.\n    Women work in all sectors, more in high-level positions than ever.\n    Men work in more varied jobs than past.\n    No longer expected women stay home and not work.\n    Both partners often work and share childcare and household responsibilities.\n    `;\n\n    const prompt = `Using ONLY authentic facts from the official Life in UK test handbook, generate an educational text passage about \"${topic}\". \n    Create a flowing, informative paragraph that reads naturally with 8-12 multiple choice questions embedded directly within the text using inline format.\n    Each choice should use the format {correct_answer|option2|option3|option4} where the FIRST option is always the correct answer.\n    Difficulty level: ${difficulty}/5 (1=basic, 5=advanced)\n    \n    ${lifeInUKFacts}\n    \n    CRITICAL: Use ONLY the authentic facts from the official Life in UK study guide provided above. Create educational passages like:\n    \"The Norman Conquest occurred in {1066|1065|1067|1070} when William, Duke of {Normandy|Brittany|Anjou|Maine}, defeated Harold at the Battle of {Hastings|Stamford Bridge|Bannockburn|Agincourt}. This was the {last|first|second|third} successful foreign invasion of England...\"\n    \n    IMPORTANT: Maximize the number of inline choices throughout the text using ONLY verified facts. Include choices for:\n    - Exact historical dates (AD 43, AD 410, AD 789, 1066, etc.)\n    - Real historical figures (Julius Caesar, Boudicca, William the Conqueror, King Alfred, etc.)\n    - Actual places and landmarks (Stonehenge, Skara Brae, Hadrian's Wall, Sutton Hoo, etc.)\n    - Government structure and values (Democracy, Rule of law, Individual liberty, etc.)\n    - Population statistics from official data (4 million in 1600, 8 million in 1801, 84% England, etc.)\n    - Currency information (pound sterling, 100 pence, £1 and £2 coins, etc.)\n    - Capital cities (London, Edinburgh, Cardiff, Belfast)\n    - Languages (English, Welsh, Gaelic, Celtic language family)\n    \n    Create natural flowing text that educates students about Life in UK topics while testing their knowledge.\n    \n    Return the response in this exact JSON format:\n    {\n      \"topic\": \"${topic}\",\n      \"text\": \"A natural, educational paragraph using authentic Life in UK facts with many inline multiple choice using {correct|wrong1|wrong2|wrong3} format throughout the text that flows well and reads naturally\"\n    }`;\n\n    const response = await openai.chat.completions.create({\n      model: \"gpt-4o\",\n      messages: [\n        {\n          role: \"system\",\n          content: \"You are an expert in the official Life in UK test handbook from lifeintheuktests.co.uk study guide. Generate ONLY authentic content using verified facts, exact dates, real names, and accurate information that appears in the official test materials. Never invent, approximate, or use unverified information.\"\n        },\n        {\n          role: \"user\",\n          content: prompt\n        }\n      ],\n      response_format: { type: \"json_object\" },\n      temperature: 0.7\n    });\n\n    const result = JSON.parse(response.choices[0].message.content!);\n    \n    // Validate the response structure\n    if (!result.topic || !result.text) {\n      throw new Error(\"Invalid response format from OpenAI\");\n    }\n\n    // Ensure the text contains inline choices\n    const inlineChoiceRegex = /\\{([^}]+)\\}/g;\n    const matches = result.text.match(inlineChoiceRegex);\n    if (!matches || matches.length === 0) {\n      throw new Error(\"Generated text must contain inline multiple choice options using {option1|option2|option3|option4} format\");\n    }\n\n    return result as ExerciseContent;\n  } catch (error) {\n    console.error(\"Error generating exercise:\", error);\n    throw new Error(\"Failed to generate exercise: \" + (error as Error).message);\n  }\n}\n\nexport async function generateExerciseVariation(originalExercise: ExerciseContent): Promise<ExerciseContent> {\n  try {\n    // Use same authentic Life in UK facts from official study guide\n    const lifeInUKFacts = `\n    OFFICIAL LIFE IN UK TEST FACTS (from lifeintheuktests.co.uk study guide):\n    \n    FUNDAMENTAL VALUES: Democracy, Rule of law, Individual liberty, Tolerance of different faiths and beliefs, Participation in community life.\n    \n    UK STRUCTURE: UK made up of England, Scotland, Wales and Northern Ireland. Official name: United Kingdom of Great Britain and Northern Ireland.\n    Capital cities: London (UK), Edinburgh (Scotland), Cardiff (Wales), Belfast (Northern Ireland).\n    Population distribution: England 84%, Scotland just over 8%, Wales around 5%, Northern Ireland less than 3%.\n    \n    EARLY HISTORY:\n    Stone Age: First farmers arrived 6,000 years ago. Stonehenge in Wiltshire. Skara Brae on Orkney.\n    Bronze Age: 4,000 years ago, people made bronze, lived in roundhouses.\n    Iron Age: Made iron weapons, lived in hill forts like Maiden Castle in Dorset.\n    Romans: Julius Caesar invaded 55 BC (unsuccessful). Claudius successful invasion AD 43. Boudicca fought Romans. Hadrian's Wall built. Romans left AD 410.\n    Anglo-Saxons: Jutes, Angles, Saxons invaded after Romans left. By AD 600 established kingdoms. Sutton Hoo burial site in Suffolk.\n    Vikings: First came AD 789 from Denmark and Norway. King Alfred the Great defeated them. Danelaw area in east England.\n    Norman Conquest: 1066 Battle of Hastings, William the Conqueror defeated Harold. Commemorated in Bayeux Tapestry. Domesday Book created.\n    \n    CURRENCY: Pound sterling (£). 100 pence in pound. Coins: 1p, 2p, 5p, 10p, 20p, 50p, £1, £2. Notes: £5, £10, £20, £50.\n    \n    LANGUAGES: English with many accents and dialects. Welsh spoken in Wales. Gaelic in parts of Scotland Highlands and Islands. Irish Gaelic in Northern Ireland.\n    \n    EQUAL SOCIETY: No discrimination by gender or marital status. Equal rights to work, own property, marry, divorce. Women make up half workforce. More women than men study at university.\n    `;\n\n    const prompt = `Based on this existing Life in UK test exercise, create a completely new variation using different authentic facts:\n\n    Original topic: ${originalExercise.topic}\n    \n    ${lifeInUKFacts}\n    \n    CRITICAL: Use ONLY authentic facts from the official Life in UK test handbook provided above. Create a completely new text passage about the same topic category but with different authentic facts, examples, and structure.\n    Generate 8-12 new inline multiple choice questions that test real Life in UK knowledge.\n    Each choice should use the format {correct_answer|option2|option3|option4} where the FIRST option is always the correct answer.\n    This variation should test different authentic facts within the same topic area.\n    \n    IMPORTANT: Maximize the number of inline choices throughout the text. Use only real dates, names, places, numbers, and facts from the authentic content provided.\n    \n    Return the response in this exact JSON format:\n    {\n      \"topic\": \"${originalExercise.topic}\",\n      \"text\": \"A completely new paragraph using different authentic Life in UK facts with many inline multiple choice using {correct|wrong1|wrong2|wrong3} format\"\n    }`;\n\n    const response = await openai.chat.completions.create({\n      model: \"gpt-4o\",\n      messages: [\n        {\n          role: \"system\",\n          content: \"You are an expert in the official Life in UK test handbook from lifeintheuktests.co.uk study guide. Create ONLY authentic variations using verified facts from the official test materials. Never invent dates, names, or information.\"\n        },\n        {\n          role: \"user\",\n          content: prompt\n        }\n      ],\n      response_format: { type: \"json_object\" },\n      temperature: 0.8\n    });\n\n    const result = JSON.parse(response.choices[0].message.content!);\n    \n    if (!result.topic || !result.text) {\n      throw new Error(\"Invalid response format from OpenAI\");\n    }\n\n    // Ensure the text contains inline choices\n    const inlineChoiceRegex = /\\{([^}]+)\\}/g;\n    const matches = result.text.match(inlineChoiceRegex);\n    if (!matches || matches.length === 0) {\n      throw new Error(\"Generated text must contain inline multiple choice options using {option1|option2|option3|option4} format\");\n    }\n\n    return result as ExerciseContent;\n  } catch (error) {\n    console.error(\"Error generating exercise variation:\", error);\n    throw new Error(\"Failed to generate exercise variation: \" + (error as Error).message);\n  }\n}\n","size_bytes":16008},"server/services/practice-test-generator.ts":{"content":"import OpenAI from \"openai\";\n\nconst openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });\n\ninterface Question {\n  id: number;\n  question: string;\n  options: [string, string, string, string];\n  correctAnswer: number;\n  explanation: string;\n  category: string;\n}\n\ninterface GenerateTestRequest {\n  testId: string;\n  difficulty: number;\n  category: string;\n  title: string;\n}\n\nexport async function generatePracticeTestQuestions(request: GenerateTestRequest): Promise<Question[]> {\n  const { testId, difficulty, category, title } = request;\n\n  const difficultyMap: Record<number, string> = {\n    1: \"beginner level with basic facts\",\n    2: \"easy level with straightforward questions\", \n    3: \"medium level with moderate complexity\",\n    4: \"hard level with detailed knowledge required\",\n    5: \"expert level with complex scenarios and nuanced understanding\"\n  };\n\n  const topicDistribution = [\n    { topic: \"British History\", count: 6 },\n    { topic: \"Government & Politics\", count: 6 }, \n    { topic: \"Geography & Culture\", count: 6 },\n    { topic: \"Laws & Society\", count: 6 }\n  ];\n\n  const questions: Question[] = [];\n  let questionId = 1;\n\n  // Use testId as seed for unique question selection\n  const testSeed = parseInt(testId.replace(/\\D/g, '').slice(0, 8), 10) || 1;\n\n  for (const { topic, count } of topicDistribution) {\n    const topicQuestions = await generateTopicQuestions(topic, count, difficulty, difficultyMap[difficulty], testSeed);\n    \n    topicQuestions.forEach(q => {\n      questions.push({\n        id: questionId++,\n        ...q\n      });\n    });\n  }\n\n  return questions;\n}\n\nasync function generateTopicQuestions(topic: string, count: number, difficulty: number, difficultyLevel: string, testSeed: number = 1): Promise<Omit<Question, 'id'>[]> {\n  const prompt = `Generate ${count} multiple choice questions for the Life in UK test on the topic \"${topic}\" at ${difficultyLevel}.\n\nRequirements:\n- Each question must have exactly 4 options (A, B, C, D)\n- Include authentic UK facts, dates, places, and cultural references\n- Questions should test real knowledge required for UK citizenship\n- Provide clear explanations for correct answers\n- Focus on practical knowledge citizens need\n\nTopics to cover for ${topic}:\n${getTopicGuidelines(topic)}\n\nReturn ONLY a JSON array with this exact structure:\n[\n  {\n    \"question\": \"Question text here?\",\n    \"options\": [\"Option A\", \"Option B\", \"Option C\", \"Option D\"],\n    \"correctAnswer\": 0,\n    \"explanation\": \"Explanation of why this answer is correct\",\n    \"category\": \"${topic}\"\n  }\n]\n\nGenerate exactly ${count} questions. Ensure variety in question types and difficulty appropriate for level ${difficulty}.`;\n\n  try {\n    const response = await openai.chat.completions.create({\n      model: \"gpt-4o\", // the newest OpenAI model is \"gpt-4o\" which was released May 13, 2024. do not change this unless explicitly requested by the user\n      messages: [\n        {\n          role: \"system\",\n          content: \"You are an expert on UK citizenship test preparation. Generate authentic, accurate questions based on official Life in UK test materials. Always respond with valid JSON only.\"\n        },\n        {\n          role: \"user\", \n          content: prompt\n        }\n      ],\n      response_format: { type: \"json_object\" } as any,\n      temperature: 0.7,\n      max_tokens: 2000\n    });\n\n    const content = response.choices[0].message.content;\n    if (!content) {\n      throw new Error(\"No content received from OpenAI\");\n    }\n\n    // Parse the response - it might be wrapped in an object\n    let parsedResponse;\n    try {\n      parsedResponse = JSON.parse(content);\n      \n      // If the response is wrapped in an object, extract the array\n      if (Array.isArray(parsedResponse)) {\n        return parsedResponse;\n      } else if (parsedResponse.questions && Array.isArray(parsedResponse.questions)) {\n        return parsedResponse.questions;\n      } else {\n        // Try to find any array in the response\n        const values = Object.values(parsedResponse);\n        const arrayValue = values.find(v => Array.isArray(v));\n        if (arrayValue) {\n          return arrayValue as any[];\n        }\n      }\n    } catch (parseError) {\n      console.error(\"JSON parse error:\", parseError);\n      throw new Error(\"Invalid JSON response from OpenAI\");\n    }\n\n    throw new Error(\"Could not extract questions array from OpenAI response\");\n\n  } catch (error) {\n    console.log(`Using fallback questions for ${topic} (${(error as Error).message})`);\n    \n    // Fallback to static questions if OpenAI fails\n    return await generateFallbackQuestions(topic, count, difficulty, testSeed);\n  }\n}\n\nfunction getTopicGuidelines(topic: string): string {\n  switch (topic) {\n    case \"British History\":\n      return `- Key historical events (Norman Conquest 1066, English Civil War, WWII, etc.)\n- Important monarchs and prime ministers\n- Major wars and battles\n- Industrial Revolution and social changes\n- Formation of the United Kingdom`;\n      \n    case \"Government & Politics\":\n      return `- Parliamentary system and democratic processes\n- House of Commons and House of Lords\n- Role of the monarch as head of state\n- Electoral system and voting rights\n- Local government and devolution`;\n      \n    case \"Geography & Culture\":\n      return `- Four nations: England, Scotland, Wales, Northern Ireland\n- Major cities, rivers, and geographical features\n- Cultural traditions and festivals\n- Sports and national symbols\n- Languages and regional identities`;\n      \n    case \"Laws & Society\":\n      return `- Fundamental British values and principles\n- Legal system and rule of law\n- Rights and responsibilities of citizens\n- Community participation and volunteering\n- Social welfare and public services`;\n      \n    default:\n      return \"General Life in UK knowledge covering history, government, geography, and culture\";\n  }\n}\n\nasync function generateFallbackQuestions(topic: string, count: number, difficulty: number, testSeed: number = 1): Promise<Omit<Question, 'id'>[]> {\n  // Expanded static fallback questions organized by topic\n  const fallbackQuestions: Record<string, Omit<Question, 'id'>[]> = {\n    \"British History\": [\n      {\n        question: \"When did the Norman Conquest take place?\",\n        options: [\"1066\", \"1086\", \"1046\", \"1076\"],\n        correctAnswer: 0,\n        explanation: \"The Norman Conquest occurred in 1066 when William the Conqueror defeated King Harold at the Battle of Hastings.\",\n        category: \"British History\"\n      },\n      {\n        question: \"Who was the first Prime Minister of the UK?\",\n        options: [\"Winston Churchill\", \"Robert Walpole\", \"Benjamin Disraeli\", \"William Pitt\"],\n        correctAnswer: 1,\n        explanation: \"Sir Robert Walpole is generally considered the first Prime Minister, serving from 1721 to 1742.\",\n        category: \"British History\"\n      },\n      {\n        question: \"In which year did World War II end?\",\n        options: [\"1944\", \"1945\", \"1946\", \"1947\"],\n        correctAnswer: 1,\n        explanation: \"World War II ended in 1945 with the surrender of Japan in September.\",\n        category: \"British History\"\n      },\n      {\n        question: \"Who was the British Prime Minister during most of World War II?\",\n        options: [\"Neville Chamberlain\", \"Winston Churchill\", \"Clement Attlee\", \"Anthony Eden\"],\n        correctAnswer: 1,\n        explanation: \"Winston Churchill was Prime Minister from 1940-1945 during most of World War II.\",\n        category: \"British History\"\n      },\n      {\n        question: \"When did the English Civil War take place?\",\n        options: [\"1639-1651\", \"1642-1651\", \"1640-1660\", \"1645-1655\"],\n        correctAnswer: 1,\n        explanation: \"The English Civil War was fought between 1642 and 1651, ending with Parliament's victory.\",\n        category: \"British History\"\n      },\n      {\n        question: \"What major event happened in 1588?\",\n        options: [\"Great Fire of London\", \"Spanish Armada defeated\", \"Plague outbreak\", \"Shakespeare's birth\"],\n        correctAnswer: 1,\n        explanation: \"The Spanish Armada was defeated by the English fleet in 1588, marking England's rise as a naval power.\",\n        category: \"British History\"\n      }\n    ],\n    \"Government & Politics\": [\n      {\n        question: \"How often are general elections held in the UK?\",\n        options: [\"Every 3 years\", \"Every 4 years\", \"Every 5 years\", \"Every 6 years\"],\n        correctAnswer: 2,\n        explanation: \"UK general elections are held every 5 years, though they can be called earlier.\",\n        category: \"Government & Politics\"\n      },\n      {\n        question: \"What is the upper house of Parliament called?\",\n        options: [\"House of Commons\", \"House of Lords\", \"Senate\", \"Assembly\"],\n        correctAnswer: 1,\n        explanation: \"The House of Lords is the upper house of the UK Parliament.\",\n        category: \"Government & Politics\"\n      },\n      {\n        question: \"Who is the head of state in the UK?\",\n        options: [\"Prime Minister\", \"President\", \"The Monarch\", \"Speaker of the House\"],\n        correctAnswer: 2,\n        explanation: \"The Monarch is the head of state in the UK, while the Prime Minister is the head of government.\",\n        category: \"Government & Politics\"\n      },\n      {\n        question: \"How many MPs are there in the House of Commons?\",\n        options: [\"600\", \"650\", \"700\", \"750\"],\n        correctAnswer: 1,\n        explanation: \"There are 650 Members of Parliament (MPs) in the House of Commons.\",\n        category: \"Government & Politics\"\n      },\n      {\n        question: \"What is the role of the House of Lords?\",\n        options: [\"Make laws\", \"Review and revise legislation\", \"Control taxes\", \"Appoint ministers\"],\n        correctAnswer: 1,\n        explanation: \"The House of Lords reviews and can revise legislation passed by the House of Commons.\",\n        category: \"Government & Politics\"\n      },\n      {\n        question: \"When can someone vote in UK elections?\",\n        options: [\"Age 16\", \"Age 17\", \"Age 18\", \"Age 21\"],\n        correctAnswer: 2,\n        explanation: \"Citizens can vote in UK elections from age 18, and must be registered to vote.\",\n        category: \"Government & Politics\"\n      }\n    ],\n    \"Geography & Culture\": [\n      {\n        question: \"What is the highest mountain in the UK?\",\n        options: [\"Snowdon\", \"Scafell Pike\", \"Ben Nevis\", \"Helvellyn\"],\n        correctAnswer: 2,\n        explanation: \"Ben Nevis in Scotland is the highest mountain in the UK at 1,345 meters.\",\n        category: \"Geography & Culture\"\n      },\n      {\n        question: \"Which river flows through London?\",\n        options: [\"River Severn\", \"River Thames\", \"River Trent\", \"River Mersey\"],\n        correctAnswer: 1,\n        explanation: \"The River Thames flows through London and is the longest river entirely in England.\",\n        category: \"Geography & Culture\"\n      },\n      {\n        question: \"What are the four nations of the UK?\",\n        options: [\"England, Scotland, Wales, Ireland\", \"England, Scotland, Wales, Northern Ireland\", \"England, Scotland, Ireland, Cornwall\", \"England, Wales, Scotland, Britain\"],\n        correctAnswer: 1,\n        explanation: \"The UK consists of England, Scotland, Wales, and Northern Ireland.\",\n        category: \"Geography & Culture\"\n      },\n      {\n        question: \"What is the national flower of England?\",\n        options: [\"Daffodil\", \"Thistle\", \"Rose\", \"Shamrock\"],\n        correctAnswer: 2,\n        explanation: \"The rose is the national flower of England, specifically the Tudor rose.\",\n        category: \"Geography & Culture\"\n      },\n      {\n        question: \"Which sport was invented in England?\",\n        options: [\"Basketball\", \"Football (Soccer)\", \"Baseball\", \"Hockey\"],\n        correctAnswer: 1,\n        explanation: \"Football (soccer) was invented in England in the 19th century.\",\n        category: \"Geography & Culture\"\n      },\n      {\n        question: \"What is the capital of Scotland?\",\n        options: [\"Glasgow\", \"Aberdeen\", \"Edinburgh\", \"Dundee\"],\n        correctAnswer: 2,\n        explanation: \"Edinburgh is the capital city of Scotland and home to the Scottish Parliament.\",\n        category: \"Geography & Culture\"\n      }\n    ],\n    \"Laws & Society\": [\n      {\n        question: \"What is the minimum voting age in the UK?\",\n        options: [\"16\", \"17\", \"18\", \"21\"],\n        correctAnswer: 2,\n        explanation: \"The minimum voting age in the UK is 18 years old.\",\n        category: \"Laws & Society\"\n      },\n      {\n        question: \"What is the emergency telephone number in the UK?\",\n        options: [\"911\", \"999\", \"112\", \"000\"],\n        correctAnswer: 1,\n        explanation: \"999 is the main emergency number in the UK, though 112 also works.\",\n        category: \"Laws & Society\"\n      },\n      {\n        question: \"What is the legal drinking age in the UK?\",\n        options: [\"16\", \"17\", \"18\", \"21\"],\n        correctAnswer: 2,\n        explanation: \"The legal drinking age in the UK is 18 years old.\",\n        category: \"Laws & Society\"\n      },\n      {\n        question: \"Which court deals with serious criminal cases?\",\n        options: [\"Magistrates' Court\", \"Crown Court\", \"County Court\", \"High Court\"],\n        correctAnswer: 1,\n        explanation: \"The Crown Court deals with serious criminal cases and appeals from Magistrates' Courts.\",\n        category: \"Laws & Society\"\n      },\n      {\n        question: \"What is the National Health Service (NHS)?\",\n        options: [\"Private healthcare\", \"Free healthcare system\", \"Insurance company\", \"Medical university\"],\n        correctAnswer: 1,\n        explanation: \"The NHS provides free healthcare to UK residents, funded through taxation.\",\n        category: \"Laws & Society\"\n      },\n      {\n        question: \"What must you do if you are involved in a road traffic accident?\",\n        options: [\"Drive away quickly\", \"Stop and exchange details\", \"Call a lawyer\", \"Wait for police only\"],\n        correctAnswer: 1,\n        explanation: \"You must stop and exchange insurance and contact details with other parties involved.\",\n        category: \"Laws & Society\"\n      }\n    ]\n  };\n\n  // Import the comprehensive question bank\n  const { getUniqueQuestionsForTest } = await import('./question-bank');\n  return getUniqueQuestionsForTest(topic, count, testSeed) as Omit<Question, 'id'>[];\n}","size_bytes":14352},"server/services/practice-tests.ts":{"content":"import type { InsertPracticeTest } from \"@shared/schema\";\n\ninterface Question {\n  id: number;\n  question: string;\n  options: [string, string, string, string];\n  correctAnswer: number; // 0-3 index\n  explanation: string;\n  category: string;\n}\n\n// Generate 45 different practice test templates (questions will be generated dynamically)\nexport function generatePracticeTests(): InsertPracticeTest[] {\n  const tests: InsertPracticeTest[] = [];\n\n  // Categories and their question pools\n  const questionPools = {\n    history: [\n      {\n        question: \"When did the Norman Conquest take place?\",\n        options: [\"1066\", \"1086\", \"1046\", \"1076\"],\n        correctAnswer: 0,\n        explanation: \"The Norman Conquest occurred in 1066 when William the Conqueror defeated King Harold at the Battle of Hastings.\",\n        category: \"History\"\n      },\n      {\n        question: \"Who was the first Prime Minister of the UK?\",\n        options: [\"Winston Churchill\", \"Robert Walpole\", \"Benjamin Disraeli\", \"William Pitt\"],\n        correctAnswer: 1,\n        explanation: \"Sir Robert Walpole is generally considered the first Prime Minister, serving from 1721 to 1742.\",\n        category: \"History\"\n      },\n      {\n        question: \"When did the English Civil War begin?\",\n        options: [\"1639\", \"1642\", \"1645\", \"1649\"],\n        correctAnswer: 1,\n        explanation: \"The English Civil War began in 1642 between supporters of King Charles I and Parliament.\",\n        category: \"History\"\n      },\n      {\n        question: \"In which year did the Great Fire of London occur?\",\n        options: [\"1665\", \"1666\", \"1667\", \"1668\"],\n        correctAnswer: 1,\n        explanation: \"The Great Fire of London occurred in 1666, destroying much of medieval London.\",\n        category: \"History\"\n      },\n      {\n        question: \"When did women over 30 first get the vote in the UK?\",\n        options: [\"1918\", \"1928\", \"1920\", \"1925\"],\n        correctAnswer: 0,\n        explanation: \"Women over 30 got the vote in 1918, with all women over 21 getting the vote in 1928.\",\n        category: \"History\"\n      },\n      {\n        question: \"Who was known as the 'Iron Lady'?\",\n        options: [\"Queen Victoria\", \"Margaret Thatcher\", \"Elizabeth I\", \"Theresa May\"],\n        correctAnswer: 1,\n        explanation: \"Margaret Thatcher was known as the 'Iron Lady' and served as Prime Minister from 1979-1990.\",\n        category: \"History\"\n      }\n    ],\n    government: [\n      {\n        question: \"How often are general elections held in the UK?\",\n        options: [\"Every 3 years\", \"Every 4 years\", \"Every 5 years\", \"Every 6 years\"],\n        correctAnswer: 2,\n        explanation: \"UK general elections are held every 5 years, though they can be called earlier.\",\n        category: \"Government\"\n      },\n      {\n        question: \"What is the upper house of Parliament called?\",\n        options: [\"House of Commons\", \"House of Lords\", \"Senate\", \"Assembly\"],\n        correctAnswer: 1,\n        explanation: \"The House of Lords is the upper house of the UK Parliament.\",\n        category: \"Government\"\n      },\n      {\n        question: \"Who appoints the Prime Minister?\",\n        options: [\"The people\", \"Parliament\", \"The monarch\", \"The Cabinet\"],\n        correctAnswer: 2,\n        explanation: \"The monarch appoints the Prime Minister, usually the leader of the largest party in the Commons.\",\n        category: \"Government\"\n      },\n      {\n        question: \"How many MPs are there in the House of Commons?\",\n        options: [\"600\", \"625\", \"650\", \"675\"],\n        correctAnswer: 2,\n        explanation: \"There are 650 Members of Parliament (MPs) in the House of Commons.\",\n        category: \"Government\"\n      },\n      {\n        question: \"What is the minimum voting age in the UK?\",\n        options: [\"16\", \"17\", \"18\", \"21\"],\n        correctAnswer: 2,\n        explanation: \"The minimum voting age in the UK is 18 years old.\",\n        category: \"Government\"\n      },\n      {\n        question: \"Which system is used for general elections in the UK?\",\n        options: [\"Proportional representation\", \"First past the post\", \"Alternative vote\", \"Single transferable vote\"],\n        correctAnswer: 1,\n        explanation: \"The UK uses the 'first past the post' system for general elections.\",\n        category: \"Government\"\n      }\n    ],\n    geography: [\n      {\n        question: \"What is the highest mountain in the UK?\",\n        options: [\"Snowdon\", \"Scafell Pike\", \"Ben Nevis\", \"Helvellyn\"],\n        correctAnswer: 2,\n        explanation: \"Ben Nevis in Scotland is the highest mountain in the UK at 1,345 meters.\",\n        category: \"Geography\"\n      },\n      {\n        question: \"Which river flows through London?\",\n        options: [\"River Severn\", \"River Thames\", \"River Mersey\", \"River Tyne\"],\n        correctAnswer: 1,\n        explanation: \"The River Thames flows through London and is the longest river entirely in England.\",\n        category: \"Geography\"\n      },\n      {\n        question: \"What is the capital of Wales?\",\n        options: [\"Swansea\", \"Newport\", \"Cardiff\", \"Wrexham\"],\n        correctAnswer: 2,\n        explanation: \"Cardiff is the capital city of Wales.\",\n        category: \"Geography\"\n      },\n      {\n        question: \"Which country is NOT part of Great Britain?\",\n        options: [\"England\", \"Scotland\", \"Wales\", \"Northern Ireland\"],\n        correctAnswer: 3,\n        explanation: \"Great Britain consists of England, Scotland, and Wales. Northern Ireland is part of the UK but not Great Britain.\",\n        category: \"Geography\"\n      },\n      {\n        question: \"What is the longest river in the UK?\",\n        options: [\"River Thames\", \"River Severn\", \"River Trent\", \"River Wye\"],\n        correctAnswer: 1,\n        explanation: \"The River Severn is the longest river in the UK at 220 miles (354 km).\",\n        category: \"Geography\"\n      },\n      {\n        question: \"Which city is known as the 'Granite City'?\",\n        options: [\"Edinburgh\", \"Glasgow\", \"Aberdeen\", \"Dundee\"],\n        correctAnswer: 2,\n        explanation: \"Aberdeen is known as the 'Granite City' due to its many buildings made from local granite.\",\n        category: \"Geography\"\n      }\n    ],\n    culture: [\n      {\n        question: \"When is St. George's Day celebrated?\",\n        options: [\"April 21st\", \"April 22nd\", \"April 23rd\", \"April 24th\"],\n        correctAnswer: 2,\n        explanation: \"St. George's Day, the patron saint day of England, is celebrated on April 23rd.\",\n        category: \"Culture\"\n      },\n      {\n        question: \"What is the national flower of Scotland?\",\n        options: [\"Rose\", \"Daffodil\", \"Thistle\", \"Shamrock\"],\n        correctAnswer: 2,\n        explanation: \"The thistle is the national flower of Scotland.\",\n        category: \"Culture\"\n      },\n      {\n        question: \"Which sport was invented in England?\",\n        options: [\"Basketball\", \"Football (Soccer)\", \"Tennis\", \"Golf\"],\n        correctAnswer: 1,\n        explanation: \"Football (soccer) was invented in England in the 19th century.\",\n        category: \"Culture\"\n      },\n      {\n        question: \"What is a traditional Sunday meal in Britain?\",\n        options: [\"Fish and chips\", \"Bangers and mash\", \"Sunday roast\", \"Shepherd's pie\"],\n        correctAnswer: 2,\n        explanation: \"Sunday roast (roast beef, Yorkshire pudding, vegetables) is a traditional British Sunday meal.\",\n        category: \"Culture\"\n      },\n      {\n        question: \"Which festival is celebrated on November 5th?\",\n        options: [\"Halloween\", \"Bonfire Night\", \"All Saints' Day\", \"Remembrance Day\"],\n        correctAnswer: 1,\n        explanation: \"Bonfire Night (Guy Fawkes Night) is celebrated on November 5th.\",\n        category: \"Culture\"\n      },\n      {\n        question: \"What does 'Boxing Day' commemorate?\",\n        options: [\"Boxing matches\", \"Gift giving to servants\", \"Boxing up Christmas decorations\", \"St. Stephen's Day\"],\n        correctAnswer: 1,\n        explanation: \"Boxing Day traditionally involved giving gifts to servants and tradespeople.\",\n        category: \"Culture\"\n      }\n    ]\n  };\n\n  // Generate 45 tests with different combinations\n  for (let i = 1; i <= 45; i++) {\n    const questions: Question[] = [];\n    let questionId = 1;\n\n    // Distribute questions across categories (6 from each category = 24 total)\n    const categoriesPerTest = [\n      { category: 'history', count: 6 },\n      { category: 'government', count: 6 },\n      { category: 'geography', count: 6 },\n      { category: 'culture', count: 6 }\n    ];\n\n    categoriesPerTest.forEach(({ category, count }) => {\n      const pool = questionPools[category as keyof typeof questionPools];\n      \n      // Select questions with some variation based on test number\n      for (let j = 0; j < count; j++) {\n        const questionIndex = (i + j + Math.floor(i / 10)) % pool.length;\n        const baseQuestion = pool[questionIndex];\n        \n        questions.push({\n          id: questionId++,\n          question: baseQuestion.question,\n          options: baseQuestion.options as [string, string, string, string],\n          correctAnswer: baseQuestion.correctAnswer,\n          explanation: baseQuestion.explanation,\n          category: baseQuestion.category\n        });\n      }\n    });\n\n    // Add additional questions from expanded pool to reach 24\n    while (questions.length < 24) {\n      const allQuestions = Object.values(questionPools).flat();\n      const randomQuestion = allQuestions[(i + questions.length) % allQuestions.length];\n      \n      questions.push({\n        id: questionId++,\n        question: randomQuestion.question,\n        options: randomQuestion.options as [string, string, string, string],\n        correctAnswer: randomQuestion.correctAnswer,\n        explanation: randomQuestion.explanation,\n        category: randomQuestion.category\n      });\n    }\n\n    // Shuffle questions for variety\n    const shuffledQuestions = questions\n      .sort(() => Math.sin(i + questions.length) > 0 ? 1 : -1)\n      .slice(0, 24);\n\n    const testCategories = [\n      \"British History\", \"Government & Politics\", \"Geography & Culture\", \n      \"General Knowledge\", \"Comprehensive Review\", \"Mock Exam\"\n    ];\n\n    const difficulties = [1, 2, 2, 3, 3, 4, 4, 5]; // Weighted toward medium difficulty\n\n    tests.push({\n      title: `Life in UK Practice Test ${i}`,\n      description: `Comprehensive practice test covering ${testCategories[i % testCategories.length].toLowerCase()} with 24 dynamically generated questions`,\n      category: testCategories[i % testCategories.length],\n      difficulty: difficulties[i % difficulties.length],\n      questions: [], // Questions will be generated dynamically when test is started\n      orderIndex: i\n    });\n  }\n\n  return tests;\n}\n\n// Initialize practice tests if none exist\nexport async function initializePracticeTests(storage: any) {\n  try {\n    const existingTests = await storage.getAllPracticeTests();\n    \n    if (existingTests.length === 0) {\n      console.log(\"Initializing 45 practice tests...\");\n      const tests = generatePracticeTests();\n      \n      for (const test of tests) {\n        await storage.createPracticeTest(test);\n      }\n      \n      console.log(\"✓ 45 practice tests initialized successfully\");\n    }\n  } catch (error) {\n    console.error(\"Failed to initialize practice tests:\", error);\n  }\n}","size_bytes":11308},"server/services/question-bank.ts":{"content":"// Comprehensive question bank with unique questions for each test\ninterface QuestionTemplate {\n  question: string;\n  options: [string, string, string, string];\n  correctAnswer: number;\n  explanation: string;\n  category: string;\n}\n\nexport const QUESTION_BANK: Record<string, QuestionTemplate[]> = {\n  \"British History\": [\n    // Set 1: Medieval Period\n    {\n      question: \"When did the Norman Conquest take place?\",\n      options: [\"1066\", \"1086\", \"1046\", \"1076\"],\n      correctAnswer: 0,\n      explanation: \"The Norman Conquest occurred in 1066 when William the Conqueror defeated King Harold at the Battle of Hastings.\",\n      category: \"British History\"\n    },\n    {\n      question: \"Who was the first Norman King of England?\",\n      options: [\"Harold Godwinson\", \"William the Conqueror\", \"Edward the Confessor\", \"Henry I\"],\n      correctAnswer: 1,\n      explanation: \"William the Conqueror became the first Norman King of England after his victory at Hastings in 1066.\",\n      category: \"British History\"\n    },\n    {\n      question: \"What was the Domesday Book?\",\n      options: [\"A religious text\", \"A survey of England ordered by William I\", \"A collection of laws\", \"A military strategy guide\"],\n      correctAnswer: 1,\n      explanation: \"The Domesday Book was a comprehensive survey of England commissioned by William I in 1086.\",\n      category: \"British History\"\n    },\n    \n    // Set 2: Tudor Period  \n    {\n      question: \"How many wives did Henry VIII have?\",\n      options: [\"4\", \"5\", \"6\", \"7\"],\n      correctAnswer: 2,\n      explanation: \"Henry VIII had six wives: Catherine of Aragon, Anne Boleyn, Jane Seymore, Anne of Cleves, Catherine Howard, and Catherine Parr.\",\n      category: \"British History\"\n    },\n    {\n      question: \"What major event happened in 1588?\",\n      options: [\"Great Fire of London\", \"Spanish Armada defeated\", \"Plague outbreak\", \"Shakespeare's birth\"],\n      correctAnswer: 1,\n      explanation: \"The Spanish Armada was defeated by the English fleet in 1588, marking England's rise as a naval power.\",\n      category: \"British History\"\n    },\n    {\n      question: \"Who was known as the 'Virgin Queen'?\",\n      options: [\"Mary I\", \"Elizabeth I\", \"Anne Boleyn\", \"Catherine of Aragon\"],\n      correctAnswer: 1,\n      explanation: \"Elizabeth I was known as the 'Virgin Queen' because she never married and had no children.\",\n      category: \"British History\"\n    },\n\n    // Set 3: Civil War Period\n    {\n      question: \"When did the English Civil War take place?\",\n      options: [\"1639-1651\", \"1642-1651\", \"1640-1660\", \"1645-1655\"],\n      correctAnswer: 1,\n      explanation: \"The English Civil War was fought between 1642 and 1651, ending with Parliament's victory.\",\n      category: \"British History\"\n    },\n    {\n      question: \"Who led the Parliamentary forces during the Civil War?\",\n      options: [\"King Charles I\", \"Oliver Cromwell\", \"Prince Rupert\", \"Thomas Fairfax\"],\n      correctAnswer: 1,\n      explanation: \"Oliver Cromwell was a key leader of the Parliamentary forces and later became Lord Protector.\",\n      category: \"British History\"\n    },\n    {\n      question: \"What happened to King Charles I?\",\n      options: [\"He died in battle\", \"He was executed\", \"He fled to France\", \"He abdicated\"],\n      correctAnswer: 1,\n      explanation: \"King Charles I was executed in 1649 following his trial for treason against Parliament.\",\n      category: \"British History\"\n    },\n\n    // Set 4: Industrial Revolution\n    {\n      question: \"When did the Industrial Revolution begin in Britain?\",\n      options: [\"1750s\", \"1760s\", \"1770s\", \"1780s\"],\n      correctAnswer: 1,\n      explanation: \"The Industrial Revolution in Britain is generally considered to have begun in the 1760s.\",\n      category: \"British History\"\n    },\n    {\n      question: \"What was the first major industry to be mechanized?\",\n      options: [\"Mining\", \"Textile manufacturing\", \"Steel production\", \"Transportation\"],\n      correctAnswer: 1,\n      explanation: \"Textile manufacturing was the first major industry to be mechanized during the Industrial Revolution.\",\n      category: \"British History\"\n    },\n    {\n      question: \"Who invented the spinning jenny?\",\n      options: [\"James Watt\", \"James Hargreaves\", \"Richard Arkwright\", \"Samuel Crompton\"],\n      correctAnswer: 1,\n      explanation: \"James Hargreaves invented the spinning jenny in 1764, revolutionizing textile production.\",\n      category: \"British History\"\n    },\n\n    // Set 5: World Wars\n    {\n      question: \"In which year did World War I begin?\",\n      options: [\"1913\", \"1914\", \"1915\", \"1916\"],\n      correctAnswer: 1,\n      explanation: \"World War I began in 1914 following the assassination of Archduke Franz Ferdinand.\",\n      category: \"British History\"\n    },\n    {\n      question: \"Who was the British Prime Minister during most of World War II?\",\n      options: [\"Neville Chamberlain\", \"Winston Churchill\", \"Clement Attlee\", \"Anthony Eden\"],\n      correctAnswer: 1,\n      explanation: \"Winston Churchill was Prime Minister from 1940-1945 during most of World War II.\",\n      category: \"British History\"\n    },\n    {\n      question: \"In which year did World War II end?\",\n      options: [\"1944\", \"1945\", \"1946\", \"1947\"],\n      correctAnswer: 1,\n      explanation: \"World War II ended in 1945 with the surrender of Japan in September.\",\n      category: \"British History\"\n    },\n\n    // Set 6: Modern Era\n    {\n      question: \"Who was the first Prime Minister of the UK?\",\n      options: [\"Winston Churchill\", \"Robert Walpole\", \"Benjamin Disraeli\", \"William Pitt\"],\n      correctAnswer: 1,\n      explanation: \"Sir Robert Walpole is generally considered the first Prime Minister, serving from 1721 to 1742.\",\n      category: \"British History\"\n    },\n    {\n      question: \"When did the UK join the European Economic Community?\",\n      options: [\"1971\", \"1972\", \"1973\", \"1974\"],\n      correctAnswer: 2,\n      explanation: \"The UK joined the European Economic Community (EEC) in 1973.\",\n      category: \"British History\"\n    },\n    {\n      question: \"Who was the longest-reigning British monarch before Elizabeth II?\",\n      options: [\"Victoria\", \"George III\", \"Henry VIII\", \"Elizabeth I\"],\n      correctAnswer: 0,\n      explanation: \"Queen Victoria reigned for 63 years (1837-1901) before Elizabeth II surpassed her record.\",\n      category: \"British History\"\n    }\n  ],\n\n  \"Government & Politics\": [\n    // Set 1: Parliamentary System\n    {\n      question: \"How often are general elections held in the UK?\",\n      options: [\"Every 3 years\", \"Every 4 years\", \"Every 5 years\", \"Every 6 years\"],\n      correctAnswer: 2,\n      explanation: \"UK general elections are held every 5 years, though they can be called earlier.\",\n      category: \"Government & Politics\"\n    },\n    {\n      question: \"What is the upper house of Parliament called?\",\n      options: [\"House of Commons\", \"House of Lords\", \"Senate\", \"Assembly\"],\n      correctAnswer: 1,\n      explanation: \"The House of Lords is the upper house of the UK Parliament.\",\n      category: \"Government & Politics\"\n    },\n    {\n      question: \"Who is the head of state in the UK?\",\n      options: [\"Prime Minister\", \"President\", \"The Monarch\", \"Speaker of the House\"],\n      correctAnswer: 2,\n      explanation: \"The Monarch is the head of state in the UK, while the Prime Minister is the head of government.\",\n      category: \"Government & Politics\"\n    },\n\n    // Set 2: Electoral System\n    {\n      question: \"How many MPs are there in the House of Commons?\",\n      options: [\"600\", \"650\", \"700\", \"750\"],\n      correctAnswer: 1,\n      explanation: \"There are 650 Members of Parliament (MPs) in the House of Commons.\",\n      category: \"Government & Politics\"\n    },\n    {\n      question: \"When can someone vote in UK elections?\",\n      options: [\"Age 16\", \"Age 17\", \"Age 18\", \"Age 21\"],\n      correctAnswer: 2,\n      explanation: \"Citizens can vote in UK elections from age 18, and must be registered to vote.\",\n      category: \"Government & Politics\"\n    },\n    {\n      question: \"What electoral system is used for UK general elections?\",\n      options: [\"Proportional representation\", \"First past the post\", \"Alternative vote\", \"Single transferable vote\"],\n      correctAnswer: 1,\n      explanation: \"The UK uses the 'first past the post' system for general elections.\",\n      category: \"Government & Politics\"\n    },\n\n    // Set 3: Government Structure\n    {\n      question: \"What is the role of the House of Lords?\",\n      options: [\"Make laws\", \"Review and revise legislation\", \"Control taxes\", \"Appoint ministers\"],\n      correctAnswer: 1,\n      explanation: \"The House of Lords reviews and can revise legislation passed by the House of Commons.\",\n      category: \"Government & Politics\"\n    },\n    {\n      question: \"Who appoints the Prime Minister?\",\n      options: [\"The people directly\", \"Parliament\", \"The Monarch\", \"The Cabinet\"],\n      correctAnswer: 2,\n      explanation: \"The Monarch appoints the Prime Minister, usually the leader of the party with the most seats.\",\n      category: \"Government & Politics\"\n    },\n    {\n      question: \"What is the Cabinet?\",\n      options: [\"All MPs\", \"Senior government ministers\", \"Civil servants\", \"House of Lords members\"],\n      correctAnswer: 1,\n      explanation: \"The Cabinet consists of senior government ministers chosen by the Prime Minister.\",\n      category: \"Government & Politics\"\n    },\n\n    // Additional sets for variety...\n    {\n      question: \"How long can someone serve as Prime Minister?\",\n      options: [\"4 years maximum\", \"8 years maximum\", \"No term limits\", \"10 years maximum\"],\n      correctAnswer: 2,\n      explanation: \"There are no term limits for the Prime Minister in the UK system.\",\n      category: \"Government & Politics\"\n    },\n    {\n      question: \"What is a constituency?\",\n      options: [\"A political party\", \"An electoral area\", \"A government department\", \"A type of vote\"],\n      correctAnswer: 1,\n      explanation: \"A constituency is an electoral area that elects one MP to the House of Commons.\",\n      category: \"Government & Politics\"\n    },\n    {\n      question: \"Who is the Speaker of the House of Commons?\",\n      options: [\"The Prime Minister\", \"An elected MP who chairs debates\", \"The Deputy PM\", \"The Monarch's representative\"],\n      correctAnswer: 1,\n      explanation: \"The Speaker is an elected MP who chairs debates and maintains order in the House of Commons.\",\n      category: \"Government & Politics\"\n    }\n  ],\n\n  \"Geography & Culture\": [\n    // Set 1: Geography\n    {\n      question: \"What is the highest mountain in the UK?\",\n      options: [\"Snowdon\", \"Scafell Pike\", \"Ben Nevis\", \"Helvellyn\"],\n      correctAnswer: 2,\n      explanation: \"Ben Nevis in Scotland is the highest mountain in the UK at 1,345 meters.\",\n      category: \"Geography & Culture\"\n    },\n    {\n      question: \"Which river flows through London?\",\n      options: [\"River Severn\", \"River Thames\", \"River Trent\", \"River Mersey\"],\n      correctAnswer: 1,\n      explanation: \"The River Thames flows through London and is the longest river entirely in England.\",\n      category: \"Geography & Culture\"\n    },\n    {\n      question: \"What are the four nations of the UK?\",\n      options: [\"England, Scotland, Wales, Ireland\", \"England, Scotland, Wales, Northern Ireland\", \"England, Scotland, Ireland, Cornwall\", \"England, Wales, Scotland, Britain\"],\n      correctAnswer: 1,\n      explanation: \"The UK consists of England, Scotland, Wales, and Northern Ireland.\",\n      category: \"Geography & Culture\"\n    },\n\n    // Set 2: Capitals and Cities\n    {\n      question: \"What is the capital of Scotland?\",\n      options: [\"Glasgow\", \"Aberdeen\", \"Edinburgh\", \"Dundee\"],\n      correctAnswer: 2,\n      explanation: \"Edinburgh is the capital city of Scotland and home to the Scottish Parliament.\",\n      category: \"Geography & Culture\"\n    },\n    {\n      question: \"What is the capital of Wales?\",\n      options: [\"Swansea\", \"Cardiff\", \"Newport\", \"Wrexham\"],\n      correctAnswer: 1,\n      explanation: \"Cardiff is the capital and largest city of Wales.\",\n      category: \"Geography & Culture\"\n    },\n    {\n      question: \"What is the capital of Northern Ireland?\",\n      options: [\"Derry\", \"Belfast\", \"Armagh\", \"Newry\"],\n      correctAnswer: 1,\n      explanation: \"Belfast is the capital and largest city of Northern Ireland.\",\n      category: \"Geography & Culture\"\n    },\n\n    // Set 3: Culture and Traditions\n    {\n      question: \"What is the national flower of England?\",\n      options: [\"Daffodil\", \"Thistle\", \"Rose\", \"Shamrock\"],\n      correctAnswer: 2,\n      explanation: \"The rose is the national flower of England, specifically the Tudor rose.\",\n      category: \"Geography & Culture\"\n    },\n    {\n      question: \"Which sport was invented in England?\",\n      options: [\"Basketball\", \"Football (Soccer)\", \"Baseball\", \"Hockey\"],\n      correctAnswer: 1,\n      explanation: \"Football (soccer) was invented in England in the 19th century.\",\n      category: \"Geography & Culture\"\n    },\n    {\n      question: \"What is Burns Night?\",\n      options: [\"English harvest festival\", \"Scottish celebration of Robert Burns\", \"Welsh music festival\", \"Irish cultural day\"],\n      correctAnswer: 1,\n      explanation: \"Burns Night (January 25th) celebrates the Scottish poet Robert Burns with traditional Scottish food and poetry.\",\n      category: \"Geography & Culture\"\n    },\n\n    // Additional cultural questions...\n    {\n      question: \"What is the longest river in the UK?\",\n      options: [\"Thames\", \"Severn\", \"Trent\", \"Wye\"],\n      correctAnswer: 1,\n      explanation: \"The River Severn is the longest river in the UK at 354 kilometers long.\",\n      category: \"Geography & Culture\"\n    },\n    {\n      question: \"Which mountain range runs through northern England?\",\n      options: [\"The Pennines\", \"The Cotswolds\", \"The Chilterns\", \"The Downs\"],\n      correctAnswer: 0,\n      explanation: \"The Pennines, known as the 'backbone of England', run through northern England.\",\n      category: \"Geography & Culture\"\n    },\n    {\n      question: \"What is Hadrian's Wall?\",\n      options: [\"A Scottish castle\", \"A Roman wall across northern England\", \"A Welsh fortification\", \"An Irish monument\"],\n      correctAnswer: 1,\n      explanation: \"Hadrian's Wall was built by the Romans across northern England to defend against Scottish tribes.\",\n      category: \"Geography & Culture\"\n    }\n  ],\n\n  \"Laws & Society\": [\n    // Set 1: Legal System\n    {\n      question: \"What is the minimum voting age in the UK?\",\n      options: [\"16\", \"17\", \"18\", \"21\"],\n      correctAnswer: 2,\n      explanation: \"The minimum voting age in the UK is 18 years old.\",\n      category: \"Laws & Society\"\n    },\n    {\n      question: \"What is the emergency telephone number in the UK?\",\n      options: [\"911\", \"999\", \"112\", \"000\"],\n      correctAnswer: 1,\n      explanation: \"999 is the main emergency number in the UK, though 112 also works.\",\n      category: \"Laws & Society\"\n    },\n    {\n      question: \"What is the legal drinking age in the UK?\",\n      options: [\"16\", \"17\", \"18\", \"21\"],\n      correctAnswer: 2,\n      explanation: \"The legal drinking age in the UK is 18 years old.\",\n      category: \"Laws & Society\"\n    },\n\n    // Set 2: Courts and Justice\n    {\n      question: \"Which court deals with serious criminal cases?\",\n      options: [\"Magistrates' Court\", \"Crown Court\", \"County Court\", \"High Court\"],\n      correctAnswer: 1,\n      explanation: \"The Crown Court deals with serious criminal cases and appeals from Magistrates' Courts.\",\n      category: \"Laws & Society\"\n    },\n    {\n      question: \"What is the role of a jury?\",\n      options: [\"Decide the sentence\", \"Decide guilt or innocence\", \"Investigate crimes\", \"Arrest suspects\"],\n      correctAnswer: 1,\n      explanation: \"A jury listens to evidence and decides whether the defendant is guilty or innocent.\",\n      category: \"Laws & Society\"\n    },\n    {\n      question: \"How many people are on a jury in England and Wales?\",\n      options: [\"10\", \"12\", \"14\", \"16\"],\n      correctAnswer: 1,\n      explanation: \"A jury in England and Wales consists of 12 people.\",\n      category: \"Laws & Society\"\n    },\n\n    // Set 3: Public Services\n    {\n      question: \"What is the National Health Service (NHS)?\",\n      options: [\"Private healthcare\", \"Free healthcare system\", \"Insurance company\", \"Medical university\"],\n      correctAnswer: 1,\n      explanation: \"The NHS provides free healthcare to UK residents, funded through taxation.\",\n      category: \"Laws & Society\"\n    },\n    {\n      question: \"At what age do children start compulsory education in England?\",\n      options: [\"4\", \"5\", \"6\", \"7\"],\n      correctAnswer: 1,\n      explanation: \"Compulsory education in England begins at age 5, though many children start at 4.\",\n      category: \"Laws & Society\"\n    },\n    {\n      question: \"Until what age must children stay in education or training?\",\n      options: [\"16\", \"17\", \"18\", \"19\"],\n      correctAnswer: 2,\n      explanation: \"Young people must stay in education or training until age 18 in England.\",\n      category: \"Laws & Society\"\n    },\n\n    // Additional legal and social questions...\n    {\n      question: \"What must you do if you are involved in a road traffic accident?\",\n      options: [\"Drive away quickly\", \"Stop and exchange details\", \"Call a lawyer\", \"Wait for police only\"],\n      correctAnswer: 1,\n      explanation: \"You must stop and exchange insurance and contact details with other parties involved.\",\n      category: \"Laws & Society\"\n    },\n    {\n      question: \"What is the speed limit in built-up areas?\",\n      options: [\"20 mph\", \"30 mph\", \"40 mph\", \"50 mph\"],\n      correctAnswer: 1,\n      explanation: \"The speed limit in built-up areas is typically 30 mph unless otherwise stated.\",\n      category: \"Laws & Society\"\n    },\n    {\n      question: \"What is council tax?\",\n      options: [\"Income tax\", \"Property tax paid to local councils\", \"Sales tax\", \"Business tax\"],\n      correctAnswer: 1,\n      explanation: \"Council tax is a property tax paid to local councils to fund local services.\",\n      category: \"Laws & Society\"\n    }\n  ]\n};\n\n// Function to get unique questions for each test\nexport function getUniqueQuestionsForTest(topic: string, count: number, testSeed: number): any[] {\n  const topicQuestions = QUESTION_BANK[topic] || QUESTION_BANK[\"British History\"];\n  \n  // Use testSeed to create deterministic but different selection for each test\n  const seededRandom = (seed: number) => {\n    const x = Math.sin(seed) * 10000;\n    return x - Math.floor(x);\n  };\n  \n  // Create a shuffled version based on the test seed\n  const shuffled = [...topicQuestions];\n  for (let i = shuffled.length - 1; i > 0; i--) {\n    const j = Math.floor(seededRandom(testSeed + i) * (i + 1));\n    [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n  }\n  \n  // Return the required count, cycling through if needed but in different order\n  const result = [];\n  for (let i = 0; i < count; i++) {\n    const question = shuffled[i % shuffled.length];\n    result.push({\n      ...question,\n      question: i >= shuffled.length ? `[Test ${testSeed % 100}] ${question.question}` : question.question\n    });\n  }\n  \n  return result;\n}","size_bytes":19218},"server/services/static-exercises.ts":{"content":"// Exercise templates with inline multiple choice options\nconst exerciseTemplates = [\n  // Constitutional Monarchy and Parliamentary Democracy\n  {\n    text: \"The United Kingdom operates as a {constitutional monarchy|absolute monarchy|republic|federation} with a democratic {parliamentary|presidential|federal|unitary} system featuring {Westminster democracy|Swiss democracy|American democracy|French democracy}, separation of powers, and the rule of law. The {Prime Minister|President|Chancellor|Premier} serves as head of government, residing at {10 Downing Street|Buckingham Palace|Houses of Parliament|Westminster Abbey}, and leads the {Cabinet|Congress|Senate|Assembly} while commanding majority support in Parliament. The {Monarch|President|Chancellor|Governor} acts as ceremonial head of state, performing constitutional duties including the {State Opening of Parliament|Queen's Speech|Royal Assent|Prorogation}, {Royal Assent|Presidential Approval|Parliamentary Consent|Legislative Review} for legislation, and {weekly|monthly|quarterly|annual} audiences with the Prime Minister. The UK Parliament comprises {two|three|four|five} chambers: the elected {House of Commons|House of Representatives|National Assembly|Federal Diet} with {650|600|625|675} Members of Parliament representing constituencies, and the {House of Lords|Senate|Upper Chamber|Council of States} containing {life peers|elected senators|appointed members|hereditary nobles}, hereditary peers, and {Lords Spiritual|Religious Leaders|Church Representatives|Clerical Members} including {Archbishops|Cardinals|Bishops|Ministers} and Bishops. The {Speaker|President|Chairman|Moderator} of the House maintains order during debates, while the {Lord Chancellor|Chief Justice|Senate President|Assembly Leader} oversees the House of Lords. General elections occur every {five|three|four|six} years maximum under the {Fixed-term Parliaments Act|Electoral Reform Act|Democracy Act|Voting Rights Act}, with {first-past-the-post|proportional representation|alternative vote|single transferable vote} voting system determining constituency winners.\",\n    questions: [],\n    topic: \"Government & Politics\"\n  },\n\n  // World War II and Churchill's Leadership\n  {\n    text: \"World War II ({1939-1945|1940-1946|1938-1944|1941-1947}) marked Britain's {finest hour|darkest period|greatest challenge|turning point} under {Winston Churchill|Neville Chamberlain|Anthony Eden|Clement Attlee}'s wartime leadership as {Prime Minister|War Leader|Commander|Chancellor} from {May|March|June|July} {1940|1939|1941|1942}. Churchill replaced {Neville Chamberlain|Stanley Baldwin|Anthony Eden|Lord Halifax} after the failed {Norway campaign|France invasion|Poland crisis|Belgium retreat}, forming a {coalition government|war cabinet|emergency council|unity administration} with Labour's {Clement Attlee|Anthony Eden|Ernest Bevin|Lord Halifax} as {Deputy Prime Minister|War Secretary|Foreign Minister|Defence Chief} and {Ernest Bevin|Anthony Eden|Herbert Morrison|Stafford Cripps} as Foreign Secretary. His inspirational {oratory|speeches|addresses|broadcasts} included historic speeches: '{We shall fight on the beaches|Blood, toil, tears and sweat|Never surrender|This is our finest hour}' ({Dunkirk evacuation|Battle of Britain|Fall of France|London Blitz} speech), '{Never was so much owed by so many to so few|Blood, toil, tears and sweat|We shall never surrender|This was their finest hour}' (Battle of Britain tribute to {RAF pilots|Royal Navy|British Army|Home Guard}), '{Blood, toil, tears and sweat|We shall fight them|Never surrender|Victory at all costs}' (first speech as PM), and '{This was their finest hour|We shall never give in|Fight on the seas|Victory in Europe}' (France's fall speech). The London Blitz ({September|August|October|November} {1940|1939|1941|1942}-{May 1941|June 1941|April 1941|March 1941}) saw German {Luftwaffe|Wehrmacht|Kriegsmarine|SS} bombing campaigns targeting {civilian areas|military bases|industrial sites|government buildings}, {St. Paul's Cathedral|Big Ben|Westminster Abbey|Tower of London}, {Houses of Parliament|Buckingham Palace|10 Downing Street|Westminster Hall}, and {East End docklands|West End theaters|City financial district|South London suburbs}. Churchill's underground {War Rooms|Command Center|Operations Base|Strategic Headquarters} beneath {Whitehall|Westminster|Downing Street|Parliament} coordinated Allied strategy with {Franklin D. Roosevelt|Harry Truman|Dwight Eisenhower|George Marshall} ({Atlantic Charter|Lend-Lease program|Marshall Plan|NATO Treaty}, {Lend-Lease program|Atlantic Charter|Destroyers for Bases|Cash and Carry}) and {Joseph Stalin|Vyacheslav Molotov|Georgy Zhukov|Nikita Khrushchev} ({Tehran Conference 1943|Yalta Conference 1945|Potsdam Conference|Moscow Conference}, {Yalta Conference 1945|Potsdam Conference|Tehran Conference|Moscow Conference}). Operation {Overlord|Barbarossa|Market Garden|Torch} ({D-Day landings|Normandy invasion|European liberation|Allied assault} {June 6, 1944|May 6, 1944|July 6, 1944|August 6, 1944}) began European liberation under Supreme Allied Commander {Dwight Eisenhower|Bernard Montgomery|Omar Bradley|George Patton}. Victory in Europe Day ({VE Day|Victory Day|Liberation Day|Europe Day}) came {May 8, 1945|May 7, 1945|May 9, 1945|June 6, 1945}, followed by Japan's surrender after {Hiroshima and Nagasaki|atomic bombings|Pacific victory|Tokyo surrender} atomic bombings. Churchill's wartime memoirs '{The Second World War|My War Years|Victory and Defeat|Britain at War}' earned him the {Nobel Prize in Literature|Pulitzer Prize|Booker Prize|Man Booker Prize} in {1953|1950|1951|1952}, cementing his legacy as Britain's greatest {wartime leader|Prime Minister|military commander|national hero} alongside military figures like Field Marshal {Montgomery|Alexander|Brooke|Wavell} and Admiral Lord {Mountbatten|Cunningham|Fraser|Tovey}.\",\n    questions: [],\n    topic: \"Historical Figures & World Wars\"\n  },\n\n  // British History and Democratic Reform\n  {\n    text: \"British constitutional history spans nearly a {millennium|century|decade|thousand years} from {William the Conqueror's|Harold Godwinson's|Edward the Confessor's|Alfred the Great's} {Norman Conquest|Saxon Victory|Viking Invasion|Roman Occupation} ({October 14, 1066|October 12, 1066|September 28, 1066|November 5, 1066}) through modern {parliamentary democracy|constitutional monarchy|federal republic|presidential system}. The Battle of {Hastings|Stamford Bridge|Bannockburn|Agincourt} saw {William|Harold|Edward|Richard} defeat {Anglo-Saxon|Norman|Viking|Danish} King {Harold Godwinson|William the Conqueror|Edward the Confessor|Alfred the Great}, introducing {feudalism|democracy|capitalism|socialism}, {Norman French|Latin|Old English|Celtic} language, and {continental European|Anglo-Saxon|Celtic|Roman} legal traditions. Medieval constitutional milestones included {Magna Carta|Bill of Rights|Habeas Corpus|Charter of Liberties} ({June 15, 1215|May 15, 1215|July 15, 1215|August 15, 1215}) signed by King {John|Henry|Richard|Edward} at {Runnymede|Westminster|Windsor|Canterbury}, limiting {royal power|church authority|noble privilege|merchant rights} and establishing {habeas corpus|trial by jury|freedom of speech|religious liberty} principles. The {English Civil War|War of the Roses|Hundred Years War|Scottish Wars} ({1642-1651|1640-1649|1644-1653|1641-1650}) between {Parliamentarians|Royalists|Presbyterians|Independents} ({Roundheads|Cavaliers|Puritans|Whigs}) led by {Oliver Cromwell|Charles I|John Pym|Thomas Fairfax} and {Royalists|Parliamentarians|Scots|Irish} ({Cavaliers|Roundheads|Loyalists|Monarchists}) supporting King {Charles I|James I|Charles II|William III} resulted in {regicide|exile|abdication|imprisonment}, {Commonwealth period|Protectorate|Republic|Military Rule}, and eventual {Restoration|Revolution|Reform|Rebellion} under {Charles II|James II|William III|George I}. The {Glorious Revolution|English Revolution|Bloodless Revolution|Protestant Revolution} ({1688|1689|1687|1690}) replaced Catholic {James II|Charles II|James I|Charles I} with Protestant {William of Orange and Mary|Charles II and James II|George I and George II|Anne and George I}, establishing {parliamentary sovereignty|divine right|absolute monarchy|constitutional limits} and {Bill of Rights|Magna Carta|Habeas Corpus|Act of Settlement} ({1689|1688|1690|1691}). Union Acts created {Great Britain|United Kingdom|British Empire|British Isles} ({1707|1701|1714|1720} {England-Scotland|England-Wales|Scotland-Ireland|Britain-Ireland}) and {United Kingdom|Great Britain|British Empire|Commonwealth} ({1801|1800|1802|1803} {Great Britain-Ireland|England-Ireland|Scotland-Ireland|Wales-Ireland}). Democratic expansion occurred through {Reform Acts|Voting Acts|Democracy Bills|Electoral Laws}: {Great Reform Act|First Reform Act|Reform Bill|Electoral Act} ({1832|1830|1834|1835}) enfranchising {middle classes|working classes|all men|property owners}, {Second Reform Act|Democratic Act|Voting Rights Act|Electoral Reform} ({1867|1865|1869|1870}) extending {urban working-class|rural working-class|middle-class|upper-class} voting, {Third Reform Act|Final Reform Act|Universal Act|Democratic Bill} ({1884|1882|1886|1885}) adding {rural laborers|urban workers|all men|property holders}. Women's suffrage campaigns included {suffragists|suffragettes|feminists|activists} led by {Millicent Fawcett|Emmeline Pankhurst|Christabel Pankhurst|Sylvia Pankhurst} using {peaceful methods|militant tactics|civil disobedience|political lobbying} and {suffragettes|suffragists|militants|radicals} led by {Emmeline Pankhurst|Christabel Pankhurst|Sylvia Pankhurst|Emily Davison}, {Christabel Pankhurst|Emmeline Pankhurst|Sylvia Pankhurst|Millicent Fawcett}, and {Sylvia Pankhurst|Emily Davison|Christabel Pankhurst|Emmeline Pankhurst} employing {militant tactics|peaceful protest|civil disobedience|political pressure} including {hunger strikes|demonstrations|petitions|lobbying}, {window smashing|arson|bombings|protests}, and {Emily Davison's|Christabel Pankhurst's|Sylvia Pankhurst's|Emmeline Pankhurst's} death at {Epsom Derby|Royal Ascot|Wimbledon|Lord's Cricket} ({1913|1912|1914|1915}). Representation of the People Acts granted women {voting rights|political equality|suffrage|electoral participation}: {limited franchise|full suffrage|partial voting|restricted access} ({1918|1917|1919|1920}) for women over {30|25|21|35}, and {equal suffrage|full voting rights|universal suffrage|complete equality} ({1928|1918|1922|1935}) for all adults over {21|18|25|30}.\",\n    questions: [],\n    topic: \"British History & Legal Acts\"\n  },\n\n  // Industrial Revolution and Social Change  \n  {\n    text: \"Britain pioneered the {Industrial Revolution|Agricultural Revolution|Commercial Revolution|Scientific Revolution} beginning around {1750|1700|1800|1760}, transforming from {agricultural feudalism|pastoral society|rural economy|traditional farming} into the world's first {industrialized|mechanized|automated|modern} {capitalist economy|market system|industrial society|manufacturing nation}. Revolutionary {textile machinery|steam technology|iron production|coal mining} included {James Hargreaves's|Richard Arkwright's|Samuel Crompton's|James Watt's} {spinning jenny|water frame|spinning mule|power loom} ({1764|1760|1768|1765}), {Richard Arkwright's|James Hargreaves's|Samuel Crompton's|Edmund Cartwright's} {water frame|spinning jenny|spinning mule|power loom} ({1769|1764|1779|1785}), and {Samuel Crompton's|James Hargreaves's|Richard Arkwright's|Edmund Cartwright's} {spinning mule|spinning jenny|water frame|power loom} ({1779|1775|1783|1780}), creating {mass production|factory system|industrial output|mechanized manufacturing} capabilities. {James Watt's|Thomas Newcomen's|Richard Trevithick's|George Stephenson's} improved {steam engine|water wheel|windmill|horse power} with {separate condenser|increased cylinder size|coal instead of wood|safety valve} revolutionized {manufacturing|agriculture|transportation|communication}, {mining|farming|fishing|forestry}, {transportation|communication|agriculture|construction}, and {shipping|railway|canal|road} industries. The {cotton mills|wool factories|silk workshops|linen plants} of {Manchester|Birmingham|Newcastle|Sheffield}, {iron foundries|steel works|coal mines|textile mills} of {Birmingham|Manchester|Sheffield|Leeds}, and {coal mines|iron works|textile factories|pottery kilns} of {Newcastle|Birmingham|Stoke-on-Trent|Manchester} exemplified {industrial concentration|urban growth|factory development|economic transformation}. {Factory system|Industrial|Mechanized|Mass production} labor replaced traditional {cottage industries|agricultural work|craft production|domestic manufacturing}, creating {industrial bourgeoisie|factory owners|mill masters|industrial capitalists} {capitalists|entrepreneurs|manufacturers|industrialists} and {urban proletariat|factory workers|industrial laborers|wage earners} workers living in {overcrowded slums|industrial towns|factory districts|working-class areas} with poor {sanitation|housing|working conditions|living standards} and {health conditions|educational opportunities|social services|medical care}. Social reformers including {Lord Shaftesbury|Robert Owen|Elizabeth Fry|Jeremy Bentham}, {Robert Owen|Lord Shaftesbury|John Stuart Mill|William Wilberforce}, and {Elizabeth Fry|Mary Wollstonecraft|Frances Wright|Josephine Butler} campaigned for {workers' rights|prison reform|educational improvements|women's rights}, {prison reform|factory conditions|child labor laws|public health}, and {educational improvements|social welfare|political reform|moral reform}. Parliamentary legislation included {Factory Acts|Labor Laws|Industrial Regulations|Worker Protection Acts} ({1833, 1844, 1847|1830, 1840, 1850|1835, 1845, 1855|1820, 1830, 1840}) limiting {child labor|working hours|factory conditions|industrial accidents} and {working hours|child employment|dangerous machinery|workplace safety}, {Public Health Act|Sanitation Law|Medical Reform|Urban Planning Act} ({1848|1845|1850|1851}) addressing {sanitation|water supply|disease prevention|urban planning}, and {Education Act|School Law|Learning Reform|Literacy Act} ({1870|1860|1880|1890}) establishing {board schools|public education|elementary schooling|compulsory learning} with {compulsory elementary education|free schooling|universal literacy|basic learning} for children aged {5-13|6-14|5-12|7-15}.\",\n    questions: [],\n    topic: \"Industrial Revolution\"\n  },\n\n  // British Monarchy and Royal Family\n  {\n    text: \"The {British Monarchy|English Crown|Royal Family|House of Windsor} represents over {1,000|800|1,200|900} years of continuous {constitutional evolution|political development|royal tradition|monarchical history} from {absolute rule|divine right|feudal system|royal authority} to ceremonial {constitutional monarchy|parliamentary system|democratic rule|limited monarchy}. The current monarch, {King Charles III|Queen Elizabeth II|King William V|King George VII}, serves as {Head of State|Sovereign|Royal Leader|Constitutional Head} for the {United Kingdom|Great Britain|British Isles|UK} and {14|15|13|16} {Commonwealth realms|British territories|Crown dependencies|Royal dominions} including {Canada|Australia|New Zealand|South Africa}, {Australia|Canada|India|Jamaica}, and {New Zealand|Canada|South Africa|Barbados}. The {Royal Family|House of Windsor|British Royals|Monarchy} resides primarily at {Buckingham Palace|Windsor Castle|Kensington Palace|St James's Palace} in {London|Westminster|England|Britain}, with {weekend|holiday|summer|winter} and {holiday|weekend|seasonal|private} residences at {Windsor Castle|Balmoral Castle|Sandringham House|Holyrood Palace}, {Balmoral Castle|Windsor Castle|Sandringham House|Clarence House} ({Scotland|Wales|Northern Ireland|England}), and {Sandringham House|Balmoral Castle|Windsor Castle|Highgrove House} ({Norfolk|Yorkshire|Kent|Surrey}). Royal duties include {weekly|monthly|regular|scheduled} audiences with the {Prime Minister|Chancellor|Foreign Secretary|Home Secretary}, {State Opening of Parliament|Queen's Speech|Royal Address|Parliamentary Session}, {Royal Assent|Crown Approval|Monarchical Consent|Sovereign Sanction} for {legislation|laws|bills|acts}, and hosting {state visits|royal receptions|diplomatic meetings|official ceremonies} from {foreign dignitaries|world leaders|ambassadors|heads of state}. The monarchy's {ceremonial role|constitutional function|symbolic duty|traditional responsibility} encompasses major {state occasions|royal events|national ceremonies|public celebrations}: {coronations|royal weddings|state funerals|jubilees} held at {Westminster Abbey|St Paul's Cathedral|Canterbury Cathedral|York Minster}, {royal weddings|coronations|state services|religious ceremonies}, {state funerals|memorial services|royal burials|ceremonial rites}, and annual events like {Trooping the Colour|State Opening of Parliament|Royal Ascot|Garden Parties} celebrating the monarch's {official birthday|coronation anniversary|jubilee|accession day}. The {Crown Estate|Royal Property|Sovereign Grant|Royal Finances} generates substantial {revenue|income|funds|money} for the {Treasury|Government|State|Public Purse} while maintaining {royal palaces|historic buildings|crown properties|state residences}, {parks|gardens|estates|grounds}, and {historic properties|heritage sites|royal buildings|ancient monuments}. The {line of succession|royal inheritance|crown succession|monarchical order} follows {absolute primogeniture|eldest child inheritance|gender-neutral succession|equal inheritance}, with the monarch's {eldest child|first-born|senior heir|primary successor} inheriting {regardless of gender|whether male or female|irrespective of sex|without gender preference}, as established by the {Succession to the Crown Act 2013|Act of Settlement 1701|Bill of Rights 1689|Regency Act 1937}.\",\n    questions: [],\n    topic: \"British Monarchy\"\n  },\n\n  // Modern Britain Immigration and Multiculturalism\n  {\n    text: \"Modern {Britain|UK|United Kingdom|Great Britain} reflects {centuries|decades|generations|years} of {immigration|migration|settlement|movement} creating a diverse {multicultural society|multi-ethnic community|cosmopolitan nation|pluralistic society} with rich {traditions|customs|cultures|heritage} from across the {globe|world|planet|earth}. Post-{World War II|WWII|Second World War|1945} immigration included {Caribbean|West Indian|Jamaican|Barbadian} communities arriving on the {Empire Windrush|HMS Britannia|Queen Mary|SS Great Britain} ({1948|1947|1949|1950}), followed by {South Asian|Indian subcontinent|Asian|Eastern} communities from {India|Pakistan|Bangladesh|Sri Lanka}, {Pakistan|India|Bangladesh|Burma}, and {Bangladesh|India|Pakistan|Nepal} seeking {economic opportunities|better life|employment|prosperity}. {European Union|EU|European Economic Community|Common Market} expansion brought {Eastern European|Central European|Baltic|Slavic} migration, while {asylum seekers|refugees|displaced persons|migrants} and {refugees|asylum seekers|immigrants|displaced people} arrived from {conflict zones|war-torn regions|crisis areas|troubled nations} worldwide. Major {cities|urban areas|metropolitan regions|population centers} feature diverse {neighborhoods|districts|communities|areas}: London's {Chinatown|Little Italy|Brick Lane|Southall}, {Brick Lane|Chinatown|Southall|Camden} ({Bangladeshi community|Indian district|Asian quarter|Muslim area}), {Southall|Brick Lane|Chinatown|Whitechapel} ({Punjabi culture|Sikh community|Indian heritage|Asian traditions}), and Birmingham's {Balti Triangle|Curry Mile|Asian Quarter|Indian District}. British {cuisine|food|cooking|gastronomy} now encompasses {Indian|Asian|South Asian|Subcontinental} {curry|spices|dishes|flavors} (declared {national dish|favorite food|most popular meal|top cuisine}), {Chinese takeaways|Asian restaurants|Oriental food|Far Eastern cuisine}, {Italian restaurants|Mediterranean food|European cuisine|Continental dining}, {Turkish kebab shops|Middle Eastern food|Mediterranean cuisine|Levantine restaurants}, and {Polish delicatessens|Eastern European shops|Continental stores|European groceries} alongside traditional {fish and chips|British classics|English food|national dishes}, {Sunday roast|traditional dinner|family meal|weekend feast}, and {afternoon tea|tea time|British tradition|social custom}. Religious diversity includes {Christianity|Christian faith|Church traditions|Biblical religions} ({Anglican|Church of England|Protestant|Episcopal}, {Catholic|Roman Catholic|Papal|Vatican}, {Methodist|Protestant|Nonconformist|Evangelical}), {Islam|Muslim faith|Islamic religion|Mohammedanism}, {Hinduism|Hindu religion|Indian spirituality|Vedic tradition}, {Sikhism|Sikh faith|Punjabi religion|Guru tradition}, {Judaism|Jewish faith|Hebrew religion|Mosaic law}, and {Buddhism|Buddhist philosophy|Eastern spirituality|Dharmic tradition} with purpose-built {mosques|Islamic centers|Muslim buildings|prayer halls}, {temples|Hindu mandirs|religious buildings|spiritual centers}, {synagogues|Jewish temples|Hebrew centers|worship halls}, and {gurdwaras|Sikh temples|Punjabi centers|religious buildings}. Cultural {festivals|celebrations|events|occasions} celebrate {Diwali|Holi|Dussehra|Navratri} ({Hindu|Indian|South Asian|Religious}), {Eid|Islamic festival|Muslim celebration|Religious holiday} ({Muslim|Islamic|Religious|Cultural}), {Chinese New Year|Lunar New Year|Spring Festival|Asian celebration}, {Caribbean Carnival|West Indian festival|Afro-Caribbean celebration|Tropical festival}, and {Christmas traditions|Christian celebrations|Winter festivals|Religious holidays}. Integration {challenges|difficulties|problems|issues} include {language barriers|communication problems|linguistic difficulties|speech obstacles}, {employment discrimination|job inequality|workplace bias|career barriers}, {housing segregation|residential separation|accommodation inequality|living division}, and {social cohesion|community unity|cultural integration|societal harmony}, addressed through {community relations councils|integration bodies|diversity organizations|multicultural groups}, {diversity policies|inclusion strategies|multicultural programs|equality initiatives}, and {multicultural education programs|cultural learning|diversity training|inclusion education} promoting {mutual understanding|cultural respect|social harmony|community tolerance} and {British values|UK principles|national ideals|democratic standards} of {tolerance|acceptance|respect|understanding}, {respect|dignity|consideration|appreciation}, and {democratic participation|civic engagement|political involvement|community contribution}.\",\n    questions: [],\n    topic: \"Modern Britain & Immigration\"\n  },\n\n  // British Sports, Traditions and Cultural Events\n  {\n    text: \"British sporting culture encompasses both traditional and modern games that have spread worldwide from their UK origins. Football (soccer) originated in England with the Football Association founded in {1863|1857|1869|1875}, establishing rules for the beautiful game played at iconic stadiums like {Wembley Stadium|Old Trafford|Emirates Stadium|Anfield} (England's national stadium), Old Trafford (Manchester United), Anfield (Liverpool), Emirates Stadium (Arsenal), and Stamford Bridge (Chelsea). The Premier League, established in {1992|1990|1991|1993}, features clubs like Manchester City, Tottenham Hotspur, Leicester City, and Newcastle United competing for the coveted title. Rugby began at Rugby School ({1823|1820|1821|1822}) when {William Webb Ellis|Thomas Arnold|Matthew Bloxam|Rugby Hughes} allegedly picked up the ball, evolving into Rugby Union ({15|13|14|16} players) and Rugby League (13 players). The Six Nations Championship involves England, Scotland, Wales, Ireland, France, and Italy, while the Rugby World Cup showcases international competition. Cricket, dubbed the gentleman's game, features legendary venues like {Lord's Cricket Ground|The Oval|Old Trafford|Edgbaston} (home of Marylebone Cricket Club), The Oval, and Old Trafford Cricket Ground. The Ashes series between England and Australia remains cricket's most prestigious bilateral contest. Tennis reaches its pinnacle at {Wimbledon|US Open|French Open|Australian Open} Championships (All England Lawn Tennis and Croquet Club), famous for {strawberries and cream|fish and chips|afternoon tea|bangers and mash}, grass courts, and the Royal Box. British tennis champions include Fred Perry, Virginia Wade, Andy Murray, and Emma Raducanu. Golf's home lies in Scotland with the Open Championship rotating between {St Andrews|Royal Birkdale|Carnoustie|Royal St George's} (Old Course), Royal Birkdale, Royal St George's, and Carnoustie. Motorsport features the British Grand Prix at Silverstone Circuit, while horse racing showcases Royal Ascot, Grand National at Aintree, and the Derby at Epsom Downs. Cultural celebrations include {Bonfire Night|Halloween|All Saints' Day|Guy Fawkes Day} (November 5th) commemorating Guy Fawkes and the Gunpowder Plot (1605), {Burns Night|Scottish independence|Highland Games|Hogmanay} (January 25th) honoring Scottish poet Robert Burns, St. Patrick's Day (March 17th), St. George's Day (April 23rd), and Highland Games featuring caber tossing, hammer throwing, and bagpipe competitions.\",\n    questions: [],\n    topic: \"British Sports & Culture\"\n  }\n];\n\nexport function generateStaticExercise(topic?: string, difficulty: number = 2): any {\n  // Filter templates by topic if specified\n  let availableTemplates = exerciseTemplates;\n  if (topic) {\n    const topicLower = topic.toLowerCase();\n    availableTemplates = exerciseTemplates.filter(template => \n      template.topic.toLowerCase().includes(topicLower) ||\n      template.text.toLowerCase().includes(topicLower)\n    );\n  }\n  \n  if (availableTemplates.length === 0) {\n    availableTemplates = exerciseTemplates;\n  }\n  \n  // Select random template\n  const randomTemplate = availableTemplates[Math.floor(Math.random() * availableTemplates.length)];\n  \n  // Parse inline choices and create questions\n  const inlineChoiceRegex = /\\{([^}]+)\\}/g;\n  let match;\n  const questions: any[] = [];\n  let questionIndex = 1;\n  \n  while ((match = inlineChoiceRegex.exec(randomTemplate.text)) !== null) {\n    const options = match[1].split('|');\n    const correctAnswer = options[0]; // First option is always correct\n    \n    // Shuffle options\n    const shuffledOptions = [...options].sort(() => Math.random() - 0.5);\n    const correctIndex = shuffledOptions.indexOf(correctAnswer);\n    \n    questions.push({\n      question: `Select the correct option for choice ${questionIndex}:`,\n      options: shuffledOptions,\n      correct: correctIndex,\n      explanation: `The correct answer is \"${correctAnswer}\".`\n    });\n    \n    questionIndex++;\n  }\n  \n  return {\n    id: Math.random().toString(36).substr(2, 9),\n    userId: \"static\",\n    content: {\n      text: randomTemplate.text,\n      questions: questions.slice(0, 12), // Limit to 12 questions max\n      topic: randomTemplate.topic\n    },\n    topic: randomTemplate.topic,\n    difficulty: difficulty,\n    createdAt: new Date().toISOString()\n  };\n}\n\nexport function getAvailableTopics(): string[] {\n  return exerciseTemplates.map(template => template.topic);\n}","size_bytes":27345},"client/public/assets/enhanced-key-dates-timeline.md":{"content":"# Life in UK Test - Enhanced Key Dates Timeline\n\n## Ancient & Medieval Britain (Pre-1500)\n\n### Stone Age to Roman Britain\n- **43 AD**: Roman invasion of Britain begins\n- **122 AD**: Hadrian's Wall built across northern England\n- **410 AD**: Romans leave Britain\n\n### Anglo-Saxon Period\n- **597 AD**: St Augustine brings Christianity to England\n- **793 AD**: Viking raids begin (Lindisfarne attacked)\n- **878 AD**: Alfred the Great defeats Vikings at Edington\n- **1016**: Cnut (Canute) becomes King of England\n\n### Norman Period\n- **1066**: Battle of Hastings - Norman Conquest\n- **1086**: Domesday Book completed\n- **1170**: Thomas Becket murdered in Canterbury Cathedral\n\n### Medieval England\n- **1215**: Magna Carta signed by King John\n- **1314**: Battle of Bannockburn - Scottish victory\n- **1348-1350**: Black Death kills one-third of population\n- **1381**: Peasants' Revolt\n- **1415**: Battle of Agincourt\n- **1455-1487**: Wars of the Roses\n\n## Tudor & Stuart Periods (1485-1714)\n\n### Tudor Dynasty\n- **1485**: Battle of Bosworth - Henry VII becomes king\n- **1509**: Henry VIII becomes king\n- **1534**: Act of Supremacy - Church of England established\n- **1558**: Elizabeth I becomes queen\n- **1588**: Spanish Armada defeated\n- **1603**: Union of Crowns - James I becomes king\n\n### English Civil War Period\n- **1642**: English Civil War begins\n- **1649**: Charles I executed\n- **1649-1660**: Commonwealth period under Oliver Cromwell\n- **1660**: Restoration - Charles II returns\n- **1665**: Great Plague of London\n- **1666**: Great Fire of London\n- **1688**: Glorious Revolution - William and Mary\n\n## Acts of Union & Empire (1707-1914)\n\n### Union & Expansion\n- **1707**: Act of Union creates Kingdom of Great Britain\n- **1745**: Battle of Culloden - last battle on British soil\n- **1776**: American Declaration of Independence\n- **1801**: Act of Union includes Ireland (United Kingdom)\n- **1805**: Battle of Trafalgar - Nelson's victory\n- **1815**: Battle of Waterloo - Napoleon defeated\n\n### Industrial Revolution\n- **1825**: First passenger railway opens\n- **1833**: Slavery abolished in British Empire\n- **1837**: Victoria becomes queen (reigns until 1901)\n- **1851**: Great Exhibition in Crystal Palace\n- **1854-1856**: Crimean War\n- **1858**: Government of India Act\n\n### Reform & Progress\n- **1832**: Great Reform Act extends voting rights\n- **1870**: Education Act makes school compulsory\n- **1872**: Secret ballot introduced\n- **1884**: Third Reform Act - more men get vote\n- **1901**: Edward VII becomes king\n\n## Modern Britain (1914-Present)\n\n### World Wars Era\n- **1914-1918**: World War I\n- **1916**: Easter Rising in Ireland\n- **1918**: Women over 30 get the vote\n- **1921**: Irish partition - Northern Ireland created\n- **1922**: Irish Free State established\n- **1928**: All women over 21 get the vote\n- **1936**: Edward VIII abdicates\n- **1939-1945**: World War II\n- **1940**: Battle of Britain\n- **1944**: D-Day landings\n\n### Post-War Britain\n- **1948**: NHS established\n- **1948**: Windrush generation arrives\n- **1952**: Elizabeth II becomes queen\n- **1953**: DNA structure discovered\n- **1969**: Voting age lowered to 18\n- **1973**: UK joins European Economic Community\n- **1979**: Margaret Thatcher becomes PM\n- **1982**: Falklands War\n\n### Contemporary Period\n- **1997**: Devolution referendums (Scotland & Wales)\n- **1998**: Good Friday Agreement (Northern Ireland)\n- **1999**: Scottish Parliament and Welsh Assembly established\n- **2005**: Civil partnerships introduced\n- **2012**: London Olympics\n- **2014**: Scottish independence referendum (No wins)\n- **2016**: Brexit referendum (Leave wins 52%-48%)\n- **2020**: UK leaves European Union\n- **2022**: Elizabeth II dies, Charles III becomes king\n\n## Test Success Tips for Dates\n\n### Most Important Dates to Memorize\n1. **1066** - Norman Conquest\n2. **1215** - Magna Carta\n3. **1707** - Act of Union (Great Britain)\n4. **1801** - Act of Union (includes Ireland)\n5. **1918** - Women over 30 get vote\n6. **1928** - All women over 21 get vote\n7. **1948** - NHS established\n8. **1973** - UK joins EEC\n\n### Memory Techniques\n- **1066**: \"Ten-sixty-six, Norman tricks\"\n- **1215**: \"Twelve-fifteen, Magna scene\"\n- **1707**: \"Seventeen-oh-seven, Great Britain's heaven\"\n- **1918**: \"Nineteen-eighteen, women's voting scene\"\n- **1948**: \"Nineteen-forty-eight, NHS creates\"\n\n### Date Patterns to Remember\n- **Union dates**: 1707 (Scotland), 1801 (Ireland)\n- **Women's suffrage**: 1918 (over 30), 1928 (over 21)\n- **World Wars**: 1914-1918 (WWI), 1939-1945 (WWII)\n- **Reform Acts**: 1832, 1867, 1884 (extending voting rights)\n\n### Common Test Question Formats\n1. \"In which year did...?\"\n2. \"What happened in [year]?\"\n3. \"Which came first...?\"\n4. \"How many years after...?\"\n\n---\n*Focus on the bolded dates - these appear most frequently on the Life in UK test*","size_bytes":4827},"client/public/assets/life-in-uk-key-data-cheatsheet.md":{"content":"# Life in UK Test - Key Data Cheatsheet\n\n## Essential Facts & Figures\n\n### UK Geography & Population\n- **Total Population**: Approximately 67 million (2021)\n- **England**: 56 million | **Scotland**: 5.5 million | **Wales**: 3.1 million | **Northern Ireland**: 1.9 million\n- **Capital Cities**: London (England), Edinburgh (Scotland), Cardiff (Wales), Belfast (Northern Ireland)\n- **Highest Mountain**: Ben Nevis (Scotland) - 1,345m\n- **Longest River**: River Severn - 354km\n- **Currency**: Pound Sterling (£)\n\n### Key Historical Dates\n- **1066**: Norman Conquest - Battle of Hastings\n- **1215**: Magna Carta signed\n- **1314**: Battle of Bannockburn (Scotland defeats England)\n- **1536 & 1542**: Acts of Union (England and Wales)\n- **1588**: Spanish Armada defeated\n- **1642-1651**: English Civil War\n- **1707**: Act of Union creates Kingdom of Great Britain\n- **1801**: Act of Union includes Ireland\n- **1914-1918**: World War I\n- **1918**: Women over 30 get the vote\n- **1928**: All women over 21 get the vote\n- **1939-1945**: World War II\n- **1948**: NHS established\n- **1973**: UK joins EEC (European Economic Community)\n- **2016**: Brexit referendum\n- **2020**: UK leaves European Union\n\n### Government & Democracy\n- **Head of State**: The Monarch (currently King Charles III)\n- **Head of Government**: Prime Minister\n- **Parliament**: House of Commons (650 MPs) + House of Lords\n- **Voting Age**: 18 years old\n- **Election Frequency**: Maximum 5 years between general elections\n- **First Past the Post**: UK electoral system\n- **Devolved Parliaments**: Scotland, Wales, Northern Ireland\n\n### Legal System\n- **Age of Criminal Responsibility**: 10 years old in England, Wales & Northern Ireland; 12 in Scotland\n- **Jury Service**: Citizens aged 18-70\n- **Small Claims Court**: Up to £10,000 in England & Wales\n- **Legal Drinking Age**: 18 years old\n- **Legal Driving Age**: 17 years old (car), 16 years old (moped)\n\n### Education System\n- **Compulsory Education**: Ages 5-16 in England, 4-16 in Northern Ireland\n- **Key Stages**: KS1 (ages 5-7), KS2 (ages 7-11), KS3 (ages 11-14), KS4 (ages 14-16)\n- **GCSEs**: Taken at age 16\n- **A-levels**: Taken at age 18\n- **University Tuition**: Up to £9,250 per year in England\n\n### Work & Benefits\n- **Minimum Wage**: Varies by age (check current rates)\n- **Working Time**: Maximum 48 hours per week (can opt out)\n- **Holiday Entitlement**: Minimum 28 days per year (including bank holidays)\n- **Maternity Leave**: Up to 52 weeks\n- **Paternity Leave**: Up to 2 weeks\n- **National Insurance**: Required for work\n\n### Important Public Holidays\n- **New Year's Day**: January 1st\n- **Good Friday**: Friday before Easter Sunday\n- **Easter Monday**: Monday after Easter Sunday\n- **Early May Bank Holiday**: First Monday in May\n- **Spring Bank Holiday**: Last Monday in May\n- **Summer Bank Holiday**: Last Monday in August\n- **Christmas Day**: December 25th\n- **Boxing Day**: December 26th\n\n### Sports & Culture\n- **National Sports**: Football, rugby, cricket, tennis\n- **Wimbledon**: World's oldest tennis tournament\n- **Six Nations**: Annual rugby championship\n- **BBC**: Founded 1922, public service broadcaster\n- **Shakespeare**: Born 1564 in Stratford-upon-Avon\n- **Beatles**: From Liverpool, 1960s\n\n### Famous British People\n- **Scientists**: Isaac Newton, Charles Darwin, Alexander Fleming, Stephen Hawking\n- **Writers**: William Shakespeare, Charles Dickens, Jane Austen, Roald Dahl\n- **Leaders**: Winston Churchill, Margaret Thatcher, Emmeline Pankhurst\n- **Inventors**: Alexander Graham Bell, John Logie Baird, Tim Berners-Lee\n\n### UK Values & Traditions\n- **Democracy**: Free and fair elections\n- **Rule of Law**: Everyone equal under the law\n- **Individual Liberty**: Freedom of speech and belief\n- **Tolerance**: Respect for different opinions and beliefs\n- **Participation**: Civic duty and community involvement\n\n### Emergency Services\n- **Emergency Number**: 999 (or 112)\n- **Non-Emergency Police**: 101\n- **Non-Emergency Health**: 111 (NHS)\n\n### Housing & Council Tax\n- **Council Tax**: Local tax on property\n- **Bands A-H**: Different tax rates based on property value\n- **Housing Benefit**: Available for those on low income\n- **Right to Buy**: Council tenants can buy their homes\n\n### Banking & Finance\n- **Bank of England**: Central bank, sets interest rates\n- **Major Banks**: Barclays, HSBC, Lloyds, NatWest, Santander\n- **Credit Score**: Important for loans and mortgages\n- **ISA**: Individual Savings Account (tax-free savings)\n\n### Transport\n- **Driving**: Left side of the road\n- **MOT**: Annual vehicle safety test (cars over 3 years old)\n- **London Transport**: Underground (Tube), buses, overground\n- **National Rail**: Train network across Britain\n- **Oyster Card**: London public transport payment\n\n### Health Service (NHS)\n- **Founded**: 1948\n- **Free at Point of Use**: Funded by taxation\n- **GP**: General Practitioner (family doctor)\n- **A&E**: Accident & Emergency departments\n- **Prescription Charges**: Apply in England (free in Scotland, Wales, NI)\n\n## Quick Facts for Test Success\n\n### Most Tested Numbers\n- **67 million**: UK population\n- **650**: Number of MPs\n- **18**: Voting age\n- **16**: School leaving age\n- **1066**: Norman Conquest\n- **1215**: Magna Carta\n- **1707**: Act of Union (Great Britain)\n- **1918**: Women get the vote\n- **1948**: NHS established\n\n### Common Question Topics\n1. **Constitutional Monarchy**: UK system of government\n2. **Devolution**: Powers given to Scotland, Wales, Northern Ireland\n3. **Commonwealth**: Countries with historical links to Britain\n4. **Human Rights**: Protected under UK law\n5. **Volunteering**: Important part of UK society\n6. **Integration**: Contributing to local community\n\n### Remember These Key Concepts\n- **Constitutional Monarchy**: Monarch is Head of State, PM is Head of Government\n- **Parliamentary Democracy**: MPs elected by the people\n- **Devolved Administrations**: Scotland, Wales, NI have own parliaments\n- **Common Law**: Legal system based on precedent\n- **Civil Service**: Politically neutral government workers\n- **Cabinet**: Senior government ministers\n- **Opposition**: Largest non-government party\n- **Backbenchers**: MPs who are not government ministers\n\n## Test Day Tips\n1. Focus on dates, numbers, and key facts\n2. Understand the UK's democratic system\n3. Know the differences between England, Scotland, Wales, and Northern Ireland\n4. Remember important historical events and their significance\n5. Understand UK values and how they apply in practice\n\n---\n*This cheatsheet covers the most commonly tested facts and figures for the Life in UK test. Study these key points alongside your official handbook for best results.*","size_bytes":6680},"client/src/components/acts-treaties-bills-matching.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Shuffle, RotateCcw, FileText, Filter, BookOpen } from \"lucide-react\";\nimport { celebrateWithTheme } from \"@/lib/confetti\";\n\ninterface LegislationData {\n  id: string;\n  document: string;\n  year: string;\n  significance: string;\n  category: 'Constitutional' | 'Social Reform' | 'International Treaty' | 'Religious' | 'Economic' | 'Legal Reform' | 'Human Rights';\n  type: 'Act' | 'Treaty' | 'Bill' | 'Charter' | 'Agreement';\n  impact: 'Major' | 'Foundational' | 'Revolutionary' | 'Historic' | 'Modern';\n}\n\nconst actsTreeatiesBillsData: LegislationData[] = [\n  // Constitutional Documents\n  {\n    id: \"1\",\n    document: \"Magna Carta\",\n    year: \"1215\",\n    significance: \"Limited royal power, established rule of law, foundation of constitutional monarchy\",\n    category: \"Constitutional\",\n    type: \"Charter\",\n    impact: \"Foundational\"\n  },\n  {\n    id: \"2\",\n    document: \"Bill of Rights\",\n    year: \"1689\",\n    significance: \"Established parliamentary supremacy, limited monarch's power, guaranteed civil liberties\",\n    category: \"Constitutional\",\n    type: \"Bill\",\n    impact: \"Foundational\"\n  },\n  {\n    id: \"3\",\n    document: \"Act of Union (England and Scotland)\",\n    year: \"1707\",\n    significance: \"United England and Scotland into Kingdom of Great Britain, created UK Parliament\",\n    category: \"Constitutional\",\n    type: \"Act\",\n    impact: \"Major\"\n  },\n  {\n    id: \"4\",\n    document: \"Act of Union (Great Britain and Ireland)\",\n    year: \"1800\",\n    significance: \"United Great Britain and Ireland into United Kingdom, dissolved Irish Parliament\",\n    category: \"Constitutional\",\n    type: \"Act\",\n    impact: \"Major\"\n  },\n  {\n    id: \"5\",\n    document: \"Parliament Act\",\n    year: \"1911\",\n    significance: \"Limited House of Lords power, established Commons supremacy over legislation\",\n    category: \"Constitutional\",\n    type: \"Act\",\n    impact: \"Revolutionary\"\n  },\n\n  // Social and Legal Reforms\n  {\n    id: \"6\",\n    document: \"Great Reform Act\",\n    year: \"1832\",\n    significance: \"Extended voting rights to middle class, reformed electoral system, reduced rotten boroughs\",\n    category: \"Social Reform\",\n    type: \"Act\",\n    impact: \"Revolutionary\"\n  },\n  {\n    id: \"7\",\n    document: \"Representation of the People Act\",\n    year: \"1918\",\n    significance: \"Extended vote to all men over 21 and women over 30, major democratic expansion\",\n    category: \"Social Reform\",\n    type: \"Act\",\n    impact: \"Revolutionary\"\n  },\n  {\n    id: \"8\",\n    document: \"Representation of the People Act\",\n    year: \"1928\",\n    significance: \"Extended vote to all women over 21, achieved full adult suffrage equality\",\n    category: \"Social Reform\",\n    type: \"Act\",\n    impact: \"Revolutionary\"\n  },\n  {\n    id: \"9\",\n    document: \"Race Relations Act\",\n    year: \"1965\",\n    significance: \"Outlawed racial discrimination in public places, first comprehensive race equality law\",\n    category: \"Human Rights\",\n    type: \"Act\",\n    impact: \"Major\"\n  },\n  {\n    id: \"10\",\n    document: \"Equal Pay Act\",\n    year: \"1970\",\n    significance: \"Required equal pay for equal work regardless of gender, landmark gender equality legislation\",\n    category: \"Human Rights\",\n    type: \"Act\",\n    impact: \"Major\"\n  },\n\n  // Religious Legislation\n  {\n    id: \"11\",\n    document: \"Act of Supremacy\",\n    year: \"1534\",\n    significance: \"Made Henry VIII head of Church of England, broke with Roman Catholic Church\",\n    category: \"Religious\",\n    type: \"Act\",\n    impact: \"Revolutionary\"\n  },\n  {\n    id: \"12\",\n    document: \"Catholic Emancipation Act\",\n    year: \"1829\",\n    significance: \"Allowed Catholics to sit in Parliament and hold most public offices\",\n    category: \"Religious\",\n    type: \"Act\",\n    impact: \"Major\"\n  },\n\n  // Economic Legislation\n  {\n    id: \"13\",\n    document: \"Abolition of Slave Trade Act\",\n    year: \"1807\",\n    significance: \"Outlawed slave trade in British Empire, major humanitarian and economic reform\",\n    category: \"Economic\",\n    type: \"Act\",\n    impact: \"Revolutionary\"\n  },\n  {\n    id: \"14\",\n    document: \"Slavery Abolition Act\",\n    year: \"1833\",\n    significance: \"Abolished slavery throughout British Empire, freed 800,000 enslaved people\",\n    category: \"Human Rights\",\n    type: \"Act\",\n    impact: \"Revolutionary\"\n  },\n  {\n    id: \"15\",\n    document: \"Factory Act\",\n    year: \"1833\",\n    significance: \"Limited child labor, established factory inspections, improved working conditions\",\n    category: \"Social Reform\",\n    type: \"Act\",\n    impact: \"Major\"\n  },\n\n  // International Treaties\n  {\n    id: \"16\",\n    document: \"Treaty of Versailles\",\n    year: \"1919\",\n    significance: \"Ended World War I, established League of Nations, redrew European map\",\n    category: \"International Treaty\",\n    type: \"Treaty\",\n    impact: \"Historic\"\n  },\n  {\n    id: \"17\",\n    document: \"North Atlantic Treaty\",\n    year: \"1949\",\n    significance: \"Established NATO alliance, collective defense against Soviet threat during Cold War\",\n    category: \"International Treaty\",\n    type: \"Treaty\",\n    impact: \"Major\"\n  },\n  {\n    id: \"18\",\n    document: \"European Communities Act\",\n    year: \"1972\",\n    significance: \"Enabled UK membership of EEC, incorporated European law into UK legal system\",\n    category: \"International Treaty\",\n    type: \"Act\",\n    impact: \"Major\"\n  },\n\n  // Modern Legislation\n  {\n    id: \"19\",\n    document: \"Human Rights Act\",\n    year: \"1998\",\n    significance: \"Incorporated European Convention on Human Rights into UK law, enhanced civil liberties\",\n    category: \"Human Rights\",\n    type: \"Act\",\n    impact: \"Major\"\n  },\n  {\n    id: \"20\",\n    document: \"Scotland Act\",\n    year: \"1998\",\n    significance: \"Established Scottish Parliament and devolved government, major constitutional change\",\n    category: \"Constitutional\",\n    type: \"Act\",\n    impact: \"Major\"\n  },\n  {\n    id: \"21\",\n    document: \"European Union (Withdrawal) Act\",\n    year: \"2018\",\n    significance: \"Repealed European Communities Act, enabled Brexit transition, ended EU law supremacy\",\n    category: \"Constitutional\",\n    type: \"Act\",\n    impact: \"Major\"\n  }\n];\n\ninterface ActsTreatiesBillsMatchingProps {\n  userId: string;\n}\n\nexport default function ActsTreatiesBillsMatching({ userId }: ActsTreatiesBillsMatchingProps) {\n  const [documents, setDocuments] = useState<LegislationData[]>([]);\n  const [years, setYears] = useState<LegislationData[]>([]);\n  const [significances, setSignificances] = useState<LegislationData[]>([]);\n  const [selectedDocument, setSelectedDocument] = useState<LegislationData | null>(null);\n  const [selectedYear, setSelectedYear] = useState<LegislationData | null>(null);\n  const [selectedSignificance, setSelectedSignificance] = useState<LegislationData | null>(null);\n  const [matchedItems, setMatchedItems] = useState<Set<string>>(new Set());\n  const [incorrectAttempts, setIncorrectAttempts] = useState<Set<string>>(new Set());\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [filterCategory, setFilterCategory] = useState<string>('all');\n  const [filterType, setFilterType] = useState<string>('all');\n  const [gameComplete, setGameComplete] = useState(false);\n  const [showReference, setShowReference] = useState(false);\n\n  const categories = ['all', 'Constitutional', 'Social Reform', 'International Treaty', 'Religious', 'Economic', 'Legal Reform', 'Human Rights'];\n  const types = ['all', 'Act', 'Treaty', 'Bill', 'Charter', 'Agreement'];\n\n  const getFilteredData = () => {\n    let filtered = actsTreeatiesBillsData;\n    \n    if (filterCategory !== 'all') {\n      filtered = filtered.filter(item => item.category === filterCategory);\n    }\n    \n    if (filterType !== 'all') {\n      filtered = filtered.filter(item => item.type === filterType);\n    }\n    \n    return filtered;\n  };\n\n  const shuffleArray = <T,>(array: T[]): T[] => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  const initializeGame = () => {\n    const filteredData = getFilteredData();\n    setDocuments(shuffleArray(filteredData));\n    setYears(shuffleArray(filteredData));\n    setSignificances(shuffleArray(filteredData));\n    setMatchedItems(new Set());\n    setIncorrectAttempts(new Set());\n    setSelectedDocument(null);\n    setSelectedYear(null);\n    setSelectedSignificance(null);\n    setScore(0);\n    setAttempts(0);\n    setGameComplete(false);\n  };\n\n  useEffect(() => {\n    initializeGame();\n  }, [filterCategory, filterType]);\n\n  const handleDocumentClick = (doc: LegislationData) => {\n    if (matchedItems.has(doc.id)) return;\n    setSelectedDocument(doc);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handleYearClick = (year: LegislationData) => {\n    if (matchedItems.has(year.id)) return;\n    setSelectedYear(year);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handleSignificanceClick = (significance: LegislationData) => {\n    if (matchedItems.has(significance.id)) return;\n    setSelectedSignificance(significance);\n    setIncorrectAttempts(new Set());\n  };\n\n  useEffect(() => {\n    if (selectedDocument && selectedYear && selectedSignificance) {\n      setAttempts(prev => prev + 1);\n      \n      if (selectedDocument.id === selectedYear.id && \n          selectedYear.id === selectedSignificance.id) {\n        // Correct match!\n        celebrateWithTheme('legislative');\n        setMatchedItems(prev => new Set(Array.from(prev).concat(selectedDocument.id)));\n        setScore(prev => prev + 1);\n        \n        // Check if game is complete\n        const filteredData = getFilteredData();\n        if (matchedItems.size + 1 >= filteredData.length) {\n          setGameComplete(true);\n          setTimeout(() => celebrateWithTheme('legislative'), 500);\n        }\n      } else {\n        // Incorrect match\n        const incorrectIds = new Set([selectedDocument.id, selectedYear.id, selectedSignificance.id]);\n        setIncorrectAttempts(incorrectIds);\n        \n        setTimeout(() => {\n          setIncorrectAttempts(new Set());\n        }, 3000);\n      }\n      \n      // Reset selections\n      setTimeout(() => {\n        setSelectedDocument(null);\n        setSelectedYear(null);\n        setSelectedSignificance(null);\n      }, incorrectAttempts.size > 0 ? 3000 : 1000);\n    }\n  }, [selectedDocument, selectedYear, selectedSignificance, matchedItems.size]);\n\n  const getButtonStyle = (item: LegislationData, isSelected: boolean) => {\n    const baseClasses = \"w-full text-left p-3 rounded-lg border transition-all duration-300 hover:shadow-md\";\n    const isMatched = matchedItems.has(item.id);\n    const isIncorrect = incorrectAttempts.has(item.id);\n    \n    if (isMatched) {\n      return `${baseClasses} bg-green-100 border-green-300 text-green-800 cursor-default shadow-sm`;\n    }\n    \n    if (isIncorrect) {\n      return `${baseClasses} bg-red-100 border-red-300 text-red-800 animate-pulse cursor-pointer`;\n    }\n    \n    if (isSelected) {\n      return `${baseClasses} bg-amber-100 border-amber-400 text-amber-800 shadow-lg cursor-pointer`;\n    }\n    \n    return `${baseClasses} bg-white border-gray-200 text-gray-800 hover:bg-gray-50 cursor-pointer`;\n  };\n\n  const getCategoryColor = (category: string) => {\n    const colors = {\n      Constitutional: 'bg-blue-100 text-blue-800',\n      'Social Reform': 'bg-green-100 text-green-800',\n      'International Treaty': 'bg-purple-100 text-purple-800',\n      Religious: 'bg-red-100 text-red-800',\n      Economic: 'bg-yellow-100 text-yellow-800',\n      'Legal Reform': 'bg-gray-100 text-gray-800',\n      'Human Rights': 'bg-pink-100 text-pink-800'\n    };\n    return colors[category as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  const getImpactColor = (impact: string) => {\n    const colors = {\n      Major: 'bg-orange-100 text-orange-800',\n      Foundational: 'bg-purple-100 text-purple-800',\n      Revolutionary: 'bg-red-100 text-red-800',\n      Historic: 'bg-blue-100 text-blue-800',\n      Modern: 'bg-green-100 text-green-800'\n    };\n    return colors[impact as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  const accuracy = attempts > 0 ? Math.round((score / attempts) * 100) : 0;\n  const filteredData = getFilteredData();\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Game Header & Stats */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <div className=\"flex items-center gap-3\">\n          <FileText className=\"h-6 w-6 text-amber-600\" />\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-900\">Acts, Treaties & Bills Triple Match</h3>\n            <p className=\"text-sm text-gray-600\">Match British legislation with their years and historical significance</p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center gap-4\">\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-amber-600\">{score}/{filteredData.length}</div>\n            <div className=\"text-xs text-gray-500\">Matches</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-green-600\">{accuracy}%</div>\n            <div className=\"text-xs text-gray-500\">Accuracy</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"space-y-3\">\n        <div className=\"flex flex-wrap gap-2 items-center\">\n          <Filter className=\"h-4 w-4 text-gray-500\" />\n          <span className=\"text-sm font-medium text-gray-700\">Category:</span>\n          {categories.map(category => (\n            <Badge\n              key={category}\n              variant={filterCategory === category ? \"default\" : \"outline\"}\n              className={`cursor-pointer transition-colors ${\n                filterCategory === category \n                  ? 'bg-amber-600 text-white' \n                  : 'hover:bg-amber-100'\n              }`}\n              onClick={() => setFilterCategory(category)}\n            >\n              {category === 'all' ? 'All Categories' : category}\n            </Badge>\n          ))}\n        </div>\n        \n        <div className=\"flex flex-wrap gap-2 items-center\">\n          <Filter className=\"h-4 w-4 text-gray-500\" />\n          <span className=\"text-sm font-medium text-gray-700\">Type:</span>\n          {types.map(type => (\n            <Badge\n              key={type}\n              variant={filterType === type ? \"default\" : \"outline\"}\n              className={`cursor-pointer transition-colors ${\n                filterType === type \n                  ? 'bg-blue-600 text-white' \n                  : 'hover:bg-blue-100'\n              }`}\n              onClick={() => setFilterType(type)}\n            >\n              {type === 'all' ? 'All Types' : type}\n            </Badge>\n          ))}\n        </div>\n      </div>\n\n      {/* Game Controls */}\n      <div className=\"flex gap-2\">\n        <Button\n          onClick={initializeGame}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <Shuffle className=\"h-4 w-4\" />\n          Shuffle\n        </Button>\n        <Button\n          onClick={initializeGame}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <RotateCcw className=\"h-4 w-4\" />\n          Reset\n        </Button>\n        <Button\n          onClick={() => setShowReference(!showReference)}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <BookOpen className=\"h-4 w-4\" />\n          {showReference ? 'Hide' : 'Show'} Legislative Reference\n        </Button>\n      </div>\n\n      {gameComplete && (\n        <Card className=\"border-green-200 bg-green-50\">\n          <CardContent className=\"p-4 text-center\">\n            <h3 className=\"text-lg font-semibold text-green-800 mb-2\">🎉 Legislative Mastery Achieved!</h3>\n            <p className=\"text-green-700\">\n              You've successfully matched all {filteredData.length} Acts, Treaties, and Bills!\n            </p>\n            <p className=\"text-sm text-green-600 mt-1\">\n              Final Score: {score}/{filteredData.length} ({accuracy}% accuracy)\n            </p>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Legislative Reference Card */}\n      {showReference && (\n        <Card className=\"bg-amber-50 border-amber-200\">\n          <CardHeader>\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <BookOpen className=\"h-4 w-4 text-amber-600\" />\n              British Legislative History Reference\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 text-sm\">\n              {filteredData.map((doc) => (\n                <div key={`ref-${doc.id}`} className=\"p-3 bg-white rounded border\">\n                  <div className=\"font-semibold text-amber-800\">{doc.document}</div>\n                  <div className=\"text-gray-600 mt-1 text-xs leading-relaxed\">{doc.significance}</div>\n                  <div className=\"flex gap-1 mt-2 flex-wrap\">\n                    <Badge className={`text-xs ${getCategoryColor(doc.category)}`}>\n                      {doc.category}\n                    </Badge>\n                    <Badge className=\"text-xs bg-gray-100 text-gray-800\">\n                      {doc.year}\n                    </Badge>\n                    <Badge className={`text-xs ${getImpactColor(doc.impact)}`}>\n                      {doc.impact}\n                    </Badge>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Matching Game Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Documents Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <FileText className=\"h-4 w-4 text-amber-600\" />\n              Acts, Treaties & Bills ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {documents.map((doc) => (\n              <div key={`doc-${doc.id}`} className=\"space-y-1\">\n                <button\n                  onClick={() => handleDocumentClick(doc)}\n                  className={getButtonStyle(doc, selectedDocument?.id === doc.id)}\n                  disabled={matchedItems.has(doc.id)}\n                >\n                  <div className=\"font-medium text-sm leading-relaxed\">{doc.document}</div>\n                  <div className=\"flex gap-1 mt-1 flex-wrap\">\n                    <Badge className={`text-xs ${getCategoryColor(doc.category)}`}>\n                      {doc.category}\n                    </Badge>\n                    <Badge className=\"text-xs bg-blue-100 text-blue-800\">\n                      {doc.type}\n                    </Badge>\n                    <Badge className={`text-xs ${getImpactColor(doc.impact)}`}>\n                      {doc.impact}\n                    </Badge>\n                  </div>\n                </button>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Years Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <FileText className=\"h-4 w-4 text-green-600\" />\n              Years ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {years.map((year) => (\n              <button\n                key={`year-${year.id}`}\n                onClick={() => handleYearClick(year)}\n                className={getButtonStyle(year, selectedYear?.id === year.id)}\n                disabled={matchedItems.has(year.id)}\n              >\n                <div className=\"font-bold text-xl text-center\">\n                  {year.year}\n                </div>\n                <Badge className={`text-xs w-full justify-center mt-1 ${getCategoryColor(year.category)}`}>\n                  {year.category}\n                </Badge>\n              </button>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Significance Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <BookOpen className=\"h-4 w-4 text-purple-600\" />\n              Historical Significance ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {significances.map((significance) => (\n              <button\n                key={`significance-${significance.id}`}\n                onClick={() => handleSignificanceClick(significance)}\n                className={getButtonStyle(significance, selectedSignificance?.id === significance.id)}\n                disabled={matchedItems.has(significance.id)}\n              >\n                <div className=\"font-medium text-sm leading-relaxed\">\n                  {significance.significance}\n                </div>\n              </button>\n            ))}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Instructions */}\n      <Card className=\"bg-amber-50 border-amber-200\">\n        <CardContent className=\"p-4\">\n          <h4 className=\"font-semibold text-amber-900 mb-2\">How to Play:</h4>\n          <ul className=\"text-sm text-amber-800 space-y-1\">\n            <li>• Select one document, one year, and one historical significance that all belong together</li>\n            <li>• All three selections must match the same piece of legislation</li>\n            <li>• Correct matches turn green and celebrate with confetti</li>\n            <li>• Use category and type filters to focus on specific legislation types</li>\n            <li>• Click \"Show Legislative Reference\" for a comprehensive guide to all documents</li>\n            <li>• Learn about British constitutional, social, and legal history from Magna Carta to Brexit!</li>\n          </ul>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":22476},"client/src/components/ai-exercises-game.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { Brain, RotateCcw, CheckCircle, XCircle, Sparkles, Lightbulb, Award, Clock } from \"lucide-react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface AIExercisesGameProps {\n  userId: string;\n}\n\nexport default function AIExercisesGame({ userId }: AIExercisesGameProps) {\n  const [currentExercise, setCurrentExercise] = useState<any>(null);\n  const [userAnswers, setUserAnswers] = useState<Record<string, string>>({});\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [score, setScore] = useState({ correct: 0, total: 0 });\n  const [parsedChoices, setParsedChoices] = useState<Array<{id: string, options: string[], correct: string}>>([]);\n  const [selectedTopic, setSelectedTopic] = useState<string>(\"\");\n  const [selectedDifficulty, setSelectedDifficulty] = useState<number>(1);\n  const queryClient = useQueryClient();\n  const { toast } = useToast();\n\n  const { data: exercises = [] } = useQuery({\n    queryKey: [\"/api/exercises\", userId],\n  });\n\n  const generateExerciseMutation = useMutation({\n    mutationFn: async ({ topic, difficulty }: { topic: string; difficulty?: number }) => {\n      const response = await apiRequest(\"POST\", \"/api/exercises/generate\", {\n        userId,\n        topic,\n        difficulty: difficulty || 1\n      });\n      return response.json();\n    },\n    onSuccess: (data) => {\n      setCurrentExercise(data);\n      setUserAnswers({});\n      setShowFeedback(false);\n      setScore({ correct: 0, total: 0 });\n      \n      // Parse inline choices from the text and reset user answers\n      let choices: Array<{id: string, options: string[], correct: string}> = [];\n      if (data.content?.text) {\n        choices = parseInlineChoices(data.content.text);\n        setParsedChoices(choices);\n        \n        // Pre-fill answers with first option (correct answer) to show text properly\n        const initialAnswers: Record<string, string> = {};\n        choices.forEach((choice) => {\n          initialAnswers[choice.id] = choice.options[0];\n        });\n        setUserAnswers(initialAnswers);\n      }\n      \n      queryClient.invalidateQueries({ queryKey: [\"/api/exercises\", userId] });\n      \n      toast({\n        title: \"New Exercise Generated!\",\n        description: `${selectedTopic} passage created with ${choices.length} interactive words to complete.`\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Generation Failed\",\n        description: \"Failed to generate new exercise. Please try again.\",\n        variant: \"destructive\"\n      });\n    }\n  });\n\n  const submitAttemptMutation = useMutation({\n    mutationFn: async (attemptData: any) => {\n      const response = await apiRequest(\"POST\", \"/api/exercises/attempt\", attemptData);\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/exercises/attempts\", userId] });\n      toast({\n        title: \"Exercise Completed!\",\n        description: `Your score: ${score.correct}/${score.total}`\n      });\n    }\n  });\n\n  const topics = [\n    { value: \"British Government\", icon: \"🏛️\", description: \"Parliament, Prime Ministers, political system\" },\n    { value: \"UK History\", icon: \"📜\", description: \"From Roman Britain to modern times\" },\n    { value: \"British Culture\", icon: \"🎭\", description: \"Arts, traditions, festivals, literature\" },\n    { value: \"British Values\", icon: \"⚖️\", description: \"Democracy, rule of law, liberty, tolerance\" },\n    { value: \"UK Geography\", icon: \"🗺️\", description: \"Countries, cities, landmarks, demographics\" },\n    { value: \"Sports & Achievements\", icon: \"🏆\", description: \"British sports history and heroes\" },\n    { value: \"Laws & Justice\", icon: \"⚖️\", description: \"Legal system, courts, police\" }\n  ];\n\n  const difficulties = [\n    { value: 1, label: \"Beginner\", color: \"bg-green-100 text-green-800\", description: \"Basic knowledge, 8-10 questions\" },\n    { value: 2, label: \"Intermediate\", color: \"bg-blue-100 text-blue-800\", description: \"Standard level, 10-12 questions\" },\n    { value: 3, label: \"Advanced\", color: \"bg-purple-100 text-purple-800\", description: \"Challenge mode, 12 questions\" }\n  ];\n\n  const handleGenerateExercise = () => {\n    if (!selectedTopic) {\n      toast({\n        title: \"Select a Topic\",\n        description: \"Please choose a topic before generating an exercise.\",\n        variant: \"destructive\"\n      });\n      return;\n    }\n    generateExerciseMutation.mutate({ topic: selectedTopic, difficulty: selectedDifficulty });\n  };\n\n  // Function to parse inline choices from text\n  const parseInlineChoices = (text: string) => {\n    const choiceRegex = /\\{([^}]+)\\}/g;\n    const choices: Array<{id: string, options: string[], correct: string}> = [];\n    let match;\n    let index = 0;\n    \n    while ((match = choiceRegex.exec(text)) !== null) {\n      const options = match[1].split('|');\n      if (options.length >= 2) {\n        choices.push({\n          id: `choice_${index}`,\n          options: options,\n          correct: options[0] // First option is always correct\n        });\n        index++;\n      }\n    }\n    \n    return choices;\n  };\n\n  // Function to render text with clickable word choices\n  const renderTextWithChoices = (text: string) => {\n    const choiceRegex = /\\{([^}]+)\\}/g;\n    const parts: Array<string | JSX.Element> = [];\n    let lastIndex = 0;\n    let match;\n    let choiceIndex = 0;\n    \n    while ((match = choiceRegex.exec(text)) !== null) {\n      // Add text before the choice\n      if (match.index > lastIndex) {\n        parts.push(text.substring(lastIndex, match.index));\n      }\n      \n      const options = match[1].split('|');\n      const choiceId = `choice_${choiceIndex}`;\n      const currentSelection = userAnswers[choiceId];\n      const isAnswered = !!currentSelection;\n      const isCorrect = currentSelection === options[0];\n      \n      // Add clickable word with dropdown menu\n      parts.push(\n        <span key={choiceId} className=\"relative inline-block\">\n          <Select\n            value={currentSelection || options[0]} // Show first option as default\n            onValueChange={(value) => handleAnswerChange(choiceId, value)}\n            disabled={showFeedback}\n          >\n            <SelectTrigger className={`inline-flex h-auto px-2 py-1 text-base font-medium rounded border-2 border-dashed cursor-pointer transition-all ${\n              showFeedback \n                ? isCorrect\n                  ? 'border-green-500 bg-green-100 text-green-800'\n                  : isAnswered && !isCorrect\n                  ? 'border-red-500 bg-red-100 text-red-800'\n                  : 'border-gray-400 bg-gray-100 text-gray-600'\n                : isAnswered\n                ? 'border-blue-500 bg-blue-100 text-blue-800'\n                : 'border-indigo-400 bg-indigo-50 text-indigo-700 hover:border-indigo-600 hover:bg-indigo-100'\n            }`}>\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              {options.map((option, index) => (\n                <SelectItem key={index} value={option}>\n                  {option}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </span>\n      );\n      \n      lastIndex = match.index + match[0].length;\n      choiceIndex++;\n    }\n    \n    // Add remaining text\n    if (lastIndex < text.length) {\n      parts.push(text.substring(lastIndex));\n    }\n    \n    return parts;\n  };\n\n  const handleAnswerChange = (choiceId: string, answer: string) => {\n    setUserAnswers(prev => ({\n      ...prev,\n      [choiceId]: answer\n    }));\n  };\n\n  const handleSubmitExercise = () => {\n    if (!currentExercise || Object.keys(userAnswers).length === 0 || parsedChoices.length === 0) return;\n\n    let correct = 0;\n    const total = parsedChoices.length;\n\n    parsedChoices.forEach((choice) => {\n      const userAnswer = userAnswers[choice.id];\n      if (userAnswer === choice.correct) {\n        correct++;\n      }\n    });\n\n    setScore({ correct, total });\n    setShowFeedback(true);\n\n    const attemptData = {\n      userId,\n      exerciseId: currentExercise.id,\n      answers: userAnswers,\n      score: correct,\n      totalQuestions: total,\n      completedAt: new Date().toISOString()\n    };\n\n    submitAttemptMutation.mutate(attemptData);\n  };\n\n  const resetExercise = () => {\n    setCurrentExercise(null);\n    setUserAnswers({});\n    setShowFeedback(false);\n    setScore({ correct: 0, total: 0 });\n    setParsedChoices([]);\n    setSelectedTopic(\"\");\n    setSelectedDifficulty(1);\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* AI Exercise Generator Header */}\n      <Card className=\"bg-gradient-to-r from-indigo-50 to-purple-50 border-indigo-200\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-3 text-xl\">\n            <div className=\"p-2 bg-indigo-100 rounded-lg\">\n              <Sparkles className=\"h-6 w-6 text-indigo-600\" />\n            </div>\n            AI-Powered Exercise Generator\n            <Badge className=\"bg-indigo-100 text-indigo-800\">Smart Learning</Badge>\n          </CardTitle>\n          <p className=\"text-gray-600 mt-2\">\n            Generate personalized exercises using advanced AI. Choose your topic and difficulty level for tailored practice questions.\n          </p>\n        </CardHeader>\n      </Card>\n\n      {/* Topic and Difficulty Selection */}\n      <div className=\"grid md:grid-cols-2 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Lightbulb className=\"h-5 w-5 text-yellow-600\" />\n              Choose Your Topic\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-3\">\n            {topics.map((topic) => (\n              <div\n                key={topic.value}\n                className={`p-3 border rounded-lg cursor-pointer transition-all hover:border-indigo-300 ${\n                  selectedTopic === topic.value ? 'border-indigo-500 bg-indigo-50' : 'border-gray-200'\n                }`}\n                onClick={() => setSelectedTopic(topic.value)}\n              >\n                <div className=\"flex items-center gap-3\">\n                  <span className=\"text-2xl\">{topic.icon}</span>\n                  <div>\n                    <div className=\"font-medium\">{topic.value}</div>\n                    <div className=\"text-sm text-gray-500\">{topic.description}</div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Award className=\"h-5 w-5 text-purple-600\" />\n              Select Difficulty\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-3\">\n            {difficulties.map((diff) => (\n              <div\n                key={diff.value}\n                className={`p-3 border rounded-lg cursor-pointer transition-all hover:border-purple-300 ${\n                  selectedDifficulty === diff.value ? 'border-purple-500 bg-purple-50' : 'border-gray-200'\n                }`}\n                onClick={() => setSelectedDifficulty(diff.value)}\n              >\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <Badge className={diff.color}>{diff.label}</Badge>\n                    <div className=\"text-sm text-gray-500 mt-1\">{diff.description}</div>\n                  </div>\n                </div>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Generate Exercise Button */}\n      <div className=\"text-center\">\n        <Button\n          onClick={handleGenerateExercise}\n          disabled={generateExerciseMutation.isPending || !selectedTopic}\n          size=\"lg\"\n          className=\"bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-700 hover:to-purple-700 text-white px-8 py-3\"\n        >\n          {generateExerciseMutation.isPending ? (\n            <>\n              <Brain className=\"mr-2 h-5 w-5 animate-pulse\" />\n              Generating Exercise...\n            </>\n          ) : (\n            <>\n              <Sparkles className=\"mr-2 h-5 w-5\" />\n              Generate AI Exercise\n            </>\n          )}\n        </Button>\n      </div>\n\n      {/* Current Exercise Display */}\n      {currentExercise && (\n        <Card className=\"border-2 border-indigo-200\">\n          <CardHeader>\n            <div className=\"flex items-center justify-between\">\n              <CardTitle className=\"flex items-center gap-2\">\n                <Brain className=\"h-5 w-5 text-indigo-600\" />\n                {currentExercise.topic} - Fill in the Blanks\n              </CardTitle>\n              <div className=\"flex items-center gap-2\">\n                <Badge className=\"bg-indigo-100 text-indigo-800\">\n                  {parsedChoices.length} Choices\n                </Badge>\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={resetExercise}\n                  className=\"flex items-center gap-1\"\n                >\n                  <RotateCcw className=\"h-4 w-4\" />\n                  Reset\n                </Button>\n              </div>\n            </div>\n          </CardHeader>\n          <CardContent className=\"space-y-6\">\n            {/* Exercise Text with Interactive Choices */}\n            <div className=\"p-6 border-2 border-indigo-200 rounded-lg bg-indigo-50\">\n              <div className=\"mb-4\">\n                <h4 className=\"font-semibold text-lg text-indigo-900 mb-2\">\n                  Read the passage and click on the highlighted words to select the correct options:\n                </h4>\n                <p className=\"text-sm text-indigo-700\">\n                  Click on any dashed underlined word to see multiple choice options. Choose the best answer for each word.\n                </p>\n              </div>\n              \n              <div className=\"text-lg leading-relaxed text-gray-900 p-6 bg-white rounded-lg border border-indigo-200 min-h-[200px]\">\n                {currentExercise.content?.text ? (\n                  <div className=\"prose prose-lg max-w-none\">\n                    <p>{renderTextWithChoices(currentExercise.content.text)}</p>\n                  </div>\n                ) : (\n                  <div className=\"text-gray-500 italic flex items-center justify-center h-32\">\n                    No exercise text available\n                  </div>\n                )}\n              </div>\n            </div>\n\n            {/* Progress Indicator */}\n            {parsedChoices.length > 0 && !showFeedback && (\n              <div className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                <div className=\"text-sm text-gray-600\">\n                  Interactive words: {parsedChoices.length} | Ready to submit\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-xs text-gray-500\">Click words to change answers</span>\n                  <div className=\"w-3 h-3 rounded-full bg-indigo-500 animate-pulse\"></div>\n                </div>\n              </div>\n            )}\n\n            {/* Show correct answers after submission */}\n            {showFeedback && (\n              <div className=\"p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n                <h5 className=\"font-semibold text-blue-900 mb-3 flex items-center gap-2\">\n                  <CheckCircle className=\"h-5 w-5\" />\n                  Answer Review\n                </h5>\n                <div className=\"space-y-2 text-sm\">\n                  {parsedChoices.map((choice, index) => {\n                    const userAnswer = userAnswers[choice.id];\n                    const isCorrect = userAnswer === choice.correct;\n                    \n                    return (\n                      <div key={choice.id} className=\"flex items-center justify-between\">\n                        <span>Choice {index + 1}:</span>\n                        <div className=\"flex items-center gap-2\">\n                          <span className={`px-2 py-1 rounded ${isCorrect ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>\n                            {userAnswer || \"Not answered\"}\n                          </span>\n                          {!isCorrect && (\n                            <>\n                              <span className=\"text-gray-500\">→</span>\n                              <span className=\"px-2 py-1 rounded bg-green-100 text-green-800\">\n                                {choice.correct}\n                              </span>\n                            </>\n                          )}\n                          {isCorrect ? (\n                            <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                          ) : (\n                            <XCircle className=\"h-4 w-4 text-red-600\" />\n                          )}\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n\n            {/* Explanation */}\n            {showFeedback && currentExercise.content?.explanation && (\n              <div className=\"p-4 bg-amber-50 border border-amber-200 rounded-lg\">\n                <h5 className=\"font-semibold text-amber-900 mb-2\">Explanation:</h5>\n                <p className=\"text-amber-800 text-sm\">{currentExercise.content.explanation}</p>\n              </div>\n            )}\n\n            {!showFeedback && parsedChoices.length > 0 && (\n              <div className=\"text-center pt-4\">\n                <Button\n                  onClick={handleSubmitExercise}\n                  disabled={Object.keys(userAnswers).length !== parsedChoices.length || submitAttemptMutation.isPending}\n                  className=\"bg-indigo-600 hover:bg-indigo-700 text-white px-6 py-2\"\n                >\n                  {submitAttemptMutation.isPending ? \"Submitting...\" : \"Submit Answers\"}\n                </Button>\n                <p className=\"text-sm text-gray-500 mt-2\">\n                  Complete all {parsedChoices.length} choices to submit\n                </p>\n              </div>\n            )}\n\n            {showFeedback && (\n              <div className=\"text-center pt-4 space-y-4\">\n                <div className=\"p-4 bg-gradient-to-r from-indigo-50 to-purple-50 rounded-lg border border-indigo-200\">\n                  <div className=\"text-lg font-semibold text-gray-900 mb-2\">\n                    Your Score: {score.correct}/{score.total}\n                  </div>\n                  <div className=\"text-sm text-gray-600\">\n                    {score.correct === score.total ? \"Perfect! Excellent work!\" :\n                     score.correct >= score.total * 0.8 ? \"Great job! You're doing well.\" :\n                     score.correct >= score.total * 0.6 ? \"Good effort! Keep practicing.\" :\n                     \"Keep studying! You'll improve with practice.\"}\n                  </div>\n                </div>\n                <Button\n                  onClick={handleGenerateExercise}\n                  className=\"bg-gradient-to-r from-indigo-600 to-purple-600 hover:from-indigo-700 hover:to-purple-700 text-white\"\n                >\n                  <Sparkles className=\"mr-2 h-4 w-4\" />\n                  Generate Another Exercise\n                </Button>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Recent Exercises */}\n      {exercises.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <Clock className=\"h-5 w-5 text-gray-600\" />\n              Your Recent AI Exercises\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-2\">\n              {(exercises as any[]).slice(0, 5).map((exercise: any) => (\n                <div key={exercise.id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                  <div>\n                    <div className=\"font-medium\">{exercise.topic}</div>\n                    <div className=\"text-sm text-gray-500\">\n                      Created: {new Date(exercise.createdAt).toLocaleDateString()}\n                    </div>\n                  </div>\n                  <Badge className=\"bg-gray-100 text-gray-800\">\n                    Fill-in-the-blank\n                  </Badge>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}","size_bytes":21059},"client/src/components/battles-wars-matching.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Shuffle, RotateCcw, Sword, Filter, Users } from \"lucide-react\";\nimport { celebrateWithTheme } from \"@/lib/confetti\";\n\ninterface BattleData {\n  id: string;\n  battle: string;\n  year: string;\n  participants: string;\n  era: 'Medieval' | 'Tudor' | 'Civil War' | 'Imperial' | 'Napoleonic' | 'World Wars' | 'Modern';\n  type: 'Land Battle' | 'Naval Battle' | 'Siege' | 'Campaign' | 'Air Battle';\n  location: string;\n  outcome: 'British Victory' | 'British Defeat' | 'Decisive' | 'Pyrrhic Victory' | 'Draw';\n}\n\nconst battlesWarsData: BattleData[] = [\n  // Medieval Period\n  {\n    id: \"1\",\n    battle: \"Battle of Hastings\",\n    year: \"1066\",\n    participants: \"Norman forces vs Anglo-Saxon England (Harold II)\",\n    era: \"Medieval\",\n    type: \"Land Battle\",\n    location: \"Hastings, England\",\n    outcome: \"British Defeat\"\n  },\n  {\n    id: \"2\",\n    battle: \"Battle of Bannockburn\",\n    year: \"1314\",\n    participants: \"Scotland (Robert the Bruce) vs England (Edward II)\",\n    era: \"Medieval\",\n    type: \"Land Battle\",\n    location: \"Stirling, Scotland\",\n    outcome: \"British Defeat\"\n  },\n  {\n    id: \"3\",\n    battle: \"Battle of Agincourt\",\n    year: \"1415\",\n    participants: \"England (Henry V) vs France (Charles VI)\",\n    era: \"Medieval\",\n    type: \"Land Battle\",\n    location: \"Agincourt, France\",\n    outcome: \"British Victory\"\n  },\n  {\n    id: \"4\",\n    battle: \"Battle of Bosworth Field\",\n    year: \"1485\",\n    participants: \"Henry Tudor vs Richard III (Wars of the Roses)\",\n    era: \"Medieval\",\n    type: \"Land Battle\",\n    location: \"Leicestershire, England\",\n    outcome: \"Decisive\"\n  },\n\n  // Tudor Period\n  {\n    id: \"5\",\n    battle: \"Spanish Armada\",\n    year: \"1588\",\n    participants: \"English Fleet (Francis Drake) vs Spanish Armada (Philip II)\",\n    era: \"Tudor\",\n    type: \"Naval Battle\",\n    location: \"English Channel\",\n    outcome: \"British Victory\"\n  },\n\n  // English Civil War\n  {\n    id: \"6\",\n    battle: \"Battle of Marston Moor\",\n    year: \"1644\",\n    participants: \"Parliamentarians & Scots vs Royalists (Charles I)\",\n    era: \"Civil War\",\n    type: \"Land Battle\",\n    location: \"Yorkshire, England\",\n    outcome: \"Decisive\"\n  },\n  {\n    id: \"7\",\n    battle: \"Battle of Naseby\",\n    year: \"1645\",\n    participants: \"New Model Army (Cromwell) vs Royalist Army (Charles I)\",\n    era: \"Civil War\",\n    type: \"Land Battle\",\n    location: \"Northamptonshire, England\",\n    outcome: \"Decisive\"\n  },\n\n  // Imperial Period\n  {\n    id: \"8\",\n    battle: \"Battle of Plassey\",\n    year: \"1757\",\n    participants: \"British East India Company (Robert Clive) vs Bengal (Siraj ud-Daulah)\",\n    era: \"Imperial\",\n    type: \"Land Battle\", \n    location: \"Bengal, India\",\n    outcome: \"British Victory\"\n  },\n  {\n    id: \"9\",\n    battle: \"Battle of Culloden\",\n    year: \"1746\",\n    participants: \"British Government forces vs Jacobite Army (Bonnie Prince Charlie)\",\n    era: \"Imperial\",\n    type: \"Land Battle\",\n    location: \"Scottish Highlands\",\n    outcome: \"British Victory\"\n  },\n\n  // Napoleonic Wars\n  {\n    id: \"10\",\n    battle: \"Battle of Trafalgar\",\n    year: \"1805\",\n    participants: \"Royal Navy (Admiral Nelson) vs French & Spanish fleets\",\n    era: \"Napoleonic\",\n    type: \"Naval Battle\",\n    location: \"Cape Trafalgar, Spain\",\n    outcome: \"British Victory\"\n  },\n  {\n    id: \"11\",\n    battle: \"Battle of Waterloo\",\n    year: \"1815\",\n    participants: \"British-Prussian Alliance (Wellington) vs French Empire (Napoleon)\",\n    era: \"Napoleonic\",\n    type: \"Land Battle\",\n    location: \"Waterloo, Belgium\",\n    outcome: \"British Victory\"\n  },\n  {\n    id: \"12\",\n    battle: \"Peninsula War\",\n    year: \"1808-1814\",\n    participants: \"British-Portuguese-Spanish vs French Empire (Napoleon)\",\n    era: \"Napoleonic\",\n    type: \"Campaign\",\n    location: \"Iberian Peninsula\",\n    outcome: \"British Victory\"\n  },\n\n  // World War I\n  {\n    id: \"13\",\n    battle: \"Battle of the Somme\",\n    year: \"1916\",\n    participants: \"British Empire forces vs German Empire\",\n    era: \"World Wars\",\n    type: \"Land Battle\",\n    location: \"Somme, France\",\n    outcome: \"Pyrrhic Victory\"\n  },\n  {\n    id: \"14\",\n    battle: \"Battle of Passchendaele\",\n    year: \"1917\",\n    participants: \"British Empire & Canadian Corps vs German Empire\",\n    era: \"World Wars\",\n    type: \"Land Battle\",\n    location: \"Ypres, Belgium\",\n    outcome: \"Pyrrhic Victory\"\n  },\n  {\n    id: \"15\",\n    battle: \"Battle of Jutland\",\n    year: \"1916\",\n    participants: \"Royal Navy (Admiral Jellicoe) vs German High Seas Fleet\",\n    era: \"World Wars\",\n    type: \"Naval Battle\",\n    location: \"North Sea\",\n    outcome: \"Draw\"\n  },\n\n  // World War II\n  {\n    id: \"16\",\n    battle: \"Battle of Britain\",\n    year: \"1940\",\n    participants: \"RAF (Fighter Command) vs German Luftwaffe\",\n    era: \"World Wars\",\n    type: \"Air Battle\",\n    location: \"United Kingdom airspace\",\n    outcome: \"British Victory\"\n  },\n  {\n    id: \"17\",\n    battle: \"D-Day (Operation Overlord)\",\n    year: \"1944\",\n    participants: \"Allied forces (UK, US, Canada) vs German Wehrmacht\",\n    era: \"World Wars\",\n    type: \"Land Battle\",\n    location: \"Normandy, France\",\n    outcome: \"British Victory\"\n  },\n  {\n    id: \"18\",\n    battle: \"Battle of El Alamein\",\n    year: \"1942\",\n    participants: \"British 8th Army (Montgomery) vs German Afrika Korps (Rommel)\",\n    era: \"World Wars\",\n    type: \"Land Battle\",\n    location: \"Egypt, North Africa\",\n    outcome: \"British Victory\"\n  },\n  {\n    id: \"19\",\n    battle: \"Battle of the Atlantic\",\n    year: \"1939-1945\",\n    participants: \"Royal Navy & Allied convoys vs German U-boats\",\n    era: \"World Wars\",\n    type: \"Naval Battle\",\n    location: \"Atlantic Ocean\",\n    outcome: \"British Victory\"\n  },\n\n  // Modern Conflicts\n  {\n    id: \"20\",\n    battle: \"Falklands War\",\n    year: \"1982\",\n    participants: \"British Task Force vs Argentine forces\",\n    era: \"Modern\",\n    type: \"Campaign\",\n    location: \"Falkland Islands, South Atlantic\",\n    outcome: \"British Victory\"\n  },\n  {\n    id: \"21\",\n    battle: \"Gulf War\",\n    year: \"1991\",\n    participants: \"Coalition forces (UK, US, allies) vs Iraqi forces\",\n    era: \"Modern\",\n    type: \"Campaign\",\n    location: \"Kuwait & Iraq\",\n    outcome: \"British Victory\"\n  }\n];\n\ninterface BattlesWarsMatchingProps {\n  userId: string;\n}\n\nexport default function BattlesWarsMatching({ userId }: BattlesWarsMatchingProps) {\n  const [battles, setBattles] = useState<BattleData[]>([]);\n  const [years, setYears] = useState<BattleData[]>([]);\n  const [participants, setParticipants] = useState<BattleData[]>([]);\n  const [selectedBattle, setSelectedBattle] = useState<BattleData | null>(null);\n  const [selectedYear, setSelectedYear] = useState<BattleData | null>(null);\n  const [selectedParticipant, setSelectedParticipant] = useState<BattleData | null>(null);\n  const [matchedItems, setMatchedItems] = useState<Set<string>>(new Set());\n  const [incorrectAttempts, setIncorrectAttempts] = useState<Set<string>>(new Set());\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [filterEra, setFilterEra] = useState<string>('all');\n  const [filterType, setFilterType] = useState<string>('all');\n  const [gameComplete, setGameComplete] = useState(false);\n  const [showParticipants, setShowParticipants] = useState(false);\n\n  const eras = ['all', 'Medieval', 'Tudor', 'Civil War', 'Imperial', 'Napoleonic', 'World Wars', 'Modern'];\n  const types = ['all', 'Land Battle', 'Naval Battle', 'Siege', 'Campaign', 'Air Battle'];\n\n  const getFilteredData = () => {\n    let filtered = battlesWarsData;\n    \n    if (filterEra !== 'all') {\n      filtered = filtered.filter(item => item.era === filterEra);\n    }\n    \n    if (filterType !== 'all') {\n      filtered = filtered.filter(item => item.type === filterType);\n    }\n    \n    return filtered;\n  };\n\n  const shuffleArray = <T,>(array: T[]): T[] => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  const initializeGame = () => {\n    const filteredData = getFilteredData();\n    setBattles(shuffleArray(filteredData));\n    setYears(shuffleArray(filteredData));\n    setParticipants(shuffleArray(filteredData));\n    setMatchedItems(new Set());\n    setIncorrectAttempts(new Set());\n    setSelectedBattle(null);\n    setSelectedYear(null);\n    setSelectedParticipant(null);\n    setScore(0);\n    setAttempts(0);\n    setGameComplete(false);\n  };\n\n  useEffect(() => {\n    initializeGame();\n  }, [filterEra, filterType]);\n\n  const handleBattleClick = (battle: BattleData) => {\n    if (matchedItems.has(battle.id)) return;\n    setSelectedBattle(battle);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handleYearClick = (year: BattleData) => {\n    if (matchedItems.has(year.id)) return;\n    setSelectedYear(year);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handleParticipantClick = (participant: BattleData) => {\n    if (matchedItems.has(participant.id)) return;\n    setSelectedParticipant(participant);\n    setIncorrectAttempts(new Set());\n  };\n\n  useEffect(() => {\n    if (selectedBattle && selectedYear && selectedParticipant) {\n      setAttempts(prev => prev + 1);\n      \n      if (selectedBattle.id === selectedYear.id && \n          selectedYear.id === selectedParticipant.id) {\n        // Correct match!\n        celebrateWithTheme('military');\n        setMatchedItems(prev => new Set(Array.from(prev).concat(selectedBattle.id)));\n        setScore(prev => prev + 1);\n        \n        // Check if game is complete\n        const filteredData = getFilteredData();\n        if (matchedItems.size + 1 >= filteredData.length) {\n          setGameComplete(true);\n          setTimeout(() => celebrateWithTheme('military'), 500);\n        }\n      } else {\n        // Incorrect match\n        const incorrectIds = new Set([selectedBattle.id, selectedYear.id, selectedParticipant.id]);\n        setIncorrectAttempts(incorrectIds);\n        \n        setTimeout(() => {\n          setIncorrectAttempts(new Set());\n        }, 3000);\n      }\n      \n      // Reset selections\n      setTimeout(() => {\n        setSelectedBattle(null);\n        setSelectedYear(null);\n        setSelectedParticipant(null);\n      }, incorrectAttempts.size > 0 ? 3000 : 1000);\n    }\n  }, [selectedBattle, selectedYear, selectedParticipant, matchedItems.size]);\n\n  const getButtonStyle = (item: BattleData, isSelected: boolean) => {\n    const baseClasses = \"w-full text-left p-3 rounded-lg border transition-all duration-300 hover:shadow-md\";\n    const isMatched = matchedItems.has(item.id);\n    const isIncorrect = incorrectAttempts.has(item.id);\n    \n    if (isMatched) {\n      return `${baseClasses} bg-green-100 border-green-300 text-green-800 cursor-default shadow-sm`;\n    }\n    \n    if (isIncorrect) {\n      return `${baseClasses} bg-red-100 border-red-300 text-red-800 animate-pulse cursor-pointer`;\n    }\n    \n    if (isSelected) {\n      return `${baseClasses} bg-red-100 border-red-400 text-red-800 shadow-lg cursor-pointer`;\n    }\n    \n    return `${baseClasses} bg-white border-gray-200 text-gray-800 hover:bg-gray-50 cursor-pointer`;\n  };\n\n  const getEraColor = (era: string) => {\n    const colors = {\n      Medieval: 'bg-stone-100 text-stone-800',\n      Tudor: 'bg-red-100 text-red-800',\n      'Civil War': 'bg-gray-100 text-gray-800',\n      Imperial: 'bg-blue-100 text-blue-800',\n      Napoleonic: 'bg-purple-100 text-purple-800',\n      'World Wars': 'bg-orange-100 text-orange-800',\n      Modern: 'bg-green-100 text-green-800'\n    };\n    return colors[era as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  const getOutcomeColor = (outcome: string) => {\n    const colors = {\n      'British Victory': 'bg-green-100 text-green-800',\n      'British Defeat': 'bg-red-100 text-red-800',\n      'Decisive': 'bg-yellow-100 text-yellow-800',\n      'Pyrrhic Victory': 'bg-orange-100 text-orange-800',\n      'Draw': 'bg-gray-100 text-gray-800'\n    };\n    return colors[outcome as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  const accuracy = attempts > 0 ? Math.round((score / attempts) * 100) : 0;\n  const filteredData = getFilteredData();\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Game Header & Stats */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <div className=\"flex items-center gap-3\">\n          <Sword className=\"h-6 w-6 text-red-600\" />\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-900\">British Battles & Wars Triple Match</h3>\n            <p className=\"text-sm text-gray-600\">Match battles with their years and participants throughout British history</p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center gap-4\">\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-red-600\">{score}/{filteredData.length}</div>\n            <div className=\"text-xs text-gray-500\">Matches</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-green-600\">{accuracy}%</div>\n            <div className=\"text-xs text-gray-500\">Accuracy</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"space-y-3\">\n        <div className=\"flex flex-wrap gap-2 items-center\">\n          <Filter className=\"h-4 w-4 text-gray-500\" />\n          <span className=\"text-sm font-medium text-gray-700\">Historical Era:</span>\n          {eras.map(era => (\n            <Badge\n              key={era}\n              variant={filterEra === era ? \"default\" : \"outline\"}\n              className={`cursor-pointer transition-colors ${\n                filterEra === era \n                  ? 'bg-red-600 text-white' \n                  : 'hover:bg-red-100'\n              }`}\n              onClick={() => setFilterEra(era)}\n            >\n              {era === 'all' ? 'All Eras' : era}\n            </Badge>\n          ))}\n        </div>\n        \n        <div className=\"flex flex-wrap gap-2 items-center\">\n          <Filter className=\"h-4 w-4 text-gray-500\" />\n          <span className=\"text-sm font-medium text-gray-700\">Battle Type:</span>\n          {types.map(type => (\n            <Badge\n              key={type}\n              variant={filterType === type ? \"default\" : \"outline\"}\n              className={`cursor-pointer transition-colors ${\n                filterType === type \n                  ? 'bg-orange-600 text-white' \n                  : 'hover:bg-orange-100'\n              }`}\n              onClick={() => setFilterType(type)}\n            >\n              {type === 'all' ? 'All Types' : type}\n            </Badge>\n          ))}\n        </div>\n      </div>\n\n      {/* Game Controls */}\n      <div className=\"flex gap-2\">\n        <Button\n          onClick={initializeGame}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <Shuffle className=\"h-4 w-4\" />\n          Shuffle\n        </Button>\n        <Button\n          onClick={initializeGame}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <RotateCcw className=\"h-4 w-4\" />\n          Reset\n        </Button>\n        <Button\n          onClick={() => setShowParticipants(!showParticipants)}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <Users className=\"h-4 w-4\" />\n          {showParticipants ? 'Hide' : 'Show'} All Participants\n        </Button>\n      </div>\n\n      {gameComplete && (\n        <Card className=\"border-green-200 bg-green-50\">\n          <CardContent className=\"p-4 text-center\">\n            <h3 className=\"text-lg font-semibold text-green-800 mb-2\">🎉 Victory Achieved!</h3>\n            <p className=\"text-green-700\">\n              You've successfully matched all {filteredData.length} battles with their years and participants!\n            </p>\n            <p className=\"text-sm text-green-600 mt-1\">\n              Final Score: {score}/{filteredData.length} ({accuracy}% accuracy)\n            </p>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Participants Reference Card */}\n      {showParticipants && (\n        <Card className=\"bg-amber-50 border-amber-200\">\n          <CardHeader>\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Users className=\"h-4 w-4 text-amber-600\" />\n              Battle Participants Reference\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 text-sm\">\n              {filteredData.map((battle) => (\n                <div key={`ref-${battle.id}`} className=\"p-2 bg-white rounded border\">\n                  <div className=\"font-semibold text-amber-800\">{battle.battle}</div>\n                  <div className=\"text-gray-600 mt-1\">{battle.participants}</div>\n                  <div className=\"flex gap-1 mt-1\">\n                    <Badge className={`text-xs ${getEraColor(battle.era)}`}>\n                      {battle.era}\n                    </Badge>\n                    <Badge className=\"text-xs bg-gray-100 text-gray-800\">\n                      {battle.year}\n                    </Badge>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Matching Game Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Battles Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Sword className=\"h-4 w-4 text-red-600\" />\n              Battles & Wars ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {battles.map((battle) => (\n              <div key={`battle-${battle.id}`} className=\"space-y-1\">\n                <button\n                  onClick={() => handleBattleClick(battle)}\n                  className={getButtonStyle(battle, selectedBattle?.id === battle.id)}\n                  disabled={matchedItems.has(battle.id)}\n                >\n                  <div className=\"font-medium text-sm leading-relaxed\">{battle.battle}</div>\n                  <div className=\"flex gap-1 mt-1 flex-wrap\">\n                    <Badge className={`text-xs ${getEraColor(battle.era)}`}>\n                      {battle.era}\n                    </Badge>\n                    <Badge className=\"text-xs bg-blue-100 text-blue-800\">\n                      {battle.type}\n                    </Badge>\n                    <Badge className={`text-xs ${getOutcomeColor(battle.outcome)}`}>\n                      {battle.outcome}\n                    </Badge>\n                  </div>\n                </button>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Years Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Sword className=\"h-4 w-4 text-green-600\" />\n              Years ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {years.map((year) => (\n              <button\n                key={`year-${year.id}`}\n                onClick={() => handleYearClick(year)}\n                className={getButtonStyle(year, selectedYear?.id === year.id)}\n                disabled={matchedItems.has(year.id)}\n              >\n                <div className=\"font-bold text-xl text-center\">\n                  {year.year}\n                </div>\n                <div className=\"text-center text-sm text-gray-600 mt-1\">\n                  {year.location}\n                </div>\n                <Badge className={`text-xs w-full justify-center mt-1 ${getEraColor(year.era)}`}>\n                  {year.era}\n                </Badge>\n              </button>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Participants Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Users className=\"h-4 w-4 text-purple-600\" />\n              Participants ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {participants.map((participant) => (\n              <button\n                key={`participant-${participant.id}`}\n                onClick={() => handleParticipantClick(participant)}\n                className={getButtonStyle(participant, selectedParticipant?.id === participant.id)}\n                disabled={matchedItems.has(participant.id)}\n              >\n                <div className=\"font-medium text-sm leading-relaxed\">\n                  {participant.participants}\n                </div>\n              </button>\n            ))}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Instructions */}\n      <Card className=\"bg-red-50 border-red-200\">\n        <CardContent className=\"p-4\">\n          <h4 className=\"font-semibold text-red-900 mb-2\">How to Play:</h4>\n          <ul className=\"text-sm text-red-800 space-y-1\">\n            <li>• Select one battle, one year, and one set of participants that all belong together</li>\n            <li>• All three selections must match the same historical conflict</li>\n            <li>• Correct matches turn green and celebrate with confetti</li>\n            <li>• Use era and type filters to focus on specific periods or battle types</li>\n            <li>• Click \"Show All Participants\" for a reference guide to help with matching</li>\n            <li>• Learn about British military history from medieval times to modern conflicts!</li>\n          </ul>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":22223},"client/src/components/british-artists-matching.tsx":{"content":"import { useState, useMemo } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { RotateCcw, Check, X, Palette } from \"lucide-react\";\nimport { celebrateWithTheme, celebrateGameComplete } from \"@/lib/confetti\";\n\ninterface BritishArtist {\n  id: string;\n  artist: string;\n  artForm: string;\n  period: string;\n  details: string;\n}\n\nconst britishArtistsData: BritishArtist[] = [\n  {\n    id: \"1\",\n    artist: \"Thomas Gainsborough\",\n    artForm: \"Portrait and Landscape Painting\",\n    period: \"18th Century\",\n    details: \"Famous for elegant portraits and romantic landscapes like 'The Blue Boy'\"\n  },\n  {\n    id: \"2\",\n    artist: \"David Allan\",\n    artForm: \"Genre and Historical Painting\",\n    period: \"18th Century\", \n    details: \"Scottish painter known for scenes of everyday life and historical subjects\"\n  },\n  {\n    id: \"3\",\n    artist: \"J.M.W. Turner\",\n    artForm: \"Romantic Landscape Painting\",\n    period: \"19th Century\",\n    details: \"Master of light and atmosphere, precursor to Impressionism\"\n  },\n  {\n    id: \"4\",\n    artist: \"John Constable\",\n    artForm: \"Naturalist Landscape Painting\",\n    period: \"19th Century\",\n    details: \"Famous for countryside scenes like 'The Hay Wain' and cloud studies\"\n  },\n  {\n    id: \"5\",\n    artist: \"Pre-Raphaelites\",\n    artForm: \"Romantic Revival Painting\",\n    period: \"19th Century\",\n    details: \"Brotherhood rejecting academic art, focusing on medieval and literary themes\"\n  },\n  {\n    id: \"6\",\n    artist: \"John Lavery\",\n    artForm: \"Portrait and Society Painting\",\n    period: \"Late 19th/Early 20th Century\",\n    details: \"Belfast-born painter famous for society portraits and tennis scenes\"\n  },\n  {\n    id: \"7\",\n    artist: \"Henry Moore\",\n    artForm: \"Modern Sculpture\",\n    period: \"20th Century\",\n    details: \"Known for abstract bronze sculptures and reclining figures\"\n  },\n  {\n    id: \"8\",\n    artist: \"John Petts\",\n    artForm: \"Stained Glass and Printmaking\",\n    period: \"20th Century\",\n    details: \"Welsh artist renowned for church stained glass windows and wood engravings\"\n  },\n  {\n    id: \"9\",\n    artist: \"Lucian Freud\",\n    artForm: \"Figurative Painting\",\n    period: \"20th/21st Century\",\n    details: \"Known for psychologically intense portraits and nude studies\"\n  },\n  {\n    id: \"10\",\n    artist: \"David Hockney\",\n    artForm: \"Pop Art and Digital Art\",\n    period: \"Contemporary\",\n    details: \"Famous for pool paintings, photo collages, and iPad art\"\n  }\n];\n\ninterface BritishArtistsMatchingProps {\n  userId: string;\n}\n\nexport default function BritishArtistsMatching({ userId }: BritishArtistsMatchingProps) {\n  const [selectedArtist, setSelectedArtist] = useState<string | null>(null);\n  const [selectedArtForm, setSelectedArtForm] = useState<string | null>(null);\n  const [matches, setMatches] = useState<Record<string, 'correct' | 'incorrect'>>({});\n  const [selectedPeriod, setSelectedPeriod] = useState<string>(\"All\");\n  const [feedback, setFeedback] = useState<{ artistId: string; artFormId: string; correct: boolean } | null>(null);\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [shuffleSeed, setShuffleSeed] = useState(Math.random());\n  const [recentCorrectMatches, setRecentCorrectMatches] = useState<Set<string>>(new Set());\n\n  const periods = [\"All\", ...Array.from(new Set(britishArtistsData.map(item => item.period)))];\n  \n  const filteredData = britishArtistsData.filter(item => {\n    const periodMatch = selectedPeriod === \"All\" || item.period === selectedPeriod;\n    return periodMatch;\n  });\n\n  // Fisher-Yates shuffle algorithm\n  const shuffleArray = (array: BritishArtist[], seed: number) => {\n    const shuffled = [...array];\n    let random = seed;\n    \n    for (let i = shuffled.length - 1; i > 0; i--) {\n      random = (random * 9301 + 49297) % 233280;\n      const randomIndex = Math.floor((random / 233280) * (i + 1));\n      [shuffled[i], shuffled[randomIndex]] = [shuffled[randomIndex], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  // Create separate shuffled arrays for artists and art forms columns\n  const shuffledArtists = useMemo(() => {\n    return shuffleArray(filteredData, shuffleSeed * 1000);\n  }, [filteredData, shuffleSeed]);\n\n  const shuffledArtForms = useMemo(() => {\n    return shuffleArray(filteredData, shuffleSeed * 7309 + 1234);\n  }, [filteredData, shuffleSeed]);\n\n  // Helper functions\n  const getButtonStatus = (itemId: string, side: 'artist' | 'artForm') => {\n    const matchState = matches[itemId];\n    const isSelected = side === 'artist' ? selectedArtist === itemId : selectedArtForm === itemId;\n    const isMatched = matchState === 'correct';\n    const isIncorrect = matchState === 'incorrect';\n    const isRecentMatch = recentCorrectMatches.has(itemId);\n\n    return {\n      isSelected,\n      isMatched,\n      isIncorrect,\n      isRecentMatch\n    };\n  };\n\n  const handleArtistSelect = (artistId: string) => {\n    if (matches[artistId] === 'correct') return;\n    \n    if (selectedArtist === artistId) {\n      setSelectedArtist(null);\n    } else {\n      setSelectedArtist(artistId);\n      if (selectedArtForm) {\n        checkMatch(artistId, selectedArtForm);\n      }\n    }\n  };\n\n  const handleArtFormSelect = (artFormId: string) => {\n    if (matches[artFormId] === 'correct') return;\n    \n    if (selectedArtForm === artFormId) {\n      setSelectedArtForm(null);\n    } else {\n      setSelectedArtForm(artFormId);\n      if (selectedArtist) {\n        checkMatch(selectedArtist, artFormId);\n      }\n    }\n  };\n\n  const checkMatch = (artistId: string, artFormId: string) => {\n    setAttempts(prev => prev + 1);\n    \n    const isCorrect = artistId === artFormId;\n    \n    if (isCorrect) {\n      // Celebrate individual correct match immediately\n      celebrateWithTheme('art');\n      \n      setMatches(prev => ({\n        ...prev,\n        [artistId]: 'correct'\n      }));\n      setScore(prev => {\n        const newScore = prev + 1;\n        // Check if game is complete\n        if (newScore === filteredData.length) {\n          setTimeout(() => celebrateGameComplete(), 500);\n        }\n        return newScore;\n      });\n      \n      // Add to recent matches for animation\n      setRecentCorrectMatches(prev => new Set([...Array.from(prev), artistId]));\n      \n      // Remove from recent matches after animation\n      setTimeout(() => {\n        setRecentCorrectMatches(prev => {\n          const newSet = new Set(Array.from(prev));\n          newSet.delete(artistId);\n          return newSet;\n        });\n      }, 1000);\n      \n      setFeedback({ artistId, artFormId, correct: true });\n    } else {\n      setMatches(prev => ({\n        ...prev,\n        [artistId]: 'incorrect',\n        [artFormId]: 'incorrect'\n      }));\n      setFeedback({ artistId, artFormId, correct: false });\n      \n      // Clear incorrect state after showing feedback\n      setTimeout(() => {\n        setMatches(prev => {\n          const newMatches = { ...prev };\n          if (newMatches[artistId] === 'incorrect') delete newMatches[artistId];\n          if (newMatches[artFormId] === 'incorrect') delete newMatches[artFormId];\n          return newMatches;\n        });\n      }, 1500);\n    }\n    \n    setSelectedArtist(null);\n    setSelectedArtForm(null);\n    \n    // Clear feedback after delay\n    setTimeout(() => setFeedback(null), 2000);\n  };\n\n  const resetGame = () => {\n    setSelectedArtist(null);\n    setSelectedArtForm(null);\n    setMatches({});\n    setFeedback(null);\n    setScore(0);\n    setAttempts(0);\n    setShuffleSeed(Math.random());\n    setRecentCorrectMatches(new Set());\n  };\n\n  const correctMatches = Object.values(matches).filter(match => match === 'correct').length;\n  const isGameComplete = correctMatches === filteredData.length;\n  const accuracy = attempts > 0 ? Math.round((score / attempts) * 100) : 0;\n\n  // Sort matched items to bottom\n  const sortItems = (items: BritishArtist[]) => {\n    const matched = items.filter(item => matches[item.id] === 'correct');\n    const unmatched = items.filter(item => matches[item.id] !== 'correct');\n    return [...unmatched, ...matched];\n  };\n\n  const sortedArtists = sortItems(shuffledArtists);\n  const sortedArtForms = sortItems(shuffledArtForms);\n\n  const getPeriodColor = (period: string) => {\n    switch (period) {\n      case \"18th Century\": return \"bg-amber-100 text-amber-800 border-amber-200\";\n      case \"19th Century\": return \"bg-blue-100 text-blue-800 border-blue-200\";\n      case \"Late 19th/Early 20th Century\": return \"bg-purple-100 text-purple-800 border-purple-200\";\n      case \"20th Century\": return \"bg-green-100 text-green-800 border-green-200\";\n      case \"20th/21st Century\": return \"bg-rose-100 text-rose-800 border-rose-200\";\n      case \"Contemporary\": return \"bg-cyan-100 text-cyan-800 border-cyan-200\";\n      default: return \"bg-gray-100 text-gray-800 border-gray-200\";\n    }\n  };\n\n  return (\n    <Card className=\"w-full max-w-6xl mx-auto\">\n      <CardContent className=\"p-6\">\n        <div className=\"mb-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"flex items-center gap-2\">\n              <Palette className=\"h-6 w-6 text-indigo-600\" />\n              <h3 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                British Artists Matching Game\n              </h3>\n            </div>\n            <Button onClick={resetGame} variant=\"outline\" className=\"flex items-center gap-2\">\n              <RotateCcw className=\"h-4 w-4\" />\n              Reset Game\n            </Button>\n          </div>\n\n          <div className=\"flex flex-wrap gap-4 mb-4\">\n            <Badge variant=\"outline\" className=\"text-lg px-3 py-1\">\n              Score: {score}/{filteredData.length}\n            </Badge>\n            <Badge variant=\"outline\" className=\"text-lg px-3 py-1\">\n              Attempts: {attempts}\n            </Badge>\n            <Badge variant=\"outline\" className=\"text-lg px-3 py-1\">\n              Accuracy: {accuracy}%\n            </Badge>\n          </div>\n\n          {/* Period Filter */}\n          <div className=\"mb-4\">\n            <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">Filter by period:</p>\n            <div className=\"flex flex-wrap gap-2\">\n              {periods.map(period => (\n                <Button\n                  key={period}\n                  onClick={() => setSelectedPeriod(period)}\n                  variant={selectedPeriod === period ? \"default\" : \"outline\"}\n                  size=\"sm\"\n                  className=\"text-xs\"\n                >\n                  {period}\n                </Button>\n              ))}\n            </div>\n          </div>\n\n          <p className=\"text-gray-600 dark:text-gray-300\">\n            Match each British artist with their primary art form. Learn about the rich artistic heritage that has shaped British culture.\n          </p>\n        </div>\n\n        {feedback && (\n          <div className={`mb-4 p-4 rounded-lg flex items-center gap-2 ${\n            feedback.correct \n              ? 'bg-green-100 text-green-800 border border-green-200' \n              : 'bg-red-100 text-red-800 border border-red-200'\n          }`}>\n            {feedback.correct ? (\n              <span className=\"text-2xl\">🎉</span>\n            ) : (\n              <X className=\"h-5 w-5 text-red-600\" />\n            )}\n            <span className=\"font-medium\">\n              {feedback.correct ? 'Beautiful artistic match! 🎨🎯' : 'Not quite right. Try again!'}\n            </span>\n          </div>\n        )}\n\n        {isGameComplete && (\n          <div className=\"mb-6 p-6 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg text-center\">\n            <div className=\"flex items-center justify-center gap-2 mb-2\">\n              <Check className=\"h-6 w-6 text-green-600\" />\n              <h4 className=\"text-xl font-bold text-green-800 dark:text-green-200\">\n                Artistic Mastery Achieved!\n              </h4>\n            </div>\n            <p className=\"text-green-700 dark:text-green-300\">\n              You've successfully matched all British artists with their art forms!\n            </p>\n            <p className=\"text-sm text-green-600 dark:text-green-400 mt-2\">\n              Final Score: {score}/{filteredData.length} | Accuracy: {accuracy}%\n            </p>\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Artists Column */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4 text-center text-indigo-700 dark:text-indigo-300\">\n              British Artists ({filteredData.length})\n            </h4>\n            <div className=\"space-y-2\">\n              {sortedArtists.map((item) => {\n                const status = getButtonStatus(item.id, 'artist');\n                return (\n                  <Button\n                    key={item.id}\n                    onClick={() => handleArtistSelect(item.id)}\n                    disabled={status.isMatched}\n                    className={`\n                      w-full p-4 h-24 text-left transition-all duration-300 relative flex flex-col justify-center\n                      ${status.isMatched \n                        ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 border-green-300 dark:border-green-700' \n                        : status.isSelected\n                        ? 'bg-indigo-100 dark:bg-indigo-900/30 text-indigo-800 dark:text-indigo-200 border-indigo-300 dark:border-indigo-700'\n                        : status.isIncorrect\n                        ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 border-red-300 dark:border-red-700'\n                        : 'bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700'\n                      }\n                      ${status.isRecentMatch ? 'animate-pulse ring-2 ring-green-400' : ''}\n                    `}\n                    variant=\"outline\"\n                  >\n                    <div className=\"w-full\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <div className=\"font-semibold text-base truncate pr-2\">{item.artist}</div>\n                      </div>\n                      <Badge variant=\"outline\" className={`text-xs ${getPeriodColor(item.period)}`}>\n                        {item.period}\n                      </Badge>\n                    </div>\n                    {status.isMatched && (\n                      <Check className=\"absolute top-2 right-2 h-5 w-5 text-green-600\" />\n                    )}\n                  </Button>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Art Forms Column */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4 text-center text-emerald-700 dark:text-emerald-300\">\n              Art Forms ({filteredData.length})\n            </h4>\n            <div className=\"space-y-2\">\n              {sortedArtForms.map((item) => {\n                const status = getButtonStatus(item.id, 'artForm');\n                return (\n                  <Button\n                    key={item.id}\n                    onClick={() => handleArtFormSelect(item.id)}\n                    disabled={status.isMatched}\n                    className={`\n                      w-full p-4 h-24 text-left transition-all duration-300 relative overflow-hidden\n                      ${status.isMatched \n                        ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 border-green-300 dark:border-green-700' \n                        : status.isSelected\n                        ? 'bg-emerald-100 dark:bg-emerald-900/30 text-emerald-800 dark:text-emerald-200 border-emerald-300 dark:border-emerald-700'\n                        : status.isIncorrect\n                        ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 border-red-300 dark:border-red-700'\n                        : 'bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700'\n                      }\n                      ${status.isRecentMatch ? 'animate-pulse ring-2 ring-green-400' : ''}\n                    `}\n                    variant=\"outline\"\n                  >\n                    <div className=\"w-full h-full flex flex-col justify-center pr-8\">\n                      <div className=\"font-semibold text-base mb-1\">{item.artForm}</div>\n                      <div className=\"text-xs text-gray-600 dark:text-gray-400 leading-tight\">\n                        {item.details}\n                      </div>\n                    </div>\n                    {status.isMatched && (\n                      <Check className=\"absolute top-2 right-2 h-5 w-5 text-green-600\" />\n                    )}\n                  </Button>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}","size_bytes":16959},"client/src/components/british-leaders-matching.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Shuffle, RotateCcw, Crown, Filter } from \"lucide-react\";\nimport { celebrateWithTheme } from \"@/lib/confetti\";\n\ninterface LeaderData {\n  id: string;\n  name: string;\n  achievement: string;\n  year: string;\n  category: 'Medieval' | 'Tudor' | 'Stuart' | 'Hanoverian' | 'Modern' | 'Contemporary';\n  era: string;\n}\n\nconst leadersData: LeaderData[] = [\n  {\n    id: \"1\",\n    name: \"William the Conqueror\",\n    achievement: \"Norman Conquest of England\",\n    year: \"1066\",\n    category: \"Medieval\",\n    era: \"Norman\"\n  },\n  {\n    id: \"2\", \n    name: \"King John\",\n    achievement: \"Signed Magna Carta\",\n    year: \"1215\",\n    category: \"Medieval\",\n    era: \"Plantagenet\"\n  },\n  {\n    id: \"3\",\n    name: \"Henry VIII\",\n    achievement: \"English Reformation & Break from Rome\",\n    year: \"1534\",\n    category: \"Tudor\",\n    era: \"Renaissance\"\n  },\n  {\n    id: \"4\",\n    name: \"Elizabeth I\",\n    achievement: \"Defeated Spanish Armada\",\n    year: \"1588\",\n    category: \"Tudor\",\n    era: \"Golden Age\"\n  },\n  {\n    id: \"5\",\n    name: \"James I (VI of Scotland)\",\n    achievement: \"Union of English and Scottish Crowns\",\n    year: \"1603\",\n    category: \"Stuart\",\n    era: \"Early Modern\"\n  },\n  {\n    id: \"6\",\n    name: \"Charles I\",\n    achievement: \"English Civil War Execution\",\n    year: \"1649\",\n    category: \"Stuart\",\n    era: \"Civil War\"\n  },\n  {\n    id: \"7\",\n    name: \"Oliver Cromwell\",\n    achievement: \"Established Commonwealth Republic\",\n    year: \"1649\",\n    category: \"Stuart\",\n    era: \"Commonwealth\"\n  },\n  {\n    id: \"8\",\n    name: \"George III\",\n    achievement: \"American Revolutionary War Loss\",\n    year: \"1783\",\n    category: \"Hanoverian\",\n    era: \"Georgian\"\n  },\n  {\n    id: \"9\",\n    name: \"Queen Victoria\",\n    achievement: \"British Empire Peak & Industrial Revolution\",\n    year: \"1837-1901\",\n    category: \"Hanoverian\",\n    era: \"Victorian\"\n  },\n  {\n    id: \"10\",\n    name: \"George VI\",\n    achievement: \"Led Britain Through World War II\",\n    year: \"1939-1945\",\n    category: \"Modern\",\n    era: \"20th Century\"\n  },\n  {\n    id: \"11\",\n    name: \"Winston Churchill\",\n    achievement: \"Prime Minister During WWII Victory\",\n    year: \"1940-1945\",\n    category: \"Modern\",\n    era: \"20th Century\"\n  },\n  {\n    id: \"12\",\n    name: \"Margaret Thatcher\",\n    achievement: \"First Female Prime Minister\",\n    year: \"1979\",\n    category: \"Contemporary\",\n    era: \"Modern\"\n  },\n  {\n    id: \"13\",\n    name: \"Elizabeth II\",\n    achievement: \"Longest Reigning British Monarch\",\n    year: \"1952-2022\",\n    category: \"Contemporary\",\n    era: \"Modern\"\n  },\n  {\n    id: \"14\",\n    name: \"Edward VII\",\n    achievement: \"Edwardian Era & Entente Cordiale\",\n    year: \"1904\",\n    category: \"Modern\",\n    era: \"Edwardian\"\n  },\n  {\n    id: \"15\",\n    name: \"Tony Blair\",\n    achievement: \"Good Friday Agreement & Peace in Northern Ireland\",\n    year: \"1998\",\n    category: \"Contemporary\",\n    era: \"Modern\"\n  }\n];\n\ninterface BritishLeadersMatchingProps {\n  userId: string;\n}\n\nexport default function BritishLeadersMatching({ userId }: BritishLeadersMatchingProps) {\n  const [leaders, setLeaders] = useState<LeaderData[]>([]);\n  const [achievements, setAchievements] = useState<LeaderData[]>([]);\n  const [years, setYears] = useState<LeaderData[]>([]);\n  const [selectedLeader, setSelectedLeader] = useState<LeaderData | null>(null);\n  const [selectedAchievement, setSelectedAchievement] = useState<LeaderData | null>(null);\n  const [selectedYear, setSelectedYear] = useState<LeaderData | null>(null);\n  const [matchedItems, setMatchedItems] = useState<Set<string>>(new Set());\n  const [incorrectAttempts, setIncorrectAttempts] = useState<Set<string>>(new Set());\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [filterCategory, setFilterCategory] = useState<string>('all');\n  const [gameComplete, setGameComplete] = useState(false);\n\n  const categories = ['all', 'Medieval', 'Tudor', 'Stuart', 'Hanoverian', 'Modern', 'Contemporary'];\n\n  const getFilteredData = () => {\n    if (filterCategory === 'all') return leadersData;\n    return leadersData.filter(leader => leader.category === filterCategory);\n  };\n\n  const shuffleArray = <T,>(array: T[]): T[] => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  const initializeGame = () => {\n    const filteredData = getFilteredData();\n    setLeaders(shuffleArray(filteredData));\n    setAchievements(shuffleArray(filteredData));\n    setYears(shuffleArray(filteredData));\n    setMatchedItems(new Set());\n    setIncorrectAttempts(new Set());\n    setSelectedLeader(null);\n    setSelectedAchievement(null);\n    setSelectedYear(null);\n    setScore(0);\n    setAttempts(0);\n    setGameComplete(false);\n  };\n\n  useEffect(() => {\n    initializeGame();\n  }, [filterCategory]);\n\n  const handleLeaderClick = (leader: LeaderData) => {\n    if (matchedItems.has(leader.id)) return;\n    setSelectedLeader(leader);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handleAchievementClick = (achievement: LeaderData) => {\n    if (matchedItems.has(achievement.id)) return;\n    setSelectedAchievement(achievement);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handleYearClick = (year: LeaderData) => {\n    if (matchedItems.has(year.id)) return;\n    setSelectedYear(year);\n    setIncorrectAttempts(new Set());\n  };\n\n  useEffect(() => {\n    if (selectedLeader && selectedAchievement && selectedYear) {\n      setAttempts(prev => prev + 1);\n      \n      if (selectedLeader.id === selectedAchievement.id && \n          selectedAchievement.id === selectedYear.id) {\n        // Correct match!\n        celebrateWithTheme('royal');\n        setMatchedItems(prev => new Set(Array.from(prev).concat(selectedLeader.id)));\n        setScore(prev => prev + 1);\n        \n        // Check if game is complete\n        const filteredData = getFilteredData();\n        if (matchedItems.size + 1 >= filteredData.length) {\n          setGameComplete(true);\n          setTimeout(() => celebrateWithTheme('royal'), 500);\n        }\n      } else {\n        // Incorrect match\n        const incorrectIds = new Set([selectedLeader.id, selectedAchievement.id, selectedYear.id]);\n        setIncorrectAttempts(incorrectIds);\n        \n        setTimeout(() => {\n          setIncorrectAttempts(new Set());\n        }, 3000);\n      }\n      \n      // Reset selections\n      setTimeout(() => {\n        setSelectedLeader(null);\n        setSelectedAchievement(null);\n        setSelectedYear(null);\n      }, incorrectAttempts.size > 0 ? 3000 : 1000);\n    }\n  }, [selectedLeader, selectedAchievement, selectedYear, matchedItems.size]);\n\n  const getButtonStyle = (item: LeaderData, isSelected: boolean, columnType: string) => {\n    const baseClasses = \"w-full text-left p-3 rounded-lg border transition-all duration-300 hover:shadow-md\";\n    const isMatched = matchedItems.has(item.id);\n    const isIncorrect = incorrectAttempts.has(item.id);\n    \n    if (isMatched) {\n      return `${baseClasses} bg-green-100 border-green-300 text-green-800 cursor-default shadow-sm`;\n    }\n    \n    if (isIncorrect) {\n      return `${baseClasses} bg-red-100 border-red-300 text-red-800 animate-pulse cursor-pointer`;\n    }\n    \n    if (isSelected) {\n      return `${baseClasses} bg-purple-100 border-purple-400 text-purple-800 shadow-lg cursor-pointer`;\n    }\n    \n    return `${baseClasses} bg-white border-gray-200 text-gray-800 hover:bg-gray-50 cursor-pointer`;\n  };\n\n  const getCategoryColor = (category: string) => {\n    const colors = {\n      Medieval: 'bg-stone-100 text-stone-800',\n      Tudor: 'bg-red-100 text-red-800',\n      Stuart: 'bg-blue-100 text-blue-800',\n      Hanoverian: 'bg-purple-100 text-purple-800',\n      Modern: 'bg-green-100 text-green-800',\n      Contemporary: 'bg-orange-100 text-orange-800'\n    };\n    return colors[category as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  const accuracy = attempts > 0 ? Math.round((score / attempts) * 100) : 0;\n  const filteredData = getFilteredData();\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Game Header & Stats */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <div className=\"flex items-center gap-3\">\n          <Crown className=\"h-6 w-6 text-purple-600\" />\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-900\">British Leaders Triple Match</h3>\n            <p className=\"text-sm text-gray-600\">Match leaders with their achievements and years</p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center gap-4\">\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-purple-600\">{score}/{filteredData.length}</div>\n            <div className=\"text-xs text-gray-500\">Matches</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-blue-600\">{accuracy}%</div>\n            <div className=\"text-xs text-gray-500\">Accuracy</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Category Filter */}\n      <div className=\"flex flex-wrap gap-2 items-center\">\n        <Filter className=\"h-4 w-4 text-gray-500\" />\n        <span className=\"text-sm font-medium text-gray-700\">Era:</span>\n        {categories.map(category => (\n          <Badge\n            key={category}\n            variant={filterCategory === category ? \"default\" : \"outline\"}\n            className={`cursor-pointer transition-colors ${\n              filterCategory === category \n                ? 'bg-purple-600 text-white' \n                : 'hover:bg-purple-100'\n            }`}\n            onClick={() => setFilterCategory(category)}\n          >\n            {category === 'all' ? 'All Eras' : category}\n          </Badge>\n        ))}\n      </div>\n\n      {/* Game Controls */}\n      <div className=\"flex gap-2\">\n        <Button\n          onClick={initializeGame}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <Shuffle className=\"h-4 w-4\" />\n          Shuffle\n        </Button>\n        <Button\n          onClick={initializeGame}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <RotateCcw className=\"h-4 w-4\" />\n          Reset\n        </Button>\n      </div>\n\n      {gameComplete && (\n        <Card className=\"border-green-200 bg-green-50\">\n          <CardContent className=\"p-4 text-center\">\n            <h3 className=\"text-lg font-semibold text-green-800 mb-2\">🎉 Congratulations!</h3>\n            <p className=\"text-green-700\">\n              You've successfully matched all {filteredData.length} British leaders with their achievements and years!\n            </p>\n            <p className=\"text-sm text-green-600 mt-1\">\n              Final Score: {score}/{filteredData.length} ({accuracy}% accuracy)\n            </p>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Matching Game Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Leaders Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Crown className=\"h-4 w-4 text-purple-600\" />\n              Leaders ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {leaders.map((leader) => (\n              <div key={`leader-${leader.id}`} className=\"space-y-1\">\n                <button\n                  onClick={() => handleLeaderClick(leader)}\n                  className={getButtonStyle(leader, selectedLeader?.id === leader.id, 'leader')}\n                  disabled={matchedItems.has(leader.id)}\n                >\n                  <div className=\"font-medium\">{leader.name}</div>\n                  <Badge className={`text-xs ${getCategoryColor(leader.category)}`}>\n                    {leader.era}\n                  </Badge>\n                </button>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Achievements Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Crown className=\"h-4 w-4 text-blue-600\" />\n              Achievements ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {achievements.map((achievement) => (\n              <button\n                key={`achievement-${achievement.id}`}\n                onClick={() => handleAchievementClick(achievement)}\n                className={getButtonStyle(achievement, selectedAchievement?.id === achievement.id, 'achievement')}\n                disabled={matchedItems.has(achievement.id)}\n              >\n                <div className=\"font-medium text-sm leading-relaxed\">\n                  {achievement.achievement}\n                </div>\n              </button>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Years Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Crown className=\"h-4 w-4 text-orange-600\" />\n              Years ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {years.map((year) => (\n              <button\n                key={`year-${year.id}`}\n                onClick={() => handleYearClick(year)}\n                className={getButtonStyle(year, selectedYear?.id === year.id, 'year')}\n                disabled={matchedItems.has(year.id)}\n              >\n                <div className=\"font-bold text-lg text-center\">\n                  {year.year}\n                </div>\n              </button>\n            ))}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Instructions */}\n      <Card className=\"bg-blue-50 border-blue-200\">\n        <CardContent className=\"p-4\">\n          <h4 className=\"font-semibold text-blue-900 mb-2\">How to Play:</h4>\n          <ul className=\"text-sm text-blue-800 space-y-1\">\n            <li>• Select one leader, one achievement, and one year that all belong together</li>\n            <li>• All three selections must match the same historical figure</li>\n            <li>• Correct matches turn green and celebrate with confetti</li>\n            <li>• Use era filters to focus on specific historical periods</li>\n            <li>• Challenge yourself with the ultimate test of British royal and political history!</li>\n          </ul>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":15032},"client/src/components/enhanced-matching-cards.tsx":{"content":"import { useState, useRef, useEffect, useMemo } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { RotateCcw, Check, X } from \"lucide-react\";\nimport { celebrateCorrectMatch, celebrateGameComplete } from \"@/lib/confetti\";\nimport VariantSelector from \"./variant-selector\";\nimport GameCompletionEncouragement from \"./game-completion-encouragement\";\n\ninterface MatchingPair {\n  id: string;\n  left: string;\n  right: string;\n  category: string;\n}\n\nconst allMatchingData: MatchingPair[] = [\n  {\n    id: \"1\",\n    left: \"1066\",\n    right: \"Norman Conquest\",\n    category: \"History\"\n  },\n  {\n    id: \"2\",\n    left: \"1215\",\n    right: \"Magna Carta signed\",\n    category: \"History\"\n  },\n  {\n    id: \"3\",\n    left: \"1314\",\n    right: \"Battle of Bannockburn\",\n    category: \"History\"\n  },\n  {\n    id: \"4\",\n    left: \"London\",\n    right: \"Capital of England\",\n    category: \"Geography\"\n  },\n  {\n    id: \"5\",\n    left: \"Edinburgh\",\n    right: \"Capital of Scotland\",\n    category: \"Geography\"\n  },\n  {\n    id: \"6\",\n    left: \"Cardiff\",\n    right: \"Capital of Wales\",\n    category: \"Geography\"\n  },\n  {\n    id: \"7\",\n    left: \"House of Commons\",\n    right: \"Lower house of Parliament\",\n    category: \"Government\"\n  },\n  {\n    id: \"8\",\n    left: \"House of Lords\",\n    right: \"Upper house of Parliament\",\n    category: \"Government\"\n  },\n  {\n    id: \"9\",\n    left: \"Shakespeare\",\n    right: \"Famous English playwright\",\n    category: \"Culture\"\n  },\n  {\n    id: \"10\",\n    left: \"Burns Night\",\n    right: \"Scottish celebration on January 25th\",\n    category: \"Culture\"\n  },\n  {\n    id: \"11\",\n    left: \"18\",\n    right: \"Legal voting age in UK\",\n    category: \"Values\"\n  },\n  {\n    id: \"12\",\n    left: \"NHS\",\n    right: \"National Health Service\",\n    category: \"Values\"\n  }\n];\n\ninterface EnhancedMatchingCardsProps {\n  userId: string;\n  onNextGame?: () => void;\n  nextGameTitle?: string;\n}\n\nexport default function EnhancedMatchingCards({ userId, onNextGame, nextGameTitle }: EnhancedMatchingCardsProps) {\n  const [currentVariant, setCurrentVariant] = useState(4);\n  const [completedVariants, setCompletedVariants] = useState<number[]>([]);\n  const [selectedLeft, setSelectedLeft] = useState<string | null>(null);\n  const [selectedRight, setSelectedRight] = useState<string | null>(null);\n  const [matchedPairs, setMatchedPairs] = useState<Set<string>>(new Set());\n  const [showIncorrect, setShowIncorrect] = useState(false);\n  const [gameStats, setGameStats] = useState({ attempts: 0, correct: 0 });\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"All\");\n  const incorrectTimeoutRef = useRef<NodeJS.Timeout>();\n\n  // Get data for current variant\n  const currentData = useMemo(() => {\n    const shuffled = [...allMatchingData].sort(() => Math.random() - 0.5);\n    return shuffled.slice(0, currentVariant);\n  }, [currentVariant]);\n\n  const categories = useMemo(() => {\n    const uniqueCategories = Array.from(new Set(currentData.map(item => item.category)));\n    return [\"All\", ...uniqueCategories];\n  }, [currentData]);\n\n  const filteredData = useMemo(() => {\n    if (selectedCategory === \"All\") return currentData;\n    return currentData.filter(item => item.category === selectedCategory);\n  }, [currentData, selectedCategory]);\n\n  const shuffledLeftItems = useMemo(() => {\n    return [...filteredData].sort(() => Math.random() - 0.5);\n  }, [filteredData]);\n\n  const shuffledRightItems = useMemo(() => {\n    return [...filteredData].sort(() => Math.random() - 0.5);\n  }, [filteredData]);\n\n  const handleItemClick = (id: string, side: 'left' | 'right') => {\n    if (matchedPairs.has(id)) return;\n\n    if (side === 'left') {\n      setSelectedLeft(selectedLeft === id ? null : id);\n    } else {\n      setSelectedRight(selectedRight === id ? null : id);\n    }\n  };\n\n  const checkMatch = () => {\n    if (!selectedLeft || !selectedRight) return;\n\n    setGameStats(prev => ({ ...prev, attempts: prev.attempts + 1 }));\n\n    if (selectedLeft === selectedRight) {\n      // Correct match\n      setMatchedPairs(prev => new Set(Array.from(prev).concat([selectedLeft])));\n      setGameStats(prev => ({ ...prev, correct: prev.correct + 1 }));\n      setSelectedLeft(null);\n      setSelectedRight(null);\n      \n      celebrateCorrectMatch();\n\n      // Check if game is complete\n      if (matchedPairs.size + 1 === filteredData.length) {\n        setTimeout(() => {\n          celebrateGameComplete();\n          if (!completedVariants.includes(currentVariant)) {\n            setCompletedVariants(prev => [...prev, currentVariant]);\n          }\n        }, 500);\n      }\n    } else {\n      // Incorrect match\n      setShowIncorrect(true);\n      incorrectTimeoutRef.current = setTimeout(() => {\n        setShowIncorrect(false);\n        setSelectedLeft(null);\n        setSelectedRight(null);\n      }, 3000);\n    }\n  };\n\n  useEffect(() => {\n    if (selectedLeft && selectedRight) {\n      checkMatch();\n    }\n  }, [selectedLeft, selectedRight]);\n\n  const resetGame = () => {\n    setSelectedLeft(null);\n    setSelectedRight(null);\n    setMatchedPairs(new Set());\n    setShowIncorrect(false);\n    setGameStats({ attempts: 0, correct: 0 });\n    if (incorrectTimeoutRef.current) {\n      clearTimeout(incorrectTimeoutRef.current);\n    }\n  };\n\n  const handleVariantChange = (variant: number) => {\n    setCurrentVariant(variant);\n    resetGame();\n  };\n\n  const handlePlayAgain = () => {\n    resetGame();\n  };\n\n  const isGameComplete = matchedPairs.size === filteredData.length && filteredData.length > 0;\n  const allVariantsCompleted = completedVariants.length === 4; // 4 variants: 4, 6, 8, 12\n\n  return (\n    <div className=\"space-y-6\">\n      <VariantSelector\n        currentVariant={currentVariant}\n        onVariantChange={handleVariantChange}\n        completedVariants={completedVariants}\n        gameTitle=\"General Matching\"\n      />\n\n      {isGameComplete && (\n        <GameCompletionEncouragement\n          currentGameTitle=\"General Matching\"\n          nextGameTitle={nextGameTitle}\n          completedVariants={completedVariants}\n          totalVariants={4}\n          onNextGame={onNextGame}\n          onPlayAgain={handlePlayAgain}\n          difficulty=\"middle\"\n        />\n      )}\n\n      <div className=\"flex flex-wrap gap-2 mb-4\">\n        {categories.map(category => (\n          <Badge\n            key={category}\n            variant={selectedCategory === category ? \"default\" : \"outline\"}\n            className=\"cursor-pointer\"\n            onClick={() => setSelectedCategory(category)}\n          >\n            {category}\n          </Badge>\n        ))}\n      </div>\n\n      <div className=\"flex justify-between items-center mb-4\">\n        <div className=\"text-sm text-gray-600 dark:text-gray-300\">\n          Progress: {matchedPairs.size} / {filteredData.length} matches\n          {gameStats.attempts > 0 && (\n            <span className=\"ml-2\">\n              (Accuracy: {Math.round((gameStats.correct / gameStats.attempts) * 100)}%)\n            </span>\n          )}\n        </div>\n        <Button onClick={resetGame} variant=\"outline\" size=\"sm\">\n          <RotateCcw className=\"h-4 w-4 mr-1\" />\n          Reset\n        </Button>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        {/* Left Column */}\n        <div className=\"space-y-2\">\n          <h3 className=\"font-semibold text-center mb-3\">Items</h3>\n          {shuffledLeftItems.map(item => (\n            <Button\n              key={`left-${item.id}`}\n              variant={\n                matchedPairs.has(item.id) ? \"default\" :\n                selectedLeft === item.id ? (showIncorrect ? \"destructive\" : \"secondary\") :\n                \"outline\"\n              }\n              className={`w-full h-auto p-3 text-left justify-start ${\n                matchedPairs.has(item.id) ? \"bg-green-500 hover:bg-green-600\" : \"\"\n              }`}\n              onClick={() => handleItemClick(item.id, 'left')}\n              disabled={matchedPairs.has(item.id)}\n            >\n              <div className=\"flex items-center gap-2\">\n                {matchedPairs.has(item.id) && <Check className=\"h-4 w-4\" />}\n                {selectedLeft === item.id && showIncorrect && <X className=\"h-4 w-4\" />}\n                <span>{item.left}</span>\n              </div>\n            </Button>\n          ))}\n        </div>\n\n        {/* Right Column */}\n        <div className=\"space-y-2\">\n          <h3 className=\"font-semibold text-center mb-3\">Descriptions</h3>\n          {shuffledRightItems.map(item => (\n            <Button\n              key={`right-${item.id}`}\n              variant={\n                matchedPairs.has(item.id) ? \"default\" :\n                selectedRight === item.id ? (showIncorrect ? \"destructive\" : \"secondary\") :\n                \"outline\"\n              }\n              className={`w-full h-auto p-3 text-left justify-start ${\n                matchedPairs.has(item.id) ? \"bg-green-500 hover:bg-green-600\" : \"\"\n              }`}\n              onClick={() => handleItemClick(item.id, 'right')}\n              disabled={matchedPairs.has(item.id)}\n            >\n              <div className=\"flex items-center gap-2\">\n                {matchedPairs.has(item.id) && <Check className=\"h-4 w-4\" />}\n                {selectedRight === item.id && showIncorrect && <X className=\"h-4 w-4\" />}\n                <span>{item.right}</span>\n              </div>\n            </Button>\n          ))}\n        </div>\n      </div>\n\n      {!isGameComplete && (\n        <div className=\"mt-6 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\n          <h4 className=\"font-semibold mb-2\">How to Play:</h4>\n          <ul className=\"text-sm text-gray-600 dark:text-gray-300 space-y-1\">\n            <li>• Choose your preferred difficulty: 4, 6, 8, or 12 matching pairs</li>\n            <li>• Click one button from each column to make a match</li>\n            <li>• Correct matches turn green and move to the bottom</li>\n            <li>• Complete all variants to unlock the next matching game!</li>\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":10118},"client/src/components/enhanced-sports-heroes-matching.tsx":{"content":"import { useState, useMemo, useEffect } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { RotateCcw, Check, X, Trophy } from \"lucide-react\";\nimport { celebrateWithTheme, celebrateGameComplete } from \"@/lib/confetti\";\nimport VariantSelector from \"./variant-selector\";\nimport GameCompletionEncouragement from \"./game-completion-encouragement\";\n\ninterface SportsHero {\n  id: string;\n  name: string;\n  sport: string;\n  achievement: string;\n}\n\nconst allSportsHeroesData: SportsHero[] = [\n  {\n    id: \"1\",\n    name: \"Roger Bannister\",\n    sport: \"Athletics\",\n    achievement: \"First person to run a mile in under 4 minutes (1954)\"\n  },\n  {\n    id: \"2\",\n    name: \"Sir Mo Farah\",\n    sport: \"Athletics\", \n    achievement: \"Four-time Olympic gold medalist in 5000m and 10000m\"\n  },\n  {\n    id: \"3\",\n    name: \"Dame Kelly Holmes\",\n    sport: \"Athletics\",\n    achievement: \"Double Olympic gold medalist in 800m and 1500m\"\n  },\n  {\n    id: \"4\",\n    name: \"Sir Lewis Hamilton\",\n    sport: \"Formula 1\",\n    achievement: \"Seven-time Formula 1 World Champion\"\n  },\n  {\n    id: \"5\",\n    name: \"Damon Hill\",\n    sport: \"Formula 1\",\n    achievement: \"1996 Formula 1 World Champion\"\n  },\n  {\n    id: \"6\",\n    name: \"Jenson Button\",\n    sport: \"Formula 1\",\n    achievement: \"2009 Formula 1 World Champion\"\n  },\n  {\n    id: \"7\",\n    name: \"Sir Jackie Stewart\",\n    sport: \"Formula 1\",\n    achievement: \"Three-time Formula 1 World Champion (1969, 1971, 1973)\"\n  },\n  {\n    id: \"8\",\n    name: \"Sir Bobby Moore\",\n    sport: \"Football\",\n    achievement: \"Captain of England's 1966 World Cup winning team\"\n  },\n  {\n    id: \"9\",\n    name: \"Sir Ian Botham\",\n    sport: \"Cricket\",\n    achievement: \"All-rounder with 5,200 runs and 383 wickets in Tests\"\n  },\n  {\n    id: \"10\",\n    name: \"Torvill and Dean\",\n    sport: \"Ice Skating\",\n    achievement: \"Olympic ice dance champions with perfect score (1984)\"\n  },\n  {\n    id: \"11\",\n    name: \"Sir Steve Redgrave\",\n    sport: \"Rowing\",\n    achievement: \"Five-time Olympic gold medalist (1984-2000)\"\n  },\n  {\n    id: \"12\",\n    name: \"Dame Sarah Storey\",\n    sport: \"Paralympic Cycling\",\n    achievement: \"Most successful British Paralympian with 17 gold medals\"\n  }\n];\n\ninterface EnhancedSportsHeroesMatchingProps {\n  userId: string;\n  onNextGame?: () => void;\n  nextGameTitle?: string;\n}\n\nexport default function EnhancedSportsHeroesMatching({ userId, onNextGame, nextGameTitle }: EnhancedSportsHeroesMatchingProps) {\n  const [currentVariant, setCurrentVariant] = useState(4);\n  const [completedVariants, setCompletedVariants] = useState<number[]>([]);\n  const [selectedName, setSelectedName] = useState<string | null>(null);\n  const [selectedSport, setSelectedSport] = useState<string | null>(null);\n  const [selectedAchievement, setSelectedAchievement] = useState<string | null>(null);\n  const [matchedItems, setMatchedItems] = useState<Set<string>>(new Set());\n  const [showIncorrect, setShowIncorrect] = useState<string | null>(null);\n  const [gameStats, setGameStats] = useState({ attempts: 0, correct: 0 });\n  const [sportFilter, setSportFilter] = useState<string>(\"All\");\n\n  // Get data for current variant\n  const currentData = useMemo(() => {\n    const shuffled = [...allSportsHeroesData].sort(() => Math.random() - 0.5);\n    return shuffled.slice(0, currentVariant);\n  }, [currentVariant]);\n\n  const sports = useMemo(() => {\n    const uniqueSports = Array.from(new Set(currentData.map(item => item.sport)));\n    return [\"All\", ...uniqueSports];\n  }, [currentData]);\n\n  const filteredData = useMemo(() => {\n    if (sportFilter === \"All\") return currentData;\n    return currentData.filter(item => item.sport === sportFilter);\n  }, [currentData, sportFilter]);\n\n  const shuffledNames = useMemo(() => {\n    return [...filteredData].sort(() => Math.random() - 0.5);\n  }, [filteredData]);\n\n  const shuffledSports = useMemo(() => {\n    return [...filteredData].sort(() => Math.random() - 0.5);\n  }, [filteredData]);\n\n  const shuffledAchievements = useMemo(() => {\n    return [...filteredData].sort(() => Math.random() - 0.5);\n  }, [filteredData]);\n\n  const handleSelection = (id: string, column: 'name' | 'sport' | 'achievement') => {\n    if (matchedItems.has(id)) return;\n\n    switch (column) {\n      case 'name':\n        setSelectedName(selectedName === id ? null : id);\n        break;\n      case 'sport':\n        setSelectedSport(selectedSport === id ? null : id);\n        break;\n      case 'achievement':\n        setSelectedAchievement(selectedAchievement === id ? null : id);\n        break;\n    }\n  };\n\n  const checkTripleMatch = () => {\n    if (!selectedName || !selectedSport || !selectedAchievement) return;\n\n    setGameStats(prev => ({ ...prev, attempts: prev.attempts + 1 }));\n\n    if (selectedName === selectedSport && selectedSport === selectedAchievement) {\n      // Correct match\n      setMatchedItems(prev => new Set(Array.from(prev).concat([selectedName])));\n      setGameStats(prev => ({ ...prev, correct: prev.correct + 1 }));\n      \n      celebrateWithTheme(\"sports\");\n      \n      // Reset selections\n      setSelectedName(null);\n      setSelectedSport(null);\n      setSelectedAchievement(null);\n\n      // Check if game is complete\n      if (matchedItems.size + 1 === filteredData.length) {\n        setTimeout(() => {\n          celebrateGameComplete();\n          if (!completedVariants.includes(currentVariant)) {\n            setCompletedVariants(prev => [...prev, currentVariant]);\n          }\n        }, 500);\n      }\n    } else {\n      // Incorrect match\n      setShowIncorrect(`${selectedName}-${selectedSport}-${selectedAchievement}`);\n      setTimeout(() => {\n        setShowIncorrect(null);\n        setSelectedName(null);\n        setSelectedSport(null);\n        setSelectedAchievement(null);\n      }, 3000);\n    }\n  };\n\n  // Auto-check when all three selections are made\n  useEffect(() => {\n    if (selectedName && selectedSport && selectedAchievement) {\n      checkTripleMatch();\n    }\n  }, [selectedName, selectedSport, selectedAchievement]);\n\n  const resetGame = () => {\n    setSelectedName(null);\n    setSelectedSport(null);\n    setSelectedAchievement(null);\n    setMatchedItems(new Set());\n    setShowIncorrect(null);\n    setGameStats({ attempts: 0, correct: 0 });\n  };\n\n  const handleVariantChange = (variant: number) => {\n    setCurrentVariant(variant);\n    resetGame();\n  };\n\n  const handlePlayAgain = () => {\n    resetGame();\n  };\n\n  const isGameComplete = matchedItems.size === filteredData.length && filteredData.length > 0;\n\n  return (\n    <div className=\"space-y-6\">\n      <VariantSelector\n        currentVariant={currentVariant}\n        onVariantChange={handleVariantChange}\n        completedVariants={completedVariants}\n        gameTitle=\"Sports Heroes Triple Match\"\n      />\n\n      {isGameComplete && (\n        <GameCompletionEncouragement\n          currentGameTitle=\"Sports Heroes Triple Match\"\n          nextGameTitle={nextGameTitle}\n          completedVariants={completedVariants}\n          totalVariants={4}\n          onNextGame={onNextGame}\n          onPlayAgain={handlePlayAgain}\n          difficulty=\"advanced\"\n        />\n      )}\n\n      <div className=\"flex flex-wrap gap-2 mb-4\">\n        {sports.map(sport => (\n          <Badge\n            key={sport}\n            variant={sportFilter === sport ? \"default\" : \"outline\"}\n            className=\"cursor-pointer\"\n            onClick={() => setSportFilter(sport)}\n          >\n            {sport}\n          </Badge>\n        ))}\n      </div>\n\n      <div className=\"flex justify-between items-center mb-4\">\n        <div className=\"text-sm text-gray-600 dark:text-gray-300\">\n          Progress: {matchedItems.size} / {filteredData.length} matches\n          {gameStats.attempts > 0 && (\n            <span className=\"ml-2\">\n              (Accuracy: {Math.round((gameStats.correct / gameStats.attempts) * 100)}%)\n            </span>\n          )}\n        </div>\n        <Button onClick={resetGame} variant=\"outline\" size=\"sm\">\n          <RotateCcw className=\"h-4 w-4 mr-1\" />\n          Reset\n        </Button>\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        {/* Names Column */}\n        <div className=\"space-y-2\">\n          <h3 className=\"font-semibold text-center mb-3\">Name</h3>\n          {shuffledNames.map(item => {\n            const isMatched = matchedItems.has(item.id);\n            const isSelected = selectedName === item.id;\n            const isIncorrect = showIncorrect && showIncorrect.includes(item.id);\n            \n            return (\n              <Button\n                key={`name-${item.id}`}\n                variant={\n                  isMatched ? \"default\" :\n                  isSelected ? (isIncorrect ? \"destructive\" : \"secondary\") :\n                  \"outline\"\n                }\n                className={`w-full h-auto p-3 text-left justify-start ${\n                  isMatched ? \"bg-green-500 hover:bg-green-600\" : \"\"\n                }`}\n                onClick={() => handleSelection(item.id, 'name')}\n                disabled={isMatched}\n              >\n                <div className=\"flex items-center gap-2\">\n                  {isMatched && <Check className=\"h-4 w-4\" />}\n                  {isIncorrect && <X className=\"h-4 w-4\" />}\n                  <span className=\"text-sm\">{item.name}</span>\n                </div>\n              </Button>\n            );\n          })}\n        </div>\n\n        {/* Sports Column */}\n        <div className=\"space-y-2\">\n          <h3 className=\"font-semibold text-center mb-3\">Sport</h3>\n          {shuffledSports.map(item => {\n            const isMatched = matchedItems.has(item.id);\n            const isSelected = selectedSport === item.id;\n            const isIncorrect = showIncorrect && showIncorrect.includes(item.id);\n            \n            return (\n              <Button\n                key={`sport-${item.id}`}\n                variant={\n                  isMatched ? \"default\" :\n                  isSelected ? (isIncorrect ? \"destructive\" : \"secondary\") :\n                  \"outline\"\n                }\n                className={`w-full h-auto p-3 text-left justify-start ${\n                  isMatched ? \"bg-green-500 hover:bg-green-600\" : \"\"\n                }`}\n                onClick={() => handleSelection(item.id, 'sport')}\n                disabled={isMatched}\n              >\n                <div className=\"flex items-center gap-2\">\n                  {isMatched && <Check className=\"h-4 w-4\" />}\n                  {isIncorrect && <X className=\"h-4 w-4\" />}\n                  <span className=\"text-sm\">{item.sport}</span>\n                </div>\n              </Button>\n            );\n          })}\n        </div>\n\n        {/* Achievements Column */}\n        <div className=\"space-y-2\">\n          <h3 className=\"font-semibold text-center mb-3\">Achievement</h3>\n          {shuffledAchievements.map(item => {\n            const isMatched = matchedItems.has(item.id);\n            const isSelected = selectedAchievement === item.id;\n            const isIncorrect = showIncorrect && showIncorrect.includes(item.id);\n            \n            return (\n              <Button\n                key={`achievement-${item.id}`}\n                variant={\n                  isMatched ? \"default\" :\n                  isSelected ? (isIncorrect ? \"destructive\" : \"secondary\") :\n                  \"outline\"\n                }\n                className={`w-full h-auto p-3 text-left justify-start ${\n                  isMatched ? \"bg-green-500 hover:bg-green-600\" : \"\"\n                }`}\n                onClick={() => handleSelection(item.id, 'achievement')}\n                disabled={isMatched}\n              >\n                <div className=\"flex items-center gap-2\">\n                  {isMatched && <Check className=\"h-4 w-4\" />}\n                  {isIncorrect && <X className=\"h-4 w-4\" />}\n                  <span className=\"text-xs\">{item.achievement}</span>\n                </div>\n              </Button>\n            );\n          })}\n        </div>\n      </div>\n\n      {!isGameComplete && (\n        <div className=\"mt-6 p-4 bg-purple-50 dark:bg-purple-900/20 rounded-lg\">\n          <h4 className=\"font-semibold mb-2 flex items-center gap-2\">\n            <Trophy className=\"h-4 w-4\" />\n            How to Play Triple Match:\n          </h4>\n          <ul className=\"text-sm text-gray-600 dark:text-gray-300 space-y-1\">\n            <li>• Choose your challenge level: 4, 6, 8, or 12 sports heroes</li>\n            <li>• Select one item from each of the three columns (Name → Sport → Achievement)</li>\n            <li>• All three selections must relate to the same sports hero</li>\n            <li>• Complete all variants to unlock the next advanced game!</li>\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":12865},"client/src/components/exercise-section.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { Brain, RotateCcw, CheckCircle, XCircle } from \"lucide-react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface ExerciseSectionProps {\n  userId: string;\n}\n\nexport default function ExerciseSection({ userId }: ExerciseSectionProps) {\n  const [currentExercise, setCurrentExercise] = useState<any>(null);\n  const [userAnswers, setUserAnswers] = useState<Record<string, string>>({});\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [score, setScore] = useState({ correct: 0, total: 0 });\n  const queryClient = useQueryClient();\n  const { toast } = useToast();\n\n  const { data: exercises = [] } = useQuery({\n    queryKey: [\"/api/exercises\", userId],\n  });\n\n  const generateExerciseMutation = useMutation({\n    mutationFn: async ({ topic, difficulty }: { topic: string; difficulty?: number }) => {\n      const response = await apiRequest(\"POST\", \"/api/exercises/generate\", {\n        userId,\n        topic,\n        difficulty: difficulty || 1\n      });\n      return response.json();\n    },\n    onSuccess: (data) => {\n      setCurrentExercise(data);\n      setUserAnswers({});\n      setShowFeedback(false);\n      setScore({ correct: 0, total: 0 });\n      queryClient.invalidateQueries({ queryKey: [\"/api/exercises\", userId] });\n      toast({\n        title: \"New Exercise Generated\",\n        description: \"A new exercise has been created for you to practice.\"\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Generation Failed\",\n        description: \"Failed to generate new exercise. Please try again.\",\n        variant: \"destructive\"\n      });\n    }\n  });\n\n  const submitAttemptMutation = useMutation({\n    mutationFn: async (attemptData: any) => {\n      const response = await apiRequest(\"POST\", \"/api/exercises/attempt\", attemptData);\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/exercises/attempts\", userId] });\n    }\n  });\n\n  const handleGenerateExercise = () => {\n    const topics = [\"British Government\", \"UK History\", \"British Culture\", \"British Values\", \"UK Geography\"];\n    const randomTopic = topics[Math.floor(Math.random() * topics.length)];\n    generateExerciseMutation.mutate({ topic: randomTopic });\n  };\n\n  const handleAnswerChange = (questionId: string, answer: string) => {\n    setUserAnswers(prev => ({\n      ...prev,\n      [questionId]: answer\n    }));\n  };\n\n  const checkAnswers = () => {\n    let text = displayExercise?.content?.content?.text || displayExercise?.content?.text;\n    if (!text) return;\n    \n    const inlineChoiceRegex = /\\{([^}]+)\\}/g;\n    let match;\n    let correct = 0;\n    let total = 0;\n    \n    // Reset regex state\n    inlineChoiceRegex.lastIndex = 0;\n    \n    while ((match = inlineChoiceRegex.exec(text)) !== null) {\n      const questionId = `choice-${total}`;\n      const userAnswer = userAnswers[questionId];\n      \n      // First option in each choice set is always correct (index 0)\n      if (userAnswer && parseInt(userAnswer) === 0) {\n        correct++;\n      }\n      total++;\n    }\n    \n    setScore({ correct, total });\n    setShowFeedback(true);\n\n    // Submit the attempt\n    submitAttemptMutation.mutate({\n      userId,\n      exerciseId: displayExercise.id,\n      answers: userAnswers,\n      score: correct,\n      totalQuestions: total\n    });\n  };\n\n  // Use the latest exercise if available\n  const displayExercise = currentExercise || exercises[exercises.length - 1];\n\n  // Initialize with a default exercise on first load\n  if (!displayExercise && exercises.length === 0 && !generateExerciseMutation.isPending) {\n    handleGenerateExercise();\n  }\n\n  return (\n    <section id=\"exercises\">\n      <Card className=\"shadow-sm border border-gray-200 overflow-hidden\">\n        <CardHeader className=\"border-b border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <CardTitle className=\"text-xl font-semibold text-gray-900 flex items-center\">\n              <Brain className=\"text-warning mr-3\" size={24} />\n              AI-Generated Exercises\n            </CardTitle>\n            <Button \n              onClick={handleGenerateExercise}\n              disabled={generateExerciseMutation.isPending}\n              className=\"bg-warning hover:bg-warning/90 text-white\"\n            >\n              <RotateCcw className=\"mr-2\" size={16} />\n              {generateExerciseMutation.isPending ? \"Generating...\" : \"Generate New\"}\n            </Button>\n          </div>\n          <p className=\"text-gray-600 mt-1\">Fill-in-the-blank exercises with AI-generated variations to enhance critical thinking</p>\n        </CardHeader>\n        \n        <CardContent className=\"p-6\">\n          {generateExerciseMutation.isPending ? (\n            <div className=\"bg-blue-50 rounded-xl p-6\">\n              <div className=\"animate-pulse space-y-4\">\n                <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\n                <div className=\"space-y-3\">\n                  <div className=\"h-4 bg-gray-200 rounded\"></div>\n                  <div className=\"h-4 bg-gray-200 rounded w-5/6\"></div>\n                  <div className=\"h-4 bg-gray-200 rounded w-4/5\"></div>\n                </div>\n              </div>\n            </div>\n          ) : displayExercise ? (\n            <div className=\"bg-blue-50 rounded-xl p-6\">\n              <h4 className=\"font-semibold text-gray-900 mb-4\">\n                Complete the text about {displayExercise.content?.topic || displayExercise.topic}:\n              </h4>\n              \n              <div className=\"bg-white rounded-lg p-4 mb-6 leading-relaxed text-gray-700\">\n                {(() => {\n                  // Handle nested content structure\n                  let text = displayExercise.content?.content?.text || displayExercise.content?.text;\n                  if (!text) {\n                    console.log('Exercise data:', displayExercise);\n                    return <div className=\"text-red-500\">No exercise text found</div>;\n                  }\n                  \n                  console.log('Exercise text:', text.substring(0, 200) + '...');\n                  const inlineChoiceRegex = /\\{([^}]+)\\}/g;\n                  let match;\n                  let lastIndex = 0;\n                  const elements = [];\n                  let choiceIndex = 0;\n                  \n                  while ((match = inlineChoiceRegex.exec(text)) !== null) {\n                    // Add text before this choice\n                    if (match.index > lastIndex) {\n                      elements.push(\n                        <span key={`text-${choiceIndex}`}>\n                          {text.substring(lastIndex, match.index)}\n                        </span>\n                      );\n                    }\n                    \n                    // Get the options for this choice\n                    const options = match[1].split('|');\n                    const questionId = `choice-${choiceIndex}`;\n                    \n                    // Add the dropdown selector\n                    elements.push(\n                      <span key={questionId} className=\"inline-block mx-1\">\n                        <Select\n                          value={userAnswers[questionId] || \"\"}\n                          onValueChange={(value) => handleAnswerChange(questionId, value)}\n                          disabled={showFeedback}\n                        >\n                          <SelectTrigger className=\"w-auto min-w-[120px] h-8 text-sm border-2 border-uk-blue/30 focus:border-uk-blue\">\n                            <SelectValue placeholder=\"Select...\" />\n                          </SelectTrigger>\n                          <SelectContent>\n                            {options.map((option: string, optionIndex: number) => (\n                              <SelectItem key={optionIndex} value={optionIndex.toString()}>\n                                {option.trim()}\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                      </span>\n                    );\n                    \n                    lastIndex = match.index + match[0].length;\n                    choiceIndex++;\n                  }\n                  \n                  // Add any remaining text\n                  if (lastIndex < text.length) {\n                    elements.push(\n                      <span key={`text-final`}>\n                        {text.substring(lastIndex)}\n                      </span>\n                    );\n                  }\n                  \n                  return elements;\n                })()}\n              </div>\n              \n              <div className=\"flex items-center justify-between\">\n                <div className=\"text-sm text-gray-600\">\n                  {showFeedback ? (\n                    <>\n                      <CheckCircle className=\"inline text-success mr-1\" size={16} />\n                      {score.correct} of {score.total} correct\n                    </>\n                  ) : (\n                    <>\n                      Progress: {Object.keys(userAnswers).length} of {(() => {\n                        let text = displayExercise.content?.content?.text || displayExercise.content?.text;\n                        if (!text) return 0;\n                        const matches = text.match(/\\{[^}]+\\}/g);\n                        return matches ? matches.length : 0;\n                      })()} answered\n                    </>\n                  )}\n                </div>\n                <Button \n                  onClick={checkAnswers}\n                  disabled={showFeedback || Object.keys(userAnswers).length === 0}\n                  className=\"bg-uk-blue hover:bg-uk-blue/90 text-white\"\n                >\n                  Check Answers\n                </Button>\n              </div>\n\n              {/* Answer feedback */}\n              {showFeedback && (\n                <div className=\"mt-4 p-4 bg-gray-50 rounded-lg\">\n                  <h5 className=\"font-medium text-gray-900 mb-2\">Feedback:</h5>\n                  <ul className=\"space-y-1 text-sm text-gray-600\">\n                    {(() => {\n                      let text = displayExercise.content?.content?.text || displayExercise.content?.text;\n                      if (!text) return null;\n                      \n                      const inlineChoiceRegex = /\\{([^}]+)\\}/g;\n                      let match;\n                      const feedbackItems = [];\n                      let choiceIndex = 0;\n                      \n                      // Reset regex state\n                      inlineChoiceRegex.lastIndex = 0;\n                      \n                      while ((match = inlineChoiceRegex.exec(text)) !== null) {\n                        const questionId = `choice-${choiceIndex}`;\n                        const userAnswer = userAnswers[questionId];\n                        const options = match[1].split('|');\n                        const correctAnswer = options[0].trim(); // First option is correct\n                        const isCorrect = userAnswer && parseInt(userAnswer) === 0;\n                        const userSelectedOption = userAnswer ? options[parseInt(userAnswer)]?.trim() : 'Not answered';\n                        \n                        feedbackItems.push(\n                          <li key={questionId} className=\"flex items-start\">\n                            {isCorrect ? (\n                              <CheckCircle className=\"text-success mr-2 mt-0.5 flex-shrink-0\" size={16} />\n                            ) : (\n                              <XCircle className=\"text-red-500 mr-2 mt-0.5 flex-shrink-0\" size={16} />\n                            )}\n                            <span>\n                              <strong>Choice {choiceIndex + 1}:</strong> {isCorrect ? \"Correct!\" : `Your answer: \"${userSelectedOption}\" - Correct answer: \"${correctAnswer}\"`}\n                            </span>\n                          </li>\n                        );\n                        \n                        choiceIndex++;\n                      }\n                      \n                      return feedbackItems;\n                    })()}\n                  </ul>\n                </div>\n              )}\n            </div>\n          ) : (\n            <div className=\"bg-gray-50 rounded-xl p-6 text-center\">\n              <Brain className=\"mx-auto text-gray-400 mb-4\" size={48} />\n              <p className=\"text-gray-600 mb-4\">No exercises available. Generate your first exercise to get started!</p>\n              <Button onClick={handleGenerateExercise} className=\"bg-warning hover:bg-warning/90 text-white\">\n                Generate Exercise\n              </Button>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </section>\n  );\n}\n","size_bytes":13247},"client/src/components/flip-cards.tsx":{"content":"import { useState } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { RotateCcw, Check } from \"lucide-react\";\nimport { celebrateCorrectMatch, celebrateGameComplete } from \"@/lib/confetti\";\n\ninterface FlipCard {\n  id: string;\n  front: string;\n  back: string;\n  category: string;\n}\n\nconst flipCardsData: FlipCard[] = [\n  {\n    id: \"1\",\n    front: \"What is the capital of Scotland?\",\n    back: \"Edinburgh\",\n    category: \"Geography\"\n  },\n  {\n    id: \"2\", \n    front: \"When did women get the right to vote in the UK?\",\n    back: \"1918 (partial) and 1928 (full equality)\",\n    category: \"History\"\n  },\n  {\n    id: \"3\",\n    front: \"What are the fundamental British values?\",\n    back: \"Democracy, Rule of Law, Individual Liberty, Mutual Respect and Tolerance\",\n    category: \"Values\"\n  },\n  {\n    id: \"4\",\n    front: \"Who is the head of state in the UK?\",\n    back: \"The Monarch (currently King Charles III)\",\n    category: \"Government\"\n  },\n  {\n    id: \"5\",\n    front: \"What is the Church of England also known as?\",\n    back: \"The Anglican Church\",\n    category: \"Religion\"\n  },\n  {\n    id: \"6\",\n    front: \"When is St. George's Day?\",\n    back: \"April 23rd\",\n    category: \"Culture\"\n  },\n  {\n    id: \"7\",\n    front: \"What does the Union Jack represent?\",\n    back: \"The combination of England (St. George's Cross), Scotland (St. Andrew's Cross), and Northern Ireland (St. Patrick's Cross)\",\n    category: \"Symbols\"\n  },\n  {\n    id: \"8\",\n    front: \"What is the highest court in the UK?\",\n    back: \"The Supreme Court\",\n    category: \"Government\"\n  }\n];\n\ninterface FlipCardsProps {\n  userId: string;\n}\n\nexport default function FlipCards({ userId }: FlipCardsProps) {\n  const [flippedCards, setFlippedCards] = useState<Set<string>>(new Set());\n  const [completedCards, setCompletedCards] = useState<Set<string>>(new Set());\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"All\");\n\n  const categories = [\"All\", ...Array.from(new Set(flipCardsData.map(card => card.category)))];\n  \n  const filteredCards = selectedCategory === \"All\" \n    ? flipCardsData \n    : flipCardsData.filter(card => card.category === selectedCategory);\n\n  const handleCardFlip = (cardId: string) => {\n    setFlippedCards(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(cardId)) {\n        newSet.delete(cardId);\n      } else {\n        newSet.add(cardId);\n      }\n      return newSet;\n    });\n  };\n\n  const handleMarkComplete = (cardId: string) => {\n    setCompletedCards(prev => {\n      const newCompleted = new Set(Array.from(prev).concat(cardId));\n      // Check if all filtered cards are complete\n      if (newCompleted.size === filteredCards.length) {\n        setTimeout(() => celebrateGameComplete(), 500);\n      }\n      return newCompleted;\n    });\n  };\n\n  const resetProgress = () => {\n    setFlippedCards(new Set());\n    setCompletedCards(new Set());\n  };\n\n  const completedCardsArray = Array.from(completedCards);\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col sm:flex-row gap-4 items-start sm:items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Flip Cards</h2>\n          <p className=\"text-gray-600 dark:text-gray-300\">Test your knowledge with interactive flip cards</p>\n        </div>\n        <div className=\"flex gap-2\">\n          <Button variant=\"outline\" onClick={resetProgress} className=\"flex items-center gap-2\">\n            <RotateCcw className=\"h-4 w-4\" />\n            Reset Progress\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"flex flex-wrap gap-2\">\n        {categories.map(category => (\n          <Badge\n            key={category}\n            variant={selectedCategory === category ? \"default\" : \"outline\"}\n            className=\"cursor-pointer px-3 py-1\"\n            onClick={() => setSelectedCategory(category)}\n          >\n            {category}\n          </Badge>\n        ))}\n      </div>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {filteredCards.map((card) => {\n          const isFlipped = flippedCards.has(card.id);\n          const isCompleted = completedCards.has(card.id);\n          \n          return (\n            <div key={card.id} className=\"relative h-48\">\n              <div \n                className={`flip-card w-full h-full cursor-pointer transition-transform duration-700 transform-style-preserve-3d ${\n                  isFlipped ? 'rotate-y-180' : ''\n                }`}\n                onClick={() => handleCardFlip(card.id)}\n              >\n                {/* Front of card */}\n                <Card className={`absolute inset-0 backface-hidden ${\n                  isCompleted ? 'ring-2 ring-green-500' : ''\n                }`}>\n                  <CardContent className=\"p-6 h-full flex flex-col justify-between\">\n                    <div className=\"flex-1 flex items-center justify-center text-center\">\n                      <p className=\"text-lg font-medium text-gray-900 dark:text-white\">\n                        {card.front}\n                      </p>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <Badge variant=\"secondary\">{card.category}</Badge>\n                      {isCompleted && <Check className=\"h-5 w-5 text-green-500\" />}\n                    </div>\n                  </CardContent>\n                </Card>\n\n                {/* Back of card */}\n                <Card className=\"absolute inset-0 backface-hidden rotate-y-180 bg-blue-50 dark:bg-blue-900/20\">\n                  <CardContent className=\"p-6 h-full flex flex-col justify-between\">\n                    <div className=\"flex-1 flex items-center justify-center text-center\">\n                      <p className=\"text-lg font-medium text-blue-900 dark:text-blue-100\">\n                        {card.back}\n                      </p>\n                    </div>\n                    <div className=\"flex justify-between items-center\">\n                      <Badge variant=\"secondary\">{card.category}</Badge>\n                      {!isCompleted && (\n                        <Button \n                          size=\"sm\" \n                          onClick={(e) => {\n                            e.stopPropagation();\n                            handleMarkComplete(card.id);\n                          }}\n                          className=\"bg-green-600 hover:bg-green-700\"\n                        >\n                          Got it!\n                        </Button>\n                      )}\n                    </div>\n                  </CardContent>\n                </Card>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      <div className=\"text-center text-sm text-gray-600 dark:text-gray-400\">\n        Progress: {completedCardsArray.length} / {filteredCards.length} cards completed\n      </div>\n    </div>\n  );\n}","size_bytes":7031},"client/src/components/floating-chatbot.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { Send, Bot, User, MessageCircle, X, Minimize2, Maximize2 } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Link } from \"wouter\";\n\ninterface ChatMessage {\n  id: string;\n  type: 'user' | 'bot';\n  content: string;\n  timestamp: Date;\n  suggestions?: string[];\n  resources?: {\n    type: 'video' | 'timeline' | 'game' | 'resource';\n    title: string;\n    url: string;\n  }[];\n}\n\nexport default function FloatingChatbot() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isMinimized, setIsMinimized] = useState(false);\n  const [messages, setMessages] = useState<ChatMessage[]>([\n    {\n      id: '1',\n      type: 'bot',\n      content: \"Hi! I'm your Life in UK study assistant. I can help with questions about British history, government, culture, and citizenship test preparation. What would you like to learn?\",\n      timestamp: new Date(),\n      suggestions: [\n        \"How does the UK Parliament work?\",\n        \"Tell me about British history\",\n        \"What are British values?\"\n      ]\n    }\n  ]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const { toast } = useToast();\n\n  const chatMutation = useMutation({\n    mutationFn: async (question: string) => {\n      const response = await apiRequest(\"POST\", \"/api/chatbot/ask\", { question });\n      if (!response.ok) {\n        throw new Error('Failed to get response');\n      }\n      return response.json();\n    },\n    onSuccess: (data) => {\n      setIsTyping(false);\n      const botMessage: ChatMessage = {\n        id: Date.now().toString(),\n        type: 'bot',\n        content: data.answer,\n        timestamp: new Date(),\n        suggestions: data.suggestions || [],\n        resources: data.resources || []\n      };\n      setMessages(prev => [...prev, botMessage]);\n    },\n    onError: (error) => {\n      setIsTyping(false);\n      toast({\n        title: \"Error\",\n        description: \"Failed to get response. Please try again.\",\n        variant: \"destructive\"\n      });\n    }\n  });\n\n  const handleSendMessage = (messageText: string) => {\n    if (!messageText.trim()) return;\n\n    const userMessage: ChatMessage = {\n      id: Date.now().toString(),\n      type: 'user',\n      content: messageText,\n      timestamp: new Date()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage(\"\");\n    setIsTyping(true);\n    chatMutation.mutate(messageText);\n  };\n\n  const handleSuggestionClick = (suggestion: string) => {\n    handleSendMessage(suggestion);\n  };\n\n  const getResourceIcon = (type: string) => {\n    switch (type) {\n      case 'video': return \"🎥\";\n      case 'timeline': return \"📚\";\n      case 'game': return \"🎮\";\n      case 'resource': return \"📄\";\n      default: return \"📖\";\n    }\n  };\n\n  const formatTime = (date: Date) => {\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  if (!isOpen) {\n    return (\n      <div className=\"fixed bottom-4 right-4 z-50\">\n        <Button\n          onClick={() => setIsOpen(true)}\n          className=\"w-14 h-14 rounded-full bg-uk-blue hover:bg-uk-blue/90 shadow-lg hover:shadow-xl transition-all duration-300 hover:scale-110\"\n          size=\"icon\"\n        >\n          <MessageCircle className=\"h-6 w-6 text-white\" />\n        </Button>\n        <div className=\"absolute -top-2 -right-2 w-5 h-5 bg-green-500 rounded-full border-2 border-white animate-pulse\"></div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"fixed bottom-4 right-4 z-50\">\n      <div className={`bg-white rounded-2xl shadow-2xl border border-gray-200 transition-all duration-300 ${\n        isMinimized ? 'w-80 h-16' : 'w-80 h-96'\n      }`}>\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-4 border-b border-gray-200 bg-uk-blue text-white rounded-t-2xl\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-8 h-8 bg-white/20 rounded-full flex items-center justify-center\">\n              <Bot className=\"h-4 w-4\" />\n            </div>\n            <div>\n              <p className=\"font-medium text-sm\">Study Assistant</p>\n              <p className=\"text-xs text-blue-100\">Online</p>\n            </div>\n          </div>\n          <div className=\"flex items-center gap-1\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => setIsMinimized(!isMinimized)}\n              className=\"text-white hover:bg-white/20 h-8 w-8 p-0\"\n            >\n              {isMinimized ? <Maximize2 className=\"h-4 w-4\" /> : <Minimize2 className=\"h-4 w-4\" />}\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={() => setIsOpen(false)}\n              className=\"text-white hover:bg-white/20 h-8 w-8 p-0\"\n            >\n              <X className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        </div>\n\n        {/* Chat Content - Hidden when minimized */}\n        {!isMinimized && (\n          <>\n            {/* Messages Area */}\n            <ScrollArea className=\"h-64 p-3\">\n              <div className=\"space-y-4\">\n                {messages.map((message) => (\n                  <div\n                    key={message.id}\n                    className={`flex gap-2 ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}\n                  >\n                    {message.type === 'bot' && (\n                      <div className=\"w-6 h-6 bg-uk-blue rounded-full flex items-center justify-center flex-shrink-0 mt-1\">\n                        <Bot className=\"h-3 w-3 text-white\" />\n                      </div>\n                    )}\n                    \n                    <div className={`max-w-[75%] ${message.type === 'user' ? 'order-1' : ''}`}>\n                      <div\n                        className={`p-3 rounded-lg text-sm leading-relaxed ${\n                          message.type === 'user'\n                            ? 'bg-uk-blue text-white rounded-br-none'\n                            : 'bg-gray-100 text-gray-900 rounded-bl-none'\n                        }`}\n                      >\n                        <p className=\"whitespace-pre-wrap break-words\">{message.content}</p>\n                      </div>\n                      \n                      <div className={`text-xs text-gray-500 mt-1 ${message.type === 'user' ? 'text-right' : ''}`}>\n                        {formatTime(message.timestamp)}\n                      </div>\n\n                      {/* Resources */}\n                      {message.resources && message.resources.length > 0 && (\n                        <div className=\"mt-2 space-y-1\">\n                          {message.resources.map((resource, index) => (\n                            <Link key={index} href={resource.url}>\n                              <div className=\"flex items-center gap-2 p-1.5 bg-blue-50 rounded text-xs hover:bg-blue-100 transition-colors cursor-pointer\">\n                                <span>{getResourceIcon(resource.type)}</span>\n                                <span className=\"text-blue-700 truncate flex-1\">\n                                  {resource.title}\n                                </span>\n                                <Badge variant=\"outline\" className=\"text-xs px-1\">\n                                  {resource.type}\n                                </Badge>\n                              </div>\n                            </Link>\n                          ))}\n                        </div>\n                      )}\n\n                      {/* Suggestions */}\n                      {message.suggestions && message.suggestions.length > 0 && (\n                        <div className=\"mt-2 space-y-1\">\n                          {message.suggestions.slice(0, 2).map((suggestion, index) => (\n                            <Button\n                              key={index}\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => handleSuggestionClick(suggestion)}\n                              className=\"text-xs h-6 px-2 w-full justify-start\"\n                            >\n                              {suggestion}\n                            </Button>\n                          ))}\n                        </div>\n                      )}\n                    </div>\n\n                    {message.type === 'user' && (\n                      <div className=\"w-6 h-6 bg-gray-300 rounded-full flex items-center justify-center flex-shrink-0 mt-1\">\n                        <User className=\"h-3 w-3 text-gray-600\" />\n                      </div>\n                    )}\n                  </div>\n                ))}\n\n                {/* Typing Indicator */}\n                {isTyping && (\n                  <div className=\"flex gap-2 justify-start\">\n                    <div className=\"w-6 h-6 bg-uk-blue rounded-full flex items-center justify-center flex-shrink-0 mt-1\">\n                      <Bot className=\"h-3 w-3 text-white\" />\n                    </div>\n                    <div className=\"bg-gray-100 p-2 rounded-lg rounded-bl-none\">\n                      <div className=\"flex space-x-1\">\n                        <div className=\"w-1.5 h-1.5 bg-gray-400 rounded-full animate-bounce\"></div>\n                        <div className=\"w-1.5 h-1.5 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                        <div className=\"w-1.5 h-1.5 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </ScrollArea>\n\n            {/* Input Area */}\n            <div className=\"p-3 border-t border-gray-200 bg-gray-50 rounded-b-2xl\">\n              <div className=\"flex gap-2\">\n                <Input\n                  value={inputMessage}\n                  onChange={(e) => setInputMessage(e.target.value)}\n                  placeholder=\"Ask about British history, government, culture...\"\n                  onKeyPress={(e) => {\n                    if (e.key === 'Enter' && !e.shiftKey) {\n                      e.preventDefault();\n                      handleSendMessage(inputMessage);\n                    }\n                  }}\n                  disabled={chatMutation.isPending}\n                  className=\"flex-1 h-8 text-sm\"\n                />\n                <Button\n                  onClick={() => handleSendMessage(inputMessage)}\n                  disabled={!inputMessage.trim() || chatMutation.isPending}\n                  size=\"sm\"\n                  className=\"h-8 w-8 p-0\"\n                >\n                  <Send className=\"h-3 w-3\" />\n                </Button>\n              </div>\n            </div>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":11155},"client/src/components/game-completion-encouragement.tsx":{"content":"import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Trophy, Star, ArrowRight, CheckCircle } from \"lucide-react\";\nimport confetti from \"canvas-confetti\";\nimport { useEffect } from \"react\";\n\ninterface GameCompletionEncouragementProps {\n  currentGameTitle: string;\n  nextGameTitle?: string;\n  completedVariants: number[];\n  totalVariants: number;\n  onNextGame?: () => void;\n  onPlayAgain?: () => void;\n  difficulty: \"beginner\" | \"middle\" | \"advanced\";\n}\n\nexport default function GameCompletionEncouragement({\n  currentGameTitle,\n  nextGameTitle,\n  completedVariants,\n  totalVariants,\n  onNextGame,\n  onPlayAgain,\n  difficulty\n}: GameCompletionEncouragementProps) {\n  const allVariantsCompleted = completedVariants.length === totalVariants;\n  \n  useEffect(() => {\n    if (allVariantsCompleted) {\n      // Celebratory confetti for completing all variants\n      confetti({\n        particleCount: 100,\n        spread: 70,\n        origin: { y: 0.6 },\n        colors: ['#FFD700', '#FFA500', '#FF6347', '#32CD32', '#1E90FF', '#9370DB']\n      });\n    }\n  }, [allVariantsCompleted]);\n\n  const difficultyColors = {\n    beginner: \"green\",\n    middle: \"blue\", \n    advanced: \"purple\"\n  };\n\n  const color = difficultyColors[difficulty];\n\n  if (!allVariantsCompleted) return null;\n\n  return (\n    <Card className={`border-${color}-200 dark:border-${color}-800 bg-gradient-to-r from-${color}-50 to-${color}-100 dark:from-${color}-900/20 dark:to-${color}-800/20`}>\n      <CardHeader className=\"text-center pb-4\">\n        <div className=\"flex justify-center mb-4\">\n          <div className={`p-4 rounded-full bg-${color}-100 dark:bg-${color}-900/30`}>\n            <Trophy className={`h-8 w-8 text-${color}-600`} />\n          </div>\n        </div>\n        <CardTitle className={`text-2xl text-${color}-700 dark:text-${color}-300`}>\n          🎉 Congratulations! 🎉\n        </CardTitle>\n        <p className={`text-${color}-600 dark:text-${color}-400`}>\n          You've mastered all variants of {currentGameTitle}!\n        </p>\n      </CardHeader>\n      \n      <CardContent className=\"space-y-6\">\n        <div className=\"text-center\">\n          <div className=\"flex justify-center items-center gap-2 mb-3\">\n            <CheckCircle className={`h-5 w-5 text-${color}-600`} />\n            <span className=\"font-semibold\">Complete Achievement</span>\n          </div>\n          <div className=\"flex justify-center gap-2 flex-wrap\">\n            {[4, 6, 8, 12].map((variant) => (\n              <Badge \n                key={variant} \n                className={`bg-${color}-100 text-${color}-800 dark:bg-${color}-900/30 dark:text-${color}-300`}\n              >\n                ✓ {variant} items\n              </Badge>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"space-y-3\">\n          <div className=\"text-center\">\n            <h4 className=\"font-semibold mb-2\">What's Next?</h4>\n            <div className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\n              Keep building your Life in UK test knowledge with these options:\n            </div>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n            {nextGameTitle && onNextGame && (\n              <Button \n                onClick={onNextGame}\n                className={`h-auto p-4 bg-${color}-600 hover:bg-${color}-700`}\n              >\n                <div className=\"flex items-center gap-2\">\n                  <ArrowRight className=\"h-4 w-4\" />\n                  <div className=\"text-left\">\n                    <div className=\"font-semibold\">Next Challenge</div>\n                    <div className=\"text-xs opacity-90\">{nextGameTitle}</div>\n                  </div>\n                </div>\n              </Button>\n            )}\n            \n            {onPlayAgain && (\n              <Button \n                variant=\"outline\" \n                onClick={onPlayAgain}\n                className=\"h-auto p-4\"\n              >\n                <div className=\"flex items-center gap-2\">\n                  <Star className=\"h-4 w-4\" />\n                  <div className=\"text-left\">\n                    <div className=\"font-semibold\">Play Again</div>\n                    <div className=\"text-xs opacity-75\">Practice makes perfect!</div>\n                  </div>\n                </div>\n              </Button>\n            )}\n          </div>\n        </div>\n\n        {difficulty === \"advanced\" && allVariantsCompleted && (\n          <div className={`text-center p-4 rounded-lg bg-${color}-100 dark:bg-${color}-900/30`}>\n            <Trophy className={`h-6 w-6 text-${color}-600 mx-auto mb-2`} />\n            <div className={`text-sm font-semibold text-${color}-800 dark:text-${color}-200`}>\n              🏆 Advanced Level Master! 🏆\n            </div>\n            <div className={`text-xs text-${color}-600 dark:text-${color}-400`}>\n              You've completed the most challenging difficulty level!\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}","size_bytes":5137},"client/src/components/holiday-meanings-matching.tsx":{"content":"import { useState, useMemo } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { RotateCcw, Check, X, BookOpen } from \"lucide-react\";\nimport { celebrateWithTheme, celebrateGameComplete } from \"@/lib/confetti\";\n\ninterface HolidayMeaningPair {\n  id: string;\n  holiday: string;\n  meaning: string;\n  category: string;\n}\n\nconst holidayMeaningData: HolidayMeaningPair[] = [\n  {\n    id: \"1\",\n    holiday: \"Lent\",\n    meaning: \"Christian period of fasting, prayer, and reflection before Easter\",\n    category: \"Christian\"\n  },\n  {\n    id: \"2\", \n    holiday: \"Easter\",\n    meaning: \"Christian celebration of Jesus Christ's resurrection from the dead\",\n    category: \"Christian\"\n  },\n  {\n    id: \"3\",\n    holiday: \"Vaisakhi\",\n    meaning: \"Sikh New Year and harvest festival celebrating the founding of the Khalsa\",\n    category: \"Sikh\"\n  },\n  {\n    id: \"4\",\n    holiday: \"Diwali\",\n    meaning: \"Hindu and Sikh festival of lights celebrating victory of light over darkness\",\n    category: \"Hindu/Sikh\"\n  },\n  {\n    id: \"5\",\n    holiday: \"Hanukkah\",\n    meaning: \"Jewish festival of lights commemorating the rededication of the Temple\",\n    category: \"Jewish\"\n  },\n  {\n    id: \"6\",\n    holiday: \"Eid al-Fitr\",\n    meaning: \"Islamic celebration marking the end of Ramadan fasting month\",\n    category: \"Islamic\"\n  },\n  {\n    id: \"7\",\n    holiday: \"Eid al-Adha\",\n    meaning: \"Islamic festival of sacrifice commemorating Abraham's willingness to sacrifice his son\",\n    category: \"Islamic\"\n  },\n  {\n    id: \"8\",\n    holiday: \"Valentine's Day\",\n    meaning: \"Day dedicated to romantic love and affection between intimate companions\",\n    category: \"Cultural\"\n  },\n  {\n    id: \"9\",\n    holiday: \"April Fool's Day\",\n    meaning: \"Day of practical jokes, pranks, and hoaxes in many countries\",\n    category: \"Cultural\"\n  },\n  {\n    id: \"10\",\n    holiday: \"Mother's Day\",\n    meaning: \"Day honoring mothers, motherhood, maternal bonds, and mothers' influence in society\",\n    category: \"Cultural\"\n  },\n  {\n    id: \"11\",\n    holiday: \"Father's Day\",\n    meaning: \"Day celebrating fatherhood, paternal bonds, and fathers' influence in society\",\n    category: \"Cultural\"\n  },\n  {\n    id: \"12\",\n    holiday: \"Halloween\",\n    meaning: \"Ancient Celtic festival now celebrated with costumes, trick-or-treating, and spooky themes\",\n    category: \"Cultural\"\n  },\n  {\n    id: \"13\",\n    holiday: \"Bonfire Night\",\n    meaning: \"British commemoration of Guy Fawkes' failed Gunpowder Plot to blow up Parliament\",\n    category: \"British Historical\"\n  },\n  {\n    id: \"14\",\n    holiday: \"Remembrance Day\",\n    meaning: \"Memorial day honoring military personnel who died in service to their country\",\n    category: \"Memorial\"\n  },\n  {\n    id: \"15\",\n    holiday: \"Christmas Eve\",\n    meaning: \"Evening before Christmas Day, traditionally a time of preparation and anticipation\",\n    category: \"Christian\"\n  },\n  {\n    id: \"16\",\n    holiday: \"Christmas Day\",\n    meaning: \"Christian celebration of the birth of Jesus Christ and gift-giving\",\n    category: \"Christian\"\n  },\n  {\n    id: \"17\",\n    holiday: \"Boxing Day\",\n    meaning: \"British tradition of giving gifts to service workers and the less fortunate\",\n    category: \"British Cultural\"\n  },\n  {\n    id: \"18\",\n    holiday: \"Hogmanay\",\n    meaning: \"Scottish celebration of New Year's Eve with unique traditions and customs\",\n    category: \"Scottish Cultural\"\n  }\n];\n\ninterface HolidayMeaningsMatchingProps {\n  userId: string;\n}\n\nexport default function HolidayMeaningsMatching({ userId }: HolidayMeaningsMatchingProps) {\n  const [selectedHoliday, setSelectedHoliday] = useState<string | null>(null);\n  const [selectedMeaning, setSelectedMeaning] = useState<string | null>(null);\n  const [matches, setMatches] = useState<Record<string, 'correct' | 'incorrect'>>({});\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"All\");\n  const [feedback, setFeedback] = useState<{ holidayId: string; meaningId: string; correct: boolean } | null>(null);\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [shuffleSeed, setShuffleSeed] = useState(Math.random());\n  const [recentCorrectMatches, setRecentCorrectMatches] = useState<Set<string>>(new Set());\n\n  const categories = [\"All\", ...Array.from(new Set(holidayMeaningData.map(item => item.category)))];\n  \n  const filteredData = selectedCategory === \"All\" \n    ? holidayMeaningData \n    : holidayMeaningData.filter(item => item.category === selectedCategory);\n\n  // Fisher-Yates shuffle algorithm\n  const shuffleArray = (array: HolidayMeaningPair[], seed: number) => {\n    const shuffled = [...array];\n    let random = seed;\n    \n    for (let i = shuffled.length - 1; i > 0; i--) {\n      random = (random * 9301 + 49297) % 233280;\n      const randomIndex = Math.floor((random / 233280) * (i + 1));\n      [shuffled[i], shuffled[randomIndex]] = [shuffled[randomIndex], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  // Create separate shuffled arrays for holidays and meanings columns\n  const shuffledHolidays = useMemo(() => {\n    return shuffleArray(filteredData, shuffleSeed * 1000);\n  }, [filteredData, shuffleSeed]);\n\n  const shuffledMeanings = useMemo(() => {\n    return shuffleArray(filteredData, shuffleSeed * 7309 + 1234);\n  }, [filteredData, shuffleSeed]);\n\n  // Helper functions\n  const getButtonStatus = (itemId: string, side: 'holiday' | 'meaning') => {\n    const matchState = matches[itemId];\n    const isSelected = side === 'holiday' ? selectedHoliday === itemId : selectedMeaning === itemId;\n    const isMatched = matchState === 'correct';\n    const isIncorrect = matchState === 'incorrect';\n    const isRecentMatch = recentCorrectMatches.has(itemId);\n\n    return {\n      isSelected,\n      isMatched,\n      isIncorrect,\n      isRecentMatch\n    };\n  };\n\n  const handleHolidaySelect = (holidayId: string) => {\n    if (matches[holidayId] === 'correct') return;\n    \n    if (selectedHoliday === holidayId) {\n      setSelectedHoliday(null);\n    } else {\n      setSelectedHoliday(holidayId);\n      if (selectedMeaning) {\n        checkMatch(holidayId, selectedMeaning);\n      }\n    }\n  };\n\n  const handleMeaningSelect = (meaningId: string) => {\n    if (matches[meaningId] === 'correct') return;\n    \n    if (selectedMeaning === meaningId) {\n      setSelectedMeaning(null);\n    } else {\n      setSelectedMeaning(meaningId);\n      if (selectedHoliday) {\n        checkMatch(selectedHoliday, meaningId);\n      }\n    }\n  };\n\n  const checkMatch = (holidayId: string, meaningId: string) => {\n    setAttempts(prev => prev + 1);\n    \n    const isCorrect = holidayId === meaningId;\n    \n    if (isCorrect) {\n      // Celebrate individual correct match immediately\n      celebrateWithTheme('holidays');\n      \n      setMatches(prev => ({\n        ...prev,\n        [holidayId]: 'correct'\n      }));\n      setScore(prev => {\n        const newScore = prev + 1;\n        // Check if game is complete  \n        if (newScore === filteredData.length) {\n          setTimeout(() => celebrateGameComplete(), 500);\n        }\n        return newScore;\n      });\n      \n      // Add to recent matches for animation\n      setRecentCorrectMatches(prev => new Set([...Array.from(prev), holidayId]));\n      \n      // Remove from recent matches after animation\n      setTimeout(() => {\n        setRecentCorrectMatches(prev => {\n          const newSet = new Set(Array.from(prev));\n          newSet.delete(holidayId);\n          return newSet;\n        });\n      }, 1000);\n      \n      setFeedback({ holidayId, meaningId, correct: true });\n    } else {\n      setMatches(prev => ({\n        ...prev,\n        [holidayId]: 'incorrect',\n        [meaningId]: 'incorrect'\n      }));\n      setFeedback({ holidayId, meaningId, correct: false });\n      \n      // Clear incorrect state after showing feedback\n      setTimeout(() => {\n        setMatches(prev => {\n          const newMatches = { ...prev };\n          if (newMatches[holidayId] === 'incorrect') delete newMatches[holidayId];\n          if (newMatches[meaningId] === 'incorrect') delete newMatches[meaningId];\n          return newMatches;\n        });\n      }, 1500);\n    }\n    \n    setSelectedHoliday(null);\n    setSelectedMeaning(null);\n    \n    // Clear feedback after delay\n    setTimeout(() => setFeedback(null), 2000);\n  };\n\n  const resetGame = () => {\n    setSelectedHoliday(null);\n    setSelectedMeaning(null);\n    setMatches({});\n    setFeedback(null);\n    setScore(0);\n    setAttempts(0);\n    setShuffleSeed(Math.random());\n    setRecentCorrectMatches(new Set());\n  };\n\n  const correctMatches = Object.values(matches).filter(match => match === 'correct').length;\n  const isGameComplete = correctMatches === filteredData.length;\n  const accuracy = attempts > 0 ? Math.round((score / attempts) * 100) : 0;\n\n  // Sort matched items to bottom\n  const sortItems = (items: HolidayMeaningPair[]) => {\n    const matched = items.filter(item => matches[item.id] === 'correct');\n    const unmatched = items.filter(item => matches[item.id] !== 'correct');\n    return [...unmatched, ...matched];\n  };\n\n  const sortedHolidays = sortItems(shuffledHolidays);\n  const sortedMeanings = sortItems(shuffledMeanings);\n\n  const getCategoryColor = (category: string) => {\n    switch (category) {\n      case \"Christian\": return \"bg-blue-100 text-blue-800 border-blue-200\";\n      case \"Islamic\": return \"bg-green-100 text-green-800 border-green-200\";\n      case \"Hindu/Sikh\": return \"bg-orange-100 text-orange-800 border-orange-200\";\n      case \"Sikh\": return \"bg-yellow-100 text-yellow-800 border-yellow-200\";\n      case \"Jewish\": return \"bg-purple-100 text-purple-800 border-purple-200\";\n      case \"Cultural\": return \"bg-pink-100 text-pink-800 border-pink-200\";\n      case \"British Historical\": return \"bg-red-100 text-red-800 border-red-200\";\n      case \"British Cultural\": return \"bg-indigo-100 text-indigo-800 border-indigo-200\";\n      case \"Scottish Cultural\": return \"bg-teal-100 text-teal-800 border-teal-200\";\n      case \"Memorial\": return \"bg-gray-100 text-gray-800 border-gray-200\";\n      default: return \"bg-gray-100 text-gray-800 border-gray-200\";\n    }\n  };\n\n  return (\n    <Card className=\"w-full max-w-6xl mx-auto\">\n      <CardContent className=\"p-6\">\n        <div className=\"mb-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"flex items-center gap-2\">\n              <BookOpen className=\"h-6 w-6 text-indigo-600\" />\n              <h3 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                Holiday Meanings Matching Game\n              </h3>\n            </div>\n            <Button onClick={resetGame} variant=\"outline\" className=\"flex items-center gap-2\">\n              <RotateCcw className=\"h-4 w-4\" />\n              Reset Game\n            </Button>\n          </div>\n\n          <div className=\"flex flex-wrap gap-4 mb-4\">\n            <Badge variant=\"outline\" className=\"text-lg px-3 py-1\">\n              Score: {score}/{filteredData.length}\n            </Badge>\n            <Badge variant=\"outline\" className=\"text-lg px-3 py-1\">\n              Attempts: {attempts}\n            </Badge>\n            <Badge variant=\"outline\" className=\"text-lg px-3 py-1\">\n              Accuracy: {accuracy}%\n            </Badge>\n          </div>\n\n          {/* Category Filter */}\n          <div className=\"mb-4\">\n            <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">Filter by category:</p>\n            <div className=\"flex flex-wrap gap-2\">\n              {categories.map(category => (\n                <Button\n                  key={category}\n                  onClick={() => setSelectedCategory(category)}\n                  variant={selectedCategory === category ? \"default\" : \"outline\"}\n                  size=\"sm\"\n                  className=\"text-xs\"\n                >\n                  {category}\n                </Button>\n              ))}\n            </div>\n          </div>\n\n          <p className=\"text-gray-600 dark:text-gray-300\">\n            Match each UK holiday with its meaning and significance. Learn about diverse cultural and religious celebrations.\n          </p>\n        </div>\n\n        {feedback && (\n          <div className={`mb-4 p-4 rounded-lg flex items-center gap-2 ${\n            feedback.correct \n              ? 'bg-green-100 text-green-800 border border-green-200' \n              : 'bg-red-100 text-red-800 border border-red-200'\n          }`}>\n            {feedback.correct ? (\n              <span className=\"text-2xl\">🎉</span>\n            ) : (\n              <X className=\"h-5 w-5 text-red-600\" />\n            )}\n            <span className=\"font-medium\">\n              {feedback.correct ? 'Perfect match! 🎯' : 'Incorrect match. Try again!'}\n            </span>\n          </div>\n        )}\n\n        {isGameComplete && (\n          <div className=\"mb-6 p-6 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg text-center\">\n            <div className=\"flex items-center justify-center gap-2 mb-2\">\n              <Check className=\"h-6 w-6 text-green-600\" />\n              <h4 className=\"text-xl font-bold text-green-800 dark:text-green-200\">\n                Congratulations!\n              </h4>\n            </div>\n            <p className=\"text-green-700 dark:text-green-300\">\n              You've successfully matched all holidays with their meanings!\n            </p>\n            <p className=\"text-sm text-green-600 dark:text-green-400 mt-2\">\n              Final Score: {score}/{filteredData.length} | Accuracy: {accuracy}%\n            </p>\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Holidays Column */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4 text-center text-indigo-700 dark:text-indigo-300\">\n              UK Holidays ({filteredData.length})\n            </h4>\n            <div className=\"space-y-2\">\n              {sortedHolidays.map((item) => {\n                const status = getButtonStatus(item.id, 'holiday');\n                return (\n                  <Button\n                    key={item.id}\n                    onClick={() => handleHolidaySelect(item.id)}\n                    disabled={status.isMatched}\n                    className={`\n                      w-full p-4 h-28 text-left transition-all duration-300 relative flex flex-col justify-center\n                      ${status.isMatched \n                        ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 border-green-300 dark:border-green-700' \n                        : status.isSelected\n                        ? 'bg-indigo-100 dark:bg-indigo-900/30 text-indigo-800 dark:text-indigo-200 border-indigo-300 dark:border-indigo-700'\n                        : status.isIncorrect\n                        ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 border-red-300 dark:border-red-700'\n                        : 'bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700'\n                      }\n                      ${status.isRecentMatch ? 'animate-pulse ring-2 ring-green-400' : ''}\n                    `}\n                    variant=\"outline\"\n                  >\n                    <div className=\"w-full\">\n                      <div className=\"flex items-center justify-between mb-1\">\n                        <div className=\"font-semibold text-base truncate pr-2\">{item.holiday}</div>\n                        <Badge variant=\"outline\" className={`text-xs shrink-0 ${getCategoryColor(item.category)}`}>\n                          {item.category}\n                        </Badge>\n                      </div>\n                    </div>\n                    {status.isMatched && (\n                      <Check className=\"absolute top-2 right-2 h-5 w-5 text-green-600\" />\n                    )}\n                  </Button>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Meanings Column */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4 text-center text-emerald-700 dark:text-emerald-300\">\n              Holiday Meanings ({filteredData.length})\n            </h4>\n            <div className=\"space-y-2\">\n              {sortedMeanings.map((item) => {\n                const status = getButtonStatus(item.id, 'meaning');\n                return (\n                  <Button\n                    key={item.id}\n                    onClick={() => handleMeaningSelect(item.id)}\n                    disabled={status.isMatched}\n                    className={`\n                      w-full p-4 h-28 text-left transition-all duration-300 relative overflow-hidden\n                      ${status.isMatched \n                        ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 border-green-300 dark:border-green-700' \n                        : status.isSelected\n                        ? 'bg-emerald-100 dark:bg-emerald-900/30 text-emerald-800 dark:text-emerald-200 border-emerald-300 dark:border-emerald-700'\n                        : status.isIncorrect\n                        ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 border-red-300 dark:border-red-700'\n                        : 'bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700'\n                      }\n                      ${status.isRecentMatch ? 'animate-pulse ring-2 ring-green-400' : ''}\n                    `}\n                    variant=\"outline\"\n                  >\n                    <div className=\"w-full h-full flex items-center pr-8\">\n                      <div className=\"font-medium text-sm leading-normal\" style={{\n                        display: '-webkit-box',\n                        WebkitLineClamp: 2,\n                        WebkitBoxOrient: 'vertical',\n                        wordBreak: 'break-word',\n                        hyphens: 'auto',\n                        lineHeight: '1.4',\n                        maxHeight: 'none'\n                      }}>\n                        {item.meaning}\n                      </div>\n                    </div>\n                    {status.isMatched && (\n                      <Check className=\"absolute top-2 right-2 h-5 w-5 text-green-600\" />\n                    )}\n                  </Button>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}","size_bytes":18485},"client/src/components/holidays-matching.tsx":{"content":"import { useState, useMemo } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { RotateCcw, Check, X, Calendar } from \"lucide-react\";\nimport { celebrateWithTheme, celebrateGameComplete } from \"@/lib/confetti\";\n\ninterface HolidayPair {\n  id: string;\n  holiday: string;\n  date: string;\n  description: string;\n}\n\nconst holidayData: HolidayPair[] = [\n  {\n    id: \"1\",\n    holiday: \"Lent\",\n    date: \"February/March (46 days before Easter)\",\n    description: \"Christian period of fasting and reflection\"\n  },\n  {\n    id: \"2\", \n    holiday: \"Easter\",\n    date: \"March/April (First Sunday after first full moon after spring equinox)\",\n    description: \"Christian celebration of Jesus Christ's resurrection\"\n  },\n  {\n    id: \"3\",\n    holiday: \"Vaisakhi\",\n    date: \"April 13th or 14th\",\n    description: \"Sikh New Year and harvest festival\"\n  },\n  {\n    id: \"4\",\n    holiday: \"Diwali\",\n    date: \"October/November (5-day festival)\",\n    description: \"Hindu and Sikh festival of lights\"\n  },\n  {\n    id: \"5\",\n    holiday: \"Hanukkah\",\n    date: \"November/December (8-day festival)\",\n    description: \"Jewish festival of lights\"\n  },\n  {\n    id: \"6\",\n    holiday: \"Eid al-Fitr\",\n    date: \"End of Ramadan (Date varies each year)\",\n    description: \"Islamic celebration marking end of fasting month\"\n  },\n  {\n    id: \"7\",\n    holiday: \"Eid al-Adha\",\n    date: \"70 days after Eid al-Fitr (Date varies each year)\",\n    description: \"Islamic festival of sacrifice\"\n  },\n  {\n    id: \"8\",\n    holiday: \"Valentine's Day\",\n    date: \"February 14th\",\n    description: \"Day of romance and love\"\n  },\n  {\n    id: \"9\",\n    holiday: \"April Fool's Day\",\n    date: \"April 1st\", \n    description: \"Day of practical jokes and pranks\"\n  },\n  {\n    id: \"10\",\n    holiday: \"Mother's Day\",\n    date: \"Fourth Sunday of Lent (March/April)\",\n    description: \"Day to honor mothers and maternal figures\"\n  },\n  {\n    id: \"11\",\n    holiday: \"Father's Day\",\n    date: \"Third Sunday in June\",\n    description: \"Day to honor fathers and paternal figures\"\n  },\n  {\n    id: \"12\",\n    holiday: \"Halloween\",\n    date: \"October 31st\",\n    description: \"Ancient Celtic festival, now celebration with costumes\"\n  },\n  {\n    id: \"13\",\n    holiday: \"Bonfire Night\",\n    date: \"November 5th\",\n    description: \"Commemorates Guy Fawkes and Gunpowder Plot of 1605\"\n  },\n  {\n    id: \"14\",\n    holiday: \"Remembrance Day\",\n    date: \"November 11th\",\n    description: \"Honors those who died in military service\"\n  },\n  {\n    id: \"15\",\n    holiday: \"Christmas Eve\",\n    date: \"December 24th\",\n    description: \"Day before Christmas Day\"\n  },\n  {\n    id: \"16\",\n    holiday: \"Christmas Day\",\n    date: \"December 25th\",\n    description: \"Christian celebration of Jesus Christ's birth\"\n  },\n  {\n    id: \"17\",\n    holiday: \"Boxing Day\",\n    date: \"December 26th\",\n    description: \"Traditional day for giving gifts to service workers\"\n  },\n  {\n    id: \"18\",\n    holiday: \"Hogmanay\",\n    date: \"December 31st\",\n    description: \"Scottish New Year's Eve celebration\"\n  }\n];\n\ninterface HolidaysMatchingProps {\n  userId: string;\n}\n\nexport default function HolidaysMatching({ userId }: HolidaysMatchingProps) {\n  const [selectedHoliday, setSelectedHoliday] = useState<string | null>(null);\n  const [selectedDate, setSelectedDate] = useState<string | null>(null);\n  const [matches, setMatches] = useState<Record<string, 'correct' | 'incorrect'>>({});\n  const [feedback, setFeedback] = useState<{ holidayId: string; dateId: string; correct: boolean } | null>(null);\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [shuffleSeed, setShuffleSeed] = useState(Math.random());\n  const [recentCorrectMatches, setRecentCorrectMatches] = useState<Set<string>>(new Set());\n\n  // Fisher-Yates shuffle algorithm\n  const shuffleArray = (array: HolidayPair[], seed: number) => {\n    const shuffled = [...array];\n    let random = seed;\n    \n    for (let i = shuffled.length - 1; i > 0; i--) {\n      random = (random * 9301 + 49297) % 233280;\n      const randomIndex = Math.floor((random / 233280) * (i + 1));\n      [shuffled[i], shuffled[randomIndex]] = [shuffled[randomIndex], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  // Create separate shuffled arrays for holidays and dates columns\n  const shuffledHolidays = useMemo(() => {\n    return shuffleArray(holidayData, shuffleSeed * 1000);\n  }, [shuffleSeed]);\n\n  const shuffledDates = useMemo(() => {\n    return shuffleArray(holidayData, shuffleSeed * 7309 + 1234);\n  }, [shuffleSeed]);\n\n  // Helper functions\n  const getButtonStatus = (itemId: string, side: 'holiday' | 'date') => {\n    const matchState = matches[itemId];\n    const isSelected = side === 'holiday' ? selectedHoliday === itemId : selectedDate === itemId;\n    const isMatched = matchState === 'correct';\n    const isIncorrect = matchState === 'incorrect';\n    const isRecentMatch = recentCorrectMatches.has(itemId);\n\n    return {\n      isSelected,\n      isMatched,\n      isIncorrect,\n      isRecentMatch\n    };\n  };\n\n  const handleHolidaySelect = (holidayId: string) => {\n    if (matches[holidayId] === 'correct') return;\n    \n    if (selectedHoliday === holidayId) {\n      setSelectedHoliday(null);\n    } else {\n      setSelectedHoliday(holidayId);\n      if (selectedDate) {\n        checkMatch(holidayId, selectedDate);\n      }\n    }\n  };\n\n  const handleDateSelect = (dateId: string) => {\n    if (matches[dateId] === 'correct') return;\n    \n    if (selectedDate === dateId) {\n      setSelectedDate(null);\n    } else {\n      setSelectedDate(dateId);\n      if (selectedHoliday) {\n        checkMatch(selectedHoliday, dateId);\n      }\n    }\n  };\n\n  const checkMatch = (holidayId: string, dateId: string) => {\n    setAttempts(prev => prev + 1);\n    \n    const isCorrect = holidayId === dateId;\n    \n    if (isCorrect) {\n      // Celebrate individual correct match immediately\n      celebrateWithTheme('holidays');\n      \n      setMatches(prev => ({\n        ...prev,\n        [holidayId]: 'correct'\n      }));\n      setScore(prev => {\n        const newScore = prev + 1;\n        // Check if game is complete\n        if (newScore === holidayData.length) {\n          setTimeout(() => celebrateGameComplete(), 500);\n        }\n        return newScore;\n      });\n      \n      // Add to recent matches for animation\n      setRecentCorrectMatches(prev => new Set([...Array.from(prev), holidayId]));\n      \n      // Remove from recent matches after animation\n      setTimeout(() => {\n        setRecentCorrectMatches(prev => {\n          const newSet = new Set(Array.from(prev));\n          newSet.delete(holidayId);\n          return newSet;\n        });\n      }, 1000);\n      \n      setFeedback({ holidayId, dateId, correct: true });\n    } else {\n      setMatches(prev => ({\n        ...prev,\n        [holidayId]: 'incorrect',\n        [dateId]: 'incorrect'\n      }));\n      setFeedback({ holidayId, dateId, correct: false });\n      \n      // Clear incorrect state after showing feedback\n      setTimeout(() => {\n        setMatches(prev => {\n          const newMatches = { ...prev };\n          if (newMatches[holidayId] === 'incorrect') delete newMatches[holidayId];\n          if (newMatches[dateId] === 'incorrect') delete newMatches[dateId];\n          return newMatches;\n        });\n      }, 1500);\n    }\n    \n    setSelectedHoliday(null);\n    setSelectedDate(null);\n    \n    // Clear feedback after delay\n    setTimeout(() => setFeedback(null), 2000);\n  };\n\n  const resetGame = () => {\n    setSelectedHoliday(null);\n    setSelectedDate(null);\n    setMatches({});\n    setFeedback(null);\n    setScore(0);\n    setAttempts(0);\n    setShuffleSeed(Math.random());\n    setRecentCorrectMatches(new Set());\n  };\n\n  const correctMatches = Object.values(matches).filter(match => match === 'correct').length;\n  const isGameComplete = correctMatches === holidayData.length;\n  const accuracy = attempts > 0 ? Math.round((score / attempts) * 100) : 0;\n\n  // Sort matched items to bottom\n  const sortItems = (items: HolidayPair[]) => {\n    const matched = items.filter(item => matches[item.id] === 'correct');\n    const unmatched = items.filter(item => matches[item.id] !== 'correct');\n    return [...unmatched, ...matched];\n  };\n\n  const sortedHolidays = sortItems(shuffledHolidays);\n  const sortedDates = sortItems(shuffledDates);\n\n  return (\n    <Card className=\"w-full max-w-6xl mx-auto\">\n      <CardContent className=\"p-6\">\n        <div className=\"mb-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"flex items-center gap-2\">\n              <Calendar className=\"h-6 w-6 text-rose-600\" />\n              <h3 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                UK Holidays Matching Game\n              </h3>\n            </div>\n            <Button onClick={resetGame} variant=\"outline\" className=\"flex items-center gap-2\">\n              <RotateCcw className=\"h-4 w-4\" />\n              Reset Game\n            </Button>\n          </div>\n\n          <div className=\"flex flex-wrap gap-4 mb-4\">\n            <Badge variant=\"outline\" className=\"text-lg px-3 py-1\">\n              Score: {score}/{holidayData.length}\n            </Badge>\n            <Badge variant=\"outline\" className=\"text-lg px-3 py-1\">\n              Attempts: {attempts}\n            </Badge>\n            <Badge variant=\"outline\" className=\"text-lg px-3 py-1\">\n              Accuracy: {accuracy}%\n            </Badge>\n          </div>\n\n          <p className=\"text-gray-600 dark:text-gray-300\">\n            Match each UK holiday with its correct celebration date. Click one holiday and one date to make a match.\n          </p>\n        </div>\n\n        {feedback && (\n          <div className={`mb-4 p-4 rounded-lg flex items-center gap-2 ${\n            feedback.correct \n              ? 'bg-green-100 text-green-800 border border-green-200' \n              : 'bg-red-100 text-red-800 border border-red-200'\n          }`}>\n            {feedback.correct ? (\n              <span className=\"text-2xl\">🎉</span>\n            ) : (\n              <X className=\"h-5 w-5 text-red-600\" />\n            )}\n            <span className=\"font-medium\">\n              {feedback.correct ? 'Perfect match! 🎯' : 'Incorrect match. Try again!'}\n            </span>\n          </div>\n        )}\n\n        {isGameComplete && (\n          <div className=\"mb-6 p-6 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg text-center\">\n            <div className=\"flex items-center justify-center gap-2 mb-2\">\n              <Check className=\"h-6 w-6 text-green-600\" />\n              <h4 className=\"text-xl font-bold text-green-800 dark:text-green-200\">\n                Congratulations!\n              </h4>\n            </div>\n            <p className=\"text-green-700 dark:text-green-300\">\n              You've successfully matched all UK holidays with their celebration dates!\n            </p>\n            <p className=\"text-sm text-green-600 dark:text-green-400 mt-2\">\n              Final Score: {score}/{holidayData.length} | Accuracy: {accuracy}%\n            </p>\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Holidays Column */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4 text-center text-rose-700 dark:text-rose-300\">\n              UK Holidays ({holidayData.length})\n            </h4>\n            <div className=\"space-y-2\">\n              {sortedHolidays.map((item) => {\n                const status = getButtonStatus(item.id, 'holiday');\n                return (\n                  <Button\n                    key={item.id}\n                    onClick={() => handleHolidaySelect(item.id)}\n                    disabled={status.isMatched}\n                    className={`\n                      w-full p-4 h-24 text-left transition-all duration-300 relative flex items-center\n                      ${status.isMatched \n                        ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 border-green-300 dark:border-green-700' \n                        : status.isSelected\n                        ? 'bg-rose-100 dark:bg-rose-900/30 text-rose-800 dark:text-rose-200 border-rose-300 dark:border-rose-700'\n                        : status.isIncorrect\n                        ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 border-red-300 dark:border-red-700'\n                        : 'bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700'\n                      }\n                      ${status.isRecentMatch ? 'animate-pulse ring-2 ring-green-400' : ''}\n                    `}\n                    variant=\"outline\"\n                  >\n                    <div className=\"flex-1\">\n                      <div className=\"font-semibold text-base\">{item.holiday}</div>\n                      <div className=\"text-sm opacity-75 mt-1 line-clamp-2\">{item.description}</div>\n                    </div>\n                    {status.isMatched && (\n                      <Check className=\"absolute top-2 right-2 h-5 w-5 text-green-600\" />\n                    )}\n                  </Button>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Dates Column */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4 text-center text-blue-700 dark:text-blue-300\">\n              Celebration Dates ({holidayData.length})\n            </h4>\n            <div className=\"space-y-2\">\n              {sortedDates.map((item) => {\n                const status = getButtonStatus(item.id, 'date');\n                return (\n                  <Button\n                    key={item.id}\n                    onClick={() => handleDateSelect(item.id)}\n                    disabled={status.isMatched}\n                    className={`\n                      w-full p-4 h-24 text-left transition-all duration-300 relative flex items-center\n                      ${status.isMatched \n                        ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 border-green-300 dark:border-green-700' \n                        : status.isSelected\n                        ? 'bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200 border-blue-300 dark:border-blue-700'\n                        : status.isIncorrect\n                        ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 border-red-300 dark:border-red-700'\n                        : 'bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700'\n                      }\n                      ${status.isRecentMatch ? 'animate-pulse ring-2 ring-green-400' : ''}\n                    `}\n                    variant=\"outline\"\n                  >\n                    <div className=\"flex-1\">\n                      <div className=\"font-semibold text-sm leading-5 overflow-hidden h-16\" style={{\n                        display: '-webkit-box',\n                        WebkitLineClamp: 3,\n                        WebkitBoxOrient: 'vertical',\n                        wordBreak: 'break-word',\n                        hyphens: 'auto'\n                      }}>\n                        {item.date}\n                      </div>\n                    </div>\n                    {status.isMatched && (\n                      <Check className=\"absolute top-2 right-2 h-5 w-5 text-green-600\" />\n                    )}\n                  </Button>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}","size_bytes":15631},"client/src/components/justice-system-matching.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Shuffle, RotateCcw, Scale, Filter } from \"lucide-react\";\nimport { celebrateWithTheme } from \"@/lib/confetti\";\n\ninterface JusticeData {\n  id: string;\n  region: string;\n  court: string;\n  jurisdiction: string;\n  category: 'Criminal' | 'Civil' | 'Family' | 'Appeal' | 'Supreme' | 'Tribunal';\n  level: 'Magistrates' | 'Crown' | 'County' | 'High' | 'Sheriff' | 'Court of Session' | 'Supreme Court' | 'Tribunal';\n}\n\nconst justiceSystemData: JusticeData[] = [\n  // England & Wales - Criminal Courts\n  {\n    id: \"1\",\n    region: \"England & Wales\",\n    court: \"Magistrates' Court\",\n    jurisdiction: \"Minor criminal offences, youth cases, preliminary hearings\",\n    category: \"Criminal\",\n    level: \"Magistrates\"\n  },\n  {\n    id: \"2\",\n    region: \"England & Wales\", \n    court: \"Crown Court\",\n    jurisdiction: \"Serious criminal offences, appeals from Magistrates' Court\",\n    category: \"Criminal\",\n    level: \"Crown\"\n  },\n  {\n    id: \"3\",\n    region: \"England & Wales\",\n    court: \"Court of Appeal (Criminal Division)\",\n    jurisdiction: \"Appeals from Crown Court criminal cases\",\n    category: \"Appeal\",\n    level: \"High\"\n  },\n\n  // England & Wales - Civil Courts\n  {\n    id: \"4\",\n    region: \"England & Wales\",\n    court: \"County Court\",\n    jurisdiction: \"Civil disputes, debt recovery, housing, personal injury under £100k\",\n    category: \"Civil\",\n    level: \"County\"\n  },\n  {\n    id: \"5\",\n    region: \"England & Wales\",\n    court: \"High Court (Queen's Bench Division)\",\n    jurisdiction: \"High-value civil claims, judicial review, commercial disputes\",\n    category: \"Civil\",\n    level: \"High\"\n  },\n  {\n    id: \"6\",\n    region: \"England & Wales\",\n    court: \"High Court (Chancery Division)\",\n    jurisdiction: \"Business law, insolvency, intellectual property, probate\",\n    category: \"Civil\",\n    level: \"High\"\n  },\n  {\n    id: \"7\",\n    region: \"England & Wales\",\n    court: \"High Court (Family Division)\",\n    jurisdiction: \"Complex family matters, child protection, international family law\",\n    category: \"Family\",\n    level: \"High\"\n  },\n  {\n    id: \"8\",\n    region: \"England & Wales\",\n    court: \"Court of Appeal (Civil Division)\",\n    jurisdiction: \"Appeals from High Court and County Court civil cases\",\n    category: \"Appeal\",\n    level: \"High\"\n  },\n\n  // Scotland - Criminal Courts\n  {\n    id: \"9\",\n    region: \"Scotland\",\n    court: \"Justice of the Peace Court\",\n    jurisdiction: \"Minor criminal offences, traffic violations, breach of peace\",\n    category: \"Criminal\",\n    level: \"Magistrates\"\n  },\n  {\n    id: \"10\",\n    region: \"Scotland\",\n    court: \"Sheriff Court (Summary)\",\n    jurisdiction: \"Criminal cases, less serious offences tried by Sheriff alone\",\n    category: \"Criminal\",\n    level: \"Sheriff\"\n  },\n  {\n    id: \"11\",\n    region: \"Scotland\",\n    court: \"Sheriff Court (Solemn)\",\n    jurisdiction: \"Serious criminal cases tried by Sheriff with jury\",\n    category: \"Criminal\",\n    level: \"Sheriff\"\n  },\n  {\n    id: \"12\",\n    region: \"Scotland\",\n    court: \"High Court of Justiciary\",\n    jurisdiction: \"Most serious crimes (murder, rape), appeals from Sheriff Courts\",\n    category: \"Criminal\",\n    level: \"High\"\n  },\n\n  // Scotland - Civil Courts\n  {\n    id: \"13\",\n    region: \"Scotland\",\n    court: \"Sheriff Court (Civil)\",\n    jurisdiction: \"Civil disputes, debt recovery, family matters, housing disputes\",\n    category: \"Civil\",\n    level: \"Sheriff\"\n  },\n  {\n    id: \"14\",\n    region: \"Scotland\",\n    court: \"Court of Session (Outer House)\",\n    jurisdiction: \"High-value civil cases, judicial review, commercial disputes\",\n    category: \"Civil\",\n    level: \"Court of Session\"\n  },\n  {\n    id: \"15\",\n    region: \"Scotland\",\n    court: \"Court of Session (Inner House)\",\n    jurisdiction: \"Appeals from Sheriff Court and Outer House civil cases\",\n    category: \"Appeal\",\n    level: \"Court of Session\"\n  },\n\n  // Northern Ireland - Criminal Courts\n  {\n    id: \"16\",\n    region: \"Northern Ireland\",\n    court: \"Magistrates' Court\",\n    jurisdiction: \"Summary criminal offences, preliminary hearings, youth court\",\n    category: \"Criminal\",\n    level: \"Magistrates\"\n  },\n  {\n    id: \"17\",\n    region: \"Northern Ireland\",\n    court: \"Crown Court\",\n    jurisdiction: \"Serious criminal offences on indictment, appeals from Magistrates\",\n    category: \"Criminal\",\n    level: \"Crown\"\n  },\n  {\n    id: \"18\",\n    region: \"Northern Ireland\",\n    court: \"Court of Appeal\",\n    jurisdiction: \"Criminal and civil appeals from Crown Court and High Court\",\n    category: \"Appeal\",\n    level: \"High\"\n  },\n\n  // Northern Ireland - Civil Courts\n  {\n    id: \"19\",\n    region: \"Northern Ireland\",\n    court: \"County Court\",\n    jurisdiction: \"Civil disputes, debt recovery, family matters under £30k\",\n    category: \"Civil\",\n    level: \"County\"\n  },\n  {\n    id: \"20\",\n    region: \"Northern Ireland\",\n    court: \"High Court\",\n    jurisdiction: \"High-value civil claims, judicial review, family division\",\n    category: \"Civil\",\n    level: \"High\"\n  },\n\n  // UK-wide Supreme Court\n  {\n    id: \"21\",\n    region: \"United Kingdom\",\n    court: \"UK Supreme Court\",\n    jurisdiction: \"Final court of appeal for civil cases, devolution issues, human rights\",\n    category: \"Supreme\",\n    level: \"Supreme Court\"\n  }\n];\n\ninterface JusticeSystemMatchingProps {\n  userId: string;\n}\n\nexport default function JusticeSystemMatching({ userId }: JusticeSystemMatchingProps) {\n  const [courts, setCourts] = useState<JusticeData[]>([]);\n  const [jurisdictions, setJurisdictions] = useState<JusticeData[]>([]);\n  const [regions, setRegions] = useState<JusticeData[]>([]);\n  const [selectedCourt, setSelectedCourt] = useState<JusticeData | null>(null);\n  const [selectedJurisdiction, setSelectedJurisdiction] = useState<JusticeData | null>(null);\n  const [selectedRegion, setSelectedRegion] = useState<JusticeData | null>(null);\n  const [matchedItems, setMatchedItems] = useState<Set<string>>(new Set());\n  const [incorrectAttempts, setIncorrectAttempts] = useState<Set<string>>(new Set());\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [filterCategory, setFilterCategory] = useState<string>('all');\n  const [filterRegion, setFilterRegion] = useState<string>('all');\n  const [gameComplete, setGameComplete] = useState(false);\n\n  const categories = ['all', 'Criminal', 'Civil', 'Family', 'Appeal', 'Supreme', 'Tribunal'];\n  const regionFilters = ['all', 'England & Wales', 'Scotland', 'Northern Ireland', 'United Kingdom'];\n\n  const getFilteredData = () => {\n    let filtered = justiceSystemData;\n    \n    if (filterCategory !== 'all') {\n      filtered = filtered.filter(item => item.category === filterCategory);\n    }\n    \n    if (filterRegion !== 'all') {\n      filtered = filtered.filter(item => item.region === filterRegion);\n    }\n    \n    return filtered;\n  };\n\n  const shuffleArray = <T,>(array: T[]): T[] => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  const initializeGame = () => {\n    const filteredData = getFilteredData();\n    setCourts(shuffleArray(filteredData));\n    setJurisdictions(shuffleArray(filteredData));\n    setRegions(shuffleArray(filteredData));\n    setMatchedItems(new Set());\n    setIncorrectAttempts(new Set());\n    setSelectedCourt(null);\n    setSelectedJurisdiction(null);\n    setSelectedRegion(null);\n    setScore(0);\n    setAttempts(0);\n    setGameComplete(false);\n  };\n\n  useEffect(() => {\n    initializeGame();\n  }, [filterCategory, filterRegion]);\n\n  const handleCourtClick = (court: JusticeData) => {\n    if (matchedItems.has(court.id)) return;\n    setSelectedCourt(court);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handleJurisdictionClick = (jurisdiction: JusticeData) => {\n    if (matchedItems.has(jurisdiction.id)) return;\n    setSelectedJurisdiction(jurisdiction);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handleRegionClick = (region: JusticeData) => {\n    if (matchedItems.has(region.id)) return;\n    setSelectedRegion(region);\n    setIncorrectAttempts(new Set());\n  };\n\n  useEffect(() => {\n    if (selectedCourt && selectedJurisdiction && selectedRegion) {\n      setAttempts(prev => prev + 1);\n      \n      if (selectedCourt.id === selectedJurisdiction.id && \n          selectedJurisdiction.id === selectedRegion.id) {\n        // Correct match!\n        celebrateWithTheme('justice');\n        setMatchedItems(prev => new Set(Array.from(prev).concat(selectedCourt.id)));\n        setScore(prev => prev + 1);\n        \n        // Check if game is complete\n        const filteredData = getFilteredData();\n        if (matchedItems.size + 1 >= filteredData.length) {\n          setGameComplete(true);\n          setTimeout(() => celebrateWithTheme('justice'), 500);\n        }\n      } else {\n        // Incorrect match\n        const incorrectIds = new Set([selectedCourt.id, selectedJurisdiction.id, selectedRegion.id]);\n        setIncorrectAttempts(incorrectIds);\n        \n        setTimeout(() => {\n          setIncorrectAttempts(new Set());\n        }, 3000);\n      }\n      \n      // Reset selections\n      setTimeout(() => {\n        setSelectedCourt(null);\n        setSelectedJurisdiction(null);\n        setSelectedRegion(null);\n      }, incorrectAttempts.size > 0 ? 3000 : 1000);\n    }\n  }, [selectedCourt, selectedJurisdiction, selectedRegion, matchedItems.size]);\n\n  const getButtonStyle = (item: JusticeData, isSelected: boolean) => {\n    const baseClasses = \"w-full text-left p-3 rounded-lg border transition-all duration-300 hover:shadow-md\";\n    const isMatched = matchedItems.has(item.id);\n    const isIncorrect = incorrectAttempts.has(item.id);\n    \n    if (isMatched) {\n      return `${baseClasses} bg-green-100 border-green-300 text-green-800 cursor-default shadow-sm`;\n    }\n    \n    if (isIncorrect) {\n      return `${baseClasses} bg-red-100 border-red-300 text-red-800 animate-pulse cursor-pointer`;\n    }\n    \n    if (isSelected) {\n      return `${baseClasses} bg-blue-100 border-blue-400 text-blue-800 shadow-lg cursor-pointer`;\n    }\n    \n    return `${baseClasses} bg-white border-gray-200 text-gray-800 hover:bg-gray-50 cursor-pointer`;\n  };\n\n  const getCategoryColor = (category: string) => {\n    const colors = {\n      Criminal: 'bg-red-100 text-red-800',\n      Civil: 'bg-blue-100 text-blue-800',\n      Family: 'bg-pink-100 text-pink-800',\n      Appeal: 'bg-purple-100 text-purple-800',\n      Supreme: 'bg-yellow-100 text-yellow-800',\n      Tribunal: 'bg-green-100 text-green-800'\n    };\n    return colors[category as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  const getRegionColor = (region: string) => {\n    const colors = {\n      'England & Wales': 'bg-rose-100 text-rose-800',\n      'Scotland': 'bg-blue-100 text-blue-800',\n      'Northern Ireland': 'bg-green-100 text-green-800',\n      'United Kingdom': 'bg-purple-100 text-purple-800'\n    };\n    return colors[region as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  const accuracy = attempts > 0 ? Math.round((score / attempts) * 100) : 0;\n  const filteredData = getFilteredData();\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Game Header & Stats */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <div className=\"flex items-center gap-3\">\n          <Scale className=\"h-6 w-6 text-blue-600\" />\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-900\">UK Justice System Triple Match</h3>\n            <p className=\"text-sm text-gray-600\">Match courts with their jurisdictions and regions</p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center gap-4\">\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-blue-600\">{score}/{filteredData.length}</div>\n            <div className=\"text-xs text-gray-500\">Matches</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-green-600\">{accuracy}%</div>\n            <div className=\"text-xs text-gray-500\">Accuracy</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"space-y-3\">\n        <div className=\"flex flex-wrap gap-2 items-center\">\n          <Filter className=\"h-4 w-4 text-gray-500\" />\n          <span className=\"text-sm font-medium text-gray-700\">Category:</span>\n          {categories.map(category => (\n            <Badge\n              key={category}\n              variant={filterCategory === category ? \"default\" : \"outline\"}\n              className={`cursor-pointer transition-colors ${\n                filterCategory === category \n                  ? 'bg-blue-600 text-white' \n                  : 'hover:bg-blue-100'\n              }`}\n              onClick={() => setFilterCategory(category)}\n            >\n              {category === 'all' ? 'All Categories' : category}\n            </Badge>\n          ))}\n        </div>\n        \n        <div className=\"flex flex-wrap gap-2 items-center\">\n          <Filter className=\"h-4 w-4 text-gray-500\" />\n          <span className=\"text-sm font-medium text-gray-700\">Region:</span>\n          {regionFilters.map(region => (\n            <Badge\n              key={region}\n              variant={filterRegion === region ? \"default\" : \"outline\"}\n              className={`cursor-pointer transition-colors ${\n                filterRegion === region \n                  ? 'bg-green-600 text-white' \n                  : 'hover:bg-green-100'\n              }`}\n              onClick={() => setFilterRegion(region)}\n            >\n              {region === 'all' ? 'All Regions' : region}\n            </Badge>\n          ))}\n        </div>\n      </div>\n\n      {/* Game Controls */}\n      <div className=\"flex gap-2\">\n        <Button\n          onClick={initializeGame}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <Shuffle className=\"h-4 w-4\" />\n          Shuffle\n        </Button>\n        <Button\n          onClick={initializeGame}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <RotateCcw className=\"h-4 w-4\" />\n          Reset\n        </Button>\n      </div>\n\n      {gameComplete && (\n        <Card className=\"border-green-200 bg-green-50\">\n          <CardContent className=\"p-4 text-center\">\n            <h3 className=\"text-lg font-semibold text-green-800 mb-2\">🎉 Congratulations!</h3>\n            <p className=\"text-green-700\">\n              You've successfully matched all {filteredData.length} courts with their jurisdictions and regions!\n            </p>\n            <p className=\"text-sm text-green-600 mt-1\">\n              Final Score: {score}/{filteredData.length} ({accuracy}% accuracy)\n            </p>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Matching Game Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Courts Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Scale className=\"h-4 w-4 text-blue-600\" />\n              Courts ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {courts.map((court) => (\n              <div key={`court-${court.id}`} className=\"space-y-1\">\n                <button\n                  onClick={() => handleCourtClick(court)}\n                  className={getButtonStyle(court, selectedCourt?.id === court.id)}\n                  disabled={matchedItems.has(court.id)}\n                >\n                  <div className=\"font-medium text-sm\">{court.court}</div>\n                  <div className=\"flex gap-1 mt-1\">\n                    <Badge className={`text-xs ${getCategoryColor(court.category)}`}>\n                      {court.category}\n                    </Badge>\n                    <Badge className={`text-xs ${getRegionColor(court.region)}`}>\n                      {court.region}\n                    </Badge>\n                  </div>\n                </button>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Jurisdictions Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Scale className=\"h-4 w-4 text-green-600\" />\n              Jurisdictions ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {jurisdictions.map((jurisdiction) => (\n              <button\n                key={`jurisdiction-${jurisdiction.id}`}\n                onClick={() => handleJurisdictionClick(jurisdiction)}\n                className={getButtonStyle(jurisdiction, selectedJurisdiction?.id === jurisdiction.id)}\n                disabled={matchedItems.has(jurisdiction.id)}\n              >\n                <div className=\"font-medium text-sm leading-relaxed\">\n                  {jurisdiction.jurisdiction}\n                </div>\n              </button>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Regions Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Scale className=\"h-4 w-4 text-purple-600\" />\n              Regions ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {regions.map((region) => (\n              <button\n                key={`region-${region.id}`}\n                onClick={() => handleRegionClick(region)}\n                className={getButtonStyle(region, selectedRegion?.id === region.id)}\n                disabled={matchedItems.has(region.id)}\n              >\n                <div className=\"font-bold text-center\">\n                  {region.region}\n                </div>\n                <Badge className={`text-xs w-full justify-center mt-1 ${getCategoryColor(region.category)}`}>\n                  {region.level}\n                </Badge>\n              </button>\n            ))}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Instructions */}\n      <Card className=\"bg-blue-50 border-blue-200\">\n        <CardContent className=\"p-4\">\n          <h4 className=\"font-semibold text-blue-900 mb-2\">How to Play:</h4>\n          <ul className=\"text-sm text-blue-800 space-y-1\">\n            <li>• Select one court, one jurisdiction, and one region that all belong together</li>\n            <li>• All three selections must match the same court system</li>\n            <li>• Correct matches turn green and celebrate with confetti</li>\n            <li>• Use category and region filters to focus on specific court types</li>\n            <li>• Master the complex UK justice system across all regions!</li>\n          </ul>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":19295},"client/src/components/matching-cards.tsx":{"content":"import { useState, useRef, useEffect, useMemo } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { RotateCcw, Check, X } from \"lucide-react\";\nimport { celebrateCorrectMatch, celebrateGameComplete } from \"@/lib/confetti\";\n\ninterface MatchingPair {\n  id: string;\n  left: string;\n  right: string;\n  category: string;\n}\n\nconst matchingData: MatchingPair[] = [\n  {\n    id: \"1\",\n    left: \"1066\",\n    right: \"Norman Conquest\",\n    category: \"History\"\n  },\n  {\n    id: \"2\",\n    left: \"1215\",\n    right: \"Magna Carta signed\",\n    category: \"History\"\n  },\n  {\n    id: \"3\",\n    left: \"1314\",\n    right: \"Battle of Bannockburn\",\n    category: \"History\"\n  },\n  {\n    id: \"4\",\n    left: \"London\",\n    right: \"Capital of England\",\n    category: \"Geography\"\n  },\n  {\n    id: \"5\",\n    left: \"Edinburgh\",\n    right: \"Capital of Scotland\",\n    category: \"Geography\"\n  },\n  {\n    id: \"6\",\n    left: \"Cardiff\",\n    right: \"Capital of Wales\",\n    category: \"Geography\"\n  },\n  {\n    id: \"7\",\n    left: \"House of Commons\",\n    right: \"Lower house of Parliament\",\n    category: \"Government\"\n  },\n  {\n    id: \"8\",\n    left: \"House of Lords\",\n    right: \"Upper house of Parliament\",\n    category: \"Government\"\n  },\n  {\n    id: \"9\",\n    left: \"Shakespeare\",\n    right: \"Famous English playwright\",\n    category: \"Culture\"\n  },\n  {\n    id: \"10\",\n    left: \"Burns Night\",\n    right: \"Scottish celebration on January 25th\",\n    category: \"Culture\"\n  }\n];\n\ninterface MatchingCardsProps {\n  userId: string;\n}\n\nexport default function MatchingCards({ userId }: MatchingCardsProps) {\n  const [selectedLeft, setSelectedLeft] = useState<string | null>(null);\n  const [selectedRight, setSelectedRight] = useState<string | null>(null);\n  const [matches, setMatches] = useState<Record<string, 'correct' | 'incorrect'>>({});\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"All\");\n  const [feedback, setFeedback] = useState<{ leftId: string; rightId: string; correct: boolean } | null>(null);\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [shuffleSeed, setShuffleSeed] = useState(Math.random());\n  const [recentCorrectMatches, setRecentCorrectMatches] = useState<Set<string>>(new Set());\n  \n  const categories = [\"All\", ...Array.from(new Set(matchingData.map(item => item.category)))];\n  \n  const filteredData = selectedCategory === \"All\" \n    ? matchingData \n    : matchingData.filter(item => item.category === selectedCategory);\n\n  // Fisher-Yates shuffle algorithm for better randomization\n  const shuffleArray = (array: MatchingPair[], seed: number) => {\n    const shuffled = [...array];\n    let random = seed;\n    \n    for (let i = shuffled.length - 1; i > 0; i--) {\n      // Generate pseudo-random number using seed\n      random = (random * 9301 + 49297) % 233280;\n      const randomIndex = Math.floor((random / 233280) * (i + 1));\n      \n      // Swap elements\n      [shuffled[i], shuffled[randomIndex]] = [shuffled[randomIndex], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  // Create separate shuffled arrays for left and right columns to properly mix cards\n  const shuffledLeftData = useMemo(() => {\n    return shuffleArray(filteredData, shuffleSeed * 1000);\n  }, [filteredData, shuffleSeed]);\n\n  const shuffledRightData = useMemo(() => {\n    // Use different seed for right column to ensure completely different order\n    return shuffleArray(filteredData, shuffleSeed * 7309 + 1234);\n  }, [filteredData, shuffleSeed]);\n\n  // Helper functions\n  const getButtonStatus = (itemId: string, side: 'left' | 'right') => {\n    const key = `${itemId}-${side}`;\n    return matches[key];\n  };\n\n  const isSelected = (itemId: string, side: 'left' | 'right') => {\n    return side === 'left' ? selectedLeft === itemId : selectedRight === itemId;\n  };\n\n  // Only move correctly matched (green) items to bottom after 1 second delay\n  const sortedLeftItems = useMemo(() => {\n    return [...shuffledLeftData].sort((a, b) => {\n      const aMatched = getButtonStatus(a.id, 'left') === 'correct' && !recentCorrectMatches.has(a.id);\n      const bMatched = getButtonStatus(b.id, 'left') === 'correct' && !recentCorrectMatches.has(b.id);\n      // Only sort if both items have different correct status and not recently matched\n      if (aMatched !== bMatched) return aMatched ? 1 : -1;\n      return 0; // Keep original shuffled order for unmatched items\n    });\n  }, [shuffledLeftData, matches, recentCorrectMatches]);\n  \n  const sortedRightItems = useMemo(() => {\n    return [...shuffledRightData].sort((a, b) => {\n      const aMatched = getButtonStatus(a.id, 'right') === 'correct' && !recentCorrectMatches.has(a.id);\n      const bMatched = getButtonStatus(b.id, 'right') === 'correct' && !recentCorrectMatches.has(b.id);\n      // Only sort if both items have different correct status and not recently matched\n      if (aMatched !== bMatched) return aMatched ? 1 : -1;\n      return 0; // Keep original shuffled order for unmatched items\n    });\n  }, [shuffledRightData, matches, recentCorrectMatches]);\n\n  const handleLeftClick = (itemId: string) => {\n    const currentStatus = getButtonStatus(itemId, 'left');\n    if (currentStatus === 'correct') return; // Already correctly matched\n    \n    setSelectedLeft(selectedLeft === itemId ? null : itemId);\n    if (selectedRight && selectedLeft !== itemId) {\n      checkMatch(itemId, selectedRight);\n    }\n  };\n\n  const handleRightClick = (itemId: string) => {\n    const currentStatus = getButtonStatus(itemId, 'right');\n    if (currentStatus === 'correct') return; // Already correctly matched\n    \n    setSelectedRight(selectedRight === itemId ? null : itemId);\n    if (selectedLeft && selectedRight !== itemId) {\n      checkMatch(selectedLeft, itemId);\n    }\n  };\n\n  const checkMatch = (leftId: string, rightId: string) => {\n    const isCorrect = leftId === rightId;\n    const leftKey = `${leftId}-left`;\n    const rightKey = `${rightId}-right`;\n    \n    setAttempts(prev => prev + 1);\n    \n    if (isCorrect) {\n      // Celebrate individual correct match immediately\n      celebrateCorrectMatch();\n      \n      setScore(prev => {\n        const newScore = prev + 1;\n        // Check if game is complete\n        if (newScore === matchingData.length) {\n          setTimeout(() => celebrateGameComplete(), 500);\n        }\n        return newScore;\n      });\n      setMatches(prev => ({\n        ...prev,\n        [leftKey]: 'correct',\n        [rightKey]: 'correct'\n      }));\n      \n      // Keep cards in place for 1 second before allowing them to move to bottom\n      setRecentCorrectMatches(prev => new Set(Array.from(prev).concat(leftId)));\n      setTimeout(() => {\n        setRecentCorrectMatches(prev => {\n          const updated = new Set(prev);\n          updated.delete(leftId);\n          return updated;\n        });\n      }, 1000);\n    } else {\n      setMatches(prev => ({\n        ...prev,\n        [leftKey]: 'incorrect',\n        [rightKey]: 'incorrect'\n      }));\n      // Clear incorrect feedback after 3 seconds\n      setTimeout(() => {\n        setMatches(prev => {\n          const newMatches = { ...prev };\n          delete newMatches[leftKey];\n          delete newMatches[rightKey];\n          return newMatches;\n        });\n      }, 3000);\n    }\n    \n    setFeedback({ leftId, rightId, correct: isCorrect });\n    \n    // Clear selections and feedback\n    setTimeout(() => {\n      setSelectedLeft(null);\n      setSelectedRight(null);\n      setFeedback(null);\n    }, isCorrect ? 2500 : 3000);\n  };\n\n  const resetGame = () => {\n    setMatches({});\n    setFeedback(null);\n    setSelectedLeft(null);\n    setSelectedRight(null);\n    setScore(0);\n    setAttempts(0);\n    setRecentCorrectMatches(new Set());\n    setShuffleSeed(Math.random()); // Re-shuffle on reset\n  };\n\n  const correctMatches = Object.values(matches).filter(status => status === 'correct').length / 2;\n  const accuracy = attempts > 0 ? Math.round((correctMatches / attempts) * 100) : 0;\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex flex-col sm:flex-row gap-4 items-start sm:items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">Matching Cards</h2>\n          <p className=\"text-gray-600 dark:text-gray-300\">Click one button from each column to match them</p>\n        </div>\n        <div className=\"flex gap-2\">\n          <Button variant=\"outline\" onClick={resetGame} className=\"flex items-center gap-2\">\n            <RotateCcw className=\"h-4 w-4\" />\n            Reset Game\n          </Button>\n        </div>\n      </div>\n\n      {/* Score Display */}\n      <div className=\"flex gap-4 text-sm\">\n        <span className=\"bg-green-100 dark:bg-green-800 text-green-800 dark:text-green-100 px-3 py-1 rounded-full\">\n          Score: {score}/{filteredData.length}\n        </span>\n        <span className=\"bg-blue-100 dark:bg-blue-800 text-blue-800 dark:text-blue-100 px-3 py-1 rounded-full\">\n          Attempts: {attempts}\n        </span>\n        {attempts > 0 && (\n          <span className=\"bg-purple-100 dark:bg-purple-800 text-purple-800 dark:text-purple-100 px-3 py-1 rounded-full\">\n            Accuracy: {accuracy}%\n          </span>\n        )}\n      </div>\n\n      <div className=\"flex flex-wrap gap-2\">\n        {categories.map(category => (\n          <Badge\n            key={category}\n            variant={selectedCategory === category ? \"default\" : \"outline\"}\n            className=\"cursor-pointer px-3 py-1\"\n            onClick={() => {\n              setSelectedCategory(category);\n              resetGame();\n            }}\n          >\n            {category}\n          </Badge>\n        ))}\n      </div>\n\n      <div className=\"grid md:grid-cols-2 gap-8\">\n        {/* Left Column */}\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200 mb-4\">\n            Column A\n          </h3>\n          <div className=\"min-h-[400px] flex flex-col justify-start space-y-3\">{/* Container to prevent layout shift */}\n            {sortedLeftItems.map((item) => {\n            const status = getButtonStatus(item.id, 'left');\n            const selected = isSelected(item.id, 'left');\n            \n            return (\n              <Button\n                key={`left-${item.id}`}\n                variant={selected ? \"default\" : \"outline\"}\n                className={`w-full p-4 h-auto text-left justify-start transition-all duration-300 ${\n                  status === 'correct' \n                    ? 'bg-green-500 hover:bg-green-600 text-white border-green-500' \n                    : status === 'incorrect'\n                    ? 'bg-red-500 hover:bg-red-600 text-white border-red-500'\n                    : selected\n                    ? 'bg-blue-500 hover:bg-blue-600 text-white border-blue-500'\n                    : 'hover:bg-gray-50 dark:hover:bg-gray-800'\n                }`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  handleLeftClick(item.id);\n                }}\n                disabled={status === 'correct'}\n                style={{ \n                  scrollMarginTop: '1rem',\n                  scrollBehavior: 'auto'\n                }}\n              >\n                <div className=\"flex items-center justify-between w-full\">\n                  <span className=\"font-medium\">\n                    {item.left}\n                  </span>\n                  <div className=\"flex items-center gap-2\">\n                    {status === 'correct' && <Check className=\"h-4 w-4\" />}\n                    {status === 'incorrect' && <X className=\"h-4 w-4\" />}\n                    <Badge variant=\"secondary\" className=\"text-xs\">\n                      {item.category}\n                    </Badge>\n                  </div>\n                </div>\n              </Button>\n            );\n          })}\n          </div>{/* End container */}\n        </div>\n\n        {/* Right Column */}\n        <div className=\"space-y-3\">\n          <h3 className=\"text-lg font-semibold text-gray-800 dark:text-gray-200 mb-4\">\n            Column B\n          </h3>\n          <div className=\"min-h-[400px] flex flex-col justify-start space-y-3\">{/* Container to prevent layout shift */}\n            {sortedRightItems.map((item) => {\n            const status = getButtonStatus(item.id, 'right');\n            const selected = isSelected(item.id, 'right');\n            \n            return (\n              <Button\n                key={`right-${item.id}`}\n                variant={selected ? \"default\" : \"outline\"}\n                className={`w-full p-4 h-auto text-left justify-start transition-all duration-300 ${\n                  status === 'correct' \n                    ? 'bg-green-500 hover:bg-green-600 text-white border-green-500' \n                    : status === 'incorrect'\n                    ? 'bg-red-500 hover:bg-red-600 text-white border-red-500'\n                    : selected\n                    ? 'bg-blue-500 hover:bg-blue-600 text-white border-blue-500'\n                    : 'hover:bg-gray-50 dark:hover:bg-gray-800'\n                }`}\n                onClick={(e) => {\n                  e.preventDefault();\n                  handleRightClick(item.id);\n                }}\n                disabled={status === 'correct'}\n                style={{ \n                  scrollMarginTop: '1rem',\n                  scrollBehavior: 'auto'\n                }}\n              >\n                <div className=\"flex items-center justify-between w-full\">\n                  <span className=\"font-medium\">\n                    {item.right}\n                  </span>\n                  <div className=\"flex items-center gap-2\">\n                    {status === 'correct' && <Check className=\"h-4 w-4\" />}\n                    {status === 'incorrect' && <X className=\"h-4 w-4\" />}\n                    <Badge variant=\"secondary\" className=\"text-xs\">\n                      {item.category}\n                    </Badge>\n                  </div>\n                </div>\n              </Button>\n            );\n            })}\n          </div>{/* End container */}\n        </div>\n      </div>\n\n      {/* Feedback Message */}\n      {feedback && (\n        <div className={`text-center p-4 rounded-lg ${\n          feedback.correct \n            ? 'bg-green-100 dark:bg-green-800 text-green-800 dark:text-green-100' \n            : 'bg-red-100 dark:bg-red-800 text-red-800 dark:text-red-100'\n        }`}>\n          {feedback.correct ? (\n            <div className=\"flex items-center justify-center gap-2\">\n              <span className=\"text-2xl\">🎉</span>\n              <span className=\"font-medium\">Excellent match! 🎯</span>\n            </div>\n          ) : (\n            <div className=\"flex items-center justify-center gap-2\">\n              <X className=\"h-5 w-5\" />\n              <span className=\"font-medium\">Not a match. Try again!</span>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Game Complete Message */}\n      {correctMatches === filteredData.length && filteredData.length > 0 && (\n        <div className=\"bg-yellow-100 dark:bg-yellow-800 text-yellow-800 dark:text-yellow-100 p-4 rounded-lg text-center\">\n          <div className=\"flex items-center justify-center gap-2 mb-2\">\n            <Check className=\"h-6 w-6\" />\n            <span className=\"text-lg font-bold\">Congratulations!</span>\n          </div>\n          <p>You've matched all pairs correctly! Final score: {score}/{filteredData.length} ({accuracy}% accuracy)</p>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":15603},"client/src/components/mobile-nav.tsx":{"content":"import { Home, Play, Clock, Brain, Download, Building, Map } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function MobileNav() {\n  const scrollToSection = (sectionId: string) => {\n    const element = document.getElementById(sectionId);\n    if (element) {\n      element.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  return (\n    <nav className=\"md:hidden bg-white border-t border-gray-200 fixed bottom-0 left-0 right-0 z-50\">\n      <div className=\"flex items-center justify-around py-2\">\n        <button \n          onClick={() => scrollToSection('dashboard')}\n          className=\"flex flex-col items-center py-2 px-2 text-uk-blue\"\n        >\n          <Home size={18} />\n          <span className=\"text-xs mt-1\">Dashboard</span>\n        </button>\n        <button \n          onClick={() => scrollToSection('videos')}\n          className=\"flex flex-col items-center py-2 px-2 text-gray-400 hover:text-uk-blue\"\n        >\n          <Play size={18} />\n          <span className=\"text-xs mt-1\">Videos</span>\n        </button>\n        <Link href=\"/timeline\">\n          <div className=\"flex flex-col items-center py-2 px-2 text-gray-400 hover:text-uk-blue cursor-pointer\">\n            <Clock size={18} />\n            <span className=\"text-xs mt-1\">Timeline</span>\n          </div>\n        </Link>\n        <Link href=\"/diagrams\">\n          <div className=\"flex flex-col items-center py-2 px-2 text-gray-400 hover:text-uk-blue cursor-pointer\">\n            <Building size={18} />\n            <span className=\"text-xs mt-1\">Diagrams</span>\n          </div>\n        </Link>\n        <Link href=\"/interactive-map\">\n          <div className=\"flex flex-col items-center py-2 px-2 text-gray-400 hover:text-uk-blue cursor-pointer\">\n            <Map size={18} />\n            <span className=\"text-xs mt-1\">Map</span>\n          </div>\n        </Link>\n        <button \n          onClick={() => scrollToSection('exercises')}\n          className=\"flex flex-col items-center py-2 px-2 text-gray-400 hover:text-uk-blue\"\n        >\n          <Brain size={18} />\n          <span className=\"text-xs mt-1\">Exercises</span>\n        </button>\n        <button \n          onClick={() => scrollToSection('resources')}\n          className=\"flex flex-col items-center py-2 px-2 text-gray-400 hover:text-uk-blue\"\n        >\n          <Download size={18} />\n          <span className=\"text-xs mt-1\">Materials</span>\n        </button>\n      </div>\n    </nav>\n  );\n}\n","size_bytes":2454},"client/src/components/prime-ministers-matching.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Shuffle, RotateCcw, Building, Filter, Users } from \"lucide-react\";\nimport { celebrateWithTheme } from \"@/lib/confetti\";\n\ninterface PrimeMinisterData {\n  id: string;\n  primeMinister: string;\n  termStart: string;\n  period: string;\n  party: 'Conservative' | 'Labour' | 'Liberal' | 'Whig' | 'Tory' | 'Coalition' | 'Liberal Democrat';\n  era: 'Georgian' | 'Victorian' | 'Edwardian' | 'Interwar' | 'Post-War' | 'Modern' | 'Contemporary';\n  significance: 'Foundational' | 'Major' | 'Transformative' | 'Wartime' | 'Reformist' | 'Revolutionary';\n  keyAchievements: string;\n}\n\nconst primeMinistersData: PrimeMinisterData[] = [\n  // Early Prime Ministers\n  {\n    id: \"1\",\n    primeMinister: \"Robert Walpole\",\n    termStart: \"1721\",\n    period: \"First Prime Minister (1721-1742)\",\n    party: \"Whig\",\n    era: \"Georgian\",\n    significance: \"Foundational\",\n    keyAchievements: \"Established role of Prime Minister, longest serving PM, financial stability\"\n  },\n  {\n    id: \"2\",\n    primeMinister: \"William Pitt the Elder\",\n    termStart: \"1766\",\n    period: \"Seven Years' War Leadership (1766-1768)\",\n    party: \"Whig\",\n    era: \"Georgian\",\n    significance: \"Major\",\n    keyAchievements: \"Led Britain to victory in Seven Years' War, expanded British Empire\"\n  },\n  {\n    id: \"3\",\n    primeMinister: \"William Pitt the Younger\",\n    termStart: \"1783\",\n    period: \"Napoleonic Wars Era (1783-1801, 1804-1806)\",\n    party: \"Tory\",\n    era: \"Georgian\",\n    significance: \"Major\",\n    keyAchievements: \"Youngest PM at 24, led Britain during Napoleonic Wars, financial reforms\"\n  },\n\n  // 19th Century Prime Ministers\n  {\n    id: \"4\",\n    primeMinister: \"Duke of Wellington\",\n    termStart: \"1828\",\n    period: \"Post-Napoleonic Era (1828-1830)\",\n    party: \"Tory\",\n    era: \"Georgian\",\n    significance: \"Major\",\n    keyAchievements: \"Hero of Waterloo, Catholic Emancipation, opposed Reform Bill\"\n  },\n  {\n    id: \"5\",\n    primeMinister: \"Earl Grey\",\n    termStart: \"1830\",\n    period: \"Reform Era (1830-1834)\",\n    party: \"Whig\",\n    era: \"Victorian\",\n    significance: \"Revolutionary\",\n    keyAchievements: \"Great Reform Act 1832, Slavery Abolition Act 1833\"\n  },\n  {\n    id: \"6\",\n    primeMinister: \"Robert Peel\",\n    termStart: \"1841\",\n    period: \"Free Trade Era (1841-1846)\",\n    party: \"Conservative\",\n    era: \"Victorian\",\n    significance: \"Transformative\",\n    keyAchievements: \"Repealed Corn Laws, established modern police force, Conservative Party founder\"\n  },\n  {\n    id: \"7\",\n    primeMinister: \"Benjamin Disraeli\",\n    termStart: \"1874\",\n    period: \"Imperial Expansion (1874-1880)\",\n    party: \"Conservative\",\n    era: \"Victorian\",\n    significance: \"Major\",\n    keyAchievements: \"Made Victoria Empress of India, social reforms, One Nation Conservatism\"\n  },\n  {\n    id: \"8\",\n    primeMinister: \"William Gladstone\",\n    termStart: \"1868\",\n    period: \"Liberal Reforms (1868-1874, 1880-1885, 1886, 1892-1894)\",\n    party: \"Liberal\",\n    era: \"Victorian\",\n    significance: \"Transformative\",\n    keyAchievements: \"Education Act 1870, Irish Home Rule, electoral reforms\"\n  },\n\n  // 20th Century Prime Ministers\n  {\n    id: \"9\",\n    primeMinister: \"David Lloyd George\",\n    termStart: \"1916\",\n    period: \"World War I Victory (1916-1922)\",\n    party: \"Liberal\",\n    era: \"Edwardian\",\n    significance: \"Wartime\",\n    keyAchievements: \"Led Britain to WWI victory, welfare state foundations, Treaty of Versailles\"\n  },\n  {\n    id: \"10\",\n    primeMinister: \"Stanley Baldwin\",\n    termStart: \"1923\",\n    period: \"Interwar Stability (1923-1924, 1924-1929, 1935-1937)\",\n    party: \"Conservative\",\n    era: \"Interwar\",\n    significance: \"Major\",\n    keyAchievements: \"General Strike 1926, abdication crisis, rearmament program\"\n  },\n  {\n    id: \"11\",\n    primeMinister: \"Neville Chamberlain\",\n    termStart: \"1937\",\n    period: \"Appeasement Era (1937-1940)\",\n    party: \"Conservative\",\n    era: \"Interwar\",\n    significance: \"Major\",\n    keyAchievements: \"Munich Agreement, declaration of WWII, social reforms\"\n  },\n  {\n    id: \"12\",\n    primeMinister: \"Winston Churchill\",\n    termStart: \"1940\",\n    period: \"World War II Leadership (1940-1945, 1951-1955)\",\n    party: \"Conservative\",\n    era: \"Post-War\",\n    significance: \"Wartime\",\n    keyAchievements: \"Led Britain to WWII victory, 'We shall never surrender', Nobel Prize Literature\"\n  },\n  {\n    id: \"13\",\n    primeMinister: \"Clement Attlee\",\n    termStart: \"1945\",\n    period: \"Welfare State Creation (1945-1951)\",\n    party: \"Labour\",\n    era: \"Post-War\",\n    significance: \"Revolutionary\",\n    keyAchievements: \"Created NHS, welfare state, nationalization program, NATO founder\"\n  },\n  {\n    id: \"14\",\n    primeMinister: \"Harold Macmillan\",\n    termStart: \"1957\",\n    period: \"Never Had It So Good (1957-1963)\",\n    party: \"Conservative\",\n    era: \"Post-War\",\n    significance: \"Major\",\n    keyAchievements: \"Economic prosperity, decolonization, Profumo affair\"\n  },\n  {\n    id: \"15\",\n    primeMinister: \"Harold Wilson\",\n    termStart: \"1964\",\n    period: \"Swinging Sixties (1964-1970, 1974-1976)\",\n    party: \"Labour\",\n    era: \"Modern\",\n    significance: \"Transformative\",\n    keyAchievements: \"Social liberalization, Open University, technological revolution\"\n  },\n  {\n    id: \"16\",\n    primeMinister: \"Edward Heath\",\n    termStart: \"1970\",\n    period: \"European Integration (1970-1974)\",\n    party: \"Conservative\",\n    era: \"Modern\",\n    significance: \"Major\",\n    keyAchievements: \"Joined EEC 1973, three-day week, miners' strikes\"\n  },\n  {\n    id: \"17\",\n    primeMinister: \"James Callaghan\",\n    termStart: \"1976\",\n    period: \"Winter of Discontent (1976-1979)\",\n    party: \"Labour\",\n    era: \"Modern\",\n    significance: \"Major\",\n    keyAchievements: \"IMF crisis, devolution referendums, industrial unrest\"\n  },\n  {\n    id: \"18\",\n    primeMinister: \"Margaret Thatcher\",\n    termStart: \"1979\",\n    period: \"Thatcher Revolution (1979-1990)\",\n    party: \"Conservative\",\n    era: \"Modern\",\n    significance: \"Revolutionary\",\n    keyAchievements: \"Privatization, Falklands War, broke trade union power, Iron Lady\"\n  },\n  {\n    id: \"19\",\n    primeMinister: \"John Major\",\n    termStart: \"1990\",\n    period: \"Post-Cold War (1990-1997)\",\n    party: \"Conservative\",\n    era: \"Modern\",\n    significance: \"Major\",\n    keyAchievements: \"Gulf War, ERM exit, Maastricht Treaty, peace process\"\n  },\n  {\n    id: \"20\",\n    primeMinister: \"Tony Blair\",\n    termStart: \"1997\",\n    period: \"New Labour Era (1997-2007)\",\n    party: \"Labour\",\n    era: \"Contemporary\",\n    significance: \"Transformative\",\n    keyAchievements: \"Devolution, Good Friday Agreement, Iraq War, constitutional reform\"\n  },\n  {\n    id: \"21\",\n    primeMinister: \"David Cameron\",\n    termStart: \"2010\",\n    period: \"Austerity & Brexit (2010-2016)\",\n    party: \"Conservative\",\n    era: \"Contemporary\",\n    significance: \"Major\",\n    keyAchievements: \"Coalition government, Scottish referendum, Brexit referendum\"\n  }\n];\n\ninterface PrimeMinistersMatchingProps {\n  userId: string;\n}\n\nexport default function PrimeMinistersMatching({ userId }: PrimeMinistersMatchingProps) {\n  const [primeMinister, setPrimeMinister] = useState<PrimeMinisterData[]>([]);\n  const [termStarts, setTermStarts] = useState<PrimeMinisterData[]>([]);\n  const [periods, setPeriods] = useState<PrimeMinisterData[]>([]);\n  const [selectedPM, setSelectedPM] = useState<PrimeMinisterData | null>(null);\n  const [selectedTerm, setSelectedTerm] = useState<PrimeMinisterData | null>(null);\n  const [selectedPeriod, setSelectedPeriod] = useState<PrimeMinisterData | null>(null);\n  const [matchedItems, setMatchedItems] = useState<Set<string>>(new Set());\n  const [incorrectAttempts, setIncorrectAttempts] = useState<Set<string>>(new Set());\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [filterParty, setFilterParty] = useState<string>('all');\n  const [filterEra, setFilterEra] = useState<string>('all');\n  const [gameComplete, setGameComplete] = useState(false);\n  const [showReference, setShowReference] = useState(false);\n\n  const parties = ['all', 'Conservative', 'Labour', 'Liberal', 'Whig', 'Tory', 'Coalition'];\n  const eras = ['all', 'Georgian', 'Victorian', 'Edwardian', 'Interwar', 'Post-War', 'Modern', 'Contemporary'];\n\n  const getFilteredData = () => {\n    let filtered = primeMinistersData;\n    \n    if (filterParty !== 'all') {\n      filtered = filtered.filter(item => item.party === filterParty);\n    }\n    \n    if (filterEra !== 'all') {\n      filtered = filtered.filter(item => item.era === filterEra);\n    }\n    \n    return filtered;\n  };\n\n  const shuffleArray = <T,>(array: T[]): T[] => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  const initializeGame = () => {\n    const filteredData = getFilteredData();\n    setPrimeMinister(shuffleArray(filteredData));\n    setTermStarts(shuffleArray(filteredData));\n    setPeriods(shuffleArray(filteredData));\n    setMatchedItems(new Set());\n    setIncorrectAttempts(new Set());\n    setSelectedPM(null);\n    setSelectedTerm(null);\n    setSelectedPeriod(null);\n    setScore(0);\n    setAttempts(0);\n    setGameComplete(false);\n  };\n\n  useEffect(() => {\n    initializeGame();\n  }, [filterParty, filterEra]);\n\n  const handlePMClick = (pm: PrimeMinisterData) => {\n    if (matchedItems.has(pm.id)) return;\n    setSelectedPM(pm);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handleTermClick = (term: PrimeMinisterData) => {\n    if (matchedItems.has(term.id)) return;\n    setSelectedTerm(term);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handlePeriodClick = (period: PrimeMinisterData) => {\n    if (matchedItems.has(period.id)) return;\n    setSelectedPeriod(period);\n    setIncorrectAttempts(new Set());\n  };\n\n  useEffect(() => {\n    if (selectedPM && selectedTerm && selectedPeriod) {\n      setAttempts(prev => prev + 1);\n      \n      if (selectedPM.id === selectedTerm.id && \n          selectedTerm.id === selectedPeriod.id) {\n        // Correct match!\n        celebrateWithTheme('political');\n        setMatchedItems(prev => new Set(Array.from(prev).concat(selectedPM.id)));\n        setScore(prev => prev + 1);\n        \n        // Check if game is complete\n        const filteredData = getFilteredData();\n        if (matchedItems.size + 1 >= filteredData.length) {\n          setGameComplete(true);\n          setTimeout(() => celebrateWithTheme('political'), 500);\n        }\n      } else {\n        // Incorrect match\n        const incorrectIds = new Set([selectedPM.id, selectedTerm.id, selectedPeriod.id]);\n        setIncorrectAttempts(incorrectIds);\n        \n        setTimeout(() => {\n          setIncorrectAttempts(new Set());\n        }, 3000);\n      }\n      \n      // Reset selections\n      setTimeout(() => {\n        setSelectedPM(null);\n        setSelectedTerm(null);\n        setSelectedPeriod(null);\n      }, incorrectAttempts.size > 0 ? 3000 : 1000);\n    }\n  }, [selectedPM, selectedTerm, selectedPeriod, matchedItems.size]);\n\n  const getButtonStyle = (item: PrimeMinisterData, isSelected: boolean) => {\n    const baseClasses = \"w-full text-left p-3 rounded-lg border transition-all duration-300 hover:shadow-md\";\n    const isMatched = matchedItems.has(item.id);\n    const isIncorrect = incorrectAttempts.has(item.id);\n    \n    if (isMatched) {\n      return `${baseClasses} bg-green-100 border-green-300 text-green-800 cursor-default shadow-sm`;\n    }\n    \n    if (isIncorrect) {\n      return `${baseClasses} bg-red-100 border-red-300 text-red-800 animate-pulse cursor-pointer`;\n    }\n    \n    if (isSelected) {\n      return `${baseClasses} bg-blue-100 border-blue-400 text-blue-800 shadow-lg cursor-pointer`;\n    }\n    \n    return `${baseClasses} bg-white border-gray-200 text-gray-800 hover:bg-gray-50 cursor-pointer`;\n  };\n\n  const getPartyColor = (party: string) => {\n    const colors = {\n      Conservative: 'bg-blue-100 text-blue-800',\n      Labour: 'bg-red-100 text-red-800',\n      Liberal: 'bg-yellow-100 text-yellow-800',\n      Whig: 'bg-orange-100 text-orange-800',\n      Tory: 'bg-blue-100 text-blue-800',\n      Coalition: 'bg-purple-100 text-purple-800'\n    };\n    return colors[party as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  const getSignificanceColor = (significance: string) => {\n    const colors = {\n      Foundational: 'bg-purple-100 text-purple-800',\n      Major: 'bg-blue-100 text-blue-800',\n      Transformative: 'bg-green-100 text-green-800',\n      Wartime: 'bg-red-100 text-red-800',\n      Reformist: 'bg-yellow-100 text-yellow-800',\n      Revolutionary: 'bg-orange-100 text-orange-800'\n    };\n    return colors[significance as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  const accuracy = attempts > 0 ? Math.round((score / attempts) * 100) : 0;\n  const filteredData = getFilteredData();\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Game Header & Stats */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <div className=\"flex items-center gap-3\">\n          <Building className=\"h-6 w-6 text-blue-600\" />\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-900\">British Prime Ministers Triple Match</h3>\n            <p className=\"text-sm text-gray-600\">Match Prime Ministers with their term starts and historical periods</p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center gap-4\">\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-blue-600\">{score}/{filteredData.length}</div>\n            <div className=\"text-xs text-gray-500\">Matches</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-green-600\">{accuracy}%</div>\n            <div className=\"text-xs text-gray-500\">Accuracy</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"space-y-3\">\n        <div className=\"flex flex-wrap gap-2 items-center\">\n          <Filter className=\"h-4 w-4 text-gray-500\" />\n          <span className=\"text-sm font-medium text-gray-700\">Political Party:</span>\n          {parties.map(party => (\n            <Badge\n              key={party}\n              variant={filterParty === party ? \"default\" : \"outline\"}\n              className={`cursor-pointer transition-colors ${\n                filterParty === party \n                  ? 'bg-blue-600 text-white' \n                  : 'hover:bg-blue-100'\n              }`}\n              onClick={() => setFilterParty(party)}\n            >\n              {party === 'all' ? 'All Parties' : party}\n            </Badge>\n          ))}\n        </div>\n        \n        <div className=\"flex flex-wrap gap-2 items-center\">\n          <Filter className=\"h-4 w-4 text-gray-500\" />\n          <span className=\"text-sm font-medium text-gray-700\">Historical Era:</span>\n          {eras.map(era => (\n            <Badge\n              key={era}\n              variant={filterEra === era ? \"default\" : \"outline\"}\n              className={`cursor-pointer transition-colors ${\n                filterEra === era \n                  ? 'bg-green-600 text-white' \n                  : 'hover:bg-green-100'\n              }`}\n              onClick={() => setFilterEra(era)}\n            >\n              {era === 'all' ? 'All Eras' : era}\n            </Badge>\n          ))}\n        </div>\n      </div>\n\n      {/* Game Controls */}\n      <div className=\"flex gap-2\">\n        <Button\n          onClick={initializeGame}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <Shuffle className=\"h-4 w-4\" />\n          Shuffle\n        </Button>\n        <Button\n          onClick={initializeGame}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <RotateCcw className=\"h-4 w-4\" />\n          Reset\n        </Button>\n        <Button\n          onClick={() => setShowReference(!showReference)}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <Users className=\"h-4 w-4\" />\n          {showReference ? 'Hide' : 'Show'} PM Reference\n        </Button>\n      </div>\n\n      {gameComplete && (\n        <Card className=\"border-green-200 bg-green-50\">\n          <CardContent className=\"p-4 text-center\">\n            <h3 className=\"text-lg font-semibold text-green-800 mb-2\">🏛️ Political Mastery Achieved!</h3>\n            <p className=\"text-green-700\">\n              You've successfully matched all {filteredData.length} Prime Ministers with their terms and periods!\n            </p>\n            <p className=\"text-sm text-green-600 mt-1\">\n              Final Score: {score}/{filteredData.length} ({accuracy}% accuracy)\n            </p>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Prime Ministers Reference Card */}\n      {showReference && (\n        <Card className=\"bg-blue-50 border-blue-200\">\n          <CardHeader>\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Users className=\"h-4 w-4 text-blue-600\" />\n              British Prime Ministers Historical Reference\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 text-sm\">\n              {filteredData.map((pm) => (\n                <div key={`ref-${pm.id}`} className=\"p-3 bg-white rounded border\">\n                  <div className=\"font-semibold text-blue-800\">{pm.primeMinister}</div>\n                  <div className=\"text-gray-600 mt-1 text-xs leading-relaxed\">{pm.keyAchievements}</div>\n                  <div className=\"flex gap-1 mt-2 flex-wrap\">\n                    <Badge className={`text-xs ${getPartyColor(pm.party)}`}>\n                      {pm.party}\n                    </Badge>\n                    <Badge className=\"text-xs bg-gray-100 text-gray-800\">\n                      {pm.termStart}\n                    </Badge>\n                    <Badge className={`text-xs ${getSignificanceColor(pm.significance)}`}>\n                      {pm.significance}\n                    </Badge>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Matching Game Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Prime Ministers Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Building className=\"h-4 w-4 text-blue-600\" />\n              Prime Ministers ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {primeMinister.map((pm) => (\n              <div key={`pm-${pm.id}`} className=\"space-y-1\">\n                <button\n                  onClick={() => handlePMClick(pm)}\n                  className={getButtonStyle(pm, selectedPM?.id === pm.id)}\n                  disabled={matchedItems.has(pm.id)}\n                >\n                  <div className=\"font-medium text-sm leading-relaxed\">{pm.primeMinister}</div>\n                  <div className=\"flex gap-1 mt-1 flex-wrap\">\n                    <Badge className={`text-xs ${getPartyColor(pm.party)}`}>\n                      {pm.party}\n                    </Badge>\n                    <Badge className=\"text-xs bg-gray-100 text-gray-800\">\n                      {pm.era}\n                    </Badge>\n                    <Badge className={`text-xs ${getSignificanceColor(pm.significance)}`}>\n                      {pm.significance}\n                    </Badge>\n                  </div>\n                </button>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Term Start Dates Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Building className=\"h-4 w-4 text-green-600\" />\n              Term Start ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {termStarts.map((term) => (\n              <button\n                key={`term-${term.id}`}\n                onClick={() => handleTermClick(term)}\n                className={getButtonStyle(term, selectedTerm?.id === term.id)}\n                disabled={matchedItems.has(term.id)}\n              >\n                <div className=\"font-bold text-xl text-center\">\n                  {term.termStart}\n                </div>\n                <Badge className={`text-xs w-full justify-center mt-1 ${getPartyColor(term.party)}`}>\n                  {term.party}\n                </Badge>\n              </button>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Historical Periods Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Users className=\"h-4 w-4 text-purple-600\" />\n              Historical Period ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {periods.map((period) => (\n              <button\n                key={`period-${period.id}`}\n                onClick={() => handlePeriodClick(period)}\n                className={getButtonStyle(period, selectedPeriod?.id === period.id)}\n                disabled={matchedItems.has(period.id)}\n              >\n                <div className=\"font-medium text-sm leading-relaxed\">\n                  {period.period}\n                </div>\n              </button>\n            ))}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Instructions */}\n      <Card className=\"bg-blue-50 border-blue-200\">\n        <CardContent className=\"p-4\">\n          <h4 className=\"font-semibold text-blue-900 mb-2\">How to Play:</h4>\n          <ul className=\"text-sm text-blue-800 space-y-1\">\n            <li>• Select one Prime Minister, one term start date, and one historical period that all belong together</li>\n            <li>• All three selections must match the same political leader</li>\n            <li>• Correct matches turn green and celebrate with confetti</li>\n            <li>• Use party and era filters to focus on specific political periods</li>\n            <li>• Click \"Show PM Reference\" for comprehensive information about each Prime Minister's achievements</li>\n            <li>• Learn about British political history from Walpole to Cameron!</li>\n          </ul>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":23035},"client/src/components/progress-roadmap.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Map, Check, Clock } from \"lucide-react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\n\ninterface ProgressRoadmapProps {\n  userId: string;\n}\n\nexport default function ProgressRoadmap({ userId }: ProgressRoadmapProps) {\n  const { data: modules = [] } = useQuery({\n    queryKey: [\"/api/modules\"],\n  });\n\n  const { data: userProgress = [] } = useQuery({\n    queryKey: [\"/api/modules/progress\", userId],\n  });\n\n  const getModuleProgress = (moduleId: string) => {\n    const progress = userProgress.find((p: any) => p.moduleId === moduleId);\n    return progress?.progress || 0;\n  };\n\n  const getStatusIcon = (progress: number) => {\n    if (progress === 100) {\n      return <Check className=\"text-white text-xs\" size={12} />;\n    } else if (progress > 0) {\n      return <Clock className=\"text-white text-xs\" size={12} />;\n    } else {\n      return <span className=\"text-gray-600 text-xs font-bold\">{modules.findIndex(m => getModuleProgress(m.id) === progress) + 1}</span>;\n    }\n  };\n\n  const getStatusColor = (progress: number) => {\n    if (progress === 100) return \"bg-success\";\n    if (progress > 0) return \"bg-warning\";\n    return \"bg-gray-300\";\n  };\n\n  return (\n    <Card className=\"shadow-sm border border-gray-200 overflow-hidden\">\n      <CardHeader className=\"border-b border-gray-200\">\n        <CardTitle className=\"text-lg font-semibold text-gray-900 flex items-center\">\n          <Map className=\"text-success mr-3\" size={20} />\n          Learning Roadmap\n        </CardTitle>\n      </CardHeader>\n      \n      <CardContent className=\"p-6\">\n        {modules.map((module: any) => {\n          const progress = getModuleProgress(module.id);\n          \n          return (\n            <div key={module.id} className=\"flex items-start space-x-3 mb-4 last:mb-0\">\n              <div className={`w-6 h-6 ${getStatusColor(progress)} rounded-full flex items-center justify-center flex-shrink-0 mt-0.5`}>\n                {getStatusIcon(progress)}\n              </div>\n              <div className=\"flex-1 min-w-0\">\n                <h4 className=\"font-medium text-gray-900 text-sm\">{module.title}</h4>\n                <p className=\"text-xs text-gray-600 mb-2\">{module.description}</p>\n                <div className=\"w-full\">\n                  <Progress value={progress} className=\"h-1.5\" />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":2555},"client/src/components/religion-demographics-matching.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Shuffle, RotateCcw, Church, Filter } from \"lucide-react\";\nimport { celebrateWithTheme } from \"@/lib/confetti\";\n\ninterface ReligionData {\n  id: string;\n  religion: string;\n  percentage: string;\n  ethnicity: string;\n  category: 'Christian' | 'Muslim' | 'Hindu' | 'Sikh' | 'Jewish' | 'Buddhist' | 'Non-Religious' | 'Other';\n  region: 'England' | 'Wales' | 'Scotland' | 'Northern Ireland' | 'UK Overall';\n}\n\nconst religionDemographicsData: ReligionData[] = [\n  // UK Overall - Major Religions\n  {\n    id: \"1\",\n    religion: \"Christianity (All Denominations)\",\n    percentage: \"59.5%\",\n    ethnicity: \"White British majority, diverse ethnic representation\",\n    category: \"Christian\",\n    region: \"UK Overall\"\n  },\n  {\n    id: \"2\",\n    religion: \"No Religion/Non-Religious\",\n    percentage: \"25.7%\",\n    ethnicity: \"Predominantly White British, growing across all ethnicities\",\n    category: \"Non-Religious\",\n    region: \"UK Overall\"\n  },\n  {\n    id: \"3\",\n    religion: \"Islam\",\n    percentage: \"4.4%\",\n    ethnicity: \"Pakistani (43%), Bangladeshi (15%), Other Asian (12%), Arab (6%)\",\n    category: \"Muslim\",\n    region: \"UK Overall\"\n  },\n  {\n    id: \"4\",\n    religion: \"Hinduism\",\n    percentage: \"1.3%\",\n    ethnicity: \"Indian (87%), Other Asian (8%), Mixed heritage (3%)\",\n    category: \"Hindu\",\n    region: \"UK Overall\"\n  },\n  {\n    id: \"5\",\n    religion: \"Sikhism\",\n    percentage: \"0.7%\",\n    ethnicity: \"Indian Punjabi (95%), Other Asian (3%), Mixed heritage (2%)\",\n    category: \"Sikh\",\n    region: \"UK Overall\"\n  },\n  {\n    id: \"6\",\n    religion: \"Judaism\",\n    percentage: \"0.4%\",\n    ethnicity: \"White British/European (85%), Mixed heritage (10%), Other (5%)\",\n    category: \"Jewish\",\n    region: \"UK Overall\"\n  },\n  {\n    id: \"7\",\n    religion: \"Buddhism\",\n    percentage: \"0.4%\",\n    ethnicity: \"Chinese (35%), White British (30%), Other Asian (20%), Mixed (15%)\",\n    category: \"Buddhist\",\n    region: \"UK Overall\"\n  },\n\n  // England Specific\n  {\n    id: \"8\",\n    religion: \"Church of England (Anglican)\",\n    percentage: \"20.7%\",\n    ethnicity: \"White British (88%), White Other (7%), Mixed heritage (3%)\",\n    category: \"Christian\",\n    region: \"England\"\n  },\n  {\n    id: \"9\",\n    religion: \"Roman Catholic\",\n    percentage: \"8.6%\",\n    ethnicity: \"White British (65%), White Irish (15%), Polish (8%), Other (12%)\",\n    category: \"Christian\",\n    region: \"England\"\n  },\n  {\n    id: \"10\",\n    religion: \"Methodist\",\n    percentage: \"1.2%\",\n    ethnicity: \"White British (92%), Caribbean (4%), Other (4%)\",\n    category: \"Christian\",\n    region: \"England\"\n  },\n\n  // Wales Specific\n  {\n    id: \"11\",\n    religion: \"Church in Wales\",\n    percentage: \"13.8%\",\n    ethnicity: \"White Welsh (95%), White Other (3%), Mixed heritage (2%)\",\n    category: \"Christian\",\n    region: \"Wales\"\n  },\n  {\n    id: \"12\",\n    religion: \"Presbyterian Church of Wales\",\n    percentage: \"0.8%\",\n    ethnicity: \"White Welsh (96%), White Other (3%), Mixed heritage (1%)\",\n    category: \"Christian\",\n    region: \"Wales\"\n  },\n\n  // Scotland Specific\n  {\n    id: \"13\",\n    religion: \"Church of Scotland (Presbyterian)\",\n    percentage: \"20.4%\",\n    ethnicity: \"White Scottish (94%), White Other (4%), Mixed heritage (2%)\",\n    category: \"Christian\",\n    region: \"Scotland\"\n  },\n  {\n    id: \"14\",\n    religion: \"Roman Catholic (Scotland)\",\n    percentage: \"15.9%\",\n    ethnicity: \"White Scottish (80%), White Irish (12%), Polish (5%), Other (3%)\",\n    category: \"Christian\",\n    region: \"Scotland\"\n  },\n\n  // Northern Ireland Specific\n  {\n    id: \"15\",\n    religion: \"Presbyterian Church in Ireland\",\n    percentage: \"19.0%\",\n    ethnicity: \"White British/Ulster (96%), White Other (3%), Mixed heritage (1%)\",\n    category: \"Christian\",\n    region: \"Northern Ireland\"\n  },\n  {\n    id: \"16\",\n    religion: \"Roman Catholic (Northern Ireland)\",\n    percentage: \"40.8%\",\n    ethnicity: \"White Irish/Catholic (94%), White Other (4%), Mixed heritage (2%)\",\n    category: \"Christian\",\n    region: \"Northern Ireland\"\n  },\n  {\n    id: \"17\",\n    religion: \"Church of Ireland (Anglican)\",\n    percentage: \"13.7%\",\n    ethnicity: \"White British/Protestant (95%), White Other (3%), Mixed heritage (2%)\",\n    category: \"Christian\",\n    region: \"Northern Ireland\"\n  },\n\n  // Ethnic-Specific Religious Concentrations\n  {\n    id: \"18\",\n    religion: \"Caribbean Christian Churches\",\n    percentage: \"2.1% of Christians\",\n    ethnicity: \"Black Caribbean (85%), Black African (10%), Mixed Caribbean (5%)\",\n    category: \"Christian\",\n    region: \"England\"\n  },\n  {\n    id: \"19\",\n    religion: \"African Christian Churches\",\n    percentage: \"1.8% of Christians\",\n    ethnicity: \"Black African (90%), Black Caribbean (5%), Mixed heritage (5%)\",\n    category: \"Christian\",\n    region: \"England\"\n  },\n  {\n    id: \"20\",\n    religion: \"Orthodox Christianity\",\n    percentage: \"0.5%\",\n    ethnicity: \"White Other European (70%), Greek (15%), Russian (10%), Other (5%)\",\n    category: \"Christian\",\n    region: \"UK Overall\"\n  },\n\n  // Non-Religious by Ethnicity\n  {\n    id: \"21\",\n    religion: \"Secular/Atheist/Agnostic\",\n    percentage: \"25.7%\",\n    ethnicity: \"White British (78%), White Other (12%), Mixed heritage (6%), Other (4%)\",\n    category: \"Non-Religious\",\n    region: \"UK Overall\"\n  }\n];\n\ninterface ReligionDemographicsMatchingProps {\n  userId: string;\n}\n\nexport default function ReligionDemographicsMatching({ userId }: ReligionDemographicsMatchingProps) {\n  const [religions, setReligions] = useState<ReligionData[]>([]);\n  const [percentages, setPercentages] = useState<ReligionData[]>([]);\n  const [ethnicities, setEthnicities] = useState<ReligionData[]>([]);\n  const [selectedReligion, setSelectedReligion] = useState<ReligionData | null>(null);\n  const [selectedPercentage, setSelectedPercentage] = useState<ReligionData | null>(null);\n  const [selectedEthnicity, setSelectedEthnicity] = useState<ReligionData | null>(null);\n  const [matchedItems, setMatchedItems] = useState<Set<string>>(new Set());\n  const [incorrectAttempts, setIncorrectAttempts] = useState<Set<string>>(new Set());\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [filterCategory, setFilterCategory] = useState<string>('all');\n  const [filterRegion, setFilterRegion] = useState<string>('all');\n  const [gameComplete, setGameComplete] = useState(false);\n\n  const categories = ['all', 'Christian', 'Muslim', 'Hindu', 'Sikh', 'Jewish', 'Buddhist', 'Non-Religious', 'Other'];\n  const regionFilters = ['all', 'UK Overall', 'England', 'Wales', 'Scotland', 'Northern Ireland'];\n\n  const getFilteredData = () => {\n    let filtered = religionDemographicsData;\n    \n    if (filterCategory !== 'all') {\n      filtered = filtered.filter(item => item.category === filterCategory);\n    }\n    \n    if (filterRegion !== 'all') {\n      filtered = filtered.filter(item => item.region === filterRegion);  \n    }\n    \n    return filtered;\n  };\n\n  const shuffleArray = <T,>(array: T[]): T[] => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  const initializeGame = () => {\n    const filteredData = getFilteredData();\n    setReligions(shuffleArray(filteredData));\n    setPercentages(shuffleArray(filteredData));\n    setEthnicities(shuffleArray(filteredData));\n    setMatchedItems(new Set());\n    setIncorrectAttempts(new Set());\n    setSelectedReligion(null);\n    setSelectedPercentage(null);\n    setSelectedEthnicity(null);\n    setScore(0);\n    setAttempts(0);\n    setGameComplete(false);\n  };\n\n  useEffect(() => {\n    initializeGame();\n  }, [filterCategory, filterRegion]);\n\n  const handleReligionClick = (religion: ReligionData) => {\n    if (matchedItems.has(religion.id)) return;\n    setSelectedReligion(religion);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handlePercentageClick = (percentage: ReligionData) => {\n    if (matchedItems.has(percentage.id)) return;\n    setSelectedPercentage(percentage);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handleEthnicityClick = (ethnicity: ReligionData) => {\n    if (matchedItems.has(ethnicity.id)) return;\n    setSelectedEthnicity(ethnicity);\n    setIncorrectAttempts(new Set());\n  };\n\n  useEffect(() => {\n    if (selectedReligion && selectedPercentage && selectedEthnicity) {\n      setAttempts(prev => prev + 1);\n      \n      if (selectedReligion.id === selectedPercentage.id && \n          selectedPercentage.id === selectedEthnicity.id) {\n        // Correct match!\n        celebrateWithTheme('religious');\n        setMatchedItems(prev => new Set(Array.from(prev).concat(selectedReligion.id)));\n        setScore(prev => prev + 1);\n        \n        // Check if game is complete\n        const filteredData = getFilteredData();\n        if (matchedItems.size + 1 >= filteredData.length) {\n          setGameComplete(true);\n          setTimeout(() => celebrateWithTheme('religious'), 500);\n        }\n      } else {\n        // Incorrect match\n        const incorrectIds = new Set([selectedReligion.id, selectedPercentage.id, selectedEthnicity.id]);\n        setIncorrectAttempts(incorrectIds);\n        \n        setTimeout(() => {\n          setIncorrectAttempts(new Set());\n        }, 3000);\n      }\n      \n      // Reset selections\n      setTimeout(() => {\n        setSelectedReligion(null);\n        setSelectedPercentage(null);\n        setSelectedEthnicity(null);\n      }, incorrectAttempts.size > 0 ? 3000 : 1000);\n    }\n  }, [selectedReligion, selectedPercentage, selectedEthnicity, matchedItems.size]);\n\n  const getButtonStyle = (item: ReligionData, isSelected: boolean) => {\n    const baseClasses = \"w-full text-left p-3 rounded-lg border transition-all duration-300 hover:shadow-md\";\n    const isMatched = matchedItems.has(item.id);\n    const isIncorrect = incorrectAttempts.has(item.id);\n    \n    if (isMatched) {\n      return `${baseClasses} bg-green-100 border-green-300 text-green-800 cursor-default shadow-sm`;\n    }\n    \n    if (isIncorrect) {\n      return `${baseClasses} bg-red-100 border-red-300 text-red-800 animate-pulse cursor-pointer`;\n    }\n    \n    if (isSelected) {\n      return `${baseClasses} bg-indigo-100 border-indigo-400 text-indigo-800 shadow-lg cursor-pointer`;\n    }\n    \n    return `${baseClasses} bg-white border-gray-200 text-gray-800 hover:bg-gray-50 cursor-pointer`;\n  };\n\n  const getCategoryColor = (category: string) => {\n    const colors = {\n      Christian: 'bg-blue-100 text-blue-800',\n      Muslim: 'bg-green-100 text-green-800',\n      Hindu: 'bg-orange-100 text-orange-800',\n      Sikh: 'bg-yellow-100 text-yellow-800',\n      Jewish: 'bg-purple-100 text-purple-800',\n      Buddhist: 'bg-red-100 text-red-800',\n      'Non-Religious': 'bg-gray-100 text-gray-800',\n      Other: 'bg-pink-100 text-pink-800'\n    };\n    return colors[category as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  const getRegionColor = (region: string) => {\n    const colors = {\n      'UK Overall': 'bg-purple-100 text-purple-800',\n      'England': 'bg-rose-100 text-rose-800',\n      'Wales': 'bg-red-100 text-red-800',\n      'Scotland': 'bg-blue-100 text-blue-800',\n      'Northern Ireland': 'bg-green-100 text-green-800'\n    };\n    return colors[region as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  const accuracy = attempts > 0 ? Math.round((score / attempts) * 100) : 0;\n  const filteredData = getFilteredData();\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Game Header & Stats */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <div className=\"flex items-center gap-3\">\n          <Church className=\"h-6 w-6 text-indigo-600\" />\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-900\">UK Religion & Demographics Triple Match</h3>\n            <p className=\"text-sm text-gray-600\">Match religions with their percentages and ethnic compositions</p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center gap-4\">\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-indigo-600\">{score}/{filteredData.length}</div>\n            <div className=\"text-xs text-gray-500\">Matches</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-green-600\">{accuracy}%</div>\n            <div className=\"text-xs text-gray-500\">Accuracy</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"space-y-3\">\n        <div className=\"flex flex-wrap gap-2 items-center\">\n          <Filter className=\"h-4 w-4 text-gray-500\" />\n          <span className=\"text-sm font-medium text-gray-700\">Religion:</span>\n          {categories.map(category => (\n            <Badge\n              key={category}\n              variant={filterCategory === category ? \"default\" : \"outline\"}\n              className={`cursor-pointer transition-colors ${\n                filterCategory === category \n                  ? 'bg-indigo-600 text-white' \n                  : 'hover:bg-indigo-100'\n              }`}\n              onClick={() => setFilterCategory(category)}\n            >\n              {category === 'all' ? 'All Religions' : category}\n            </Badge>\n          ))}\n        </div>\n        \n        <div className=\"flex flex-wrap gap-2 items-center\">\n          <Filter className=\"h-4 w-4 text-gray-500\" />\n          <span className=\"text-sm font-medium text-gray-700\">Region:</span>\n          {regionFilters.map(region => (\n            <Badge\n              key={region}\n              variant={filterRegion === region ? \"default\" : \"outline\"}\n              className={`cursor-pointer transition-colors ${\n                filterRegion === region \n                  ? 'bg-green-600 text-white' \n                  : 'hover:bg-green-100'\n              }`}\n              onClick={() => setFilterRegion(region)}\n            >\n              {region === 'all' ? 'All Regions' : region}\n            </Badge>\n          ))}\n        </div>\n      </div>\n\n      {/* Game Controls */}\n      <div className=\"flex gap-2\">\n        <Button\n          onClick={initializeGame}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <Shuffle className=\"h-4 w-4\" />\n          Shuffle\n        </Button>\n        <Button\n          onClick={initializeGame}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <RotateCcw className=\"h-4 w-4\" />\n          Reset\n        </Button>\n      </div>\n\n      {gameComplete && (\n        <Card className=\"border-green-200 bg-green-50\">\n          <CardContent className=\"p-4 text-center\">\n            <h3 className=\"text-lg font-semibold text-green-800 mb-2\">🎉 Congratulations!</h3>\n            <p className=\"text-green-700\">\n              You've successfully matched all {filteredData.length} religions with their demographics!\n            </p>\n            <p className=\"text-sm text-green-600 mt-1\">\n              Final Score: {score}/{filteredData.length} ({accuracy}% accuracy)\n            </p>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Matching Game Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Religions Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Church className=\"h-4 w-4 text-indigo-600\" />\n              Religions ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {religions.map((religion) => (\n              <div key={`religion-${religion.id}`} className=\"space-y-1\">\n                <button\n                  onClick={() => handleReligionClick(religion)}\n                  className={getButtonStyle(religion, selectedReligion?.id === religion.id)}\n                  disabled={matchedItems.has(religion.id)}\n                >\n                  <div className=\"font-medium text-sm leading-relaxed\">{religion.religion}</div>\n                  <div className=\"flex gap-1 mt-1 flex-wrap\">\n                    <Badge className={`text-xs ${getCategoryColor(religion.category)}`}>\n                      {religion.category}\n                    </Badge>\n                    <Badge className={`text-xs ${getRegionColor(religion.region)}`}>\n                      {religion.region}\n                    </Badge>\n                  </div>\n                </button>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Percentages Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Church className=\"h-4 w-4 text-green-600\" />\n              Percentages ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {percentages.map((percentage) => (\n              <button\n                key={`percentage-${percentage.id}`}\n                onClick={() => handlePercentageClick(percentage)}\n                className={getButtonStyle(percentage, selectedPercentage?.id === percentage.id)}\n                disabled={matchedItems.has(percentage.id)}\n              >\n                <div className=\"font-bold text-lg text-center\">\n                  {percentage.percentage}\n                </div>\n                <Badge className={`text-xs w-full justify-center mt-1 ${getRegionColor(percentage.region)}`}>\n                  {percentage.region}\n                </Badge>\n              </button>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Ethnicities Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Church className=\"h-4 w-4 text-orange-600\" />\n              Ethnic Composition ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {ethnicities.map((ethnicity) => (\n              <button\n                key={`ethnicity-${ethnicity.id}`}\n                onClick={() => handleEthnicityClick(ethnicity)}\n                className={getButtonStyle(ethnicity, selectedEthnicity?.id === ethnicity.id)}\n                disabled={matchedItems.has(ethnicity.id)}\n              >\n                <div className=\"font-medium text-sm leading-relaxed\">\n                  {ethnicity.ethnicity}\n                </div>\n              </button>\n            ))}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Instructions */}\n      <Card className=\"bg-indigo-50 border-indigo-200\">\n        <CardContent className=\"p-4\">\n          <h4 className=\"font-semibold text-indigo-900 mb-2\">How to Play:</h4>\n          <ul className=\"text-sm text-indigo-800 space-y-1\">\n            <li>• Select one religion, one percentage, and one ethnic composition that all belong together</li>\n            <li>• All three selections must match the same religious demographic data</li>\n            <li>• Correct matches turn green and celebrate with confetti</li>\n            <li>• Use religion and region filters to focus on specific demographics</li>\n            <li>• Learn about UK's religious diversity and ethnic composition!</li>\n          </ul>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":19780},"client/src/components/resources-section.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Download, FileText, FileImage, List, ShoppingCart, ExternalLink, BookOpen } from \"lucide-react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\n\nconst getFileIcon = (fileType: string) => {\n  switch (fileType.toLowerCase()) {\n    case \"pdf\":\n      return <FileText className=\"text-uk-red text-sm\" size={16} />;\n    case \"image\":\n    case \"png\":\n    case \"jpg\":\n      return <FileImage className=\"text-royal-purple text-sm\" size={16} />;\n    default:\n      return <List className=\"text-success text-sm\" size={16} />;\n  }\n};\n\nconst getIconColor = (fileType: string) => {\n  switch (fileType.toLowerCase()) {\n    case \"pdf\":\n      return \"bg-uk-red/10\";\n    case \"image\":\n    case \"png\":\n    case \"jpg\":\n      return \"bg-royal-purple/10\";\n    default:\n      return \"bg-success/10\";\n  }\n};\n\nexport default function ResourcesSection() {\n  const { toast } = useToast();\n  \n  const { data: resources = [], isLoading } = useQuery({\n    queryKey: [\"/api/resources\"],\n  });\n\n  // Type guard for resources\n  const typedResources = resources as Array<{\n    id: string;\n    title: string;\n    fileType: string;\n    fileSize: string;\n  }>;\n\n  const handleDownload = async (resourceId: string, title: string) => {\n    try {\n      const response = await apiRequest(\"GET\", `/api/resources/download/${resourceId}`);\n      const data = await response.json();\n      \n      toast({\n        title: \"Download Started\",\n        description: `${title} download has been initiated.`\n      });\n    } catch (error) {\n      toast({\n        title: \"Download Failed\",\n        description: \"Failed to download resource. Please try again.\",\n        variant: \"destructive\"\n      });\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <Card>\n        <CardContent className=\"p-6\">\n          <div className=\"animate-pulse space-y-3\">\n            {[1, 2, 3, 4].map((i) => (\n              <div key={i} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-8 h-8 bg-gray-200 rounded-lg\"></div>\n                  <div>\n                    <div className=\"h-4 bg-gray-200 rounded mb-1 w-24\"></div>\n                    <div className=\"h-3 bg-gray-200 rounded w-16\"></div>\n                  </div>\n                </div>\n                <div className=\"w-4 h-4 bg-gray-200 rounded\"></div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Amazon Book Purchase Section */}\n      <Card className=\"shadow-sm border border-orange-200 bg-gradient-to-r from-orange-50 to-amber-50 overflow-hidden\">\n        <CardHeader className=\"border-b border-orange-200\">\n          <CardTitle className=\"text-lg font-semibold text-gray-900 flex items-center\">\n            <BookOpen className=\"text-orange-600 mr-3\" size={20} />\n            Official Study Book\n            <Badge variant=\"secondary\" className=\"ml-2 bg-orange-100 text-orange-800\">\n              Recommended\n            </Badge>\n          </CardTitle>\n        </CardHeader>\n        \n        <CardContent className=\"p-6\">\n          <div className=\"flex flex-col lg:flex-row items-start lg:items-center justify-between space-y-4 lg:space-y-0 lg:space-x-6\">\n            <div className=\"flex-1 min-w-0\">\n              <h3 className=\"font-semibold text-gray-900 mb-2 text-base lg:text-lg\">Life in the UK Test: Handbook 2025</h3>\n              <p className=\"text-sm text-gray-600 mb-3 leading-relaxed\">\n                Everything you need to study for the British citizenship test. Includes online practice tests access.\n              </p>\n              <div className=\"flex flex-wrap items-center gap-x-4 gap-y-1 text-xs lg:text-sm text-gray-500\">\n                <span>✓ Updated for 2025</span>\n                <span>✓ Official content</span>\n                <span>✓ Online tests included</span>\n              </div>\n            </div>\n            \n            <div className=\"flex flex-col space-y-3 w-full lg:w-auto lg:min-w-[180px]\">\n              <Button \n                className=\"bg-orange-600 hover:bg-orange-700 text-white px-4 py-2 text-sm w-full lg:w-auto\"\n                onClick={() => window.open('https://www.amazon.co.uk/Life-UK-Test-Everything-citizenship/dp/1907389954', '_blank')}\n              >\n                <ShoppingCart className=\"mr-2\" size={14} />\n                Amazon UK\n                <ExternalLink className=\"ml-2\" size={12} />\n              </Button>\n              <Button \n                variant=\"outline\"\n                className=\"border-orange-300 text-orange-700 hover:bg-orange-50 px-4 py-2 text-sm w-full lg:w-auto\"\n                onClick={() => window.open('https://www.amazon.com/Life-UK-Test-essential-citizenship/dp/1907389938', '_blank')}\n              >\n                <ShoppingCart className=\"mr-2\" size={14} />\n                Amazon US\n                <ExternalLink className=\"ml-2\" size={12} />\n              </Button>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Downloadable Resources Section */}\n      <Card className=\"shadow-sm border border-gray-200 overflow-hidden\">\n        <CardHeader className=\"border-b border-gray-200\">\n          <CardTitle className=\"text-lg font-semibold text-gray-900 flex items-center\">\n            <Download className=\"text-uk-red mr-3\" size={20} />\n            Free Cheatsheets & Resources\n          </CardTitle>\n        </CardHeader>\n        \n        <CardContent className=\"p-6 space-y-3\">\n        {typedResources.map((resource) => (\n          <div \n            key={resource.id}\n            className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg hover:bg-gray-100 transition-colors cursor-pointer group\"\n            onClick={() => handleDownload(resource.id, resource.title)}\n          >\n            <div className=\"flex items-center space-x-3\">\n              <div className={`w-8 h-8 ${getIconColor(resource.fileType)} rounded-lg flex items-center justify-center`}>\n                {getFileIcon(resource.fileType)}\n              </div>\n              <div>\n                <h4 className=\"font-medium text-gray-900 text-sm\">{resource.title}</h4>\n                <p className=\"text-xs text-gray-600\">{resource.fileSize}</p>\n              </div>\n            </div>\n            <Download className=\"text-gray-400 group-hover:text-gray-600 transition-colors\" size={16} />\n          </div>\n        ))}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":6804},"client/src/components/rulers-religions-matching.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Shuffle, RotateCcw, Crown, Filter, Cross } from \"lucide-react\";\nimport { celebrateWithTheme } from \"@/lib/confetti\";\n\ninterface RulerData {\n  id: string;\n  ruler: string;\n  reignStart: string;\n  religion: string;\n  dynasty: 'Norman' | 'Plantagenet' | 'Lancaster' | 'York' | 'Tudor' | 'Stuart' | 'Hanover' | 'Windsor';\n  era: 'Medieval' | 'Early Modern' | 'Modern' | 'Contemporary';\n  significance: 'Major' | 'Foundational' | 'Revolutionary' | 'Transformative' | 'Controversial';\n  religiousImpact: string;\n}\n\nconst rulersReligionsData: RulerData[] = [\n  // Norman Dynasty\n  {\n    id: \"1\",\n    ruler: \"William the Conqueror\",\n    reignStart: \"1066\",\n    religion: \"Roman Catholic\",\n    dynasty: \"Norman\",\n    era: \"Medieval\",\n    significance: \"Foundational\",\n    religiousImpact: \"Established Norman Catholic rule in England, built numerous cathedrals\"\n  },\n\n  // Plantagenet Dynasty\n  {\n    id: \"2\",\n    ruler: \"Henry II\",\n    reignStart: \"1154\",\n    religion: \"Roman Catholic\",\n    dynasty: \"Plantagenet\",\n    era: \"Medieval\",\n    significance: \"Major\",\n    religiousImpact: \"Conflict with Thomas Becket over church authority, legal reforms\"\n  },\n  {\n    id: \"3\",\n    ruler: \"Richard I (Lionheart)\",\n    reignStart: \"1189\",\n    religion: \"Roman Catholic\",\n    dynasty: \"Plantagenet\",\n    era: \"Medieval\",\n    significance: \"Major\",\n    religiousImpact: \"Led Third Crusade to Holy Land, defender of Christian faith\"\n  },\n  {\n    id: \"4\",\n    ruler: \"John\",\n    reignStart: \"1199\",\n    religion: \"Roman Catholic\",\n    dynasty: \"Plantagenet\",\n    era: \"Medieval\",\n    significance: \"Revolutionary\",\n    religiousImpact: \"Signed Magna Carta limiting royal power, conflicts with Pope\"\n  },\n  {\n    id: \"5\",\n    ruler: \"Edward I\",\n    reignStart: \"1272\",\n    religion: \"Roman Catholic\",\n    dynasty: \"Plantagenet\",\n    era: \"Medieval\",\n    significance: \"Major\",\n    religiousImpact: \"Expelled Jews from England, conquered Wales and Scotland\"\n  },\n\n  // Lancaster Dynasty\n  {\n    id: \"6\",\n    ruler: \"Henry IV\",\n    reignStart: \"1399\",\n    religion: \"Roman Catholic\",\n    dynasty: \"Lancaster\",\n    era: \"Medieval\",\n    significance: \"Major\",\n    religiousImpact: \"Persecuted Lollards, maintained Catholic orthodoxy\"\n  },\n\n  // York Dynasty\n  {\n    id: \"7\",\n    ruler: \"Edward IV\",\n    reignStart: \"1461\",\n    religion: \"Roman Catholic\",\n    dynasty: \"York\",\n    era: \"Medieval\",\n    significance: \"Major\",\n    religiousImpact: \"Wars of the Roses, maintained traditional Catholic practices\"\n  },\n\n  // Tudor Dynasty\n  {\n    id: \"8\",\n    ruler: \"Henry VIII\",\n    reignStart: \"1509\",\n    religion: \"Anglican (Church of England)\",\n    dynasty: \"Tudor\",\n    era: \"Early Modern\",\n    significance: \"Revolutionary\",\n    religiousImpact: \"Break with Rome, established Church of England, Defender of the Faith\"\n  },\n  {\n    id: \"9\",\n    ruler: \"Mary I (Bloody Mary)\",\n    reignStart: \"1553\",\n    religion: \"Roman Catholic\",\n    dynasty: \"Tudor\",\n    era: \"Early Modern\",\n    significance: \"Controversial\",\n    religiousImpact: \"Attempted Catholic restoration, persecution of Protestants\"\n  },\n  {\n    id: \"10\",\n    ruler: \"Elizabeth I\",\n    reignStart: \"1558\",\n    religion: \"Anglican (Church of England)\",\n    dynasty: \"Tudor\",\n    era: \"Early Modern\",\n    significance: \"Transformative\",\n    religiousImpact: \"Elizabethan Religious Settlement, defeated Spanish Armada\"\n  },\n\n  // Stuart Dynasty\n  {\n    id: \"11\",\n    ruler: \"James I (VI of Scotland)\",\n    reignStart: \"1603\",\n    religion: \"Anglican (Church of England)\",\n    dynasty: \"Stuart\",\n    era: \"Early Modern\",\n    significance: \"Major\",\n    religiousImpact: \"King James Bible, Gunpowder Plot, witch trials\"\n  },\n  {\n    id: \"12\",\n    ruler: \"Charles I\",\n    reignStart: \"1625\",\n    religion: \"Anglican (Church of England)\",\n    dynasty: \"Stuart\",\n    era: \"Early Modern\",\n    significance: \"Revolutionary\",\n    religiousImpact: \"High Church Anglicanism, conflicts with Puritans, executed\"\n  },\n  {\n    id: \"13\",\n    ruler: \"Charles II\",\n    reignStart: \"1660\",\n    religion: \"Anglican (Church of England)\",\n    dynasty: \"Stuart\",\n    era: \"Early Modern\",\n    significance: \"Major\",\n    religiousImpact: \"Restoration of monarchy and Church of England\"\n  },\n  {\n    id: \"14\",\n    ruler: \"James II\",\n    reignStart: \"1685\",\n    religion: \"Roman Catholic\",\n    dynasty: \"Stuart\",\n    era: \"Early Modern\",\n    significance: \"Controversial\",\n    religiousImpact: \"Catholic restoration attempts, deposed in Glorious Revolution\"\n  },\n\n  // Hanover Dynasty\n  {\n    id: \"15\",\n    ruler: \"George I\",\n    reignStart: \"1714\",\n    religion: \"Anglican (Church of England)\",\n    dynasty: \"Hanover\",\n    era: \"Modern\",\n    significance: \"Major\",\n    religiousImpact: \"Protestant succession secured, limited involvement in religious affairs\"\n  },\n  {\n    id: \"16\",\n    ruler: \"George III\",\n    reignStart: \"1760\",\n    religion: \"Anglican (Church of England)\",\n    dynasty: \"Hanover\",\n    era: \"Modern\",\n    significance: \"Major\",\n    religiousImpact: \"American Independence, opposed Catholic emancipation\"\n  },\n  {\n    id: \"17\",\n    ruler: \"Victoria\",\n    reignStart: \"1837\",\n    religion: \"Anglican (Church of England)\",\n    dynasty: \"Hanover\",\n    era: \"Modern\",\n    significance: \"Transformative\",\n    religiousImpact: \"Empress of India, Victorian moral values, religious revival\"\n  },\n\n  // Windsor Dynasty\n  {\n    id: \"18\",\n    ruler: \"George V\",\n    reignStart: \"1910\",\n    religion: \"Anglican (Church of England)\",\n    dynasty: \"Windsor\",\n    era: \"Modern\",\n    significance: \"Major\",\n    religiousImpact: \"World War I, Russian Revolution, changed royal house name\"\n  },\n  {\n    id: \"19\",\n    ruler: \"Edward VIII\",\n    reignStart: \"1936\",\n    religion: \"Anglican (Church of England)\",\n    dynasty: \"Windsor\",\n    era: \"Modern\",\n    significance: \"Controversial\",\n    religiousImpact: \"Abdication crisis over marriage to divorced woman\"\n  },\n  {\n    id: \"20\",\n    ruler: \"George VI\",\n    reignStart: \"1936\",\n    religion: \"Anglican (Church of England)\",\n    dynasty: \"Windsor\",\n    era: \"Modern\",\n    significance: \"Major\",\n    religiousImpact: \"World War II leadership, Commonwealth development\"\n  },\n  {\n    id: \"21\",\n    ruler: \"Elizabeth II\",\n    reignStart: \"1952\",\n    religion: \"Anglican (Church of England)\",\n    dynasty: \"Windsor\",\n    era: \"Contemporary\",\n    significance: \"Transformative\",\n    religiousImpact: \"Longest reign, Defender of Faith, multicultural Britain\"\n  }\n];\n\ninterface RulersReligionsMatchingProps {\n  userId: string;\n}\n\nexport default function RulersReligionsMatching({ userId }: RulersReligionsMatchingProps) {\n  const [rulers, setRulers] = useState<RulerData[]>([]);\n  const [reigns, setReigns] = useState<RulerData[]>([]);\n  const [religions, setReligions] = useState<RulerData[]>([]);\n  const [selectedRuler, setSelectedRuler] = useState<RulerData | null>(null);\n  const [selectedReign, setSelectedReign] = useState<RulerData | null>(null);\n  const [selectedReligion, setSelectedReligion] = useState<RulerData | null>(null);\n  const [matchedItems, setMatchedItems] = useState<Set<string>>(new Set());\n  const [incorrectAttempts, setIncorrectAttempts] = useState<Set<string>>(new Set());\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [filterDynasty, setFilterDynasty] = useState<string>('all');\n  const [filterEra, setFilterEra] = useState<string>('all');\n  const [gameComplete, setGameComplete] = useState(false);\n  const [showReference, setShowReference] = useState(false);\n\n  const dynasties = ['all', 'Norman', 'Plantagenet', 'Lancaster', 'York', 'Tudor', 'Stuart', 'Hanover', 'Windsor'];\n  const eras = ['all', 'Medieval', 'Early Modern', 'Modern', 'Contemporary'];\n\n  const getFilteredData = () => {\n    let filtered = rulersReligionsData;\n    \n    if (filterDynasty !== 'all') {\n      filtered = filtered.filter(item => item.dynasty === filterDynasty);\n    }\n    \n    if (filterEra !== 'all') {\n      filtered = filtered.filter(item => item.era === filterEra);\n    }\n    \n    return filtered;\n  };\n\n  const shuffleArray = <T,>(array: T[]): T[] => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  const initializeGame = () => {\n    const filteredData = getFilteredData();\n    setRulers(shuffleArray(filteredData));\n    setReigns(shuffleArray(filteredData));\n    setReligions(shuffleArray(filteredData));\n    setMatchedItems(new Set());\n    setIncorrectAttempts(new Set());\n    setSelectedRuler(null);\n    setSelectedReign(null);\n    setSelectedReligion(null);\n    setScore(0);\n    setAttempts(0);\n    setGameComplete(false);\n  };\n\n  useEffect(() => {\n    initializeGame();\n  }, [filterDynasty, filterEra]);\n\n  const handleRulerClick = (ruler: RulerData) => {\n    if (matchedItems.has(ruler.id)) return;\n    setSelectedRuler(ruler);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handleReignClick = (reign: RulerData) => {\n    if (matchedItems.has(reign.id)) return;\n    setSelectedReign(reign);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handleReligionClick = (religion: RulerData) => {\n    if (matchedItems.has(religion.id)) return;\n    setSelectedReligion(religion);\n    setIncorrectAttempts(new Set());\n  };\n\n  useEffect(() => {\n    if (selectedRuler && selectedReign && selectedReligion) {\n      setAttempts(prev => prev + 1);\n      \n      if (selectedRuler.id === selectedReign.id && \n          selectedReign.id === selectedReligion.id) {\n        // Correct match!\n        celebrateWithTheme('royal');\n        setMatchedItems(prev => new Set(Array.from(prev).concat(selectedRuler.id)));\n        setScore(prev => prev + 1);\n        \n        // Check if game is complete\n        const filteredData = getFilteredData();\n        if (matchedItems.size + 1 >= filteredData.length) {\n          setGameComplete(true);\n          setTimeout(() => celebrateWithTheme('royal'), 500);\n        }\n      } else {\n        // Incorrect match\n        const incorrectIds = new Set([selectedRuler.id, selectedReign.id, selectedReligion.id]);\n        setIncorrectAttempts(incorrectIds);\n        \n        setTimeout(() => {\n          setIncorrectAttempts(new Set());\n        }, 3000);\n      }\n      \n      // Reset selections\n      setTimeout(() => {\n        setSelectedRuler(null);\n        setSelectedReign(null);\n        setSelectedReligion(null);\n      }, incorrectAttempts.size > 0 ? 3000 : 1000);\n    }\n  }, [selectedRuler, selectedReign, selectedReligion, matchedItems.size]);\n\n  const getButtonStyle = (item: RulerData, isSelected: boolean) => {\n    const baseClasses = \"w-full text-left p-3 rounded-lg border transition-all duration-300 hover:shadow-md\";\n    const isMatched = matchedItems.has(item.id);\n    const isIncorrect = incorrectAttempts.has(item.id);\n    \n    if (isMatched) {\n      return `${baseClasses} bg-green-100 border-green-300 text-green-800 cursor-default shadow-sm`;\n    }\n    \n    if (isIncorrect) {\n      return `${baseClasses} bg-red-100 border-red-300 text-red-800 animate-pulse cursor-pointer`;\n    }\n    \n    if (isSelected) {\n      return `${baseClasses} bg-purple-100 border-purple-400 text-purple-800 shadow-lg cursor-pointer`;\n    }\n    \n    return `${baseClasses} bg-white border-gray-200 text-gray-800 hover:bg-gray-50 cursor-pointer`;\n  };\n\n  const getDynastyColor = (dynasty: string) => {\n    const colors = {\n      Norman: 'bg-stone-100 text-stone-800',\n      Plantagenet: 'bg-red-100 text-red-800',\n      Lancaster: 'bg-rose-100 text-rose-800',\n      York: 'bg-white text-gray-800 border',\n      Tudor: 'bg-green-100 text-green-800',\n      Stuart: 'bg-blue-100 text-blue-800',\n      Hanover: 'bg-orange-100 text-orange-800',\n      Windsor: 'bg-purple-100 text-purple-800'\n    };\n    return colors[dynasty as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  const getReligionColor = (religion: string) => {\n    const colors = {\n      'Roman Catholic': 'bg-red-100 text-red-800',\n      'Anglican (Church of England)': 'bg-blue-100 text-blue-800'\n    };\n    return colors[religion as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  const accuracy = attempts > 0 ? Math.round((score / attempts) * 100) : 0;\n  const filteredData = getFilteredData();\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Game Header & Stats */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <div className=\"flex items-center gap-3\">\n          <Crown className=\"h-6 w-6 text-purple-600\" />\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-900\">British Rulers & Religions Triple Match</h3>\n            <p className=\"text-sm text-gray-600\">Match rulers with their reign start dates and religious affiliations</p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center gap-4\">\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-purple-600\">{score}/{filteredData.length}</div>\n            <div className=\"text-xs text-gray-500\">Matches</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-green-600\">{accuracy}%</div>\n            <div className=\"text-xs text-gray-500\">Accuracy</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"space-y-3\">\n        <div className=\"flex flex-wrap gap-2 items-center\">\n          <Filter className=\"h-4 w-4 text-gray-500\" />\n          <span className=\"text-sm font-medium text-gray-700\">Dynasty:</span>\n          {dynasties.map(dynasty => (\n            <Badge\n              key={dynasty}\n              variant={filterDynasty === dynasty ? \"default\" : \"outline\"}\n              className={`cursor-pointer transition-colors ${\n                filterDynasty === dynasty \n                  ? 'bg-purple-600 text-white' \n                  : 'hover:bg-purple-100'\n              }`}\n              onClick={() => setFilterDynasty(dynasty)}\n            >\n              {dynasty === 'all' ? 'All Dynasties' : dynasty}\n            </Badge>\n          ))}\n        </div>\n        \n        <div className=\"flex flex-wrap gap-2 items-center\">\n          <Filter className=\"h-4 w-4 text-gray-500\" />\n          <span className=\"text-sm font-medium text-gray-700\">Era:</span>\n          {eras.map(era => (\n            <Badge\n              key={era}\n              variant={filterEra === era ? \"default\" : \"outline\"}\n              className={`cursor-pointer transition-colors ${\n                filterEra === era \n                  ? 'bg-blue-600 text-white' \n                  : 'hover:bg-blue-100'\n              }`}\n              onClick={() => setFilterEra(era)}\n            >\n              {era === 'all' ? 'All Eras' : era}\n            </Badge>\n          ))}\n        </div>\n      </div>\n\n      {/* Game Controls */}\n      <div className=\"flex gap-2\">\n        <Button\n          onClick={initializeGame}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <Shuffle className=\"h-4 w-4\" />\n          Shuffle\n        </Button>\n        <Button\n          onClick={initializeGame}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <RotateCcw className=\"h-4 w-4\" />\n          Reset\n        </Button>\n        <Button\n          onClick={() => setShowReference(!showReference)}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <Cross className=\"h-4 w-4\" />\n          {showReference ? 'Hide' : 'Show'} Royal Reference\n        </Button>\n      </div>\n\n      {gameComplete && (\n        <Card className=\"border-green-200 bg-green-50\">\n          <CardContent className=\"p-4 text-center\">\n            <h3 className=\"text-lg font-semibold text-green-800 mb-2\">👑 Royal Mastery Achieved!</h3>\n            <p className=\"text-green-700\">\n              You've successfully matched all {filteredData.length} British rulers with their reigns and religions!\n            </p>\n            <p className=\"text-sm text-green-600 mt-1\">\n              Final Score: {score}/{filteredData.length} ({accuracy}% accuracy)\n            </p>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Royal Reference Card */}\n      {showReference && (\n        <Card className=\"bg-purple-50 border-purple-200\">\n          <CardHeader>\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Cross className=\"h-4 w-4 text-purple-600\" />\n              British Royal History & Religious Reference\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 text-sm\">\n              {filteredData.map((ruler) => (\n                <div key={`ref-${ruler.id}`} className=\"p-3 bg-white rounded border\">\n                  <div className=\"font-semibold text-purple-800\">{ruler.ruler}</div>\n                  <div className=\"text-gray-600 mt-1 text-xs leading-relaxed\">{ruler.religiousImpact}</div>\n                  <div className=\"flex gap-1 mt-2 flex-wrap\">\n                    <Badge className={`text-xs ${getDynastyColor(ruler.dynasty)}`}>\n                      {ruler.dynasty}\n                    </Badge>\n                    <Badge className=\"text-xs bg-gray-100 text-gray-800\">\n                      {ruler.reignStart}\n                    </Badge>\n                    <Badge className={`text-xs ${getReligionColor(ruler.religion)}`}>\n                      {ruler.religion}\n                    </Badge>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Matching Game Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Rulers Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Crown className=\"h-4 w-4 text-purple-600\" />\n              British Rulers ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {rulers.map((ruler) => (\n              <div key={`ruler-${ruler.id}`} className=\"space-y-1\">\n                <button\n                  onClick={() => handleRulerClick(ruler)}\n                  className={getButtonStyle(ruler, selectedRuler?.id === ruler.id)}\n                  disabled={matchedItems.has(ruler.id)}\n                >\n                  <div className=\"font-medium text-sm leading-relaxed\">{ruler.ruler}</div>\n                  <div className=\"flex gap-1 mt-1 flex-wrap\">\n                    <Badge className={`text-xs ${getDynastyColor(ruler.dynasty)}`}>\n                      {ruler.dynasty}\n                    </Badge>\n                    <Badge className=\"text-xs bg-blue-100 text-blue-800\">\n                      {ruler.era}\n                    </Badge>\n                  </div>\n                </button>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Reign Start Dates Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Crown className=\"h-4 w-4 text-green-600\" />\n              Reign Start ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {reigns.map((reign) => (\n              <button\n                key={`reign-${reign.id}`}\n                onClick={() => handleReignClick(reign)}\n                className={getButtonStyle(reign, selectedReign?.id === reign.id)}\n                disabled={matchedItems.has(reign.id)}\n              >\n                <div className=\"font-bold text-xl text-center\">\n                  {reign.reignStart}\n                </div>\n                <Badge className={`text-xs w-full justify-center mt-1 ${getDynastyColor(reign.dynasty)}`}>\n                  {reign.dynasty} Dynasty\n                </Badge>\n              </button>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Religions Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Cross className=\"h-4 w-4 text-red-600\" />\n              Religious Affiliation ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {religions.map((religion) => (\n              <button\n                key={`religion-${religion.id}`}\n                onClick={() => handleReligionClick(religion)}\n                className={getButtonStyle(religion, selectedReligion?.id === religion.id)}\n                disabled={matchedItems.has(religion.id)}\n              >\n                <div className=\"font-medium text-sm leading-relaxed text-center\">\n                  {religion.religion}\n                </div>\n                <Badge className={`text-xs w-full justify-center mt-1 ${getReligionColor(religion.religion)}`}>\n                  {religion.religion.includes('Anglican') ? 'Protestant' : 'Catholic'}\n                </Badge>\n              </button>\n            ))}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Instructions */}\n      <Card className=\"bg-purple-50 border-purple-200\">\n        <CardContent className=\"p-4\">\n          <h4 className=\"font-semibold text-purple-900 mb-2\">How to Play:</h4>\n          <ul className=\"text-sm text-purple-800 space-y-1\">\n            <li>• Select one ruler, one reign start date, and one religious affiliation that all belong together</li>\n            <li>• All three selections must match the same British monarch</li>\n            <li>• Correct matches turn green and celebrate with confetti</li>\n            <li>• Use dynasty and era filters to focus on specific periods</li>\n            <li>• Click \"Show Royal Reference\" for comprehensive information about each ruler's religious impact</li>\n            <li>• Learn about British religious history from Catholic Norman conquest to Anglican reformation!</li>\n          </ul>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":22604},"client/src/components/sports-achievements-matching.tsx":{"content":"import { useState, useMemo } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { RotateCcw, Check, X, Trophy } from \"lucide-react\";\nimport { celebrateWithTheme, celebrateGameComplete } from \"@/lib/confetti\";\n\ninterface SportsAchievementPair {\n  id: string;\n  athlete: string;\n  achievement: string;\n  sport: string;\n  era: string;\n}\n\nconst sportsAchievementData: SportsAchievementPair[] = [\n  {\n    id: \"1\",\n    athlete: \"Sir Mo Farah\",\n    achievement: \"Four-time Olympic gold medalist in long-distance running (5000m and 10000m)\",\n    sport: \"Athletics\",\n    era: \"Modern\"\n  },\n  {\n    id: \"2\",\n    athlete: \"Sir Andy Murray\",\n    achievement: \"Three-time Grand Slam champion and two-time Olympic tennis gold medalist\",\n    sport: \"Tennis\",\n    era: \"Modern\"\n  },\n  {\n    id: \"3\",\n    athlete: \"Dame Jessica Ennis-Hill\",\n    achievement: \"Olympic heptathlon champion and three-time world champion\",\n    sport: \"Athletics\",\n    era: \"Modern\"\n  },\n  {\n    id: \"4\",\n    athlete: \"Sir Chris Hoy\",\n    achievement: \"Six-time Olympic cycling gold medalist, most successful British Olympian\",\n    sport: \"Cycling\",\n    era: \"Modern\"\n  },\n  {\n    id: \"5\",\n    athlete: \"Dame Kelly Holmes\",\n    achievement: \"Double Olympic gold medalist in 800m and 1500m at Athens 2004\",\n    sport: \"Athletics\",\n    era: \"Modern\"\n  },\n  {\n    id: \"6\",\n    athlete: \"Sir Steve Redgrave\",\n    achievement: \"Five consecutive Olympic rowing gold medals from 1984 to 2000\",\n    sport: \"Rowing\",\n    era: \"Modern\"\n  },\n  {\n    id: \"7\",\n    athlete: \"Sir Bobby Charlton\",\n    achievement: \"1966 World Cup winner and Manchester United legend with 249 goals\",\n    sport: \"Football\",\n    era: \"Classic\"\n  },\n  {\n    id: \"8\",\n    athlete: \"Sir Geoff Hurst\",\n    achievement: \"Only player to score hat-trick in World Cup final (1966 vs West Germany)\",\n    sport: \"Football\",\n    era: \"Classic\"\n  },\n  {\n    id: \"9\",\n    athlete: \"Dame Laura Kenny\",\n    achievement: \"Most successful female British Olympian with five cycling gold medals\",\n    sport: \"Cycling\",\n    era: \"Modern\"\n  },\n  {\n    id: \"10\",\n    athlete: \"Sir Bradley Wiggins\",\n    achievement: \"First Briton to win Tour de France and eight-time Olympic medalist\",\n    sport: \"Cycling\",\n    era: \"Modern\"\n  },\n  {\n    id: \"11\",\n    athlete: \"Dame Sarah Storey\",\n    achievement: \"Britain's most successful Paralympian with 17 gold medals in swimming and cycling\",\n    sport: \"Paralympics\",\n    era: \"Modern\"\n  },\n  {\n    id: \"12\",\n    athlete: \"Sir Lewis Hamilton\",\n    achievement: \"Seven-time Formula 1 World Champion, joint-record with Michael Schumacher\",\n    sport: \"Formula 1\",\n    era: \"Modern\"\n  },\n  {\n    id: \"13\",\n    athlete: \"Dame Virginia Wade\",\n    achievement: \"Wimbledon singles champion 1977 and three-time Grand Slam winner\",\n    sport: \"Tennis\",\n    era: \"Classic\"\n  },\n  {\n    id: \"14\",\n    athlete: \"Sir Nick Faldo\",\n    achievement: \"Six-time major golf champion including three Masters and three Open Championships\",\n    sport: \"Golf\",\n    era: \"Classic\"\n  },\n  {\n    id: \"15\",\n    athlete: \"Dame Tanni Grey-Thompson\",\n    achievement: \"Eleven Paralympic gold medals in wheelchair racing and marathon world record holder\",\n    sport: \"Paralympics\",\n    era: \"Modern\"\n  },\n  {\n    id: \"16\",\n    athlete: \"Sir Ian Botham\",\n    achievement: \"Cricket all-rounder with 5,200 runs and 383 wickets in Test matches\",\n    sport: \"Cricket\",\n    era: \"Classic\"\n  },\n  {\n    id: \"17\",\n    athlete: \"Jonny Wilkinson\",\n    achievement: \"Scored winning drop goal in 2003 Rugby World Cup final for England\",\n    sport: \"Rugby\",\n    era: \"Modern\"\n  },\n  {\n    id: \"18\",\n    athlete: \"Sir AP McCoy\",\n    achievement: \"Champion jockey 20 consecutive times with over 4,300 career wins\",\n    sport: \"Horse Racing\",\n    era: \"Modern\"\n  }\n];\n\ninterface SportsAchievementsMatchingProps {\n  userId: string;\n}\n\nexport default function SportsAchievementsMatching({ userId }: SportsAchievementsMatchingProps) {\n  const [selectedAthlete, setSelectedAthlete] = useState<string | null>(null);\n  const [selectedAchievement, setSelectedAchievement] = useState<string | null>(null);\n  const [matches, setMatches] = useState<Record<string, 'correct' | 'incorrect'>>({});\n  const [selectedSport, setSelectedSport] = useState<string>(\"All\");\n  const [selectedEra, setSelectedEra] = useState<string>(\"All\");\n  const [feedback, setFeedback] = useState<{ athleteId: string; achievementId: string; correct: boolean } | null>(null);\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [shuffleSeed, setShuffleSeed] = useState(Math.random());\n  const [recentCorrectMatches, setRecentCorrectMatches] = useState<Set<string>>(new Set());\n\n  const sports = [\"All\", ...Array.from(new Set(sportsAchievementData.map(item => item.sport)))];\n  const eras = [\"All\", ...Array.from(new Set(sportsAchievementData.map(item => item.era)))];\n  \n  const filteredData = sportsAchievementData.filter(item => {\n    const sportMatch = selectedSport === \"All\" || item.sport === selectedSport;\n    const eraMatch = selectedEra === \"All\" || item.era === selectedEra;\n    return sportMatch && eraMatch;\n  });\n\n  // Fisher-Yates shuffle algorithm\n  const shuffleArray = (array: SportsAchievementPair[], seed: number) => {\n    const shuffled = [...array];\n    let random = seed;\n    \n    for (let i = shuffled.length - 1; i > 0; i--) {\n      random = (random * 9301 + 49297) % 233280;\n      const randomIndex = Math.floor((random / 233280) * (i + 1));\n      [shuffled[i], shuffled[randomIndex]] = [shuffled[randomIndex], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  // Create separate shuffled arrays for athletes and achievements columns\n  const shuffledAthletes = useMemo(() => {\n    return shuffleArray(filteredData, shuffleSeed * 1000);\n  }, [filteredData, shuffleSeed]);\n\n  const shuffledAchievements = useMemo(() => {\n    return shuffleArray(filteredData, shuffleSeed * 7309 + 1234);\n  }, [filteredData, shuffleSeed]);\n\n  // Helper functions\n  const getButtonStatus = (itemId: string, side: 'athlete' | 'achievement') => {\n    const matchState = matches[itemId];\n    const isSelected = side === 'athlete' ? selectedAthlete === itemId : selectedAchievement === itemId;\n    const isMatched = matchState === 'correct';\n    const isIncorrect = matchState === 'incorrect';\n    const isRecentMatch = recentCorrectMatches.has(itemId);\n\n    return {\n      isSelected,\n      isMatched,\n      isIncorrect,\n      isRecentMatch\n    };\n  };\n\n  const handleAthleteSelect = (athleteId: string) => {\n    if (matches[athleteId] === 'correct') return;\n    \n    if (selectedAthlete === athleteId) {\n      setSelectedAthlete(null);\n    } else {\n      setSelectedAthlete(athleteId);\n      if (selectedAchievement) {\n        checkMatch(athleteId, selectedAchievement);\n      }\n    }\n  };\n\n  const handleAchievementSelect = (achievementId: string) => {\n    if (matches[achievementId] === 'correct') return;\n    \n    if (selectedAchievement === achievementId) {\n      setSelectedAchievement(null);\n    } else {\n      setSelectedAchievement(achievementId);\n      if (selectedAthlete) {\n        checkMatch(selectedAthlete, achievementId);\n      }\n    }\n  };\n\n  const checkMatch = (athleteId: string, achievementId: string) => {\n    setAttempts(prev => prev + 1);\n    \n    const isCorrect = athleteId === achievementId;\n    \n    if (isCorrect) {\n      // Celebrate individual correct match immediately\n      celebrateWithTheme('sports');\n      \n      setMatches(prev => ({\n        ...prev,\n        [athleteId]: 'correct'\n      }));\n      setScore(prev => {\n        const newScore = prev + 1;\n        // Check if game is complete\n        if (newScore === filteredData.length) {\n          setTimeout(() => celebrateGameComplete(), 500);\n        }\n        return newScore;\n      });\n      \n      // Add to recent matches for animation\n      setRecentCorrectMatches(prev => new Set([...Array.from(prev), athleteId]));\n      \n      // Remove from recent matches after animation\n      setTimeout(() => {\n        setRecentCorrectMatches(prev => {\n          const newSet = new Set(Array.from(prev));\n          newSet.delete(athleteId);\n          return newSet;\n        });\n      }, 1000);\n      \n      setFeedback({ athleteId, achievementId, correct: true });\n    } else {\n      setMatches(prev => ({\n        ...prev,\n        [athleteId]: 'incorrect',\n        [achievementId]: 'incorrect'\n      }));\n      setFeedback({ athleteId, achievementId, correct: false });\n      \n      // Clear incorrect state after showing feedback\n      setTimeout(() => {\n        setMatches(prev => {\n          const newMatches = { ...prev };\n          if (newMatches[athleteId] === 'incorrect') delete newMatches[athleteId];\n          if (newMatches[achievementId] === 'incorrect') delete newMatches[achievementId];\n          return newMatches;\n        });\n      }, 1500);\n    }\n    \n    setSelectedAthlete(null);\n    setSelectedAchievement(null);\n    \n    // Clear feedback after delay\n    setTimeout(() => setFeedback(null), 2000);\n  };\n\n  const resetGame = () => {\n    setSelectedAthlete(null);\n    setSelectedAchievement(null);\n    setMatches({});\n    setFeedback(null);\n    setScore(0);\n    setAttempts(0);\n    setShuffleSeed(Math.random());\n    setRecentCorrectMatches(new Set());\n  };\n\n  const correctMatches = Object.values(matches).filter(match => match === 'correct').length;\n  const isGameComplete = correctMatches === filteredData.length;\n  const accuracy = attempts > 0 ? Math.round((score / attempts) * 100) : 0;\n\n  // Sort matched items to bottom\n  const sortItems = (items: SportsAchievementPair[]) => {\n    const matched = items.filter(item => matches[item.id] === 'correct');\n    const unmatched = items.filter(item => matches[item.id] !== 'correct');\n    return [...unmatched, ...matched];\n  };\n\n  const sortedAthletes = sortItems(shuffledAthletes);\n  const sortedAchievements = sortItems(shuffledAchievements);\n\n  const getSportColor = (sport: string) => {\n    switch (sport) {\n      case \"Athletics\": return \"bg-blue-100 text-blue-800 border-blue-200\";\n      case \"Tennis\": return \"bg-green-100 text-green-800 border-green-200\";\n      case \"Cycling\": return \"bg-yellow-100 text-yellow-800 border-yellow-200\";\n      case \"Football\": return \"bg-red-100 text-red-800 border-red-200\";\n      case \"Rugby\": return \"bg-purple-100 text-purple-800 border-purple-200\";\n      case \"Cricket\": return \"bg-orange-100 text-orange-800 border-orange-200\";\n      case \"Rowing\": return \"bg-cyan-100 text-cyan-800 border-cyan-200\";\n      case \"Paralympics\": return \"bg-indigo-100 text-indigo-800 border-indigo-200\";\n      case \"Formula 1\": return \"bg-pink-100 text-pink-800 border-pink-200\";\n      case \"Golf\": return \"bg-emerald-100 text-emerald-800 border-emerald-200\";\n      case \"Horse Racing\": return \"bg-amber-100 text-amber-800 border-amber-200\";\n      default: return \"bg-gray-100 text-gray-800 border-gray-200\";\n    }\n  };\n\n  const getEraColor = (era: string) => {\n    switch (era) {\n      case \"Modern\": return \"bg-teal-100 text-teal-800 border-teal-200\";\n      case \"Classic\": return \"bg-rose-100 text-rose-800 border-rose-200\";\n      default: return \"bg-gray-100 text-gray-800 border-gray-200\";\n    }\n  };\n\n  return (\n    <Card className=\"w-full max-w-6xl mx-auto\">\n      <CardContent className=\"p-6\">\n        <div className=\"mb-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"flex items-center gap-2\">\n              <Trophy className=\"h-6 w-6 text-amber-600\" />\n              <h3 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                Sports Achievements Matching Game\n              </h3>\n            </div>\n            <Button onClick={resetGame} variant=\"outline\" className=\"flex items-center gap-2\">\n              <RotateCcw className=\"h-4 w-4\" />\n              Reset Game\n            </Button>\n          </div>\n\n          <div className=\"flex flex-wrap gap-4 mb-4\">\n            <Badge variant=\"outline\" className=\"text-lg px-3 py-1\">\n              Score: {score}/{filteredData.length}\n            </Badge>\n            <Badge variant=\"outline\" className=\"text-lg px-3 py-1\">\n              Attempts: {attempts}\n            </Badge>\n            <Badge variant=\"outline\" className=\"text-lg px-3 py-1\">\n              Accuracy: {accuracy}%\n            </Badge>\n          </div>\n\n          {/* Filters */}\n          <div className=\"mb-4 space-y-3\">\n            <div>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">Filter by sport:</p>\n              <div className=\"flex flex-wrap gap-2\">\n                {sports.map(sport => (\n                  <Button\n                    key={sport}\n                    onClick={() => setSelectedSport(sport)}\n                    variant={selectedSport === sport ? \"default\" : \"outline\"}\n                    size=\"sm\"\n                    className=\"text-xs\"\n                  >\n                    {sport}\n                  </Button>\n                ))}\n              </div>\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">Filter by era:</p>\n              <div className=\"flex flex-wrap gap-2\">\n                {eras.map(era => (\n                  <Button\n                    key={era}\n                    onClick={() => setSelectedEra(era)}\n                    variant={selectedEra === era ? \"default\" : \"outline\"}\n                    size=\"sm\"\n                    className=\"text-xs\"\n                  >\n                    {era}\n                  </Button>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <p className=\"text-gray-600 dark:text-gray-300\">\n            Match each British sports champion with their greatest achievement. Learn about legendary athletes who have made Britain proud.\n          </p>\n        </div>\n\n        {feedback && (\n          <div className={`mb-4 p-4 rounded-lg flex items-center gap-2 ${\n            feedback.correct \n              ? 'bg-green-100 text-green-800 border border-green-200' \n              : 'bg-red-100 text-red-800 border border-red-200'\n          }`}>\n            {feedback.correct ? (\n              <span className=\"text-2xl\">🎉</span>\n            ) : (\n              <X className=\"h-5 w-5 text-red-600\" />\n            )}\n            <span className=\"font-medium\">\n              {feedback.correct ? 'Outstanding achievement match! 🏆🎯' : 'Incorrect match. Try again!'}\n            </span>\n          </div>\n        )}\n\n        {isGameComplete && (\n          <div className=\"mb-6 p-6 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg text-center\">\n            <div className=\"flex items-center justify-center gap-2 mb-2\">\n              <Check className=\"h-6 w-6 text-green-600\" />\n              <h4 className=\"text-xl font-bold text-green-800 dark:text-green-200\">\n                Congratulations!\n              </h4>\n            </div>\n            <p className=\"text-green-700 dark:text-green-300\">\n              You've successfully matched all British sports champions with their achievements!\n            </p>\n            <p className=\"text-sm text-green-600 dark:text-green-400 mt-2\">\n              Final Score: {score}/{filteredData.length} | Accuracy: {accuracy}%\n            </p>\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Athletes Column */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4 text-center text-amber-700 dark:text-amber-300\">\n              British Sports Champions ({filteredData.length})\n            </h4>\n            <div className=\"space-y-2\">\n              {sortedAthletes.map((item) => {\n                const status = getButtonStatus(item.id, 'athlete');\n                return (\n                  <Button\n                    key={item.id}\n                    onClick={() => handleAthleteSelect(item.id)}\n                    disabled={status.isMatched}\n                    className={`\n                      w-full p-4 h-28 text-left transition-all duration-300 relative flex flex-col justify-center\n                      ${status.isMatched \n                        ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 border-green-300 dark:border-green-700' \n                        : status.isSelected\n                        ? 'bg-amber-100 dark:bg-amber-900/30 text-amber-800 dark:text-amber-200 border-amber-300 dark:border-amber-700'\n                        : status.isIncorrect\n                        ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 border-red-300 dark:border-red-700'\n                        : 'bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700'\n                      }\n                      ${status.isRecentMatch ? 'animate-pulse ring-2 ring-green-400' : ''}\n                    `}\n                    variant=\"outline\"\n                  >\n                    <div className=\"w-full\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <div className=\"font-semibold text-base truncate pr-2\">{item.athlete}</div>\n                      </div>\n                      <div className=\"flex gap-2\">\n                        <Badge variant=\"outline\" className={`text-xs ${getSportColor(item.sport)}`}>\n                          {item.sport}\n                        </Badge>\n                        <Badge variant=\"outline\" className={`text-xs ${getEraColor(item.era)}`}>\n                          {item.era}\n                        </Badge>\n                      </div>\n                    </div>\n                    {status.isMatched && (\n                      <Check className=\"absolute top-2 right-2 h-5 w-5 text-green-600\" />\n                    )}\n                  </Button>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Achievements Column */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4 text-center text-emerald-700 dark:text-emerald-300\">\n              Sports Achievements ({filteredData.length})\n            </h4>\n            <div className=\"space-y-2\">\n              {sortedAchievements.map((item) => {\n                const status = getButtonStatus(item.id, 'achievement');\n                return (\n                  <Button\n                    key={item.id}\n                    onClick={() => handleAchievementSelect(item.id)}\n                    disabled={status.isMatched}\n                    className={`\n                      w-full p-4 h-28 text-left transition-all duration-300 relative overflow-hidden\n                      ${status.isMatched \n                        ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 border-green-300 dark:border-green-700' \n                        : status.isSelected\n                        ? 'bg-emerald-100 dark:bg-emerald-900/30 text-emerald-800 dark:text-emerald-200 border-emerald-300 dark:border-emerald-700'\n                        : status.isIncorrect\n                        ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 border-red-300 dark:border-red-700'\n                        : 'bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700'\n                      }\n                      ${status.isRecentMatch ? 'animate-pulse ring-2 ring-green-400' : ''}\n                    `}\n                    variant=\"outline\"\n                  >\n                    <div className=\"w-full h-full flex items-center pr-8\">\n                      <div className=\"font-medium text-sm leading-normal\" style={{\n                        display: '-webkit-box',\n                        WebkitLineClamp: 2,\n                        WebkitBoxOrient: 'vertical',\n                        wordBreak: 'break-word',\n                        hyphens: 'auto',\n                        lineHeight: '1.4',\n                        maxHeight: 'none'\n                      }}>\n                        {item.achievement}\n                      </div>\n                    </div>\n                    {status.isMatched && (\n                      <Check className=\"absolute top-2 right-2 h-5 w-5 text-green-600\" />\n                    )}\n                  </Button>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}","size_bytes":20523},"client/src/components/sports-heroes-matching.tsx":{"content":"import { useState, useMemo } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { RotateCcw, Check, X, Trophy } from \"lucide-react\";\nimport { celebrateWithTheme, celebrateGameComplete } from \"@/lib/confetti\";\n\ninterface SportsHero {\n  id: string;\n  name: string;\n  sport: string;\n  achievement: string;\n}\n\nconst sportsHeroesData: SportsHero[] = [\n  {\n    id: \"1\",\n    name: \"Roger Bannister\",\n    sport: \"Athletics\",\n    achievement: \"First person to run a mile in under 4 minutes (1954)\"\n  },\n  {\n    id: \"2\",\n    name: \"Sir Mo Farah\",\n    sport: \"Athletics\", \n    achievement: \"Four-time Olympic gold medalist in 5000m and 10000m\"\n  },\n  {\n    id: \"3\",\n    name: \"Dame Kelly Holmes\",\n    sport: \"Athletics\",\n    achievement: \"Double Olympic gold medalist in 800m and 1500m\"\n  },\n  {\n    id: \"4\",\n    name: \"Sir Lewis Hamilton\",\n    sport: \"Formula 1\",\n    achievement: \"Seven-time Formula 1 World Champion\"\n  },\n  {\n    id: \"5\",\n    name: \"Damon Hill\",\n    sport: \"Formula 1\",\n    achievement: \"1996 Formula 1 World Champion\"\n  },\n  {\n    id: \"6\",\n    name: \"Jenson Button\",\n    sport: \"Formula 1\",\n    achievement: \"2009 Formula 1 World Champion\"\n  },\n  {\n    id: \"7\",\n    name: \"Sir Jackie Stewart\",\n    sport: \"Formula 1\",\n    achievement: \"Three-time Formula 1 World Champion (1969, 1971, 1973)\"\n  },\n  {\n    id: \"8\",\n    name: \"Sir Bobby Moore\",\n    sport: \"Football\",\n    achievement: \"Captain of England's 1966 World Cup winning team\"\n  },\n  {\n    id: \"9\",\n    name: \"Sir Ian Botham\",\n    sport: \"Cricket\",\n    achievement: \"All-rounder with 5,200 runs and 383 wickets in Tests\"\n  },\n  {\n    id: \"10\",\n    name: \"Torvill and Dean\",\n    sport: \"Ice Skating\",\n    achievement: \"Olympic ice dance champions with perfect score (1984)\"\n  },\n  {\n    id: \"11\",\n    name: \"Sir Steve Redgrave\",\n    sport: \"Rowing\",\n    achievement: \"Five consecutive Olympic gold medals (1984-2000)\"\n  },\n  {\n    id: \"12\",\n    name: \"Dame Sarah Storey\",\n    sport: \"Paralympic Cycling\",\n    achievement: \"Britain's most successful Paralympian with 17 gold medals\"\n  },\n  {\n    id: \"13\",\n    name: \"David Weir\",\n    sport: \"Paralympic Athletics\",\n    achievement: \"Six Paralympic gold medals in wheelchair racing\"\n  },\n  {\n    id: \"14\",\n    name: \"Ellie Simmonds\",\n    sport: \"Paralympic Swimming\",\n    achievement: \"Five Paralympic gold medals in swimming\"\n  },\n  {\n    id: \"15\",\n    name: \"Sir Francis Chichester\",\n    sport: \"Sailing\",\n    achievement: \"First person to sail solo around the world via Cape Horn\"\n  },\n  {\n    id: \"16\",\n    name: \"Sir Robin Knox-Johnston\",\n    sport: \"Sailing\",\n    achievement: \"First person to sail solo non-stop around the world\"\n  },\n  {\n    id: \"17\",\n    name: \"Dame Ellen MacArthur\",\n    sport: \"Sailing\",\n    achievement: \"Held world record for fastest solo sailing around the world\"\n  },\n  {\n    id: \"18\",\n    name: \"Sir Chris Hoy\",\n    sport: \"Cycling\",\n    achievement: \"Six-time Olympic cycling gold medalist\"\n  },\n  {\n    id: \"19\",\n    name: \"Sir Bradley Wiggins\",\n    sport: \"Cycling\",\n    achievement: \"First Briton to win Tour de France and eight Olympic medals\"\n  },\n  {\n    id: \"20\",\n    name: \"Dame Jessica Ennis-Hill\",\n    sport: \"Athletics\",\n    achievement: \"Olympic heptathlon champion and three-time world champion\"\n  },\n  {\n    id: \"21\",\n    name: \"Sir Andy Murray\",\n    sport: \"Tennis\",\n    achievement: \"Three-time Grand Slam champion and two-time Olympic gold medalist\"\n  }\n];\n\ninterface SportsHeroesMatchingProps {\n  userId: string;\n}\n\nexport default function SportsHeroesMatching({ userId }: SportsHeroesMatchingProps) {\n  const [selectedName, setSelectedName] = useState<string | null>(null);\n  const [selectedSport, setSelectedSport] = useState<string | null>(null);\n  const [selectedAchievement, setSelectedAchievement] = useState<string | null>(null);\n  const [matches, setMatches] = useState<Record<string, 'correct' | 'incorrect'>>({});\n  const [feedback, setFeedback] = useState<{ heroId: string; correct: boolean } | null>(null);\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [shuffleSeed, setShuffleSeed] = useState(Math.random());\n  const [recentCorrectMatches, setRecentCorrectMatches] = useState<Set<string>>(new Set());\n\n  // Fisher-Yates shuffle algorithm\n  const shuffleArray = (array: SportsHero[], seed: number) => {\n    const shuffled = [...array];\n    let random = seed;\n    \n    for (let i = shuffled.length - 1; i > 0; i--) {\n      random = (random * 9301 + 49297) % 233280;\n      const randomIndex = Math.floor((random / 233280) * (i + 1));\n      [shuffled[i], shuffled[randomIndex]] = [shuffled[randomIndex], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  // Create separate shuffled arrays for each column\n  const shuffledNames = useMemo(() => {\n    return shuffleArray(sportsHeroesData, shuffleSeed * 1000);\n  }, [shuffleSeed]);\n\n  const shuffledSports = useMemo(() => {\n    return shuffleArray(sportsHeroesData, shuffleSeed * 7309 + 1234);\n  }, [shuffleSeed]);\n\n  const shuffledAchievements = useMemo(() => {\n    return shuffleArray(sportsHeroesData, shuffleSeed * 3141 + 5678);\n  }, [shuffleSeed]);\n\n  // Helper functions\n  const getButtonStatus = (itemId: string, column: 'name' | 'sport' | 'achievement') => {\n    const matchState = matches[itemId];\n    const isSelected = \n      column === 'name' ? selectedName === itemId :\n      column === 'sport' ? selectedSport === itemId :\n      selectedAchievement === itemId;\n    const isMatched = matchState === 'correct';\n    const isIncorrect = matchState === 'incorrect';\n    const isRecentMatch = recentCorrectMatches.has(itemId);\n\n    return {\n      isSelected,\n      isMatched,\n      isIncorrect,\n      isRecentMatch\n    };\n  };\n\n  const handleNameSelect = (heroId: string) => {\n    if (matches[heroId] === 'correct') return;\n    \n    if (selectedName === heroId) {\n      setSelectedName(null);\n    } else {\n      setSelectedName(heroId);\n      if (selectedSport && selectedAchievement) {\n        checkMatch(heroId, selectedSport, selectedAchievement);\n      }\n    }\n  };\n\n  const handleSportSelect = (heroId: string) => {\n    if (matches[heroId] === 'correct') return;\n    \n    if (selectedSport === heroId) {\n      setSelectedSport(null);\n    } else {\n      setSelectedSport(heroId);\n      if (selectedName && selectedAchievement) {\n        checkMatch(selectedName, heroId, selectedAchievement);\n      }\n    }\n  };\n\n  const handleAchievementSelect = (heroId: string) => {\n    if (matches[heroId] === 'correct') return;\n    \n    if (selectedAchievement === heroId) {\n      setSelectedAchievement(null);\n    } else {\n      setSelectedAchievement(heroId);\n      if (selectedName && selectedSport) {\n        checkMatch(selectedName, selectedSport, heroId);\n      }\n    }\n  };\n\n  const checkMatch = (nameId: string, sportId: string, achievementId: string) => {\n    setAttempts(prev => prev + 1);\n    \n    const isCorrect = nameId === sportId && sportId === achievementId;\n    \n    if (isCorrect) {\n      // Celebrate individual correct match immediately\n      celebrateWithTheme('sports');\n      \n      setMatches(prev => ({\n        ...prev,\n        [nameId]: 'correct'\n      }));\n      setScore(prev => {\n        const newScore = prev + 1;\n        // Check if game is complete\n        if (newScore === sportsHeroesData.length) {\n          setTimeout(() => celebrateGameComplete(), 500);\n        }\n        return newScore;\n      });\n      \n      // Add to recent matches for animation\n      setRecentCorrectMatches(prev => new Set([...Array.from(prev), nameId]));\n      \n      // Remove from recent matches after animation\n      setTimeout(() => {\n        setRecentCorrectMatches(prev => {\n          const newSet = new Set(Array.from(prev));\n          newSet.delete(nameId);\n          return newSet;\n        });\n      }, 1000);\n      \n      setFeedback({ heroId: nameId, correct: true });\n    } else {\n      setMatches(prev => ({\n        ...prev,\n        [nameId]: 'incorrect',\n        [sportId]: 'incorrect',\n        [achievementId]: 'incorrect'\n      }));\n      setFeedback({ heroId: nameId, correct: false });\n      \n      // Clear incorrect state after showing feedback\n      setTimeout(() => {\n        setMatches(prev => {\n          const newMatches = { ...prev };\n          if (newMatches[nameId] === 'incorrect') delete newMatches[nameId];\n          if (newMatches[sportId] === 'incorrect') delete newMatches[sportId];\n          if (newMatches[achievementId] === 'incorrect') delete newMatches[achievementId];\n          return newMatches;\n        });\n      }, 1500);\n    }\n    \n    setSelectedName(null);\n    setSelectedSport(null);\n    setSelectedAchievement(null);\n    \n    // Clear feedback after delay\n    setTimeout(() => setFeedback(null), 2000);\n  };\n\n  const resetGame = () => {\n    setSelectedName(null);\n    setSelectedSport(null);\n    setSelectedAchievement(null);\n    setMatches({});\n    setFeedback(null);\n    setScore(0);\n    setAttempts(0);\n    setShuffleSeed(Math.random());\n    setRecentCorrectMatches(new Set());\n  };\n\n  const correctMatches = Object.values(matches).filter(match => match === 'correct').length;\n  const isGameComplete = correctMatches === sportsHeroesData.length;\n  const accuracy = attempts > 0 ? Math.round((score / attempts) * 100) : 0;\n\n  // Sort matched items to bottom\n  const sortItems = (items: SportsHero[]) => {\n    const matched = items.filter(item => matches[item.id] === 'correct');\n    const unmatched = items.filter(item => matches[item.id] !== 'correct');\n    return [...unmatched, ...matched];\n  };\n\n  const sortedNames = sortItems(shuffledNames);\n  const sortedSports = sortItems(shuffledSports);\n  const sortedAchievements = sortItems(shuffledAchievements);\n\n  const getSportColor = (sport: string) => {\n    switch (sport) {\n      case \"Athletics\": return \"bg-blue-100 text-blue-800 border-blue-200\";\n      case \"Tennis\": return \"bg-green-100 text-green-800 border-green-200\";\n      case \"Cycling\": return \"bg-yellow-100 text-yellow-800 border-yellow-200\";\n      case \"Football\": return \"bg-red-100 text-red-800 border-red-200\";\n      case \"Cricket\": return \"bg-orange-100 text-orange-800 border-orange-200\";\n      case \"Formula 1\": return \"bg-pink-100 text-pink-800 border-pink-200\";\n      case \"Rowing\": return \"bg-cyan-100 text-cyan-800 border-cyan-200\";\n      case \"Ice Skating\": return \"bg-purple-100 text-purple-800 border-purple-200\";\n      case \"Sailing\": return \"bg-teal-100 text-teal-800 border-teal-200\";\n      case \"Paralympic Cycling\": return \"bg-indigo-100 text-indigo-800 border-indigo-200\";\n      case \"Paralympic Athletics\": return \"bg-rose-100 text-rose-800 border-rose-200\";\n      case \"Paralympic Swimming\": return \"bg-emerald-100 text-emerald-800 border-emerald-200\";\n      default: return \"bg-gray-100 text-gray-800 border-gray-200\";\n    }\n  };\n\n  return (\n    <Card className=\"w-full max-w-7xl mx-auto\">\n      <CardContent className=\"p-6\">\n        <div className=\"mb-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"flex items-center gap-2\">\n              <Trophy className=\"h-6 w-6 text-amber-600\" />\n              <h3 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                Sports Heroes Triple Match Challenge\n              </h3>\n            </div>\n            <Button onClick={resetGame} variant=\"outline\" className=\"flex items-center gap-2\">\n              <RotateCcw className=\"h-4 w-4\" />\n              Reset Game\n            </Button>\n          </div>\n\n          <div className=\"flex flex-wrap gap-4 mb-4\">\n            <Badge variant=\"outline\" className=\"text-lg px-3 py-1\">\n              Score: {score}/{sportsHeroesData.length}\n            </Badge>\n            <Badge variant=\"outline\" className=\"text-lg px-3 py-1\">\n              Attempts: {attempts}\n            </Badge>\n            <Badge variant=\"outline\" className=\"text-lg px-3 py-1\">\n              Accuracy: {accuracy}%\n            </Badge>\n          </div>\n\n          <p className=\"text-gray-600 dark:text-gray-300 mb-4\">\n            Match each British sports hero with their sport and greatest achievement. Select one item from each column to make a complete match. All three must be correct!\n          </p>\n\n          <div className=\"bg-amber-50 dark:bg-amber-900/20 border border-amber-200 dark:border-amber-800 rounded-lg p-4 mb-4\">\n            <h4 className=\"font-semibold text-amber-800 dark:text-amber-200 mb-2\">How to Play:</h4>\n            <ul className=\"text-sm text-amber-700 dark:text-amber-300 space-y-1\">\n              <li>• Select one name from the first column</li>\n              <li>• Select the matching sport from the second column</li>\n              <li>• Select the matching achievement from the third column</li>\n              <li>• All three selections must match the same person to be correct</li>\n              <li>• Correct matches turn green and move to the bottom</li>\n            </ul>\n          </div>\n        </div>\n\n        {feedback && (\n          <div className={`mb-4 p-4 rounded-lg flex items-center gap-2 ${\n            feedback.correct \n              ? 'bg-green-100 text-green-800 border border-green-200' \n              : 'bg-red-100 text-red-800 border border-red-200'\n          }`}>\n            {feedback.correct ? (\n              <span className=\"text-2xl\">🎉</span>\n            ) : (\n              <X className=\"h-5 w-5 text-red-600\" />\n            )}\n            <span className=\"font-medium\">\n              {feedback.correct ? 'Amazing triple match! 🏆🎯' : 'Not a complete match. Try again!'}\n            </span>\n          </div>\n        )}\n\n        {isGameComplete && (\n          <div className=\"mb-6 p-6 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg text-center\">\n            <div className=\"flex items-center justify-center gap-2 mb-2\">\n              <Check className=\"h-6 w-6 text-green-600\" />\n              <h4 className=\"text-xl font-bold text-green-800 dark:text-green-200\">\n                Outstanding Performance!\n              </h4>\n            </div>\n            <p className=\"text-green-700 dark:text-green-300\">\n              You've successfully matched all British sports heroes with their sports and achievements!\n            </p>\n            <p className=\"text-sm text-green-600 dark:text-green-400 mt-2\">\n              Final Score: {score}/{sportsHeroesData.length} | Accuracy: {accuracy}%\n            </p>\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Names Column */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4 text-center text-blue-700 dark:text-blue-300\">\n              Sports Heroes ({sportsHeroesData.length})\n            </h4>\n            <div className=\"space-y-2\">\n              {sortedNames.map((hero) => {\n                const status = getButtonStatus(hero.id, 'name');\n                return (\n                  <Button\n                    key={hero.id}\n                    onClick={() => handleNameSelect(hero.id)}\n                    disabled={status.isMatched}\n                    className={`\n                      w-full p-4 h-16 text-left transition-all duration-300 relative flex items-center\n                      ${status.isMatched \n                        ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 border-green-300 dark:border-green-700' \n                        : status.isSelected\n                        ? 'bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200 border-blue-300 dark:border-blue-700'\n                        : status.isIncorrect\n                        ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 border-red-300 dark:border-red-700'\n                        : 'bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700'\n                      }\n                      ${status.isRecentMatch ? 'animate-pulse ring-2 ring-green-400' : ''}\n                    `}\n                    variant=\"outline\"\n                  >\n                    <div className=\"font-semibold text-base pr-8\">{hero.name}</div>\n                    {status.isMatched && (\n                      <Check className=\"absolute right-2 h-5 w-5 text-green-600\" />\n                    )}\n                  </Button>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Sports Column */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4 text-center text-purple-700 dark:text-purple-300\">\n              Sports ({sportsHeroesData.length})\n            </h4>\n            <div className=\"space-y-2\">\n              {sortedSports.map((hero) => {\n                const status = getButtonStatus(hero.id, 'sport');\n                return (\n                  <Button\n                    key={hero.id}\n                    onClick={() => handleSportSelect(hero.id)}\n                    disabled={status.isMatched}\n                    className={`\n                      w-full p-4 h-16 text-left transition-all duration-300 relative flex items-center justify-between\n                      ${status.isMatched \n                        ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 border-green-300 dark:border-green-700' \n                        : status.isSelected\n                        ? 'bg-purple-100 dark:bg-purple-900/30 text-purple-800 dark:text-purple-200 border-purple-300 dark:border-purple-700'\n                        : status.isIncorrect\n                        ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 border-red-300 dark:border-red-700'\n                        : 'bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700'\n                      }\n                      ${status.isRecentMatch ? 'animate-pulse ring-2 ring-green-400' : ''}\n                    `}\n                    variant=\"outline\"\n                  >\n                    <div className=\"flex items-center gap-2\">\n                      <div className=\"font-semibold text-base\">{hero.sport}</div>\n                      <Badge variant=\"outline\" className={`text-xs ${getSportColor(hero.sport)}`}>\n                        Sport\n                      </Badge>\n                    </div>\n                    {status.isMatched && (\n                      <Check className=\"h-5 w-5 text-green-600\" />\n                    )}\n                  </Button>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Achievements Column */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4 text-center text-emerald-700 dark:text-emerald-300\">\n              Achievements ({sportsHeroesData.length})\n            </h4>\n            <div className=\"space-y-2\">\n              {sortedAchievements.map((hero) => {\n                const status = getButtonStatus(hero.id, 'achievement');\n                return (\n                  <Button\n                    key={hero.id}\n                    onClick={() => handleAchievementSelect(hero.id)}\n                    disabled={status.isMatched}\n                    className={`\n                      w-full p-4 h-16 text-left transition-all duration-300 relative overflow-hidden\n                      ${status.isMatched \n                        ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 border-green-300 dark:border-green-700' \n                        : status.isSelected\n                        ? 'bg-emerald-100 dark:bg-emerald-900/30 text-emerald-800 dark:text-emerald-200 border-emerald-300 dark:border-emerald-700'\n                        : status.isIncorrect\n                        ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 border-red-300 dark:border-red-700'\n                        : 'bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700'\n                      }\n                      ${status.isRecentMatch ? 'animate-pulse ring-2 ring-green-400' : ''}\n                    `}\n                    variant=\"outline\"\n                  >\n                    <div className=\"w-full h-full flex items-center pr-8\">\n                      <div className=\"font-medium text-sm leading-tight\" style={{\n                        display: '-webkit-box',\n                        WebkitLineClamp: 2,\n                        WebkitBoxOrient: 'vertical',\n                        wordBreak: 'break-word',\n                        hyphens: 'auto',\n                        lineHeight: '1.3'\n                      }}>\n                        {hero.achievement}\n                      </div>\n                    </div>\n                    {status.isMatched && (\n                      <Check className=\"absolute top-2 right-2 h-5 w-5 text-green-600\" />\n                    )}\n                  </Button>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}","size_bytes":21035},"client/src/components/student-progress-stats.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { TrendingUp, BookOpen, Video, Clock, Trophy, Target, CheckCircle } from \"lucide-react\";\n\ninterface CategoryStats {\n  category: string;\n  displayName: string;\n  totalExercises: number;\n  completedExercises: number;\n  averageScore: number;\n  bestScore: number;\n  totalTimeSpent: number;\n  recentActivity: boolean;\n  progressPercentage: number;\n  icon: React.ReactNode;\n  color: string;\n}\n\ninterface StudentProgressStatsProps {\n  userId: string;\n}\n\nexport default function StudentProgressStats({ userId }: StudentProgressStatsProps) {\n  const { data: statsData, isLoading } = useQuery({\n    queryKey: ['/api/student-stats', userId],\n    enabled: !!userId\n  });\n\n  // Life in UK Test Categories with authentic content areas\n  const getProgressByCategory = (): CategoryStats[] => {\n    if (!statsData) return [];\n\n    const categories = [\n      {\n        category: 'british-history',\n        displayName: 'British History',\n        icon: <BookOpen className=\"h-4 w-4\" />,\n        color: 'bg-blue-500'\n      },\n      {\n        category: 'government-politics',\n        displayName: 'Government & Politics',\n        icon: <Trophy className=\"h-4 w-4\" />,\n        color: 'bg-purple-500'\n      },\n      {\n        category: 'culture-traditions',\n        displayName: 'Culture & Traditions',\n        icon: <Target className=\"h-4 w-4\" />,\n        color: 'bg-green-500'\n      },\n      {\n        category: 'geography-demographics',\n        displayName: 'Geography & Demographics',\n        icon: <Video className=\"h-4 w-4\" />,\n        color: 'bg-orange-500'\n      },\n      {\n        category: 'british-values',\n        displayName: 'British Values',\n        icon: <CheckCircle className=\"h-4 w-4\" />,\n        color: 'bg-red-500'\n      },\n      {\n        category: 'legal-system',\n        displayName: 'Legal System',\n        icon: <Clock className=\"h-4 w-4\" />,\n        color: 'bg-indigo-500'\n      }\n    ];\n\n    return categories.map(cat => {\n      const categoryData = statsData.categoryStats?.[cat.category] || {\n        totalExercises: 0,\n        completedExercises: 0,\n        averageScore: 0,\n        bestScore: 0,\n        totalTimeSpent: 0,\n        recentActivity: false\n      };\n\n      return {\n        ...cat,\n        ...categoryData,\n        progressPercentage: categoryData.totalExercises > 0 \n          ? Math.round((categoryData.completedExercises / categoryData.totalExercises) * 100) \n          : 0\n      };\n    });\n  };\n\n  const categoryStats = getProgressByCategory();\n  const overallProgress = categoryStats.length > 0 \n    ? Math.round(categoryStats.reduce((sum, cat) => sum + cat.progressPercentage, 0) / categoryStats.length)\n    : 0;\n\n  const totalExercisesCompleted = categoryStats.reduce((sum, cat) => sum + cat.completedExercises, 0);\n  const overallAverageScore = categoryStats.length > 0\n    ? Math.round(categoryStats.reduce((sum, cat) => sum + cat.averageScore, 0) / categoryStats.filter(cat => cat.averageScore > 0).length)\n    : 0;\n\n  if (isLoading) {\n    return (\n      <Card className=\"h-full\">\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <TrendingUp className=\"h-5 w-5 text-uk-blue\" />\n            Student Progress\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div className=\"animate-pulse space-y-3\">\n            {[1, 2, 3, 4, 5, 6].map(i => (\n              <div key={i} className=\"h-16 bg-gray-200 rounded-lg\"></div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"h-full\">\n      <CardHeader className=\"pb-3\">\n        <CardTitle className=\"flex items-center gap-2 text-lg\">\n          <TrendingUp className=\"h-5 w-5 text-uk-blue\" />\n          Student Progress Statistics\n        </CardTitle>\n        <div className=\"grid grid-cols-3 gap-4 mt-4\">\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-uk-blue\">{overallProgress}%</div>\n            <div className=\"text-xs text-gray-500\">Overall Progress</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-green-600\">{totalExercisesCompleted}</div>\n            <div className=\"text-xs text-gray-500\">Exercises Done</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-purple-600\">{overallAverageScore}%</div>\n            <div className=\"text-xs text-gray-500\">Average Score</div>\n          </div>\n        </div>\n      </CardHeader>\n      \n      <CardContent className=\"space-y-4 max-h-[500px] overflow-y-auto\">\n        {categoryStats.map((category) => (\n          <div key={category.category} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <div className=\"flex items-center gap-2\">\n                <div className={`p-1.5 rounded-full ${category.color} text-white`}>\n                  {category.icon}\n                </div>\n                <div>\n                  <h4 className=\"font-medium text-sm text-gray-900\">{category.displayName}</h4>\n                  <p className=\"text-xs text-gray-500\">\n                    {category.completedExercises}/{category.totalExercises} exercises completed\n                  </p>\n                </div>\n              </div>\n              <div className=\"text-right\">\n                <Badge variant={category.progressPercentage >= 75 ? \"default\" : \"secondary\"}>\n                  {category.progressPercentage}%\n                </Badge>\n                {category.recentActivity && (\n                  <div className=\"text-xs text-green-600 mt-1\">Recent activity</div>\n                )}\n              </div>\n            </div>\n            \n            <Progress value={category.progressPercentage} className=\"h-2 mb-2\" />\n            \n            <div className=\"grid grid-cols-2 gap-4 text-xs text-gray-600\">\n              <div className=\"flex justify-between\">\n                <span>Average Score:</span>\n                <span className=\"font-medium\">{category.averageScore}%</span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span>Best Score:</span>\n                <span className=\"font-medium text-green-600\">{category.bestScore}%</span>\n              </div>\n            </div>\n            \n            {category.totalTimeSpent > 0 && (\n              <div className=\"mt-2 text-xs text-gray-500 flex items-center gap-1\">\n                <Clock className=\"h-3 w-3\" />\n                {Math.round(category.totalTimeSpent / 60)} minutes studied\n              </div>\n            )}\n          </div>\n        ))}\n\n        {categoryStats.length === 0 && (\n          <div className=\"text-center py-8 text-gray-500\">\n            <BookOpen className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n            <p className=\"text-sm\">No progress data available yet.</p>\n            <p className=\"text-xs mt-1\">Start completing exercises to see your statistics!</p>\n          </div>\n        )}\n\n        {/* Study Recommendations */}\n        {categoryStats.length > 0 && (\n          <div className=\"mt-6 p-4 bg-blue-50 rounded-lg border border-blue-200\">\n            <h5 className=\"font-medium text-sm text-blue-900 mb-2 flex items-center gap-1\">\n              <Target className=\"h-4 w-4\" />\n              Study Recommendations\n            </h5>\n            <div className=\"space-y-2 text-xs text-blue-800\">\n              {categoryStats\n                .filter(cat => cat.progressPercentage < 75)\n                .slice(0, 2)\n                .map(cat => (\n                  <div key={cat.category} className=\"flex items-center gap-2\">\n                    <div className=\"w-2 h-2 bg-blue-400 rounded-full flex-shrink-0\"></div>\n                    <span>Focus on <strong>{cat.displayName}</strong> - {cat.progressPercentage}% complete</span>\n                  </div>\n                ))}\n              {categoryStats.every(cat => cat.progressPercentage >= 75) && (\n                <div className=\"text-green-700\">\n                  <CheckCircle className=\"h-4 w-4 inline mr-1\" />\n                  Excellent progress! You're ready for the test.\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}","size_bytes":8616},"client/src/components/study-stats.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { TrendingUp, ClipboardCheck } from \"lucide-react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface StudyStatsProps {\n  userId: string;\n}\n\nexport default function StudyStats({ userId }: StudyStatsProps) {\n  const { data: stats, isLoading } = useQuery({\n    queryKey: [\"/api/stats\", userId],\n  });\n\n  if (isLoading) {\n    return (\n      <Card>\n        <CardContent className=\"p-6\">\n          <div className=\"animate-pulse space-y-4\">\n            <div className=\"h-4 bg-gray-200 rounded w-3/4\"></div>\n            {[1, 2, 3, 4].map((i) => (\n              <div key={i} className=\"flex justify-between\">\n                <div className=\"h-3 bg-gray-200 rounded w-1/2\"></div>\n                <div className=\"h-3 bg-gray-200 rounded w-1/4\"></div>\n              </div>\n            ))}\n            <div className=\"h-8 bg-gray-200 rounded mt-4\"></div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"shadow-sm border border-gray-200 overflow-hidden\">\n      <CardHeader className=\"border-b border-gray-200\">\n        <CardTitle className=\"text-lg font-semibold text-gray-900 flex items-center\">\n          <TrendingUp className=\"text-success mr-3\" size={20} />\n          Study Statistics\n        </CardTitle>\n      </CardHeader>\n      \n      <CardContent className=\"p-6 space-y-4\">\n        <div className=\"flex items-center justify-between\">\n          <span className=\"text-sm text-gray-600\">Total Study Time</span>\n          <span className=\"font-semibold text-gray-900\">{stats?.totalStudyTime || \"0h 0m\"}</span>\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <span className=\"text-sm text-gray-600\">Exercises Completed</span>\n          <span className=\"font-semibold text-gray-900\">{stats?.exercisesCompleted || 0}</span>\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <span className=\"text-sm text-gray-600\">Average Score</span>\n          <span className=\"font-semibold text-success\">{stats?.averageScore || \"0%\"}</span>\n        </div>\n        <div className=\"flex items-center justify-between\">\n          <span className=\"text-sm text-gray-600\">Current Streak</span>\n          <span className=\"font-semibold text-warning\">{stats?.currentStreak || \"0 days\"}</span>\n        </div>\n        \n        <div className=\"pt-4 border-t border-gray-200\">\n          <Button className=\"w-full bg-uk-blue hover:bg-uk-blue/90 text-white\">\n            <ClipboardCheck className=\"mr-2\" size={16} />\n            Take Practice Test\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":2754},"client/src/components/timeline-section.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Clock, ChevronRight, Plus, Search, X } from \"lucide-react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { useState, useMemo, useRef } from \"react\";\n\nconst getCategoryColor = (category: string) => {\n  switch (category.toLowerCase()) {\n    case \"medieval\":\n      return \"bg-uk-blue\";\n    case \"legal\":\n      return \"bg-uk-red\";\n    case \"political\":\n      return \"bg-royal-purple\";\n    case \"royal\":\n      return \"bg-success\";\n    default:\n      return \"bg-gray-500\";\n  }\n};\n\nexport default function TimelineSection() {\n  const { data: events = [], isLoading } = useQuery({\n    queryKey: [\"/api/timeline\"],\n  });\n\n  // Search state\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const eventRefs = useRef<{ [key: string]: HTMLDivElement | null }>({});\n\n  // Sort events chronologically\n  const sortedEvents = (events as any[]).sort((a: any, b: any) => a.year - b.year);\n\n  // Search functionality - computed directly without state\n  const searchResults = useMemo(() => {\n    if (!searchQuery.trim()) {\n      return [];\n    }\n\n    const query = searchQuery.toLowerCase();\n    const results = (events as any[]).filter((event: any) => {\n      return (\n        event.title?.toLowerCase().includes(query) ||\n        event.description?.toLowerCase().includes(query) ||\n        event.details?.toLowerCase().includes(query) ||\n        event.keyFigures?.toLowerCase().includes(query) ||\n        event.category?.toLowerCase().includes(query) ||\n        event.year?.toString().includes(query) ||\n        event.timelineTopic?.toLowerCase().includes(query)\n      );\n    });\n\n    return results.sort((a: any, b: any) => a.year - b.year);\n  }, [searchQuery, events]);\n\n  const hasSearchQuery = searchQuery.trim().length > 0;\n\n  // Scroll to specific event\n  const scrollToEvent = (eventId: string) => {\n    const element = eventRefs.current[eventId];\n    if (element) {\n      element.scrollIntoView({ \n        behavior: 'smooth', \n        block: 'center' \n      });\n      // Highlight the event briefly\n      element.style.transform = 'scale(1.02)';\n      element.style.transition = 'transform 0.3s ease';\n      setTimeout(() => {\n        element.style.transform = 'scale(1)';\n      }, 1000);\n    }\n  };\n\n  // Clear search\n  const clearSearch = () => {\n    setSearchQuery(\"\");\n  };\n\n  if (isLoading) {\n    return (\n      <Card>\n        <CardContent className=\"p-6\">\n          <div className=\"animate-pulse\">\n            <div className=\"h-4 bg-gray-200 rounded w-1/4 mb-4\"></div>\n            <div className=\"space-y-8\">\n              {[1, 2, 3, 4].map((i) => (\n                <div key={i} className=\"flex items-center\">\n                  <div className=\"w-1/2 pr-8\">\n                    <div className=\"h-32 bg-gray-200 rounded-lg mb-4\"></div>\n                    <div className=\"h-4 bg-gray-200 rounded mb-2\"></div>\n                    <div className=\"h-3 bg-gray-200 rounded w-3/4\"></div>\n                  </div>\n                  <div className=\"w-8 h-8 bg-gray-200 rounded-full mx-4\"></div>\n                  <div className=\"w-1/2 pl-8\">\n                    <div className=\"h-4 bg-gray-200 rounded mb-2\"></div>\n                    <div className=\"h-3 bg-gray-200 rounded w-2/3\"></div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <section id=\"timeline\">\n      <Card className=\"shadow-sm border border-gray-200 overflow-hidden\">\n        <CardHeader className=\"border-b border-gray-200\">\n          <CardTitle className=\"text-xl font-semibold text-gray-900 flex items-center\">\n            <Clock className=\"text-royal-purple mr-3\" size={24} />\n            Historical Timeline\n          </CardTitle>\n          <p className=\"text-gray-600 mt-1\">Interactive chronology of key British historical events</p>\n          \n          {/* Search Bar */}\n          <div className=\"mt-4 relative\">\n            <div className=\"relative max-w-md\">\n              <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n              <Input\n                type=\"text\"\n                placeholder=\"Search events, years, personalities, documents...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"pl-10 pr-10\"\n                data-testid=\"timeline-search-input\"\n              />\n              {searchQuery && (\n                <button\n                  onClick={clearSearch}\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                  data-testid=\"clear-search-button\"\n                >\n                  <X size={16} />\n                </button>\n              )}\n            </div>\n          </div>\n        </CardHeader>\n\n        {/* Fixed Search Results Bar */}\n        {hasSearchQuery && searchResults.length > 0 && (\n          <div className=\"fixed top-0 left-0 right-0 z-50 bg-blue-50 border-b border-blue-200 px-6 py-4 shadow-lg\">\n            <div className=\"max-w-7xl mx-auto\">\n              <div className=\"flex items-center gap-4 mb-3\">\n                {/* Search Bar in Results */}\n                <div className=\"flex-1 relative\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\" size={16} />\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Continue searching timeline...\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    className=\"pl-10 pr-10 h-8 text-sm bg-white border-blue-300 focus:border-blue-500\"\n                    data-testid=\"timeline-search-input-fixed\"\n                  />\n                  {searchQuery && (\n                    <button\n                      onClick={clearSearch}\n                      className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                      data-testid=\"clear-search-button-fixed\"\n                    >\n                      <X size={14} />\n                    </button>\n                  )}\n                </div>\n                \n                <div className=\"text-sm text-blue-900 font-medium whitespace-nowrap\">\n                  {searchResults.length} result{searchResults.length !== 1 ? 's' : ''}\n                </div>\n                \n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  onClick={clearSearch}\n                  className=\"text-blue-700 hover:text-blue-900 h-8 w-8 p-0\"\n                  data-testid=\"close-search-results\"\n                >\n                  <X size={16} />\n                </Button>\n              </div>\n              \n              <div className=\"flex flex-wrap gap-2 max-h-24 overflow-y-auto\">\n                {searchResults.map((result: any) => (\n                  <Button\n                    key={result.id}\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => scrollToEvent(result.id)}\n                    className=\"text-xs bg-white hover:bg-blue-100 border-blue-300 text-blue-800 h-7\"\n                    data-testid={`search-result-${result.id}`}\n                  >\n                    {result.year} - {result.title}\n                  </Button>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* No Results Message */}\n        {hasSearchQuery && searchResults.length === 0 && (\n          <div className=\"bg-yellow-50 border-b border-yellow-200 px-6 py-3\">\n            <p className=\"text-sm text-yellow-800\">\n              No events found for \"{searchQuery}\". Try searching for years, names, or keywords.\n            </p>\n          </div>\n        )}\n        \n        <CardContent className={`p-8 ${hasSearchQuery && searchResults.length > 0 ? \"pt-32\" : \"\"}`}>\n          <div className=\"relative max-w-6xl mx-auto\">\n            {/* Central Timeline Line */}\n            <div className=\"absolute left-1/2 top-0 bottom-0 w-1 bg-gradient-to-b from-uk-blue via-royal-purple to-uk-red transform -translate-x-1/2 shadow-sm\"></div>\n            \n            {/* Timeline Events */}\n            <div className=\"space-y-12\">\n              {sortedEvents.map((event: any, index: number) => {\n                const isEven = index % 2 === 0;\n                return (\n                  <div \n                    key={event.id} \n                    ref={(el) => eventRefs.current[event.id] = el}\n                    className=\"relative\"\n                  >\n                    {/* Timeline Dot */}\n                    <div className={`absolute left-1/2 w-12 h-12 ${getCategoryColor(event.category)} rounded-full border-4 border-white shadow-lg flex items-center justify-center transform -translate-x-1/2 z-10`}>\n                      <span className=\"text-white font-bold text-xs\">{event.year}</span>\n                    </div>\n                    \n                    {/* Event Content */}\n                    <div className={`flex items-center ${isEven ? 'flex-row' : 'flex-row-reverse'}`}>\n                      {/* Content Side */}\n                      <div className={`w-1/2 ${isEven ? 'pr-8 text-right' : 'pl-8 text-left'}`}>\n                        <div className={`bg-white rounded-xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 border-l-4 ${getCategoryColor(event.category).replace('bg-', 'border-')} group`}>\n                          <div className={`flex items-center ${isEven ? 'justify-end' : 'justify-start'} mb-3`}>\n                            <Badge \n                              className={`${getCategoryColor(event.category)} text-white text-sm font-medium px-3 py-1`}\n                            >\n                              {event.year} • {event.category}\n                            </Badge>\n                          </div>\n                          \n                          <h3 className=\"text-xl font-bold text-green-700 mb-3 group-hover:text-green-600 transition-colors\">\n                            {event.title}\n                          </h3>\n                          \n                          <p className=\"text-gray-700 mb-4 leading-relaxed\">\n                            {event.description}\n                          </p>\n                          \n                          {event.details && (\n                            <div className=\"bg-gray-50 rounded-lg p-4 mb-4 border border-gray-200\">\n                              <p className=\"text-sm text-gray-600 font-medium mb-2\">Key Details:</p>\n                              <p className=\"text-sm text-gray-700 leading-relaxed\">{event.details}</p>\n                            </div>\n                          )}\n                          \n                          {event.keyFigures && (\n                            <div className=\"flex items-center text-sm text-gray-500 mb-3\">\n                              <span className=\"font-medium\">Key Figures:</span>\n                              <span className=\"ml-2\">{event.keyFigures}</span>\n                            </div>\n                          )}\n                          \n                          <div className=\"flex items-center text-xs text-gray-400\">\n                            <Clock className=\"h-3 w-3 mr-1\" />\n                            <span>Importance Level: {event.importance}/5</span>\n                          </div>\n                        </div>\n                      </div>\n                      \n                      {/* Image Side */}\n                      <div className={`w-1/2 ${isEven ? 'pl-8' : 'pr-8'}`}>\n                        <div className=\"relative\">\n                          {event.eventImage ? (\n                            <div className=\"bg-white rounded-xl shadow-lg overflow-hidden group\">\n                              <img \n                                src={event.eventImage} \n                                alt={event.imageDescription || event.title}\n                                className=\"w-full h-56 object-cover group-hover:scale-105 transition-transform duration-300\"\n                              />\n                              {event.imageDescription && (\n                                <div className=\"p-4\">\n                                  <p className=\"text-sm text-gray-600 font-medium\">{event.imageDescription}</p>\n                                </div>\n                              )}\n                            </div>\n                          ) : (\n                            // Fallback historical illustration\n                            <div className=\"bg-gradient-to-br from-gray-100 to-gray-200 rounded-xl h-56 flex items-center justify-center shadow-lg\">\n                              <div className=\"text-center\">\n                                <Clock className=\"h-12 w-12 text-gray-400 mx-auto mb-3\" />\n                                <p className=\"text-gray-500 font-medium\">{event.year}</p>\n                                <p className=\"text-gray-400 text-sm\">{event.category}</p>\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n            \n            {/* Timeline End Marker */}\n            <div className=\"absolute left-1/2 bottom-0 w-6 h-6 bg-gradient-to-r from-uk-blue to-uk-red rounded-full border-4 border-white shadow-lg transform -translate-x-1/2\"></div>\n          </div>\n          \n          <div className=\"mt-12 text-center\">\n            <Button variant=\"outline\" className=\"text-uk-blue border-uk-blue hover:bg-uk-blue hover:text-white font-medium\">\n              <Plus className=\"mr-2\" size={16} />\n              View Full Interactive Timeline\n            </Button>\n          </div>\n        </CardContent>\n      </Card>\n    </section>\n  );\n}","size_bytes":14233},"client/src/components/traditional-foods-matching.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Shuffle, RotateCcw, Utensils, Filter, ChefHat } from \"lucide-react\";\nimport { celebrateWithTheme } from \"@/lib/confetti\";\n\ninterface FoodData {\n  id: string;\n  dish: string;\n  region: string;\n  ingredients: string;\n  category: 'Main Course' | 'Dessert' | 'Snack' | 'Breakfast' | 'Bread' | 'Soup' | 'Pudding' | 'Pastry';\n  country: 'England' | 'Scotland' | 'Wales' | 'Northern Ireland' | 'UK Wide';\n  type: 'Meat' | 'Fish' | 'Vegetarian' | 'Sweet' | 'Baked' | 'Fried' | 'Boiled' | 'Roasted';\n  description: string;\n}\n\nconst traditionalFoodsData: FoodData[] = [\n  // England\n  {\n    id: \"1\",\n    dish: \"Fish and Chips\",\n    region: \"England (National)\",\n    ingredients: \"White fish (cod/haddock), potatoes, batter, mushy peas, tartar sauce\",\n    category: \"Main Course\",\n    country: \"England\",\n    type: \"Fish\",\n    description: \"Britain's national dish - battered fish with thick-cut chips, traditionally wrapped in newspaper\"\n  },\n  {\n    id: \"2\",\n    dish: \"Yorkshire Pudding\",\n    region: \"Yorkshire\",\n    ingredients: \"Eggs, flour, milk, beef dripping, salt\",\n    category: \"Main Course\",\n    country: \"England\",\n    type: \"Baked\",\n    description: \"Light, airy batter pudding traditionally served with roast beef and gravy\"\n  },\n  {\n    id: \"3\",\n    dish: \"Cornish Pasty\",\n    region: \"Cornwall\",\n    ingredients: \"Beef, potato, swede, onion, pastry, seasoning\",\n    category: \"Main Course\",\n    country: \"England\",\n    type: \"Pastry\",\n    description: \"Protected geographical status pastry filled with beef and vegetables, crimped on one side\"\n  },\n  {\n    id: \"4\",\n    dish: \"Bangers and Mash\",\n    region: \"England (National)\",\n    ingredients: \"Pork sausages, mashed potatoes, onion gravy\",\n    category: \"Main Course\",\n    country: \"England\",\n    type: \"Meat\",\n    description: \"Traditional comfort food of sausages with creamy mashed potatoes and rich onion gravy\"\n  },\n  {\n    id: \"5\",\n    dish: \"Shepherd's Pie\",\n    region: \"England (National)\",\n    ingredients: \"Minced lamb, onions, carrots, peas, mashed potatoes, Worcestershire sauce\",\n    category: \"Main Course\",\n    country: \"England\",\n    type: \"Meat\",\n    description: \"Minced lamb topped with mashed potato and baked until golden (Cottage Pie uses beef)\"\n  },\n  {\n    id: \"6\",\n    dish: \"Spotted Dick\",\n    region: \"England (National)\",\n    ingredients: \"Suet, flour, dried fruit, milk, custard\",\n    category: \"Dessert\",\n    country: \"England\",\n    type: \"Sweet\",\n    description: \"Traditional steamed pudding with dried fruit, served with custard\"\n  },\n  {\n    id: \"7\",\n    dish: \"Eton Mess\",\n    region: \"Berkshire\",\n    ingredients: \"Strawberries, meringue, whipped cream\",\n    category: \"Dessert\",\n    country: \"England\",\n    type: \"Sweet\",\n    description: \"Dessert of broken meringue, cream and strawberries, originated at Eton College\"\n  },\n  {\n    id: \"8\",\n    dish: \"Full English Breakfast\",\n    region: \"England (National)\",\n    ingredients: \"Bacon, eggs, sausages, black pudding, baked beans, grilled tomatoes, toast, mushrooms\",\n    category: \"Breakfast\",\n    country: \"England\",\n    type: \"Meat\",\n    description: \"Traditional hearty breakfast with multiple cooked components, also called 'fry-up'\"\n  },\n\n  // Scotland\n  {\n    id: \"9\",\n    dish: \"Haggis\",\n    region: \"Scotland (National)\",\n    ingredients: \"Sheep's heart, liver, lungs, oatmeal, suet, onions, spices, sheep's stomach\",\n    category: \"Main Course\",\n    country: \"Scotland\",\n    type: \"Meat\",\n    description: \"Scotland's national dish - savory pudding containing sheep's offal, traditionally served with neeps and tatties\"\n  },\n  {\n    id: \"10\",\n    dish: \"Cullen Skink\",\n    region: \"Aberdeenshire\",\n    ingredients: \"Smoked haddock, potatoes, onions, milk, butter\",\n    category: \"Soup\",\n    country: \"Scotland\",\n    type: \"Fish\",\n    description: \"Thick Scottish soup made with smoked haddock, potatoes and onions\"\n  },\n  {\n    id: \"11\",\n    dish: \"Shortbread\",\n    region: \"Scotland (National)\",\n    ingredients: \"Butter, sugar, flour\",\n    category: \"Snack\",\n    country: \"Scotland\",\n    type: \"Baked\",\n    description: \"Traditional Scottish biscuit made with just three ingredients, often shaped in rounds\"\n  },\n  {\n    id: \"12\",\n    dish: \"Tablet\",\n    region: \"Scotland (National)\",\n    ingredients: \"Sugar, condensed milk, butter, vanilla\",\n    category: \"Dessert\",\n    country: \"Scotland\",\n    type: \"Sweet\",\n    description: \"Scottish confection similar to fudge but with a grainier texture and sweeter taste\"\n  },\n  {\n    id: \"13\",\n    dish: \"Neeps and Tatties\",\n    region: \"Scotland (National)\",\n    ingredients: \"Swede (neeps), potatoes (tatties), butter, black pepper\",\n    category: \"Main Course\",\n    country: \"Scotland\",\n    type: \"Vegetarian\",\n    description: \"Traditional Scottish side dish of mashed swede and potatoes, served with haggis\"\n  },\n  {\n    id: \"14\",\n    dish: \"Cock-a-Leekie Soup\",\n    region: \"Scotland (National)\",\n    ingredients: \"Chicken, leeks, rice or barley, prunes, parsley\",\n    category: \"Soup\",\n    country: \"Scotland\",\n    type: \"Meat\",\n    description: \"Traditional Scottish soup with chicken, leeks and sometimes prunes\"\n  },\n\n  // Wales\n  {\n    id: \"15\",\n    dish: \"Welsh Rarebit\",\n    region: \"Wales (National)\",\n    ingredients: \"Cheese sauce, ale, mustard, Worcestershire sauce, bread\",\n    category: \"Snack\",\n    country: \"Wales\",\n    type: \"Vegetarian\",\n    description: \"Savory cheese sauce on toast, grilled until golden and bubbly\"\n  },\n  {\n    id: \"16\",\n    dish: \"Cawl\",\n    region: \"Wales (National)\",\n    ingredients: \"Lamb or beef, leeks, potatoes, carrots, swede, parsley\",\n    category: \"Soup\",\n    country: \"Wales\",\n    type: \"Meat\",\n    description: \"Wales' national soup - hearty broth with meat and vegetables, traditionally eaten in two courses\"\n  },\n  {\n    id: \"17\",\n    dish: \"Bara Brith\",\n    region: \"Wales (National)\",\n    ingredients: \"Mixed dried fruit, tea, flour, eggs, butter, mixed spice\",\n    category: \"Bread\",\n    country: \"Wales\",\n    type: \"Sweet\",\n    description: \"Welsh fruit bread ('speckled bread') made with tea-soaked dried fruit\"\n  },\n  {\n    id: \"18\",\n    dish: \"Welsh Cakes\",\n    region: \"Wales (National)\",\n    ingredients: \"Flour, butter, sugar, eggs, sultanas, milk, baking powder\",\n    category: \"Snack\",\n    country: \"Wales\",\n    type: \"Baked\",\n    description: \"Small round cakes cooked on a griddle, served warm with butter and sugar\"\n  },\n  {\n    id: \"19\",\n    dish: \"Laverbread\",\n    region: \"Pembrokeshire/Gower\",\n    ingredients: \"Seaweed (laver), oatmeal, bacon fat\",\n    category: \"Breakfast\",\n    country: \"Wales\",\n    type: \"Vegetarian\",\n    description: \"Welsh delicacy made from seaweed, often served with bacon and cockles\"\n  },\n\n  // Northern Ireland\n  {\n    id: \"20\",\n    dish: \"Ulster Fry\",\n    region: \"Northern Ireland (National)\",\n    ingredients: \"Bacon, eggs, sausages, black pudding, white pudding, soda bread, potato bread\",\n    category: \"Breakfast\",\n    country: \"Northern Ireland\",\n    type: \"Meat\",\n    description: \"Northern Irish version of full breakfast including soda bread and potato bread\"\n  },\n  {\n    id: \"21\",\n    dish: \"Champ\",\n    region: \"Northern Ireland (National)\",\n    ingredients: \"Potatoes, spring onions, milk, butter, salt\",\n    category: \"Main Course\",\n    country: \"Northern Ireland\",\n    type: \"Vegetarian\",\n    description: \"Traditional mashed potato dish with spring onions, served with a well of butter\"\n  }\n];\n\ninterface TraditionalFoodsMatchingProps {\n  userId: string;\n}\n\nexport default function TraditionalFoodsMatching({ userId }: TraditionalFoodsMatchingProps) {\n  const [dishes, setDishes] = useState<FoodData[]>([]);\n  const [regions, setRegions] = useState<FoodData[]>([]);\n  const [ingredients, setIngredients] = useState<FoodData[]>([]);\n  const [selectedDish, setSelectedDish] = useState<FoodData | null>(null);\n  const [selectedRegion, setSelectedRegion] = useState<FoodData | null>(null);\n  const [selectedIngredient, setSelectedIngredient] = useState<FoodData | null>(null);\n  const [matchedItems, setMatchedItems] = useState<Set<string>>(new Set());\n  const [incorrectAttempts, setIncorrectAttempts] = useState<Set<string>>(new Set());\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [filterCountry, setFilterCountry] = useState<string>('all');\n  const [filterCategory, setFilterCategory] = useState<string>('all');\n  const [gameComplete, setGameComplete] = useState(false);\n  const [showReference, setShowReference] = useState(false);\n\n  const countries = ['all', 'England', 'Scotland', 'Wales', 'Northern Ireland', 'UK Wide'];\n  const categories = ['all', 'Main Course', 'Dessert', 'Snack', 'Breakfast', 'Bread', 'Soup', 'Pudding', 'Pastry'];\n\n  const getFilteredData = () => {\n    let filtered = traditionalFoodsData;\n    \n    if (filterCountry !== 'all') {\n      filtered = filtered.filter(item => item.country === filterCountry);\n    }\n    \n    if (filterCategory !== 'all') {\n      filtered = filtered.filter(item => item.category === filterCategory);\n    }\n    \n    return filtered;\n  };\n\n  const shuffleArray = <T,>(array: T[]): T[] => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  const initializeGame = () => {\n    const filteredData = getFilteredData();\n    setDishes(shuffleArray(filteredData));\n    setRegions(shuffleArray(filteredData));\n    setIngredients(shuffleArray(filteredData));\n    setMatchedItems(new Set());\n    setIncorrectAttempts(new Set());\n    setSelectedDish(null);\n    setSelectedRegion(null);\n    setSelectedIngredient(null);\n    setScore(0);\n    setAttempts(0);\n    setGameComplete(false);\n  };\n\n  useEffect(() => {\n    initializeGame();\n  }, [filterCountry, filterCategory]);\n\n  const handleDishClick = (dish: FoodData) => {\n    if (matchedItems.has(dish.id)) return;\n    setSelectedDish(dish);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handleRegionClick = (region: FoodData) => {\n    if (matchedItems.has(region.id)) return;\n    setSelectedRegion(region);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handleIngredientClick = (ingredient: FoodData) => {\n    if (matchedItems.has(ingredient.id)) return;\n    setSelectedIngredient(ingredient);\n    setIncorrectAttempts(new Set());\n  };\n\n  useEffect(() => {\n    if (selectedDish && selectedRegion && selectedIngredient) {\n      setAttempts(prev => prev + 1);\n      \n      if (selectedDish.id === selectedRegion.id && \n          selectedRegion.id === selectedIngredient.id) {\n        // Correct match!\n        celebrateWithTheme('general');\n        setMatchedItems(prev => new Set(Array.from(prev).concat(selectedDish.id)));\n        setScore(prev => prev + 1);\n        \n        // Check if game is complete\n        const filteredData = getFilteredData();\n        if (matchedItems.size + 1 >= filteredData.length) {\n          setGameComplete(true);\n          setTimeout(() => celebrateWithTheme('general'), 500);\n        }\n      } else {\n        // Incorrect match\n        const incorrectIds = new Set([selectedDish.id, selectedRegion.id, selectedIngredient.id]);\n        setIncorrectAttempts(incorrectIds);\n        \n        setTimeout(() => {\n          setIncorrectAttempts(new Set());\n        }, 3000);\n      }\n      \n      // Reset selections\n      setTimeout(() => {\n        setSelectedDish(null);\n        setSelectedRegion(null);\n        setSelectedIngredient(null);\n      }, incorrectAttempts.size > 0 ? 3000 : 1000);\n    }\n  }, [selectedDish, selectedRegion, selectedIngredient, matchedItems.size]);\n\n  const getButtonStyle = (item: FoodData, isSelected: boolean) => {\n    const baseClasses = \"w-full text-left p-3 rounded-lg border transition-all duration-300 hover:shadow-md\";\n    const isMatched = matchedItems.has(item.id);\n    const isIncorrect = incorrectAttempts.has(item.id);\n    \n    if (isMatched) {\n      return `${baseClasses} bg-green-100 border-green-300 text-green-800 cursor-default shadow-sm`;\n    }\n    \n    if (isIncorrect) {\n      return `${baseClasses} bg-red-100 border-red-300 text-red-800 animate-pulse cursor-pointer`;\n    }\n    \n    if (isSelected) {\n      return `${baseClasses} bg-orange-100 border-orange-400 text-orange-800 shadow-lg cursor-pointer`;\n    }\n    \n    return `${baseClasses} bg-white border-gray-200 text-gray-800 hover:bg-gray-50 cursor-pointer`;\n  };\n\n  const getCountryColor = (country: string) => {\n    const colors = {\n      England: 'bg-red-100 text-red-800',\n      Scotland: 'bg-blue-100 text-blue-800',\n      Wales: 'bg-green-100 text-green-800',\n      'Northern Ireland': 'bg-orange-100 text-orange-800',\n      'UK Wide': 'bg-purple-100 text-purple-800'\n    };\n    return colors[country as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  const getCategoryColor = (category: string) => {\n    const colors = {\n      'Main Course': 'bg-blue-100 text-blue-800',\n      'Dessert': 'bg-pink-100 text-pink-800',\n      'Snack': 'bg-yellow-100 text-yellow-800',\n      'Breakfast': 'bg-orange-100 text-orange-800',\n      'Bread': 'bg-amber-100 text-amber-800',\n      'Soup': 'bg-teal-100 text-teal-800',\n      'Pudding': 'bg-purple-100 text-purple-800',\n      'Pastry': 'bg-indigo-100 text-indigo-800'\n    };\n    return colors[category as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  const accuracy = attempts > 0 ? Math.round((score / attempts) * 100) : 0;\n  const filteredData = getFilteredData();\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Game Header & Stats */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <div className=\"flex items-center gap-3\">\n          <Utensils className=\"h-6 w-6 text-orange-600\" />\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-900\">Traditional Foods Triple Match</h3>\n            <p className=\"text-sm text-gray-600\">Match traditional dishes with their regions and ingredients</p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center gap-4\">\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-orange-600\">{score}/{filteredData.length}</div>\n            <div className=\"text-xs text-gray-500\">Matches</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-green-600\">{accuracy}%</div>\n            <div className=\"text-xs text-gray-500\">Accuracy</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"space-y-3\">\n        <div className=\"flex flex-wrap gap-2 items-center\">\n          <Filter className=\"h-4 w-4 text-gray-500\" />\n          <span className=\"text-sm font-medium text-gray-700\">Country:</span>\n          {countries.map(country => (\n            <Badge\n              key={country}\n              variant={filterCountry === country ? \"default\" : \"outline\"}\n              className={`cursor-pointer transition-colors ${\n                filterCountry === country \n                  ? 'bg-orange-600 text-white' \n                  : 'hover:bg-orange-100'\n              }`}\n              onClick={() => setFilterCountry(country)}\n            >\n              {country === 'all' ? 'All Countries' : country}\n            </Badge>\n          ))}\n        </div>\n        \n        <div className=\"flex flex-wrap gap-2 items-center\">\n          <Filter className=\"h-4 w-4 text-gray-500\" />\n          <span className=\"text-sm font-medium text-gray-700\">Category:</span>\n          {categories.map(category => (\n            <Badge\n              key={category}\n              variant={filterCategory === category ? \"default\" : \"outline\"}\n              className={`cursor-pointer transition-colors ${\n                filterCategory === category \n                  ? 'bg-blue-600 text-white' \n                  : 'hover:bg-blue-100'\n              }`}\n              onClick={() => setFilterCategory(category)}\n            >\n              {category === 'all' ? 'All Categories' : category}\n            </Badge>\n          ))}\n        </div>\n      </div>\n\n      {/* Game Controls */}\n      <div className=\"flex gap-2\">\n        <Button\n          onClick={initializeGame}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <Shuffle className=\"h-4 w-4\" />\n          Shuffle\n        </Button>\n        <Button\n          onClick={initializeGame}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <RotateCcw className=\"h-4 w-4\" />\n          Reset\n        </Button>\n        <Button\n          onClick={() => setShowReference(!showReference)}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <ChefHat className=\"h-4 w-4\" />\n          {showReference ? 'Hide' : 'Show'} Food Reference\n        </Button>\n      </div>\n\n      {gameComplete && (\n        <Card className=\"border-green-200 bg-green-50\">\n          <CardContent className=\"p-4 text-center\">\n            <h3 className=\"text-lg font-semibold text-green-800 mb-2\">🍽️ Culinary Mastery Achieved!</h3>\n            <p className=\"text-green-700\">\n              You've successfully matched all {filteredData.length} traditional dishes with their regions and ingredients!\n            </p>\n            <p className=\"text-sm text-green-600 mt-1\">\n              Final Score: {score}/{filteredData.length} ({accuracy}% accuracy)\n            </p>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Food Reference Card */}\n      {showReference && (\n        <Card className=\"bg-orange-50 border-orange-200\">\n          <CardHeader>\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <ChefHat className=\"h-4 w-4 text-orange-600\" />\n              Traditional British Foods Reference Guide\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 text-sm\">\n              {filteredData.map((food) => (\n                <div key={`ref-${food.id}`} className=\"p-3 bg-white rounded border\">\n                  <div className=\"font-semibold text-orange-800\">{food.dish}</div>\n                  <div className=\"text-gray-600 mt-1 text-xs leading-relaxed\">{food.description}</div>\n                  <div className=\"flex gap-1 mt-2 flex-wrap\">\n                    <Badge className={`text-xs ${getCountryColor(food.country)}`}>\n                      {food.country}\n                    </Badge>\n                    <Badge className=\"text-xs bg-gray-100 text-gray-800\">\n                      {food.region}\n                    </Badge>\n                    <Badge className={`text-xs ${getCategoryColor(food.category)}`}>\n                      {food.category}\n                    </Badge>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Matching Game Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Dishes Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Utensils className=\"h-4 w-4 text-orange-600\" />\n              Traditional Dishes ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {dishes.map((dish) => (\n              <div key={`dish-${dish.id}`} className=\"space-y-1\">\n                <button\n                  onClick={() => handleDishClick(dish)}\n                  className={getButtonStyle(dish, selectedDish?.id === dish.id)}\n                  disabled={matchedItems.has(dish.id)}\n                >\n                  <div className=\"font-medium text-sm leading-relaxed\">{dish.dish}</div>\n                  <div className=\"flex gap-1 mt-1 flex-wrap\">\n                    <Badge className={`text-xs ${getCountryColor(dish.country)}`}>\n                      {dish.country}\n                    </Badge>\n                    <Badge className={`text-xs ${getCategoryColor(dish.category)}`}>\n                      {dish.category}\n                    </Badge>\n                  </div>\n                </button>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Regions Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Utensils className=\"h-4 w-4 text-green-600\" />\n              Regions ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {regions.map((region) => (\n              <button\n                key={`region-${region.id}`}\n                onClick={() => handleRegionClick(region)}\n                className={getButtonStyle(region, selectedRegion?.id === region.id)}\n                disabled={matchedItems.has(region.id)}\n              >\n                <div className=\"font-bold text-center text-sm\">\n                  {region.region}\n                </div>\n                <Badge className={`text-xs w-full justify-center mt-1 ${getCountryColor(region.country)}`}>\n                  {region.country}\n                </Badge>\n              </button>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Ingredients Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <ChefHat className=\"h-4 w-4 text-purple-600\" />\n              Ingredients ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {ingredients.map((ingredient) => (\n              <button\n                key={`ingredient-${ingredient.id}`}\n                onClick={() => handleIngredientClick(ingredient)}\n                className={getButtonStyle(ingredient, selectedIngredient?.id === ingredient.id)}\n                disabled={matchedItems.has(ingredient.id)}\n              >\n                <div className=\"font-medium text-sm leading-relaxed\">\n                  {ingredient.ingredients}\n                </div>\n              </button>\n            ))}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Instructions */}\n      <Card className=\"bg-orange-50 border-orange-200\">\n        <CardContent className=\"p-4\">\n          <h4 className=\"font-semibold text-orange-900 mb-2\">How to Play:</h4>\n          <ul className=\"text-sm text-orange-800 space-y-1\">\n            <li>• Select one dish, one region, and one set of ingredients that all belong together</li>\n            <li>• All three selections must match the same traditional food</li>\n            <li>• Correct matches turn green and celebrate with confetti</li>\n            <li>• Use country and category filters to focus on specific regions or food types</li>\n            <li>• Click \"Show Food Reference\" for comprehensive information about each dish</li>\n            <li>• Learn about British culinary heritage from fish and chips to haggis!</li>\n          </ul>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":23615},"client/src/components/true-false-game.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Check, X, RotateCcw, CheckCircle, XCircle, Trophy } from \"lucide-react\";\nimport { celebrateWithTheme, celebrateGameComplete } from \"@/lib/confetti\";\n\ninterface TrueFalseQuestion {\n  id: string;\n  statement: string;\n  isTrue: boolean;\n  explanation: string;\n  category: string;\n}\n\nconst trueFalseQuestions: TrueFalseQuestion[] = [\n  {\n    id: \"1\",\n    statement: \"The UK has been a member of the European Union since 1973.\",\n    isTrue: false,\n    explanation: \"The UK joined the European Economic Community (EEC) in 1973, which later became the EU. However, the UK left the EU in 2020 following Brexit.\",\n    category: \"Politics\"\n  },\n  {\n    id: \"2\", \n    statement: \"You must be 18 or over to vote in UK general elections.\",\n    isTrue: true,\n    explanation: \"The minimum voting age for UK general elections is 18. This applies to elections for the House of Commons.\",\n    category: \"Politics\"\n  },\n  {\n    id: \"3\",\n    statement: \"The Union Flag is made up of three crosses representing England, Scotland, and Wales.\",\n    isTrue: false,\n    explanation: \"The Union Flag combines the crosses of England (St George), Scotland (St Andrew), and Northern Ireland (St Patrick). Wales is not represented as it was already united with England when the flag was created.\",\n    category: \"History\"\n  },\n  {\n    id: \"4\",\n    statement: \"The Queen's official birthday is celebrated in June with Trooping the Colour.\",\n    isTrue: true,\n    explanation: \"Although the monarch's actual birthday varies, the official birthday is celebrated on the second Saturday in June with the Trooping the Colour ceremony.\",\n    category: \"Traditions\"\n  },\n  {\n    id: \"5\",\n    statement: \"Scotland has its own banknotes which are legal tender throughout the UK.\",\n    isTrue: true,\n    explanation: \"Scottish banks issue their own banknotes which are legal tender throughout the UK, although some businesses may be unfamiliar with them.\",\n    category: \"Economy\"\n  },\n  {\n    id: \"6\",\n    statement: \"The Industrial Revolution began in Britain in the 18th century.\",\n    isTrue: true,\n    explanation: \"The Industrial Revolution started in Britain around 1760-1840, transforming manufacturing, transportation, and society.\",\n    category: \"History\"\n  },\n  {\n    id: \"7\",\n    statement: \"In the UK, you can get married at 16 without parental consent.\",\n    isTrue: false,\n    explanation: \"In England, Wales and Northern Ireland, you need to be 18 to marry without parental consent. In Scotland, you can marry at 16 without parental consent.\",\n    category: \"Law\"\n  },\n  {\n    id: \"8\",\n    statement: \"The BBC is funded by a television licence fee paid by UK households.\",\n    isTrue: true,\n    explanation: \"The BBC's main funding comes from the television licence fee, which UK households must pay if they watch live TV or use BBC iPlayer.\",\n    category: \"Media\"\n  },\n  {\n    id: \"9\",\n    statement: \"The House of Lords can permanently block legislation passed by the House of Commons.\",\n    isTrue: false,\n    explanation: \"The House of Lords can delay legislation but cannot permanently block it. They can only delay most bills for up to one year.\",\n    category: \"Politics\"\n  },\n  {\n    id: \"10\",\n    statement: \"Christmas Day and Boxing Day are both bank holidays in the UK.\",\n    isTrue: true,\n    explanation: \"Both Christmas Day (25 December) and Boxing Day (26 December) are bank holidays throughout the UK.\",\n    category: \"Traditions\"\n  },\n  {\n    id: \"11\",\n    statement: \"The UK Parliament is located in Westminster Palace in London.\",\n    isTrue: true,\n    explanation: \"The UK Parliament meets in the Palace of Westminster, also known as the Houses of Parliament, located in London.\",\n    category: \"Politics\"\n  },\n  {\n    id: \"12\",\n    statement: \"Cricket was invented in England and is considered the national summer sport.\",\n    isTrue: true,\n    explanation: \"Cricket originated in England and is widely considered the national summer sport, with football being the national winter sport.\",\n    category: \"Sport\"\n  },\n  {\n    id: \"13\",\n    statement: \"The NHS was established immediately after World War I in 1919.\",\n    isTrue: false,\n    explanation: \"The National Health Service (NHS) was established in 1948, after World War II, not World War I.\",\n    category: \"History\"\n  },\n  {\n    id: \"14\",\n    statement: \"William Shakespeare was born in Stratford-upon-Avon in England.\",\n    isTrue: true,\n    explanation: \"William Shakespeare was born in Stratford-upon-Avon, Warwickshire, England in 1564.\",\n    category: \"Culture\"\n  },\n  {\n    id: \"15\",\n    statement: \"The driving age in the UK is 17 for cars and 16 for mopeds.\",\n    isTrue: true,\n    explanation: \"You can get a provisional driving licence and start learning to drive a car at 17, and ride a moped at 16.\",\n    category: \"Law\"\n  }\n];\n\ninterface TrueFalseGameProps {\n  userId: string;\n}\n\nexport default function TrueFalseGame({ userId }: TrueFalseGameProps) {\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswer, setSelectedAnswer] = useState<boolean | null>(null);\n  const [showResult, setShowResult] = useState(false);\n  const [showExplanation, setShowExplanation] = useState(false);\n  const [score, setScore] = useState(0);\n  const [answeredQuestions, setAnsweredQuestions] = useState<Set<string>>(new Set());\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"All\");\n  const [gameStarted, setGameStarted] = useState(false);\n\n  const categories = [\"All\", ...Array.from(new Set(trueFalseQuestions.map(q => q.category)))];\n  \n  const filteredQuestions = selectedCategory === \"All\" \n    ? trueFalseQuestions \n    : trueFalseQuestions.filter(q => q.category === selectedCategory);\n\n  const currentQuestion = filteredQuestions[currentQuestionIndex];\n  const totalQuestions = filteredQuestions.length;\n  const questionsAnswered = answeredQuestions.size;\n\n  useEffect(() => {\n    // Reset game when category changes\n    setCurrentQuestionIndex(0);\n    setSelectedAnswer(null);\n    setShowResult(false);\n    setShowExplanation(false);\n    setScore(0);\n    setAnsweredQuestions(new Set());\n    setGameStarted(false);\n  }, [selectedCategory]);\n\n  const handleAnswerSelect = (answer: boolean) => {\n    if (showResult) return;\n    \n    setSelectedAnswer(answer);\n    setShowResult(true);\n    \n    const isCorrect = answer === currentQuestion.isTrue;\n    \n    if (isCorrect) {\n      celebrateWithTheme('general');\n      setScore(prev => prev + 1);\n    }\n    \n    setAnsweredQuestions(prev => new Set(Array.from(prev).concat(currentQuestion.id)));\n    \n    // Show explanation after a brief delay\n    setTimeout(() => {\n      setShowExplanation(true);\n    }, 1000);\n  };\n\n  const nextQuestion = () => {\n    if (currentQuestionIndex < filteredQuestions.length - 1) {\n      setCurrentQuestionIndex(prev => prev + 1);\n      setSelectedAnswer(null);\n      setShowResult(false);\n      setShowExplanation(false);\n    } else {\n      // Game completed\n      setTimeout(() => celebrateGameComplete(), 500);\n    }\n  };\n\n  const resetGame = () => {\n    setCurrentQuestionIndex(0);\n    setSelectedAnswer(null);\n    setShowResult(false);\n    setShowExplanation(false);\n    setScore(0);\n    setAnsweredQuestions(new Set());\n    setGameStarted(false);\n  };\n\n  const startGame = () => {\n    setGameStarted(true);\n  };\n\n  const isGameComplete = questionsAnswered === totalQuestions;\n  const accuracy = questionsAnswered > 0 ? Math.round((score / questionsAnswered) * 100) : 0;\n\n  if (!gameStarted) {\n    return (\n      <Card className=\"shadow-sm border border-gray-200\">\n        <CardHeader className=\"border-b border-gray-200\">\n          <CardTitle className=\"text-lg font-semibold text-gray-900 flex items-center\">\n            <CheckCircle className=\"text-green-600 mr-3\" size={20} />\n            True or False Challenge\n          </CardTitle>\n        </CardHeader>\n        \n        <CardContent className=\"p-6\">\n          <div className=\"text-center space-y-6\">\n            <div>\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Test Your Knowledge</h3>\n              <p className=\"text-gray-600 mb-4\">\n                Answer True or False to statements from the Life in UK test. Get correct answers to see celebratory confetti!\n              </p>\n            </div>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                  Choose Category:\n                </label>\n                <div className=\"flex flex-wrap gap-2 justify-center\">\n                  {categories.map(category => (\n                    <Button\n                      key={category}\n                      variant={selectedCategory === category ? \"default\" : \"outline\"}\n                      size=\"sm\"\n                      onClick={() => setSelectedCategory(category)}\n                      className=\"text-xs\"\n                    >\n                      {category}\n                    </Button>\n                  ))}\n                </div>\n              </div>\n              \n              <div className=\"bg-gray-50 rounded-lg p-4\">\n                <p className=\"text-sm text-gray-600\">\n                  <strong>{filteredQuestions.length}</strong> questions available in {selectedCategory === \"All\" ? \"all categories\" : selectedCategory}\n                </p>\n              </div>\n              \n              <Button\n                onClick={startGame}\n                className=\"bg-green-600 hover:bg-green-700 text-white px-8 py-3 text-lg\"\n              >\n                <CheckCircle className=\"mr-2\" size={20} />\n                Start Challenge\n              </Button>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  if (isGameComplete) {\n    return (\n      <Card className=\"shadow-sm border border-gray-200\">\n        <CardHeader className=\"border-b border-gray-200\">\n          <CardTitle className=\"text-lg font-semibold text-gray-900 flex items-center\">\n            <Trophy className=\"text-yellow-600 mr-3\" size={20} />\n            Challenge Complete!\n          </CardTitle>\n        </CardHeader>\n        \n        <CardContent className=\"p-6\">\n          <div className=\"text-center space-y-6\">\n            <div className=\"space-y-2\">\n              <h3 className=\"text-2xl font-bold text-gray-900\">Well Done!</h3>\n              <p className=\"text-lg text-gray-600\">You've completed all questions in this category.</p>\n            </div>\n            \n            <div className=\"grid grid-cols-2 gap-4 max-w-md mx-auto\">\n              <div className=\"bg-green-50 rounded-lg p-4\">\n                <div className=\"text-2xl font-bold text-green-600\">{score}</div>\n                <div className=\"text-sm text-green-700\">Correct</div>\n              </div>\n              <div className=\"bg-blue-50 rounded-lg p-4\">\n                <div className=\"text-2xl font-bold text-blue-600\">{accuracy}%</div>\n                <div className=\"text-sm text-blue-700\">Accuracy</div>\n              </div>\n            </div>\n            \n            <div className=\"space-y-3\">\n              <Button\n                onClick={resetGame}\n                className=\"bg-green-600 hover:bg-green-700 text-white px-6 py-2\"\n              >\n                <RotateCcw className=\"mr-2\" size={16} />\n                Play Again\n              </Button>\n              \n              <div className=\"text-sm text-gray-500\">\n                Try a different category or challenge yourself again!\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className=\"shadow-sm border border-gray-200\">\n      <CardHeader className=\"border-b border-gray-200\">\n        <div className=\"flex justify-between items-center\">\n          <CardTitle className=\"text-lg font-semibold text-gray-900 flex items-center\">\n            <CheckCircle className=\"text-green-600 mr-3\" size={20} />\n            True or False Challenge\n          </CardTitle>\n          <Badge variant=\"outline\" className=\"text-xs\">\n            {selectedCategory}\n          </Badge>\n        </div>\n      </CardHeader>\n      \n      <CardContent className=\"p-6\">\n        <div className=\"space-y-6\">\n          {/* Progress */}\n          <div className=\"flex justify-between items-center text-sm text-gray-600\">\n            <span>Question {currentQuestionIndex + 1} of {totalQuestions}</span>\n            <span>Score: {score}/{questionsAnswered}</span>\n          </div>\n          \n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n            <div \n              className=\"bg-green-600 h-2 rounded-full transition-all duration-300\"\n              style={{ width: `${((currentQuestionIndex + 1) / totalQuestions) * 100}%` }}\n            ></div>\n          </div>\n          \n          {/* Question */}\n          <div className=\"space-y-4\">\n            <div className=\"bg-gray-50 rounded-lg p-6\">\n              <p className=\"text-lg text-gray-900 font-medium leading-relaxed\">\n                {currentQuestion.statement}\n              </p>\n            </div>\n            \n            {/* Answer Buttons */}\n            {!showResult && (\n              <div className=\"grid grid-cols-2 gap-4\">\n                <Button\n                  onClick={() => handleAnswerSelect(true)}\n                  className=\"bg-green-600 hover:bg-green-700 text-white py-4 text-lg\"\n                  disabled={showResult}\n                >\n                  <Check className=\"mr-2\" size={20} />\n                  True\n                </Button>\n                <Button\n                  onClick={() => handleAnswerSelect(false)}\n                  className=\"bg-red-600 hover:bg-red-700 text-white py-4 text-lg\"\n                  disabled={showResult}\n                >\n                  <X className=\"mr-2\" size={20} />\n                  False\n                </Button>\n              </div>\n            )}\n            \n            {/* Result */}\n            {showResult && (\n              <div className=\"space-y-4\">\n                <div className={`rounded-lg p-4 text-center ${\n                  selectedAnswer === currentQuestion.isTrue \n                    ? 'bg-green-50 border border-green-200' \n                    : 'bg-red-50 border border-red-200'\n                }`}>\n                  <div className=\"flex items-center justify-center space-x-2 mb-2\">\n                    {selectedAnswer === currentQuestion.isTrue ? (\n                      <>\n                        <CheckCircle className=\"text-green-600\" size={24} />\n                        <span className=\"text-lg font-semibold text-green-800\">Correct! 🎉</span>\n                      </>\n                    ) : (\n                      <>\n                        <XCircle className=\"text-red-600\" size={24} />\n                        <span className=\"text-lg font-semibold text-red-800\">Incorrect</span>\n                      </>\n                    )}\n                  </div>\n                  <p className=\"text-sm text-gray-600\">\n                    The correct answer is: <strong>{currentQuestion.isTrue ? \"True\" : \"False\"}</strong>\n                  </p>\n                </div>\n                \n                {showExplanation && (\n                  <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n                    <h4 className=\"font-semibold text-blue-900 mb-2\">Explanation:</h4>\n                    <p className=\"text-blue-800 text-sm\">{currentQuestion.explanation}</p>\n                  </div>\n                )}\n                \n                <Button\n                  onClick={nextQuestion}\n                  className=\"w-full bg-blue-600 hover:bg-blue-700 text-white py-3\"\n                >\n                  {currentQuestionIndex < filteredQuestions.length - 1 ? \"Next Question\" : \"See Results\"}\n                </Button>\n              </div>\n            )}\n          </div>\n          \n          {/* Reset Button */}\n          <div className=\"flex justify-center pt-4 border-t border-gray-200\">\n            <Button\n              onClick={resetGame}\n              variant=\"outline\"\n              size=\"sm\"\n              className=\"text-gray-600 hover:text-gray-800\"\n            >\n              <RotateCcw className=\"mr-2\" size={16} />\n              Reset Game\n            </Button>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}","size_bytes":16611},"client/src/components/uk-ages-matching.tsx":{"content":"import { useState, useMemo } from \"react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Check, X, RotateCcw, Calendar } from \"lucide-react\";\nimport { celebrateGameComplete, celebrateWithTheme } from \"@/lib/confetti\";\n\ninterface UKAgeRule {\n  id: string;\n  activity: string;\n  age: string;\n  category: string;\n  details: string;\n}\n\nconst ukAgeRulesData: UKAgeRule[] = [\n  {\n    id: \"1\",\n    activity: \"Get National Insurance Number (NINO)\",\n    age: \"16 years old\",\n    category: \"Employment\",\n    details: \"Automatically sent before 16th birthday for work eligibility\"\n  },\n  {\n    id: \"2\", \n    activity: \"Drive a moped (up to 50cc)\",\n    age: \"16 years old\",\n    category: \"Transport\",\n    details: \"With provisional licence and after passing CBT test\"\n  },\n  {\n    id: \"3\",\n    activity: \"Drive a car\",\n    age: \"17 years old\",\n    category: \"Transport\", \n    details: \"With provisional licence, must pass theory and practical tests\"\n  },\n  {\n    id: \"4\",\n    activity: \"Buy alcohol in shops/supermarkets\",\n    age: \"18 years old\",\n    category: \"Legal Rights\",\n    details: \"Can buy beer/wine at 16 with meal in hotel/restaurant with adult\"\n  },\n  {\n    id: \"5\",\n    activity: \"Buy alcohol in hotel/restaurant with meal and adult\",\n    age: \"16 years old\", \n    category: \"Legal Rights\",\n    details: \"Only beer, wine or cider with meal when accompanied by adult\"\n  },\n  {\n    id: \"6\",\n    activity: \"Betting and National Lottery\",\n    age: \"18 years old\",\n    category: \"Gambling\",\n    details: \"All forms of gambling including lottery tickets and scratch cards\"\n  },\n  {\n    id: \"7\",\n    activity: \"Vote in elections\",\n    age: \"18 years old\",\n    category: \"Civic Duties\",\n    details: \"General elections, local elections, and referendums\"\n  },\n  {\n    id: \"8\",\n    activity: \"Stand for public office (general)\",\n    age: \"18 years old\",\n    category: \"Civic Duties\", \n    details: \"Most elected positions except certain restrictions\"\n  },\n  {\n    id: \"9\",\n    activity: \"Stand for office (armed forces exception)\",\n    age: \"18 years old\",\n    category: \"Civic Duties\",\n    details: \"Active armed forces personnel cannot stand for Parliament\"\n  },\n  {\n    id: \"10\",\n    activity: \"Stand for office (criminal conviction exception)\",\n    age: \"18 years old\", \n    category: \"Civic Duties\",\n    details: \"Certain criminal convictions disqualify from standing\"\n  },\n  {\n    id: \"11\",\n    activity: \"Stand for office (civil servant exception)\",\n    age: \"18 years old\",\n    category: \"Civic Duties\",\n    details: \"Senior civil servants must resign before standing\"\n  },\n  {\n    id: \"12\",\n    activity: \"Free TV licence\",\n    age: \"Over 75 years old\",\n    category: \"Benefits\",\n    details: \"Free TV licence for households where everyone is over 75\"\n  }\n];\n\ninterface UKAgesMatchingProps {\n  userId: string;\n}\n\nexport default function UKAgesMatching({ userId }: UKAgesMatchingProps) {\n  const [selectedActivity, setSelectedActivity] = useState<string | null>(null);\n  const [selectedAge, setSelectedAge] = useState<string | null>(null);\n  const [matches, setMatches] = useState<Record<string, 'correct' | 'incorrect'>>({});\n  const [selectedCategory, setSelectedCategory] = useState<string>(\"All\");\n  const [feedback, setFeedback] = useState<{ activityId: string; ageId: string; correct: boolean } | null>(null);\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [shuffleSeed, setShuffleSeed] = useState(Math.random());\n  const [recentCorrectMatches, setRecentCorrectMatches] = useState<Set<string>>(new Set());\n\n  const categories = [\"All\", ...Array.from(new Set(ukAgeRulesData.map(item => item.category)))];\n  \n  const filteredData = selectedCategory === \"All\" \n    ? ukAgeRulesData \n    : ukAgeRulesData.filter(item => item.category === selectedCategory);\n\n  // Fisher-Yates shuffle algorithm\n  const shuffleArray = (array: UKAgeRule[], seed: number) => {\n    const shuffled = [...array];\n    let random = seed;\n    \n    for (let i = shuffled.length - 1; i > 0; i--) {\n      random = (random * 9301 + 49297) % 233280;\n      const randomIndex = Math.floor((random / 233280) * (i + 1));\n      [shuffled[i], shuffled[randomIndex]] = [shuffled[randomIndex], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  const shuffledActivities = useMemo(() => {\n    return shuffleArray(filteredData, shuffleSeed);\n  }, [filteredData, shuffleSeed]);\n\n  const shuffledAges = useMemo(() => {\n    return shuffleArray(filteredData, shuffleSeed * 1337);\n  }, [filteredData, shuffleSeed]);\n\n  const handleActivitySelect = (activityId: string) => {\n    setSelectedActivity(selectedActivity === activityId ? null : activityId);\n    if (selectedAge && selectedActivity !== activityId) {\n      checkMatch(activityId, selectedAge);\n    }\n  };\n\n  const handleAgeSelect = (ageId: string) => {\n    setSelectedAge(selectedAge === ageId ? null : ageId);\n    if (selectedActivity && selectedAge !== ageId) {\n      checkMatch(selectedActivity, ageId);\n    }\n  };\n\n  const checkMatch = (activityId: string, ageId: string) => {\n    setAttempts(prev => prev + 1);\n    \n    const isCorrect = activityId === ageId;\n    \n    if (isCorrect) {\n      // Celebrate individual correct match immediately\n      celebrateWithTheme('ages');\n      \n      setMatches(prev => ({\n        ...prev,\n        [activityId]: 'correct'\n      }));\n      setScore(prev => {\n        const newScore = prev + 1;\n        // Check if game is complete\n        if (newScore === filteredData.length) {\n          setTimeout(() => celebrateGameComplete(), 500);\n        }\n        return newScore;\n      });\n      \n      // Add to recent matches for animation\n      setRecentCorrectMatches(prev => new Set([...Array.from(prev), activityId]));\n      \n      // Remove from recent matches after animation\n      setTimeout(() => {\n        setRecentCorrectMatches(prev => {\n          const newSet = new Set(Array.from(prev));\n          newSet.delete(activityId);\n          return newSet;\n        });\n      }, 1000);\n      \n      setFeedback({ activityId, ageId, correct: true });\n    } else {\n      setMatches(prev => ({\n        ...prev,\n        [activityId]: 'incorrect',\n        [ageId]: 'incorrect'\n      }));\n      setFeedback({ activityId, ageId, correct: false });\n      \n      // Clear incorrect state after showing feedback\n      setTimeout(() => {\n        setMatches(prev => {\n          const newMatches = { ...prev };\n          if (newMatches[activityId] === 'incorrect') delete newMatches[activityId];\n          if (newMatches[ageId] === 'incorrect') delete newMatches[ageId];\n          return newMatches;\n        });\n      }, 1500);\n    }\n    \n    setSelectedActivity(null);\n    setSelectedAge(null);\n    \n    // Clear feedback after delay\n    setTimeout(() => setFeedback(null), 2000);\n  };\n\n  const resetGame = () => {\n    setSelectedActivity(null);  \n    setSelectedAge(null);\n    setMatches({});\n    setFeedback(null);\n    setScore(0);\n    setAttempts(0);\n    setShuffleSeed(Math.random());\n    setRecentCorrectMatches(new Set());\n  };\n\n  const correctMatches = Object.values(matches).filter(match => match === 'correct').length;\n  const isGameComplete = correctMatches === filteredData.length;\n  const accuracy = attempts > 0 ? Math.round((score / attempts) * 100) : 0;\n\n  // Sort matched items to bottom\n  const sortItems = (items: UKAgeRule[]) => {\n    const matched = items.filter(item => matches[item.id] === 'correct');\n    const unmatched = items.filter(item => matches[item.id] !== 'correct');\n    return [...unmatched, ...matched];\n  };\n\n  const sortedActivities = sortItems(shuffledActivities);\n  const sortedAges = sortItems(shuffledAges);\n\n  const getButtonStatus = (itemId: string, type: 'activity' | 'age') => {\n    const matchStatus = matches[itemId];\n    const isSelected = type === 'activity' ? selectedActivity === itemId : selectedAge === itemId;\n    const isMatched = matchStatus === 'correct';\n    const isIncorrect = matchStatus === 'incorrect';\n    const isRecentMatch = recentCorrectMatches.has(itemId);\n    \n    return { isSelected, isMatched, isIncorrect, isRecentMatch };\n  };\n\n  const getCategoryColor = (category: string) => {\n    switch (category) {\n      case \"Employment\": return \"bg-blue-100 text-blue-800 border-blue-200\";\n      case \"Transport\": return \"bg-green-100 text-green-800 border-green-200\";\n      case \"Legal Rights\": return \"bg-purple-100 text-purple-800 border-purple-200\";\n      case \"Gambling\": return \"bg-red-100 text-red-800 border-red-200\";\n      case \"Civic Duties\": return \"bg-amber-100 text-amber-800 border-amber-200\";\n      case \"Benefits\": return \"bg-teal-100 text-teal-800 border-teal-200\";\n      default: return \"bg-gray-100 text-gray-800 border-gray-200\";\n    }\n  };\n\n  return (\n    <Card className=\"w-full max-w-6xl mx-auto\">\n      <CardContent className=\"p-6\">\n        <div className=\"mb-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div className=\"flex items-center gap-2\">\n              <Calendar className=\"h-6 w-6 text-blue-600\" />\n              <h3 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                UK Age Requirements Matching Game\n              </h3>\n            </div>\n            <Button onClick={resetGame} variant=\"outline\" className=\"flex items-center gap-2\">\n              <RotateCcw className=\"h-4 w-4\" />\n              Reset Game\n            </Button>\n          </div>\n\n          <div className=\"flex flex-wrap gap-4 mb-4\">\n            <Badge variant=\"outline\" className=\"text-lg px-3 py-1\">\n              Score: {score}/{filteredData.length}\n            </Badge>\n            <Badge variant=\"outline\" className=\"text-lg px-3 py-1\">\n              Attempts: {attempts}\n            </Badge>\n            <Badge variant=\"outline\" className=\"text-lg px-3 py-1\">\n              Accuracy: {accuracy}%\n            </Badge>\n          </div>\n\n          {/* Category Filter */}\n          <div className=\"mb-4\">\n            <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">Filter by category:</p>\n            <div className=\"flex flex-wrap gap-2\">\n              {categories.map(category => (\n                <Button\n                  key={category}\n                  onClick={() => setSelectedCategory(category)}\n                  variant={selectedCategory === category ? \"default\" : \"outline\"}\n                  size=\"sm\"\n                  className=\"text-xs\"\n                >\n                  {category}\n                </Button>\n              ))}\n            </div>\n          </div>\n\n          <p className=\"text-gray-600 dark:text-gray-300\">\n            Match each legal activity with the correct age requirement in the UK. Learn about important age milestones for citizenship and daily life.\n          </p>\n        </div>\n\n        {feedback && (\n          <div className={`mb-4 p-4 rounded-lg flex items-center gap-2 ${\n            feedback.correct \n              ? 'bg-green-100 text-green-800 border border-green-200' \n              : 'bg-red-100 text-red-800 border border-red-200'\n          }`}>\n            {feedback.correct ? (\n              <span className=\"text-2xl\">🎉</span>\n            ) : (\n              <X className=\"h-5 w-5 text-red-600\" />\n            )}\n            <span className=\"font-medium\">\n              {feedback.correct ? 'Perfect age match! 📅🎯' : 'Incorrect age. Try again!'}\n            </span>\n          </div>\n        )}\n\n        {isGameComplete && (\n          <div className=\"mb-6 p-6 bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg text-center\">\n            <div className=\"flex items-center justify-center gap-2 mb-2\">\n              <Check className=\"h-6 w-6 text-green-600\" />\n              <h4 className=\"text-xl font-bold text-green-800 dark:text-green-200\">\n                Age Requirements Mastered!\n              </h4>\n            </div>\n            <p className=\"text-green-700 dark:text-green-300\">\n              You've successfully matched all UK age requirements with their activities!\n            </p>\n            <p className=\"text-sm text-green-600 dark:text-green-400 mt-2\">\n              Final Score: {score}/{filteredData.length} | Accuracy: {accuracy}%\n            </p>\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Activities Column */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4 text-center text-blue-700 dark:text-blue-300\">\n              Legal Activities ({filteredData.length})\n            </h4>\n            <div className=\"space-y-2\">\n              {sortedActivities.map((item) => {\n                const status = getButtonStatus(item.id, 'activity');\n                return (\n                  <Button\n                    key={item.id}\n                    onClick={() => handleActivitySelect(item.id)}\n                    disabled={status.isMatched}\n                    className={`\n                      w-full p-4 h-auto text-left transition-all duration-300 relative flex flex-col justify-start\n                      ${status.isMatched \n                        ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 border-green-300 dark:border-green-700' \n                        : status.isSelected\n                        ? 'bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200 border-blue-300 dark:border-blue-700'\n                        : status.isIncorrect\n                        ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 border-red-300 dark:border-red-700'\n                        : 'bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700'\n                      }\n                      ${status.isRecentMatch ? 'animate-pulse ring-2 ring-green-400' : ''}\n                    `}\n                    variant=\"outline\"\n                  >\n                    <div className=\"w-full\">\n                      <div className=\"font-semibold text-base mb-2\">{item.activity}</div>\n                      <div className=\"text-sm opacity-75 mb-2 line-clamp-2\">{item.details}</div>\n                      <Badge variant=\"outline\" className={`text-xs ${getCategoryColor(item.category)}`}>\n                        {item.category}\n                      </Badge>\n                    </div>\n                    {status.isMatched && (\n                      <Check className=\"absolute top-2 right-2 h-5 w-5 text-green-600\" />\n                    )}\n                  </Button>\n                );\n              })}\n            </div>\n          </div>\n\n          {/* Ages Column */}\n          <div>\n            <h4 className=\"text-lg font-semibold mb-4 text-center text-orange-700 dark:text-orange-300\">\n              Age Requirements ({filteredData.length})\n            </h4>\n            <div className=\"space-y-2\">\n              {sortedAges.map((item) => {\n                const status = getButtonStatus(item.id, 'age');\n                return (\n                  <Button\n                    key={item.id}\n                    onClick={() => handleAgeSelect(item.id)}\n                    disabled={status.isMatched}\n                    className={`\n                      w-full p-4 h-auto text-left transition-all duration-300 relative flex flex-col justify-center\n                      ${status.isMatched \n                        ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 border-green-300 dark:border-green-700' \n                        : status.isSelected\n                        ? 'bg-orange-100 dark:bg-orange-900/30 text-orange-800 dark:text-orange-200 border-orange-300 dark:border-orange-700'\n                        : status.isIncorrect\n                        ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 border-red-300 dark:border-red-700'\n                        : 'bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700'\n                      }\n                      ${status.isRecentMatch ? 'animate-pulse ring-2 ring-green-400' : ''}\n                    `}\n                    variant=\"outline\"\n                  >\n                    <div className=\"w-full text-center\">\n                      <div className=\"text-2xl font-bold text-orange-600 dark:text-orange-400 mb-1\">\n                        {item.age}\n                      </div>\n                      <Badge variant=\"outline\" className={`text-xs ${getCategoryColor(item.category)}`}>\n                        {item.category}\n                      </Badge>\n                    </div>\n                    {status.isMatched && (\n                      <Check className=\"absolute top-2 right-2 h-5 w-5 text-green-600\" />\n                    )}\n                  </Button>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}","size_bytes":16926},"client/src/components/uk-constituent-countries-matching.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Flag, RotateCcw, Info } from \"lucide-react\";\nimport confetti from 'canvas-confetti';\n\ninterface CountryTripleData {\n  id: string;\n  country: string;\n  capital: string;\n  patronSaint: string;\n  saintsDay: string;\n  symbol: string;\n  flag: string;\n  majorCities: string;\n  category: string;\n}\n\nconst countryData: CountryTripleData[] = [\n  {\n    id: \"1\",\n    country: \"England\",\n    capital: \"London\",\n    patronSaint: \"St. George\",\n    saintsDay: \"23 April\",\n    symbol: \"Rose\",\n    flag: \"George's Cross\",\n    majorCities: \"Birmingham, Liverpool, Manchester\",\n    category: \"Country\"\n  },\n  {\n    id: \"2\",\n    country: \"Scotland\",\n    capital: \"Edinburgh\",\n    patronSaint: \"St. Andrew\",\n    saintsDay: \"30 November\",\n    symbol: \"Thistle\",\n    flag: \"Andrew's Cross\",\n    majorCities: \"Glasgow, Dundee, Aberdeen\",\n    category: \"Country\"\n  },\n  {\n    id: \"3\",\n    country: \"Wales\",\n    capital: \"Cardiff\",\n    patronSaint: \"St. David\",\n    saintsDay: \"1 March\",\n    symbol: \"Daffodil\",\n    flag: \"Not on Union Jack\",\n    majorCities: \"Swansea, Newport\",\n    category: \"Country\"\n  },\n  {\n    id: \"4\",\n    country: \"Northern Ireland\",\n    capital: \"Belfast\",\n    patronSaint: \"St. Patrick\",\n    saintsDay: \"17 March (holiday)\",\n    symbol: \"Shamrock\",\n    flag: \"Patrick's Cross\",\n    majorCities: \"Derry/Londonderry, Lisburn\",\n    category: \"Country\"\n  },\n  {\n    id: \"5\",\n    country: \"London\",\n    capital: \"England's Capital\",\n    patronSaint: \"Political Center\",\n    saintsDay: \"Seat of Westminster\",\n    symbol: \"Big Ben & Tower\",\n    flag: \"Houses Parliament\",\n    majorCities: \"Greater London, City of London\",\n    category: \"Capital City\"\n  },\n  {\n    id: \"6\",\n    country: \"Edinburgh\",\n    capital: \"Scotland's Capital\",\n    patronSaint: \"Historic Center\",\n    saintsDay: \"Royal Mile & Castle\",\n    symbol: \"Castle & Festival\",\n    flag: \"Scottish Parliament\",\n    majorCities: \"Old Town, New Town\",\n    category: \"Capital City\"\n  },\n  {\n    id: \"7\",\n    country: \"Cardiff\",\n    capital: \"Wales' Capital\",\n    patronSaint: \"Cultural Hub\",\n    saintsDay: \"Senedd & Bay\",\n    symbol: \"Castle & Dragon\",\n    flag: \"Welsh Assembly\",\n    majorCities: \"Cardiff Bay, City Centre\",\n    category: \"Capital City\"\n  },\n  {\n    id: \"8\",\n    country: \"Belfast\",\n    capital: \"N. Ireland's Capital\",\n    patronSaint: \"Peace Process\",\n    saintsDay: \"Stormont Assembly\",\n    symbol: \"Titanic Quarter\",\n    flag: \"City Hall\",\n    majorCities: \"Queen's Quarter, Titanic Quarter\",\n    category: \"Capital City\"\n  },\n  {\n    id: \"9\",\n    country: \"St. George\",\n    capital: \"England's Patron\",\n    patronSaint: \"Dragon Slayer\",\n    saintsDay: \"April 23rd\",\n    symbol: \"Red Cross\",\n    flag: \"White Background\",\n    majorCities: \"Legendary Figure\",\n    category: \"Patron Saint\"\n  },\n  {\n    id: \"10\",\n    country: \"St. Andrew\",\n    capital: \"Scotland's Patron\",\n    patronSaint: \"Fisherman Apostle\",\n    saintsDay: \"November 30th\",\n    symbol: \"X-Cross (Saltire)\",\n    flag: \"Blue & White\",\n    majorCities: \"Biblical Figure\",\n    category: \"Patron Saint\"\n  },\n  {\n    id: \"11\",\n    country: \"St. David\",\n    capital: \"Wales' Patron\",\n    patronSaint: \"Welsh Bishop\",\n    saintsDay: \"March 1st\",\n    symbol: \"Daffodils Worn\",\n    flag: \"Red Dragon\",\n    majorCities: \"6th Century Saint\",\n    category: \"Patron Saint\"\n  },\n  {\n    id: \"12\",\n    country: \"St. Patrick\",\n    capital: \"Ireland's Patron\",\n    patronSaint: \"Snake Banisher\",\n    saintsDay: \"March 17th (Holiday)\",\n    symbol: \"Shamrock & Green\",\n    flag: \"Irish Heritage\",\n    majorCities: \"5th Century Missionary\",\n    category: \"Patron Saint\"\n  },\n  {\n    id: \"13\",\n    country: \"Rose\",\n    capital: \"England's Symbol\",\n    patronSaint: \"Tudor Dynasty\",\n    saintsDay: \"Wars of Roses\",\n    symbol: \"Red & White\",\n    flag: \"Royal Emblem\",\n    majorCities: \"National Flower\",\n    category: \"National Symbol\"\n  },\n  {\n    id: \"14\",\n    country: \"Thistle\",\n    capital: \"Scotland's Symbol\",\n    patronSaint: \"Prickly Defense\",\n    saintsDay: \"Highland Plant\",\n    symbol: \"Purple Flower\",\n    flag: \"Ancient Symbol\",\n    majorCities: \"Protected Scotland\",\n    category: \"National Symbol\"\n  },\n  {\n    id: \"15\",\n    country: \"Daffodil\",\n    capital: \"Wales' Symbol\",\n    patronSaint: \"Spring Flower\",\n    saintsDay: \"March Blooming\",\n    symbol: \"Yellow Trumpet\",\n    flag: \"Welsh Pride\",\n    majorCities: \"St. David's Day\",\n    category: \"National Symbol\"\n  },\n  {\n    id: \"16\",\n    country: \"Shamrock\",\n    capital: \"Ireland's Symbol\",\n    patronSaint: \"Three Leaves\",\n    saintsDay: \"Trinity Symbol\",\n    symbol: \"Green Clover\",\n    flag: \"St. Patrick's Teaching\",\n    majorCities: \"Irish Identity\",\n    category: \"National Symbol\"\n  },\n  {\n    id: \"17\",\n    country: \"George's Cross\",\n    capital: \"England's Flag\",\n    patronSaint: \"Red Cross\",\n    saintsDay: \"White Field\",\n    symbol: \"Simple Design\",\n    flag: \"Crusader Origin\",\n    majorCities: \"Part of Union Jack\",\n    category: \"Flag Design\"\n  },\n  {\n    id: \"18\",\n    country: \"Andrew's Cross\",\n    capital: \"Scotland's Flag\",\n    patronSaint: \"White Saltire\",\n    saintsDay: \"Blue Background\",\n    symbol: \"X-Shape Cross\",\n    flag: \"Ancient Banner\",\n    majorCities: \"Part of Union Jack\",\n    category: \"Flag Design\"\n  }\n];\n\nconst categoryColors = {\n  \"Country\": \"bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\",\n  \"Capital City\": \"bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300\",\n  \"Patron Saint\": \"bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\",\n  \"National Symbol\": \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300\",\n  \"Flag Design\": \"bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-300\"\n};\n\nconst celebrateWithTheme = (theme: string) => {\n  const colors = ['#FF0000', '#FFFFFF', '#0000FF', '#FFFF00', '#008000'];\n  \n  confetti({\n    particleCount: 100,\n    spread: 70,\n    origin: { y: 0.6 },\n    colors: colors\n  });\n};\n\nexport default function UKConstituentCountriesMatching({ userId }: { userId: string }) {\n  const [selectedCountry, setSelectedCountry] = useState<CountryTripleData | null>(null);\n  const [selectedCapital, setSelectedCapital] = useState<CountryTripleData | null>(null);\n  const [selectedSymbol, setSelectedSymbol] = useState<CountryTripleData | null>(null);\n  const [matchedItems, setMatchedItems] = useState<Set<string>>(new Set());\n  const [incorrectAttempts, setIncorrectAttempts] = useState<Set<string>>(new Set());\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [gameComplete, setGameComplete] = useState(false);\n  const [categoryFilter, setCategoryFilter] = useState<string>(\"All\");\n  const [showReference, setShowReference] = useState(false);\n\n  const categories = [\"All\", ...Array.from(new Set(countryData.map(item => item.category)))];\n\n  const getFilteredData = () => {\n    if (categoryFilter === \"All\") return countryData;\n    return countryData.filter(item => item.category === categoryFilter);\n  };\n\n  const filteredData = getFilteredData();\n\n  const shuffleArray = <T,>(array: T[]): T[] => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  const [shuffledCountries] = useState(() => shuffleArray(filteredData));\n  const [shuffledCapitals] = useState(() => shuffleArray(filteredData));\n  const [shuffledSymbols] = useState(() => shuffleArray(filteredData));\n\n  const resetGame = () => {\n    setSelectedCountry(null);\n    setSelectedCapital(null);\n    setSelectedSymbol(null);\n    setMatchedItems(new Set());\n    setIncorrectAttempts(new Set());\n    setScore(0);\n    setAttempts(0);\n    setGameComplete(false);\n  };\n\n  const getButtonStatus = (itemId: string, type: 'country' | 'capital' | 'symbol') => {\n    const isMatched = matchedItems.has(itemId);\n    const isSelected = type === 'country' ? selectedCountry?.id === itemId \n                     : type === 'capital' ? selectedCapital?.id === itemId \n                     : selectedSymbol?.id === itemId;\n    const isIncorrect = incorrectAttempts.has(itemId);\n    const isRecentMatch = isMatched && matchedItems.has(itemId);\n    \n    return { isMatched, isSelected, isIncorrect, isRecentMatch };\n  };\n\n  const handleCountryClick = (country: CountryTripleData) => {\n    if (matchedItems.has(country.id)) return;\n    setSelectedCountry(country);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handleCapitalClick = (capital: CountryTripleData) => {\n    if (matchedItems.has(capital.id)) return;\n    setSelectedCapital(capital);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handleSymbolClick = (symbol: CountryTripleData) => {\n    if (matchedItems.has(symbol.id)) return;\n    setSelectedSymbol(symbol);\n    setIncorrectAttempts(new Set());\n  };\n\n  useEffect(() => {\n    if (selectedCountry && selectedCapital && selectedSymbol) {\n      setAttempts(prev => prev + 1);\n      \n      if (selectedCountry.id === selectedCapital.id && \n          selectedCapital.id === selectedSymbol.id) {\n        // Correct match!\n        celebrateWithTheme('uk');\n        setMatchedItems(prev => new Set(Array.from(prev).concat(selectedCountry.id)));\n        setScore(prev => prev + 1);\n        \n        // Check if game is complete\n        if (matchedItems.size + 1 >= filteredData.length) {\n          setGameComplete(true);\n          setTimeout(() => celebrateWithTheme('uk'), 500);\n        }\n      } else {\n        // Incorrect match\n        const incorrectIds = new Set([selectedCountry.id, selectedCapital.id, selectedSymbol.id]);\n        setIncorrectAttempts(incorrectIds);\n        \n        setTimeout(() => {\n          setIncorrectAttempts(new Set());\n        }, 3000);\n      }\n      \n      // Reset selections\n      setTimeout(() => {\n        setSelectedCountry(null);\n        setSelectedCapital(null);\n        setSelectedSymbol(null);\n      }, incorrectAttempts.size > 0 ? 3000 : 1000);\n    }\n  }, [selectedCountry, selectedCapital, selectedSymbol, matchedItems.size, filteredData.length]);\n\n  const sortedCountries = [...shuffledCountries.filter(item => !matchedItems.has(item.id)), \n                          ...shuffledCountries.filter(item => matchedItems.has(item.id))];\n  const sortedCapitals = [...shuffledCapitals.filter(item => !matchedItems.has(item.id)), \n                         ...shuffledCapitals.filter(item => matchedItems.has(item.id))];\n  const sortedSymbols = [...shuffledSymbols.filter(item => !matchedItems.has(item.id)), \n                        ...shuffledSymbols.filter(item => matchedItems.has(item.id))];\n\n  const accuracy = attempts > 0 ? Math.round((score / attempts) * 100) : 0;\n\n  return (\n    <div className=\"w-full max-w-7xl mx-auto p-4\">\n      {/* Header */}\n      <div className=\"text-center mb-6\">\n        <div className=\"flex items-center justify-center gap-2 mb-4\">\n          <Flag className=\"h-6 w-6 text-red-600\" />\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n            UK Constituent Countries Triple Match Challenge\n          </h2>\n        </div>\n        <p className=\"text-gray-600 dark:text-gray-300 mb-4\">\n          Match countries with their capitals and symbols. Test your knowledge of UK geography, culture, and national identity.\n        </p>\n      </div>\n\n      {/* Controls */}\n      <div className=\"flex flex-wrap items-center justify-between gap-4 mb-6\">\n        <div className=\"flex flex-wrap gap-2\">\n          <label className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Filter by Category:</label>\n          {categories.map(category => (\n            <Button\n              key={category}\n              onClick={() => setCategoryFilter(category)}\n              variant={categoryFilter === category ? \"default\" : \"outline\"}\n              size=\"sm\"\n            >\n              {category}\n            </Button>\n          ))}\n        </div>\n        \n        <div className=\"flex gap-2\">\n          <Button\n            onClick={() => setShowReference(!showReference)}\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"flex items-center gap-2\"\n          >\n            <Info className=\"h-4 w-4\" />\n            {showReference ? \"Hide\" : \"Show\"} Countries Reference\n          </Button>\n          <Button\n            onClick={resetGame}\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"flex items-center gap-2\"\n          >\n            <RotateCcw className=\"h-4 w-4\" />\n            Reset Game\n          </Button>\n        </div>\n      </div>\n\n      {/* Reference Panel */}\n      {showReference && (\n        <Card className=\"mb-6\">\n          <CardHeader>\n            <CardTitle className=\"text-lg\">UK Constituent Countries Reference</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n              {countryData.slice(0, 4).map((country) => (\n                <div key={country.id} className=\"p-3 border rounded-lg\">\n                  <h4 className=\"font-semibold text-sm\">{country.country}</h4>\n                  <div className=\"space-y-1 text-xs text-gray-600 dark:text-gray-400\">\n                    <p><strong>Capital:</strong> {country.capital}</p>\n                    <p><strong>Patron Saint:</strong> {country.patronSaint}</p>\n                    <p><strong>Saint's Day:</strong> {country.saintsDay}</p>\n                    <p><strong>Symbol:</strong> {country.symbol}</p>\n                    <p><strong>Flag:</strong> {country.flag}</p>\n                    <p><strong>Major Cities:</strong> {country.majorCities}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Game Stats */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n        <Card>\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold text-red-600\">{score}</p>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">Correct Matches</p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold text-blue-600\">{attempts}</p>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Attempts</p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold text-green-600\">{accuracy}%</p>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">Accuracy</p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold text-amber-600\">{filteredData.length - matchedItems.size}</p>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">Remaining</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Game Complete Message */}\n      {gameComplete && (\n        <Card className=\"mb-6 bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-800\">\n          <CardContent className=\"p-4 text-center\">\n            <h3 className=\"text-lg font-bold text-green-800 dark:text-green-300 mb-2\">\n              🇬🇧 Congratulations! You've mastered UK Constituent Countries!\n            </h3>\n            <p className=\"text-green-700 dark:text-green-400\">\n              Final Score: {score}/{filteredData.length} ({accuracy}% accuracy)\n            </p>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Matching Game Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Countries Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Flag className=\"h-4 w-4 text-red-600\" />\n              Countries/Elements ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {sortedCountries.map((country) => (\n              <div key={`country-${country.id}`} className=\"space-y-1\">\n                <button\n                  onClick={() => handleCountryClick(country)}\n                  className={`\n                    w-full p-3 text-left rounded-lg border transition-all duration-200\n                    ${getButtonStatus(country.id, 'country').isMatched\n                      ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 border-green-300'\n                      : getButtonStatus(country.id, 'country').isSelected\n                      ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 border-red-300'\n                      : getButtonStatus(country.id, 'country').isIncorrect\n                      ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 border-red-300'\n                      : 'bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 border-gray-200'\n                    }\n                  `}\n                  disabled={matchedItems.has(country.id)}\n                >\n                  <div className=\"font-medium text-sm leading-relaxed\">{country.country}</div>\n                  <Badge className={`text-xs mt-1 ${categoryColors[country.category as keyof typeof categoryColors]}`}>\n                    {country.category}\n                  </Badge>\n                </button>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Capitals/Details Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Flag className=\"h-4 w-4 text-blue-600\" />\n              Capitals/Details ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {sortedCapitals.map((capital) => (\n              <div key={`capital-${capital.id}`} className=\"space-y-1\">\n                <button\n                  onClick={() => handleCapitalClick(capital)}\n                  className={`\n                    w-full p-3 text-left rounded-lg border transition-all duration-200\n                    ${getButtonStatus(capital.id, 'capital').isMatched\n                      ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 border-green-300'\n                      : getButtonStatus(capital.id, 'capital').isSelected\n                      ? 'bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200 border-blue-300'\n                      : getButtonStatus(capital.id, 'capital').isIncorrect\n                      ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 border-red-300'\n                      : 'bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 border-gray-200'\n                    }\n                  `}\n                  disabled={matchedItems.has(capital.id)}\n                >\n                  <div className=\"font-medium text-sm leading-relaxed\">{capital.capital}</div>\n                  <div className=\"text-xs text-gray-600 dark:text-gray-400 mt-1\">{capital.saintsDay}</div>\n                </button>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Symbols/Flags Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Flag className=\"h-4 w-4 text-green-600\" />\n              Symbols/Flags ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {sortedSymbols.map((symbol) => (\n              <div key={`symbol-${symbol.id}`} className=\"space-y-1\">\n                <button\n                  onClick={() => handleSymbolClick(symbol)}\n                  className={`\n                    w-full p-3 text-left rounded-lg border transition-all duration-200\n                    ${getButtonStatus(symbol.id, 'symbol').isMatched\n                      ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 border-green-300'\n                      : getButtonStatus(symbol.id, 'symbol').isSelected\n                      ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 border-green-300'\n                      : getButtonStatus(symbol.id, 'symbol').isIncorrect\n                      ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 border-red-300'\n                      : 'bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 border-gray-200'\n                    }\n                  `}\n                  disabled={matchedItems.has(symbol.id)}\n                >\n                  <div className=\"font-medium text-sm leading-relaxed\">{symbol.symbol}</div>\n                  <div className=\"text-xs text-gray-600 dark:text-gray-400 mt-1\">{symbol.flag}</div>\n                </button>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Instructions */}\n      <Card className=\"mt-8\">\n        <CardContent className=\"p-4\">\n          <h4 className=\"font-semibold mb-2\">How to Play:</h4>\n          <ul className=\"text-sm text-gray-600 dark:text-gray-400 space-y-1\">\n            <li>• Select one item from each column (Countries/Elements, Capitals/Details, Symbols/Flags)</li>\n            <li>• All three selections must match the same UK constituent country</li>\n            <li>• Correct matches turn green and move to the bottom</li>\n            <li>• Incorrect matches briefly turn red - try again!</li>\n            <li>• Use category filters to focus on specific types of information</li>\n            <li>• Check the reference panel to learn about each country's details</li>\n          </ul>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":22175},"client/src/components/uk-cultural-awards-matching.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Award, RotateCcw, Info } from \"lucide-react\";\nimport confetti from 'canvas-confetti';\n\ninterface CulturalAwardPair {\n  id: string;\n  award: string;\n  category: string;\n  description: string;\n  significance: string;\n  frequency: string;\n}\n\nconst culturalAwardData: CulturalAwardPair[] = [\n  {\n    id: \"1\",\n    award: \"Laurence Olivier Awards\",\n    category: \"Theatre\",\n    description: \"Prestigious awards recognizing excellence in London theatre\",\n    significance: \"Highest honor in British theatre, named after legendary actor\",\n    frequency: \"Annual\"\n  },\n  {\n    id: \"2\",\n    award: \"BRIT Awards\",\n    category: \"Music\",\n    description: \"Britain's premier music industry awards ceremony\",\n    significance: \"Celebrates best of British and international music\",\n    frequency: \"Annual\"\n  },\n  {\n    id: \"3\",\n    award: \"Turner Prize\",\n    category: \"Art\",\n    description: \"Award for outstanding contribution to contemporary art\",\n    significance: \"Most prestigious art prize in Britain, named after J.M.W. Turner\",\n    frequency: \"Annual\"\n  },\n  {\n    id: \"4\",\n    award: \"Booker Prize\",\n    category: \"Literature\",\n    description: \"Leading literary award for fiction written in English\",\n    significance: \"Most prestigious fiction prize in the English-speaking world\",\n    frequency: \"Annual\"\n  },\n  {\n    id: \"5\",\n    award: \"Mercury Prize\",\n    category: \"Album\",\n    description: \"Award for best album from the UK and Ireland\",\n    significance: \"Recognizes artistic achievement regardless of commercial success\",\n    frequency: \"Annual\"\n  },\n  {\n    id: \"6\",\n    award: \"Nobel Literature Prize\",\n    category: \"Literature\",\n    description: \"International prize for outstanding work in literature\",\n    significance: \"Recent British winners include Seamus Heaney, Harold Pinter\",\n    frequency: \"Annual\"\n  },\n  {\n    id: \"7\",\n    award: \"Edinburgh Festival Fringe\",\n    category: \"Performance\",\n    description: \"World's largest arts festival featuring comedy, theatre, and more\",\n    significance: \"Launch pad for many successful careers in entertainment\",\n    frequency: \"Annual\"\n  },\n  {\n    id: \"8\",\n    award: \"National Eisteddfod of Wales\",\n    category: \"Welsh Culture\",\n    description: \"Annual celebration of Welsh language, literature, music and performance\",\n    significance: \"Most important cultural event in Wales, promotes Welsh heritage\",\n    frequency: \"Annual\"\n  },\n  {\n    id: \"9\",\n    award: \"BAFTA Awards\",\n    category: \"Film & Television\",\n    description: \"British Academy Film and Television Arts awards\",\n    significance: \"Britain's equivalent to the Oscars and Emmys\",\n    frequency: \"Annual\"\n  },\n  {\n    id: \"10\",\n    award: \"Royal Television Society Awards\",\n    category: \"Television\",\n    description: \"Recognition of excellence in television production\",\n    significance: \"Honors innovation and excellence in British broadcasting\",\n    frequency: \"Annual\"\n  },\n  {\n    id: \"11\",\n    award: \"The Guardian First Book Award\",\n    category: \"Literature\",\n    description: \"Prize for debut novels by new British and Irish authors\",\n    significance: \"Supports emerging literary talent\",\n    frequency: \"Annual\"\n  },\n  {\n    id: \"12\",\n    award: \"Stirling Prize\",\n    category: \"Architecture\",\n    description: \"UK's most prestigious architecture award\",\n    significance: \"Recognizes buildings that make greatest contribution to British architecture\",\n    frequency: \"Annual\"\n  },\n  {\n    id: \"13\",\n    award: \"Critics' Circle Theatre Awards\",\n    category: \"Theatre\",\n    description: \"Awards from London theatre critics for excellence in drama\",\n    significance: \"Professional recognition from theatre critics\",\n    frequency: \"Annual\"\n  },\n  {\n    id: \"14\",\n    award: \"British Comedy Awards\",\n    category: \"Comedy\",\n    description: \"Celebration of the best in British comedy\",\n    significance: \"Recognition of Britain's strong comedy tradition\",\n    frequency: \"Annual\"\n  },\n  {\n    id: \"15\",\n    award: \"Royal Academy Summer Exhibition\",\n    category: \"Art\",\n    description: \"Annual open exhibition of contemporary art\",\n    significance: \"World's largest open submission exhibition\",\n    frequency: \"Annual\"\n  }\n];\n\nconst categoryColors = {\n  \"Theatre\": \"bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\",\n  \"Music\": \"bg-pink-100 text-pink-800 dark:bg-pink-900/30 dark:text-pink-300\",\n  \"Art\": \"bg-teal-100 text-teal-800 dark:bg-teal-900/30 dark:text-teal-300\",\n  \"Literature\": \"bg-indigo-100 text-indigo-800 dark:bg-indigo-900/30 dark:text-indigo-300\",\n  \"Album\": \"bg-rose-100 text-rose-800 dark:bg-rose-900/30 dark:text-rose-300\",\n  \"Performance\": \"bg-amber-100 text-amber-800 dark:bg-amber-900/30 dark:text-amber-300\",\n  \"Welsh Culture\": \"bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-300\",\n  \"Film & Television\": \"bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\",\n  \"Television\": \"bg-cyan-100 text-cyan-800 dark:bg-cyan-900/30 dark:text-cyan-300\",\n  \"Architecture\": \"bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-300\",\n  \"Comedy\": \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300\"\n};\n\nconst celebrateWithTheme = (theme: string) => {\n  const colors = ['#FFD700', '#FFA500', '#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FFEAA7'];\n  \n  confetti({\n    particleCount: 100,\n    spread: 70,\n    origin: { y: 0.6 },\n    colors: colors\n  });\n};\n\nexport default function UKCulturalAwardsMatching({ userId }: { userId: string }) {\n  const [selectedAward, setSelectedAward] = useState<CulturalAwardPair | null>(null);\n  const [selectedCategory, setSelectedCategory] = useState<CulturalAwardPair | null>(null);\n  const [matchedItems, setMatchedItems] = useState<Set<string>>(new Set());\n  const [incorrectAttempts, setIncorrectAttempts] = useState<Set<string>>(new Set());\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [gameComplete, setGameComplete] = useState(false);\n  const [categoryFilter, setCategoryFilter] = useState<string>(\"All\");\n  const [showReference, setShowReference] = useState(false);\n\n  const categories = [\"All\", ...Array.from(new Set(culturalAwardData.map(item => item.category)))];\n\n  const getFilteredData = () => {\n    if (categoryFilter === \"All\") return culturalAwardData;\n    return culturalAwardData.filter(item => item.category === categoryFilter);\n  };\n\n  const filteredData = getFilteredData();\n\n  const shuffleArray = <T,>(array: T[]): T[] => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  const [shuffledAwards] = useState(() => shuffleArray(filteredData));\n  const [shuffledCategories] = useState(() => shuffleArray(filteredData));\n\n  const resetGame = () => {\n    setSelectedAward(null);\n    setSelectedCategory(null);\n    setMatchedItems(new Set());\n    setIncorrectAttempts(new Set());\n    setScore(0);\n    setAttempts(0);\n    setGameComplete(false);\n  };\n\n  const getButtonStatus = (itemId: string, type: 'award' | 'category') => {\n    const isMatched = matchedItems.has(itemId);\n    const isSelected = type === 'award' ? selectedAward?.id === itemId : selectedCategory?.id === itemId;\n    const isIncorrect = incorrectAttempts.has(itemId);\n    const isRecentMatch = isMatched && matchedItems.has(itemId);\n    \n    return { isMatched, isSelected, isIncorrect, isRecentMatch };\n  };\n\n  const handleAwardSelect = (award: CulturalAwardPair) => {\n    if (matchedItems.has(award.id)) return;\n    setSelectedAward(award);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handleCategorySelect = (category: CulturalAwardPair) => {\n    if (matchedItems.has(category.id)) return;\n    setSelectedCategory(category);\n    setIncorrectAttempts(new Set());\n  };\n\n  useEffect(() => {\n    if (selectedAward && selectedCategory) {\n      setAttempts(prev => prev + 1);\n      \n      if (selectedAward.id === selectedCategory.id) {\n        // Correct match!\n        celebrateWithTheme('cultural');\n        setMatchedItems(prev => new Set(Array.from(prev).concat(selectedAward.id)));\n        setScore(prev => prev + 1);\n        \n        // Check if game is complete\n        if (matchedItems.size + 1 >= filteredData.length) {\n          setGameComplete(true);\n          setTimeout(() => celebrateWithTheme('cultural'), 500);\n        }\n      } else {\n        // Incorrect match\n        const incorrectIds = new Set([selectedAward.id, selectedCategory.id]);\n        setIncorrectAttempts(incorrectIds);\n        \n        setTimeout(() => {\n          setIncorrectAttempts(new Set());\n        }, 3000);\n      }\n      \n      // Reset selections\n      setTimeout(() => {\n        setSelectedAward(null);\n        setSelectedCategory(null);\n      }, incorrectAttempts.size > 0 ? 3000 : 1000);\n    }\n  }, [selectedAward, selectedCategory, matchedItems.size, filteredData.length]);\n\n  const sortedAwards = [...shuffledAwards.filter(item => !matchedItems.has(item.id)), \n                      ...shuffledAwards.filter(item => matchedItems.has(item.id))];\n  const sortedCategories = [...shuffledCategories.filter(item => !matchedItems.has(item.id)), \n                           ...shuffledCategories.filter(item => matchedItems.has(item.id))];\n\n  const accuracy = attempts > 0 ? Math.round((score / attempts) * 100) : 0;\n\n  return (\n    <div className=\"w-full max-w-6xl mx-auto p-4\">\n      {/* Header */}\n      <div className=\"text-center mb-6\">\n        <div className=\"flex items-center justify-center gap-2 mb-4\">\n          <Award className=\"h-6 w-6 text-purple-600\" />\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n            UK Cultural Awards Matching Challenge\n          </h2>\n        </div>\n        <p className=\"text-gray-600 dark:text-gray-300 mb-4\">\n          Match British cultural awards with their categories. Learn about prestigious honors in theatre, music, literature, and the arts.\n        </p>\n      </div>\n\n      {/* Controls */}\n      <div className=\"flex flex-wrap items-center justify-between gap-4 mb-6\">\n        <div className=\"flex flex-wrap gap-2\">\n          <label className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Filter by Category:</label>\n          {categories.map(category => (\n            <Button\n              key={category}\n              onClick={() => setCategoryFilter(category)}\n              variant={categoryFilter === category ? \"default\" : \"outline\"}\n              size=\"sm\"\n            >\n              {category}\n            </Button>\n          ))}\n        </div>\n        \n        <div className=\"flex gap-2\">\n          <Button\n            onClick={() => setShowReference(!showReference)}\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"flex items-center gap-2\"\n          >\n            <Info className=\"h-4 w-4\" />\n            {showReference ? \"Hide\" : \"Show\"} Awards Reference\n          </Button>\n          <Button\n            onClick={resetGame}\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"flex items-center gap-2\"\n          >\n            <RotateCcw className=\"h-4 w-4\" />\n            Reset Game\n          </Button>\n        </div>\n      </div>\n\n      {/* Reference Panel */}\n      {showReference && (\n        <Card className=\"mb-6\">\n          <CardHeader>\n            <CardTitle className=\"text-lg\">UK Cultural Awards Reference</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {culturalAwardData.map((award) => (\n                <div key={award.id} className=\"p-3 border rounded-lg\">\n                  <h4 className=\"font-semibold text-sm\">{award.award}</h4>\n                  <Badge className={`text-xs mb-2 ${categoryColors[award.category as keyof typeof categoryColors]}`}>\n                    {award.category}\n                  </Badge>\n                  <p className=\"text-xs text-gray-600 dark:text-gray-400 mb-1\">{award.description}</p>\n                  <p className=\"text-xs text-gray-500 dark:text-gray-500\">{award.significance}</p>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Game Stats */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n        <Card>\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold text-purple-600\">{score}</p>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">Correct Matches</p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold text-blue-600\">{attempts}</p>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Attempts</p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold text-green-600\">{accuracy}%</p>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">Accuracy</p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold text-amber-600\">{filteredData.length - matchedItems.size}</p>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">Remaining</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Game Complete Message */}\n      {gameComplete && (\n        <Card className=\"mb-6 bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-800\">\n          <CardContent className=\"p-4 text-center\">\n            <h3 className=\"text-lg font-bold text-green-800 dark:text-green-300 mb-2\">\n              🎉 Congratulations! You've mastered UK Cultural Awards!\n            </h3>\n            <p className=\"text-green-700 dark:text-green-400\">\n              Final Score: {score}/{filteredData.length} ({accuracy}% accuracy)\n            </p>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Matching Game Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        {/* Awards Column */}\n        <div>\n          <h4 className=\"text-lg font-semibold mb-4 text-center text-purple-700 dark:text-purple-300\">\n            British Cultural Awards ({filteredData.length})\n          </h4>\n          <div className=\"space-y-2\">\n            {sortedAwards.map((item) => {\n              const status = getButtonStatus(item.id, 'award');\n              return (\n                <Button\n                  key={item.id}\n                  onClick={() => handleAwardSelect(item)}\n                  disabled={status.isMatched}\n                  className={`\n                    w-full p-4 h-20 text-left transition-all duration-300 relative flex flex-col justify-center\n                    ${status.isMatched \n                      ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 border-green-300 dark:border-green-700' \n                      : status.isSelected\n                      ? 'bg-purple-100 dark:bg-purple-900/30 text-purple-800 dark:text-purple-200 border-purple-300 dark:border-purple-700'\n                      : status.isIncorrect\n                      ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 border-red-300 dark:border-red-700'\n                      : 'bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700'\n                    }\n                    ${status.isRecentMatch ? 'animate-pulse ring-2 ring-green-400' : ''}\n                  `}\n                >\n                  <div className=\"font-medium text-sm\">{item.award}</div>\n                  <div className=\"text-xs opacity-75\">{item.frequency}</div>\n                </Button>\n              );\n            })}\n          </div>\n        </div>\n\n        {/* Categories Column */}\n        <div>\n          <h4 className=\"text-lg font-semibold mb-4 text-center text-purple-700 dark:text-purple-300\">\n            Award Categories ({filteredData.length})\n          </h4>\n          <div className=\"space-y-2\">\n            {sortedCategories.map((item) => {\n              const status = getButtonStatus(item.id, 'category');\n              return (\n                <Button\n                  key={item.id}\n                  onClick={() => handleCategorySelect(item)}\n                  disabled={status.isMatched}\n                  className={`\n                    w-full p-4 h-20 text-left transition-all duration-300 relative flex flex-col justify-center\n                    ${status.isMatched \n                      ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 border-green-300 dark:border-green-700' \n                      : status.isSelected\n                      ? 'bg-purple-100 dark:bg-purple-900/30 text-purple-800 dark:text-purple-200 border-purple-300 dark:border-purple-700'\n                      : status.isIncorrect\n                      ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 border-red-300 dark:border-red-700'\n                      : 'bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700'\n                    }\n                    ${status.isRecentMatch ? 'animate-pulse ring-2 ring-green-400' : ''}\n                  `}\n                >\n                  <div className=\"flex items-center gap-2 mb-1\">\n                    <Badge className={`text-xs ${categoryColors[item.category as keyof typeof categoryColors]}`}>\n                      {item.category}\n                    </Badge>\n                  </div>\n                  <div className=\"text-xs opacity-75\">{item.description}</div>\n                </Button>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n\n      {/* Instructions */}\n      <Card className=\"mt-8\">\n        <CardContent className=\"p-4\">\n          <h4 className=\"font-semibold mb-2\">How to Play:</h4>\n          <ul className=\"text-sm text-gray-600 dark:text-gray-400 space-y-1\">\n            <li>• Click one award from the left column and one category from the right column</li>\n            <li>• Correct matches turn green and move to the bottom</li>\n            <li>• Incorrect matches briefly turn red - try again!</li>\n            <li>• Use category filters to focus on specific types of awards</li>\n            <li>• Check the reference panel to learn about each award's significance</li>\n          </ul>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":18781},"client/src/components/uk-interactive-map.tsx":{"content":"import { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Map, Users, BookOpen, Landmark, Crown, Filter } from \"lucide-react\";\n\ninterface MapLocation {\n  id: string;\n  name: string;\n  region: string;\n  type: 'capital' | 'attraction' | 'historical' | 'artistic' | 'literary';\n  coordinates: { x: number; y: number }; // Percentage positioning on the detailed map\n  description: string;\n  details: string;\n  notablePeople?: string[];\n  lifeInUKInfo?: {\n    population?: string;\n    government?: string;\n    culture?: string;\n    economy?: string;\n    testRelevance?: string;\n  };\n}\n\nconst mapLocations: MapLocation[] = [\n  // Capitals\n  {\n    id: \"1\",\n    name: \"London\",\n    region: \"England\",\n    type: \"capital\",\n    coordinates: { x: 55, y: 85 },\n    description: \"Capital of England and the UK\",\n    details: \"Seat of government, monarchy, and Parliament. Population over 9 million.\",\n    notablePeople: [\"Charles Dickens\", \"William Shakespeare\", \"Virginia Woolf\", \"J.M.W. Turner\", \"David Hockney\"],\n    lifeInUKInfo: {\n      population: \"9.5 million (Greater London), largest city in UK\",\n      government: \"Houses of Parliament, Prime Minister's residence at 10 Downing Street, Buckingham Palace\",\n      culture: \"Financial center, West End theatres, numerous museums (British Museum, Tate Modern, National Gallery)\",\n      economy: \"Major global financial center, contributes 22% of UK's GDP\",\n      testRelevance: \"Essential for Life in UK test - seat of government, monarchy, Parliament, and cultural institutions\"\n    }\n  },\n  {\n    id: \"2\",\n    name: \"Belfast\",\n    region: \"Northern Ireland\",\n    type: \"capital\",\n    coordinates: { x: 27, y: 40 },\n    description: \"Capital of Northern Ireland\",\n    details: \"Major port city, shipbuilding heritage including RMS Titanic construction.\",\n    notablePeople: [\"C.S. Lewis\", \"Seamus Heaney\", \"Van Morrison\", \"Kenneth Branagh\"],\n    lifeInUKInfo: {\n      population: \"345,000 (Belfast), 1.9 million (Northern Ireland)\",\n      government: \"Northern Ireland Assembly at Stormont, power-sharing government\",\n      culture: \"Titanic Belfast museum, Ulster Museum, strong Irish and British cultural traditions\",\n      economy: \"Aerospace, shipbuilding, textiles, and tourism industries\",\n      testRelevance: \"Important for understanding Northern Ireland's role in UK, history of Troubles, Good Friday Agreement\"\n    }\n  },\n\n  // Major Attractions\n  {\n    id: \"3\",\n    name: \"Stonehenge\",\n    region: \"Wiltshire\",\n    type: \"attraction\",\n    coordinates: { x: 58, y: 95 },\n    description: \"Prehistoric stone circle\",\n    details: \"5,000-year-old Neolithic monument, UNESCO World Heritage Site.\"\n  },\n  {\n    id: \"4\",\n    name: \"Lake District\",\n    region: \"Cumbria\",\n    type: \"attraction\",\n    coordinates: { x: 45, y: 58 },\n    description: \"National park with lakes and mountains\",\n    details: \"UNESCO World Heritage cultural landscape, inspiration for Romantic poets.\",\n    notablePeople: [\"William Wordsworth\", \"Samuel Taylor Coleridge\", \"Beatrix Potter\"]\n  },\n  {\n    id: \"5\",\n    name: \"Giant's Causeway\",\n    region: \"County Antrim\",\n    type: \"attraction\",\n    coordinates: { x: 30, y: 35 },\n    description: \"Hexagonal basalt columns\",\n    details: \"40,000 interlocking columns formed by volcanic activity, UNESCO World Heritage Site.\"\n  },\n\n  // Historical Locations\n  {\n    id: \"6\",\n    name: \"Canterbury\",\n    region: \"Kent\",\n    type: \"historical\",\n    coordinates: { x: 75, y: 95 },\n    description: \"Historic cathedral city\",\n    details: \"Canterbury Cathedral, seat of Archbishop, pilgrimage destination since medieval times.\",\n    notablePeople: [\"Geoffrey Chaucer\", \"Thomas à Becket\"]\n  },\n  {\n    id: \"7\",\n    name: \"Bath\",\n    region: \"Somerset\",\n    type: \"historical\",\n    coordinates: { x: 52, y: 88 },\n    description: \"Roman spa town\",\n    details: \"Roman Baths, Georgian architecture, UNESCO World Heritage Site.\",\n    notablePeople: [\"Jane Austen\", \"Richard Brinsley Sheridan\"],\n    lifeInUKInfo: {\n      population: \"94,000 residents\",\n      government: \"Local council, part of Somerset county\",\n      culture: \"Roman heritage site, Georgian architecture, Jane Austen Centre\",\n      economy: \"Tourism, education (University of Bath), technology\",\n      testRelevance: \"Important for understanding Roman Britain, Georgian period, and World Heritage sites\"\n    }\n  },\n  {\n    id: \"8\",\n    name: \"York\",\n    region: \"Yorkshire\",\n    type: \"historical\",\n    coordinates: { x: 60, y: 68 },\n    description: \"Medieval walled city\",\n    details: \"York Minster, Viking heritage, well-preserved medieval walls.\"\n  },\n  {\n    id: \"9\",\n    name: \"Edinburgh\",\n    region: \"Scotland\",\n    type: \"historical\",\n    coordinates: { x: 50, y: 40 },\n    description: \"Historic Scottish capital\",\n    details: \"Edinburgh Castle, Royal Mile, UNESCO World Heritage Old and New Towns.\",\n    notablePeople: [\"Sir Walter Scott\", \"Robert Louis Stevenson\", \"Sir Arthur Conan Doyle\"],\n    lifeInUKInfo: {\n      population: \"540,000 (Edinburgh), 5.5 million (Scotland)\",\n      government: \"Scottish Parliament at Holyrood, devolved powers for Scotland\",\n      culture: \"Edinburgh Festival, Royal Mile, Edinburgh Castle, Scottish traditions\",\n      economy: \"Financial services, tourism, education, technology sector\",\n      testRelevance: \"Key for Scottish devolution, history, culture, and role in the UK union\"\n    }\n  },\n\n  // Artistic Regions\n  {\n    id: \"10\",\n    name: \"Cornwall\",\n    region: \"Cornwall\",\n    type: \"artistic\",\n    coordinates: { x: 30, y: 105 },\n    description: \"Artistic peninsula\",\n    details: \"St Ives art colony, dramatic coastlines inspiring generations of artists.\",\n    notablePeople: [\"Barbara Hepworth\", \"Ben Nicholson\", \"Patrick Heron\", \"Daphne du Maurier\"]\n  },\n  {\n    id: \"11\",\n    name: \"Stratford-upon-Avon\",\n    region: \"Warwickshire\",\n    type: \"literary\",\n    coordinates: { x: 55, y: 82 },\n    description: \"Shakespeare's birthplace\",\n    details: \"Home of William Shakespeare, Royal Shakespeare Company theatre.\",\n    notablePeople: [\"William Shakespeare\"]\n  },\n  {\n    id: \"12\",\n    name: \"Haworth\",\n    region: \"West Yorkshire\",\n    type: \"literary\",\n    coordinates: { x: 58, y: 65 },\n    description: \"Brontë sisters' home\",\n    details: \"Parsonage home of the Brontë family, moorland setting for their novels.\",\n    notablePeople: [\"Charlotte Brontë\", \"Emily Brontë\", \"Anne Brontë\"]\n  },\n  {\n    id: \"13\",\n    name: \"Oxford\",\n    region: \"Oxfordshire\",\n    type: \"literary\",\n    coordinates: { x: 60, y: 85 },\n    description: \"City of dreaming spires\",\n    details: \"University city, oldest English-speaking university, literary heritage.\",\n    notablePeople: [\"Lewis Carroll\", \"J.R.R. Tolkien\", \"C.S. Lewis\", \"Oscar Wilde\", \"Percy Shelley\"]\n  },\n  {\n    id: \"14\",\n    name: \"Cambridge\",\n    region: \"Cambridgeshire\",\n    type: \"literary\",\n    coordinates: { x: 68, y: 82 },\n    description: \"University city\",\n    details: \"Cambridge University, scientific and literary achievements.\",\n    notablePeople: [\"Lord Byron\", \"Sylvia Plath\", \"Stephen Hawking\", \"John Milton\"]\n  },\n  {\n    id: \"15\",\n    name: \"Glasgow\",\n    region: \"Scotland\",\n    type: \"artistic\",\n    coordinates: { x: 42, y: 45 },\n    description: \"Cultural powerhouse\",\n    details: \"Glasgow School of Art, Charles Rennie Mackintosh architecture, vibrant arts scene.\",\n    notablePeople: [\"Charles Rennie Mackintosh\", \"The Glasgow Boys\", \"Ken Currie\"]\n  },\n  {\n    id: \"16\",\n    name: \"Liverpool\",\n    region: \"Merseyside\",\n    type: \"artistic\",\n    coordinates: { x: 48, y: 70 },\n    description: \"Musical heritage city\",\n    details: \"Birthplace of The Beatles, UNESCO World Heritage maritime mercantile city.\",\n    notablePeople: [\"The Beatles\", \"Gerry Marsden\", \"Cilla Black\"]\n  },\n  {\n    id: \"17\",\n    name: \"Birmingham\",\n    region: \"West Midlands\",\n    type: \"literary\",\n    coordinates: { x: 58, y: 80 },\n    description: \"Industrial heritage\",\n    details: \"Second largest city, birthplace of heavy metal music, literary connections.\",\n    notablePeople: [\"J.R.R. Tolkien\", \"Louis MacNeice\", \"David Lodge\"]\n  },\n  {\n    id: \"18\",\n    name: \"Manchester\",\n    region: \"Greater Manchester\",\n    type: \"artistic\",\n    coordinates: { x: 52, y: 70 },\n    description: \"Industrial revolution city\",\n    details: \"Cotton mills, music scene, vibrant cultural quarter.\",\n    notablePeople: [\"L.S. Lowry\", \"The Smiths\", \"Oasis\", \"Joy Division\"]\n  }\n];\n\ninterface UKInteractiveMapProps {\n  userId: string;\n}\n\nexport default function UKInteractiveMap({ userId }: UKInteractiveMapProps) {\n  const [selectedLocation, setSelectedLocation] = useState<MapLocation | null>(null);\n  const [filterType, setFilterType] = useState<string>('all');\n\n  const types = ['all', 'capital', 'attraction', 'historical', 'artistic', 'literary'];\n\n  const getFilteredLocations = () => {\n    if (filterType === 'all') return mapLocations;\n    return mapLocations.filter(location => location.type === filterType);\n  };\n\n  const getTypeColor = (type: string) => {\n    const colors = {\n      capital: 'bg-red-500',\n      attraction: 'bg-green-500',\n      historical: 'bg-blue-500',\n      artistic: 'bg-purple-500',\n      literary: 'bg-orange-500'\n    };\n    return colors[type as keyof typeof colors] || 'bg-gray-500';\n  };\n\n  const getTypeLabel = (type: string) => {\n    const labels = {\n      capital: 'Capital',\n      attraction: 'Attraction',\n      historical: 'Historical',\n      artistic: 'Artistic',\n      literary: 'Literary'\n    };\n    return labels[type as keyof typeof labels] || type;\n  };\n\n  const filteredLocations = getFilteredLocations();\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <div className=\"flex items-center gap-3\">\n          <Map className=\"h-6 w-6 text-blue-600\" />\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-900\">Interactive UK Map</h3>\n            <p className=\"text-sm text-gray-600\">Explore capitals, attractions, historical sites, and cultural regions</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"flex flex-wrap gap-2 items-center\">\n        <Filter className=\"h-4 w-4 text-gray-500\" />\n        <span className=\"text-sm font-medium text-gray-700\">Show:</span>\n        {types.map(type => (\n          <Badge\n            key={type}\n            variant={filterType === type ? \"default\" : \"outline\"}\n            className={`cursor-pointer transition-colors ${\n              filterType === type \n                ? 'bg-blue-600 text-white' \n                : 'hover:bg-blue-100'\n            }`}\n            onClick={() => setFilterType(type)}\n          >\n            {type === 'all' ? 'All Locations' : getTypeLabel(type)}\n          </Badge>\n        ))}\n      </div>\n\n      {/* Legend */}\n      <Card className=\"bg-gray-50\">\n        <CardContent className=\"p-4\">\n          <h4 className=\"font-semibold text-gray-900 mb-3\">Map Legend:</h4>\n          <div className=\"grid grid-cols-2 md:grid-cols-5 gap-3\">\n            {types.slice(1).map(type => (\n              <div key={type} className=\"flex items-center gap-2\">\n                <div className={`w-4 h-4 rounded-full ${getTypeColor(type)}`}></div>\n                <span className=\"text-sm text-gray-700\">{getTypeLabel(type)}</span>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Interactive Map */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Map Container */}\n        <Card className=\"h-96 lg:h-[700px]\">\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Map className=\"h-4 w-4 text-blue-600\" />\n              UK & Northern Ireland Map\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"relative h-full p-4\">\n            {/* Enhanced UK Map with Accurate Borders */}\n            <div className=\"relative w-full h-full bg-gradient-to-b from-blue-100 to-blue-50 rounded-lg border-2 border-gray-300 overflow-hidden shadow-inner\">\n              {/* Authentic UK Map SVG - Based on Real Geographic Coordinates */}\n              <svg className=\"absolute inset-0 w-full h-full\" viewBox=\"0 0 400 500\" preserveAspectRatio=\"xMidYMid meet\">\n                <defs>\n                  <linearGradient id=\"oceanGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                    <stop offset=\"0%\" stopColor=\"#dbeafe\" />\n                    <stop offset=\"50%\" stopColor=\"#93c5fd\" />\n                    <stop offset=\"100%\" stopColor=\"#60a5fa\" />\n                  </linearGradient>\n                  <linearGradient id=\"englandFill\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                    <stop offset=\"0%\" stopColor=\"#fef3c7\" />\n                    <stop offset=\"100%\" stopColor=\"#fbbf24\" />\n                  </linearGradient>\n                  <linearGradient id=\"scotlandFill\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                    <stop offset=\"0%\" stopColor=\"#e0e7ff\" />\n                    <stop offset=\"100%\" stopColor=\"#8b5cf6\" />\n                  </linearGradient>\n                  <linearGradient id=\"walesFill\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                    <stop offset=\"0%\" stopColor=\"#dcfce7\" />\n                    <stop offset=\"100%\" stopColor=\"#22c55e\" />\n                  </linearGradient>\n                  <linearGradient id=\"nirelandFill\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                    <stop offset=\"0%\" stopColor=\"#fed7aa\" />\n                    <stop offset=\"100%\" stopColor=\"#f97316\" />\n                  </linearGradient>\n                  <filter id=\"countryShadow\">\n                    <feDropShadow dx=\"1\" dy=\"1\" stdDeviation=\"1\" floodColor=\"rgba(0,0,0,0.2)\"/>\n                  </filter>\n                </defs>\n\n                {/* Ocean Background */}\n                <rect width=\"400\" height=\"500\" fill=\"url(#oceanGradient)\" />\n\n                {/* England - Authentic Shape */}\n                <path d=\"M 280 280 L 285 275 L 290 270 L 295 265 L 300 260 L 305 258 L 310 256 L 315 255 L 320 254 L 325 253 L 330 252 L 335 251 L 340 252 L 345 254 L 350 257 L 355 260 L 360 265 L 365 270 L 370 275 L 375 280 L 380 285 L 385 290 L 390 295 L 395 300 L 398 305 L 399 310 L 398 315 L 396 320 L 394 325 L 391 330 L 388 335 L 384 340 L 380 344 L 375 348 L 370 351 L 365 354 L 360 356 L 355 358 L 350 359 L 345 360 L 340 361 L 335 362 L 330 363 L 325 364 L 320 365 L 315 366 L 310 367 L 305 368 L 300 369 L 295 370 L 290 371 L 285 372 L 280 373 L 275 374 L 270 375 L 265 376 L 260 377 L 255 378 L 250 379 L 245 380 L 240 381 L 235 382 L 230 383 L 225 384 L 220 385 L 215 386 L 210 387 L 205 388 L 200 389 L 195 390 L 190 391 L 185 392 L 180 393 L 175 394 L 170 395 L 165 396 L 160 397 L 155 398 L 150 399 L 145 400 L 140 401 L 135 402 L 130 401 L 125 400 L 120 398 L 115 396 L 110 393 L 105 390 L 100 386 L 95 382 L 90 377 L 85 372 L 80 366 L 75 360 L 70 353 L 65 346 L 60 338 L 55 330 L 50 321 L 45 312 L 40 302 L 35 292 L 30 281 L 25 270 L 20 258 L 15 246 L 10 233 L 5 220 L 2 206 L 1 192 L 2 178 L 5 164 L 10 150 L 15 136 L 20 122 L 25 108 L 30 94 L 35 80 L 40 66 L 45 52 L 50 38 L 55 24 L 60 10 L 70 15 L 80 20 L 90 25 L 100 30 L 110 35 L 120 40 L 130 45 L 140 50 L 150 55 L 160 60 L 170 65 L 180 70 L 190 75 L 200 80 L 210 85 L 220 90 L 230 95 L 240 100 L 250 105 L 260 110 L 270 115 L 275 120 L 278 125 L 279 130 L 278 135 L 276 140 L 274 145 L 271 150 L 268 155 L 265 160 L 262 165 L 259 170 L 256 175 L 253 180 L 250 185 L 247 190 L 244 195 L 241 200 L 238 205 L 235 210 L 232 215 L 229 220 L 226 225 L 223 230 L 220 235 L 217 240 L 214 245 L 211 250 L 208 255 L 205 260 L 202 265 L 199 270 L 196 275 L 195 280 L 196 285 L 198 290 L 201 295 L 205 300 L 210 305 L 216 310 L 223 315 L 231 320 L 240 325 L 250 330 L 261 335 L 273 340 L 286 345 L 300 350 L 315 355 L 331 360 L 348 365 L 366 370 L 385 375 L 405 380 L 426 385 L 448 390 L 471 395 L 495 400 L 145 420 L 140 415 L 135 410 L 130 405 L 125 400 L 120 395 L 115 390 L 110 385 L 105 380 L 100 375 L 95 370 L 90 365 L 85 360 L 80 355 L 75 350 L 70 345 L 65 340 L 60 335 L 55 330 L 50 325 L 45 320 L 40 315 L 35 310 L 30 305 L 25 300 L 20 295 L 15 290 L 10 285 L 8 280 L 10 275 L 15 270 L 22 265 L 30 260 L 39 255 L 49 250 L 60 245 L 72 240 L 85 235 L 99 230 L 114 225 L 130 220 L 147 215 L 165 210 L 184 205 L 204 200 L 225 195 L 247 190 L 270 185 L 294 180 L 319 175 L 345 170 L 372 165 L 400 160 Z\"\n                  fill=\"url(#englandFill)\" \n                  stroke=\"#d97706\" \n                  strokeWidth=\"2\" \n                  filter=\"url(#countryShadow)\"\n                />\n\n                {/* Scotland - Authentic Shape with Highlands */}\n                <path d=\"M 200 50 L 205 45 L 210 40 L 215 35 L 220 30 L 225 25 L 230 20 L 235 15 L 240 10 L 245 8 L 250 6 L 255 5 L 260 4 L 265 3 L 270 2 L 275 1 L 280 1 L 285 2 L 290 3 L 295 5 L 300 7 L 305 10 L 310 13 L 315 17 L 320 21 L 325 26 L 330 31 L 335 37 L 340 43 L 345 50 L 350 57 L 355 65 L 360 73 L 365 82 L 370 91 L 375 101 L 380 111 L 385 122 L 390 133 L 395 145 L 398 157 L 399 170 L 398 183 L 396 196 L 393 209 L 389 222 L 384 235 L 378 247 L 371 259 L 363 270 L 354 280 L 344 289 L 333 297 L 321 304 L 308 310 L 294 315 L 279 319 L 263 322 L 246 324 L 228 325 L 210 325 L 191 324 L 172 322 L 153 319 L 134 315 L 115 310 L 96 304 L 77 297 L 58 289 L 39 280 L 20 270 L 10 259 L 5 247 L 2 235 L 1 222 L 2 209 L 5 196 L 10 183 L 17 170 L 26 157 L 37 145 L 50 133 L 65 122 L 82 111 L 101 101 L 122 91 L 145 82 L 170 73 L 197 65 L 226 57 L 257 50 Z\"\n                  fill=\"url(#scotlandFill)\" \n                  stroke=\"#6366f1\" \n                  strokeWidth=\"2\" \n                  filter=\"url(#countryShadow)\"\n                />\n\n                {/* Wales - Authentic Shape */}\n                <path d=\"M 120 300 L 125 295 L 130 290 L 135 285 L 140 280 L 145 275 L 150 270 L 155 265 L 160 260 L 165 255 L 170 250 L 175 245 L 180 240 L 185 235 L 190 230 L 195 225 L 200 220 L 205 215 L 210 210 L 215 205 L 220 200 L 225 195 L 230 190 L 235 185 L 240 180 L 245 175 L 250 170 L 255 165 L 260 160 L 265 155 L 270 150 L 275 145 L 280 140 L 285 135 L 290 130 L 295 125 L 300 120 L 305 115 L 310 110 L 315 105 L 320 100 L 325 95 L 330 90 L 335 85 L 340 80 L 345 75 L 350 70 L 355 65 L 360 60 L 365 55 L 370 50 L 90 280 L 85 285 L 80 290 L 75 295 L 70 300 L 65 305 L 60 310 L 55 315 L 50 320 L 45 325 L 40 330 L 35 335 L 30 340 L 25 345 L 20 350 L 15 355 L 10 360 L 8 365 L 7 370 L 8 375 L 10 380 L 13 385 L 17 390 L 22 395 L 28 400 L 35 405 L 43 410 L 52 415 L 62 420 L 73 425 L 85 430 L 98 435 L 112 440 L 127 445 L 143 450 L 160 455 L 178 460 Z\"\n                  fill=\"url(#walesFill)\" \n                  stroke=\"#059669\" \n                  strokeWidth=\"2\" \n                  filter=\"url(#countryShadow)\"\n                />\n\n                {/* Northern Ireland - Authentic Shape */}\n                <path d=\"M 80 180 L 85 175 L 90 170 L 95 165 L 100 160 L 105 155 L 110 150 L 115 145 L 120 140 L 125 135 L 130 130 L 135 125 L 140 120 L 145 115 L 150 110 L 155 105 L 160 100 L 165 95 L 170 90 L 175 85 L 180 80 L 185 75 L 190 70 L 195 65 L 200 60 L 205 55 L 210 50 L 40 140 L 35 145 L 30 150 L 25 155 L 20 160 L 15 165 L 10 170 L 8 175 L 7 180 L 8 185 L 10 190 L 13 195 L 17 200 L 22 205 L 28 210 L 35 215 L 43 220 L 52 225 L 62 230 L 73 235 L 85 240 Z\"\n                  fill=\"url(#nirelandFill)\" \n                  stroke=\"#ea580c\" \n                  strokeWidth=\"2\" \n                  filter=\"url(#countryShadow)\"\n                />\n\n                {/* Scottish Islands */}\n                <g id=\"scottishIslands\">\n                  {/* Outer Hebrides */}\n                  <path d=\"M 30 80 L 35 78 L 40 76 L 45 74 L 50 72 L 55 70 L 60 68 L 65 66 L 70 64 L 75 62 L 80 60 L 25 120 L 20 122 L 15 124 L 10 126 L 8 128 L 7 130 L 8 132 L 10 134 L 13 136 L 17 138 L 22 140 L 28 142 Z\" fill=\"url(#scotlandFill)\" stroke=\"#6366f1\" strokeWidth=\"1\"/>\n                  \n                  {/* Orkney Islands */}\n                  <ellipse cx=\"280\" cy=\"25\" rx=\"8\" ry=\"4\" fill=\"url(#scotlandFill)\" stroke=\"#6366f1\" strokeWidth=\"1\"/>\n                  \n                  {/* Shetland Islands */}\n                  <ellipse cx=\"300\" cy=\"10\" rx=\"6\" ry=\"8\" fill=\"url(#scotlandFill)\" stroke=\"#6366f1\" strokeWidth=\"1\"/>\n                </g>\n\n                {/* English Islands */}\n                <g id=\"englishIslands\">\n                  {/* Isle of Wight */}\n                  <ellipse cx=\"280\" cy=\"420\" rx=\"8\" ry=\"3\" fill=\"url(#englandFill)\" stroke=\"#d97706\" strokeWidth=\"1\"/>\n                  \n                  {/* Isles of Scilly */}\n                  <circle cx=\"50\" cy=\"450\" r=\"3\" fill=\"url(#englandFill)\" stroke=\"#d97706\" strokeWidth=\"1\"/>\n                </g>\n\n                {/* Country Labels */}\n                <text x=\"250\" y=\"300\" fontSize=\"20\" fill=\"#b45309\" fontWeight=\"bold\" textAnchor=\"middle\">ENGLAND</text>\n                <text x=\"200\" y=\"150\" fontSize=\"18\" fill=\"#4338ca\" fontWeight=\"bold\" textAnchor=\"middle\">SCOTLAND</text>\n                <text x=\"120\" y=\"350\" fontSize=\"16\" fill=\"#047857\" fontWeight=\"bold\" textAnchor=\"middle\">WALES</text>\n                <text x=\"80\" y=\"180\" fontSize=\"14\" fill=\"#c2410c\" fontWeight=\"bold\" textAnchor=\"middle\">NORTHERN</text>\n                <text x=\"80\" y=\"200\" fontSize=\"14\" fill=\"#c2410c\" fontWeight=\"bold\" textAnchor=\"middle\">IRELAND</text>\n\n                {/* Water Bodies */}\n                <text x=\"20\" y=\"250\" fontSize=\"12\" fill=\"#1e40af\" textAnchor=\"middle\" transform=\"rotate(-90 20 250)\">Irish Sea</text>\n                <text x=\"380\" y=\"200\" fontSize=\"12\" fill=\"#1e40af\" textAnchor=\"middle\" transform=\"rotate(90 380 200)\">North Sea</text>\n                <text x=\"250\" y=\"480\" fontSize=\"12\" fill=\"#1e40af\" textAnchor=\"middle\">English Channel</text>\n\n                {/* Life in UK Test Information Markers */}\n                <g id=\"lifeInUKInfo\">\n                  {/* Population centers marker */}\n                  <circle cx=\"55\" y=\"85\" r=\"1.5\" fill=\"#ef4444\" stroke=\"#ffffff\" strokeWidth=\"0.3\" opacity=\"0.9\" />\n                  <text x=\"55\" y=\"89\" fontSize=\"1.5\" fill=\"#dc2626\" fontWeight=\"bold\" textAnchor=\"middle\">9M+</text>\n                  \n                  {/* Government marker */}\n                  <rect x=\"53\" y=\"86\" width=\"4\" height=\"2\" fill=\"#7c3aed\" stroke=\"#ffffff\" strokeWidth=\"0.2\" opacity=\"0.9\" />\n                  <text x=\"55\" y=\"91\" fontSize=\"1.2\" fill=\"#7c3aed\" fontWeight=\"bold\" textAnchor=\"middle\">PARL</text>\n                </g>\n\n                {/* Border demarcation lines */}\n                <g id=\"borders\">\n                  <path d=\"M 40 65 L 30 72\" stroke=\"#374151\" strokeWidth=\"1.5\" strokeDasharray=\"3,2\" opacity=\"0.8\" />\n                  <path d=\"M 40 65 L 40 62\" stroke=\"#374151\" strokeWidth=\"1.5\" strokeDasharray=\"3,2\" opacity=\"0.8\" />\n                </g>\n              </svg>\n              \n              {/* Location Markers */}\n              {filteredLocations.map((location) => (\n                <button\n                  key={location.id}\n                  className={`absolute w-6 h-6 rounded-full border-2 border-white shadow-lg transition-all duration-200 hover:scale-125 hover:z-10 ${getTypeColor(location.type)} ${\n                    selectedLocation?.id === location.id ? 'scale-125 z-10 ring-2 ring-yellow-400' : ''\n                  }`}\n                  style={{\n                    left: `${location.coordinates.x}%`,\n                    top: `${location.coordinates.y}%`,\n                    transform: 'translate(-50%, -50%)'\n                  }}\n                  onClick={() => setSelectedLocation(location)}\n                  title={location.name}\n                >\n                  <span className=\"absolute -top-6 left-1/2 transform -translate-x-1/2 text-xs font-semibold text-gray-800 bg-white px-1 rounded shadow-sm whitespace-nowrap opacity-0 hover:opacity-100 transition-opacity\">\n                    {location.id}. {location.name}\n                  </span>\n                </button>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Location Details */}\n        <Card className=\"h-96 lg:h-[700px]\">\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Landmark className=\"h-4 w-4 text-purple-600\" />\n              Location Details\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4 overflow-y-auto h-full\">\n            {selectedLocation ? (\n              <div className=\"space-y-4\">\n                <div>\n                  <div className=\"flex items-center gap-2 mb-2\">\n                    <div className={`w-4 h-4 rounded-full ${getTypeColor(selectedLocation.type)}`}></div>\n                    <h3 className=\"text-lg font-semibold text-gray-900\">{selectedLocation.name}</h3>\n                    <Badge className=\"bg-gray-100 text-gray-800\">{selectedLocation.region}</Badge>\n                  </div>\n                  <Badge className={`${getTypeColor(selectedLocation.type)} text-white`}>\n                    {getTypeLabel(selectedLocation.type)}\n                  </Badge>\n                </div>\n\n                <div>\n                  <h4 className=\"font-medium text-gray-900 mb-1\">Description:</h4>\n                  <p className=\"text-sm text-gray-700\">{selectedLocation.description}</p>\n                </div>\n\n                <div>\n                  <h4 className=\"font-medium text-gray-900 mb-1\">Details:</h4>\n                  <p className=\"text-sm text-gray-700\">{selectedLocation.details}</p>\n                </div>\n\n                {selectedLocation.notablePeople && selectedLocation.notablePeople.length > 0 && (\n                  <div>\n                    <h4 className=\"font-medium text-gray-900 mb-2 flex items-center gap-2\">\n                      {selectedLocation.type === 'artistic' ? (\n                        <>\n                          <Users className=\"h-4 w-4\" />\n                          Notable Artists & Musicians:\n                        </>\n                      ) : (\n                        <>\n                          <BookOpen className=\"h-4 w-4\" />\n                          Notable Writers & Literary Figures:\n                        </>\n                      )}\n                    </h4>\n                    <div className=\"flex flex-wrap gap-1\">\n                      {selectedLocation.notablePeople.map((person, index) => (\n                        <Badge key={index} variant=\"outline\" className=\"text-xs\">\n                          {person}\n                        </Badge>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {selectedLocation.lifeInUKInfo && (\n                  <div className=\"border-t pt-4 mt-4\">\n                    <h4 className=\"font-medium text-gray-900 mb-3 flex items-center gap-2\">\n                      <Crown className=\"h-4 w-4 text-blue-600\" />\n                      Life in UK Test Information:\n                    </h4>\n                    <div className=\"space-y-3\">\n                      {selectedLocation.lifeInUKInfo.population && (\n                        <div>\n                          <h5 className=\"text-sm font-medium text-gray-700\">Population:</h5>\n                          <p className=\"text-sm text-gray-600\">{selectedLocation.lifeInUKInfo.population}</p>\n                        </div>\n                      )}\n                      {selectedLocation.lifeInUKInfo.government && (\n                        <div>\n                          <h5 className=\"text-sm font-medium text-gray-700\">Government:</h5>\n                          <p className=\"text-sm text-gray-600\">{selectedLocation.lifeInUKInfo.government}</p>\n                        </div>\n                      )}\n                      {selectedLocation.lifeInUKInfo.culture && (\n                        <div>\n                          <h5 className=\"text-sm font-medium text-gray-700\">Culture:</h5>\n                          <p className=\"text-sm text-gray-600\">{selectedLocation.lifeInUKInfo.culture}</p>\n                        </div>\n                      )}\n                      {selectedLocation.lifeInUKInfo.economy && (\n                        <div>\n                          <h5 className=\"text-sm font-medium text-gray-700\">Economy:</h5>\n                          <p className=\"text-sm text-gray-600\">{selectedLocation.lifeInUKInfo.economy}</p>\n                        </div>\n                      )}\n                      {selectedLocation.lifeInUKInfo.testRelevance && (\n                        <div className=\"bg-blue-50 p-3 rounded-lg\">\n                          <h5 className=\"text-sm font-medium text-blue-900\">Test Relevance:</h5>\n                          <p className=\"text-sm text-blue-800\">{selectedLocation.lifeInUKInfo.testRelevance}</p>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n              </div>\n            ) : (\n              <div className=\"text-center text-gray-500 mt-8\">\n                <Map className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\n                <p>Click on any numbered marker on the map to learn more about that location</p>\n                <p className=\"text-sm mt-2\">Each number represents different types of important places across the UK</p>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Location List */}\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"text-base flex items-center gap-2\">\n            <Crown className=\"h-4 w-4 text-yellow-600\" />\n            All Locations ({filteredLocations.length})\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3\">\n            {filteredLocations.map((location) => (\n              <button\n                key={location.id}\n                onClick={() => setSelectedLocation(location)}\n                className={`p-3 text-left rounded-lg border transition-all duration-200 hover:shadow-md ${\n                  selectedLocation?.id === location.id \n                    ? 'border-blue-400 bg-blue-50' \n                    : 'border-gray-200 hover:border-gray-300'\n                }`}\n              >\n                <div className=\"flex items-start gap-3\">\n                  <div className={`w-6 h-6 rounded-full flex items-center justify-center text-white text-xs font-bold ${getTypeColor(location.type)}`}>\n                    {location.id}\n                  </div>\n                  <div className=\"flex-1 min-w-0\">\n                    <h4 className=\"font-medium text-gray-900 truncate\">{location.name}</h4>\n                    <p className=\"text-xs text-gray-600\">{location.region}</p>\n                    <Badge className={`mt-1 text-xs ${getTypeColor(location.type)} text-white`}>\n                      {getTypeLabel(location.type)}\n                    </Badge>\n                  </div>\n                </div>\n              </button>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Instructions and UK Facts */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card className=\"bg-blue-50 border-blue-200\">\n          <CardContent className=\"p-4\">\n            <h4 className=\"font-semibold text-blue-900 mb-2\">How to Use the Interactive Map:</h4>\n            <ul className=\"text-sm text-blue-800 space-y-1\">\n              <li>• Click on numbered markers to learn about specific locations</li>\n              <li>• Use filters to show only capitals, attractions, historical sites, artistic regions, or literary locations</li>\n              <li>• Red markers = Capitals, Green = Attractions, Blue = Historical, Purple = Artistic, Orange = Literary</li>\n              <li>• Each location shows notable people from that region when applicable</li>\n              <li>• Enhanced with Life in UK test information including population, government, and cultural data</li>\n            </ul>\n          </CardContent>\n        </Card>\n\n        <Card className=\"bg-green-50 border-green-200\">\n          <CardContent className=\"p-4\">\n            <h4 className=\"font-semibold text-green-900 mb-2\">UK Key Facts for Life in UK Test:</h4>\n            <ul className=\"text-sm text-green-800 space-y-1\">\n              <li>• <strong>Total Population:</strong> 67 million (England: 56M, Scotland: 5.5M, Wales: 3.1M, N. Ireland: 1.9M)</li>\n              <li>• <strong>Capital Cities:</strong> London (England/UK), Edinburgh (Scotland), Cardiff (Wales), Belfast (N. Ireland)</li>\n              <li>• <strong>Official Languages:</strong> English, Welsh (Wales), Gaelic (Scotland), Ulster Scots (N. Ireland)</li>\n              <li>• <strong>Government:</strong> Constitutional monarchy with devolved parliaments</li>\n              <li>• <strong>Currency:</strong> Pound Sterling (£), divided into 100 pence</li>\n            </ul>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}","size_bytes":33336},"client/src/components/uk-memberships-matching.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Shuffle, RotateCcw, Globe, Filter } from \"lucide-react\";\nimport { celebrateWithTheme } from \"@/lib/confetti\";\n\ninterface MembershipData {\n  id: string;\n  organization: string;\n  role: string;\n  details: string;\n  category: 'International' | 'European' | 'Commonwealth' | 'Security' | 'Economic' | 'Cultural' | 'Environmental';\n  joinedYear: string;\n  status: 'Current' | 'Former' | 'Founding';\n}\n\nconst ukMembershipsData: MembershipData[] = [\n  // United Nations System\n  {\n    id: \"1\",\n    organization: \"United Nations (UN)\",\n    role: \"Permanent Security Council Member\",\n    details: \"One of five permanent members with veto power, founding member since 1945\",\n    category: \"International\",\n    joinedYear: \"1945\",\n    status: \"Founding\"\n  },\n  {\n    id: \"2\",\n    organization: \"UNESCO\",\n    role: \"Member State\",\n    details: \"UN Educational, Scientific and Cultural Organization member since 1946\",\n    category: \"Cultural\",\n    joinedYear: \"1946\",\n    status: \"Current\"\n  },\n  {\n    id: \"3\",\n    organization: \"World Health Organization (WHO)\",\n    role: \"Member State\",\n    details: \"UN specialized agency for international public health, member since 1948\",\n    category: \"International\",\n    joinedYear: \"1948\",\n    status: \"Current\"\n  },\n\n  // NATO and Security\n  {\n    id: \"4\",\n    organization: \"NATO\",\n    role: \"Founding Member\",\n    details: \"North Atlantic Treaty Organization founding member, Article 5 collective defense\",\n    category: \"Security\",\n    joinedYear: \"1949\",\n    status: \"Founding\"\n  },\n  {\n    id: \"5\",\n    organization: \"Five Eyes Alliance\",\n    role: \"Founding Member\",\n    details: \"Intelligence sharing agreement with US, Canada, Australia, New Zealand\",\n    category: \"Security\",\n    joinedYear: \"1946\",\n    status: \"Founding\"\n  },\n\n  // Commonwealth\n  {\n    id: \"6\",\n    organization: \"Commonwealth of Nations\",\n    role: \"Head of Commonwealth\",\n    details: \"54 member states, British monarch as Head, evolved from British Empire\",\n    category: \"Commonwealth\",\n    joinedYear: \"1931\",\n    status: \"Founding\"\n  },\n  {\n    id: \"7\",\n    organization: \"Commonwealth Games Federation\",\n    role: \"Founding Member\",\n    details: \"Multi-sport event held every four years, originally British Empire Games\",\n    category: \"Commonwealth\",\n    joinedYear: \"1930\",\n    status: \"Founding\"\n  },\n\n  // European Organizations (Current and Former)\n  {\n    id: \"8\",\n    organization: \"European Union (EU)\",\n    role: \"Former Member\",\n    details: \"Member 1973-2020, left following Brexit referendum and Article 50 process\",\n    category: \"European\",\n    joinedYear: \"1973\",\n    status: \"Former\"\n  },\n  {\n    id: \"9\",\n    organization: \"Council of Europe\",\n    role: \"Founding Member\",\n    details: \"Human rights organization, separate from EU, member since 1949\",\n    category: \"European\",\n    joinedYear: \"1949\",\n    status: \"Founding\"\n  },\n  {\n    id: \"10\",\n    organization: \"European Court of Human Rights\",\n    role: \"Signatory State\",\n    details: \"Subject to ECHR jurisdiction through Council of Europe membership\",\n    category: \"European\",\n    joinedYear: \"1953\",\n    status: \"Current\"\n  },\n\n  // Economic Organizations\n  {\n    id: \"11\",\n    organization: \"G7 (Group of Seven)\",\n    role: \"Founding Member\",\n    details: \"Major advanced economies forum, originally G6 then G7 with Canada\",\n    category: \"Economic\",\n    joinedYear: \"1975\",\n    status: \"Founding\"\n  },\n  {\n    id: \"12\",\n    organization: \"G20\",\n    role: \"Member\",\n    details: \"Group of twenty major economies, represents 80% of global GDP\",\n    category: \"Economic\",\n    joinedYear: \"1999\",\n    status: \"Current\"\n  },\n  {\n    id: \"13\",\n    organization: \"World Trade Organization (WTO)\",\n    role: \"Founding Member\",\n    details: \"Global trade rules organization, founding member since 1995\",\n    category: \"Economic\",\n    joinedYear: \"1995\",\n    status: \"Founding\"\n  },\n  {\n    id: \"14\",\n    organization: \"International Monetary Fund (IMF)\",\n    role: \"Founding Member\",\n    details: \"International financial institution, fourth largest quota holder\",\n    category: \"Economic\",\n    joinedYear: \"1945\",\n    status: \"Founding\"\n  },\n  {\n    id: \"15\",\n    organization: \"World Bank Group\",\n    role: \"Founding Member\",\n    details: \"International financial institution providing loans to developing countries\",\n    category: \"Economic\",\n    joinedYear: \"1945\",\n    status: \"Founding\"\n  },\n\n  // Environmental and Climate\n  {\n    id: \"16\",\n    organization: \"UN Framework Convention on Climate Change\",\n    role: \"Signatory State\",\n    details: \"International environmental treaty addressing climate change since 1992\",\n    category: \"Environmental\",\n    joinedYear: \"1992\",\n    status: \"Current\"\n  },\n  {\n    id: \"17\",\n    organization: \"Paris Agreement\",\n    role: \"Signatory State\",\n    details: \"Climate accord within UNFCCC framework, committed to net zero by 2050\",\n    category: \"Environmental\",\n    joinedYear: \"2016\",\n    status: \"Current\"\n  },\n\n  // Other International Organizations\n  {\n    id: \"18\",\n    organization: \"International Olympic Committee\",\n    role: \"National Olympic Committee\",\n    details: \"British Olympic Association represents UK athletes in Olympic Games\",\n    category: \"Cultural\",\n    joinedYear: \"1905\",\n    status: \"Current\"\n  },\n  {\n    id: \"19\",\n    organization: \"FIFA\",\n    role: \"Four Separate Associations\",\n    details: \"England, Scotland, Wales, Northern Ireland each have separate FIFA membership\",\n    category: \"Cultural\",\n    joinedYear: \"1905\",\n    status: \"Current\"\n  },\n  {\n    id: \"20\",\n    organization: \"Organisation for Economic Co-operation and Development (OECD)\",\n    role: \"Founding Member\",\n    details: \"International economic organization promoting policies for prosperity\",\n    category: \"Economic\",\n    joinedYear: \"1961\",\n    status: \"Founding\"\n  },\n  {\n    id: \"21\",\n    organization: \"Interpol\",\n    role: \"Member Country\",\n    details: \"International Criminal Police Organization for law enforcement cooperation\",\n    category: \"Security\",\n    joinedYear: \"1928\",\n    status: \"Current\"\n  }\n];\n\ninterface UKMembershipsMatchingProps {\n  userId: string;\n}\n\nexport default function UKMembershipsMatching({ userId }: UKMembershipsMatchingProps) {\n  const [organizations, setOrganizations] = useState<MembershipData[]>([]);\n  const [roles, setRoles] = useState<MembershipData[]>([]);\n  const [details, setDetails] = useState<MembershipData[]>([]);\n  const [selectedOrganization, setSelectedOrganization] = useState<MembershipData | null>(null);\n  const [selectedRole, setSelectedRole] = useState<MembershipData | null>(null);\n  const [selectedDetail, setSelectedDetail] = useState<MembershipData | null>(null);\n  const [matchedItems, setMatchedItems] = useState<Set<string>>(new Set());\n  const [incorrectAttempts, setIncorrectAttempts] = useState<Set<string>>(new Set());\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [filterCategory, setFilterCategory] = useState<string>('all');\n  const [filterStatus, setFilterStatus] = useState<string>('all');\n  const [gameComplete, setGameComplete] = useState(false);\n\n  const categories = ['all', 'International', 'European', 'Commonwealth', 'Security', 'Economic', 'Cultural', 'Environmental'];\n  const statuses = ['all', 'Current', 'Former', 'Founding'];\n\n  const getFilteredData = () => {\n    let filtered = ukMembershipsData;\n    \n    if (filterCategory !== 'all') {\n      filtered = filtered.filter(item => item.category === filterCategory);\n    }\n    \n    if (filterStatus !== 'all') {\n      filtered = filtered.filter(item => item.status === filterStatus);\n    }\n    \n    return filtered;\n  };\n\n  const shuffleArray = <T,>(array: T[]): T[] => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  const initializeGame = () => {\n    const filteredData = getFilteredData();\n    setOrganizations(shuffleArray(filteredData));\n    setRoles(shuffleArray(filteredData));\n    setDetails(shuffleArray(filteredData));\n    setMatchedItems(new Set());\n    setIncorrectAttempts(new Set());\n    setSelectedOrganization(null);\n    setSelectedRole(null);\n    setSelectedDetail(null);\n    setScore(0);\n    setAttempts(0);\n    setGameComplete(false);\n  };\n\n  useEffect(() => {\n    initializeGame();\n  }, [filterCategory, filterStatus]);\n\n  const handleOrganizationClick = (org: MembershipData) => {\n    if (matchedItems.has(org.id)) return;\n    setSelectedOrganization(org);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handleRoleClick = (role: MembershipData) => {\n    if (matchedItems.has(role.id)) return;\n    setSelectedRole(role);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handleDetailClick = (detail: MembershipData) => {\n    if (matchedItems.has(detail.id)) return;\n    setSelectedDetail(detail);\n    setIncorrectAttempts(new Set());\n  };\n\n  useEffect(() => {\n    if (selectedOrganization && selectedRole && selectedDetail) {\n      setAttempts(prev => prev + 1);\n      \n      if (selectedOrganization.id === selectedRole.id && \n          selectedRole.id === selectedDetail.id) {\n        // Correct match!\n        celebrateWithTheme('international');\n        setMatchedItems(prev => new Set(Array.from(prev).concat(selectedOrganization.id)));\n        setScore(prev => prev + 1);\n        \n        // Check if game is complete\n        const filteredData = getFilteredData();\n        if (matchedItems.size + 1 >= filteredData.length) {\n          setGameComplete(true);\n          setTimeout(() => celebrateWithTheme('international'), 500);\n        }\n      } else {\n        // Incorrect match\n        const incorrectIds = new Set([selectedOrganization.id, selectedRole.id, selectedDetail.id]);\n        setIncorrectAttempts(incorrectIds);\n        \n        setTimeout(() => {\n          setIncorrectAttempts(new Set());\n        }, 3000);\n      }\n      \n      // Reset selections\n      setTimeout(() => {\n        setSelectedOrganization(null);\n        setSelectedRole(null);\n        setSelectedDetail(null);\n      }, incorrectAttempts.size > 0 ? 3000 : 1000);\n    }\n  }, [selectedOrganization, selectedRole, selectedDetail, matchedItems.size]);\n\n  const getButtonStyle = (item: MembershipData, isSelected: boolean) => {\n    const baseClasses = \"w-full text-left p-3 rounded-lg border transition-all duration-300 hover:shadow-md\";\n    const isMatched = matchedItems.has(item.id);\n    const isIncorrect = incorrectAttempts.has(item.id);\n    \n    if (isMatched) {\n      return `${baseClasses} bg-green-100 border-green-300 text-green-800 cursor-default shadow-sm`;\n    }\n    \n    if (isIncorrect) {\n      return `${baseClasses} bg-red-100 border-red-300 text-red-800 animate-pulse cursor-pointer`;\n    }\n    \n    if (isSelected) {\n      return `${baseClasses} bg-blue-100 border-blue-400 text-blue-800 shadow-lg cursor-pointer`;\n    }\n    \n    return `${baseClasses} bg-white border-gray-200 text-gray-800 hover:bg-gray-50 cursor-pointer`;\n  };\n\n  const getCategoryColor = (category: string) => {\n    const colors = {\n      International: 'bg-blue-100 text-blue-800',\n      European: 'bg-purple-100 text-purple-800',\n      Commonwealth: 'bg-red-100 text-red-800',\n      Security: 'bg-orange-100 text-orange-800',\n      Economic: 'bg-green-100 text-green-800',\n      Cultural: 'bg-pink-100 text-pink-800',\n      Environmental: 'bg-teal-100 text-teal-800'\n    };\n    return colors[category as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  const getStatusColor = (status: string) => {\n    const colors = {\n      Current: 'bg-green-100 text-green-800',\n      Former: 'bg-red-100 text-red-800',\n      Founding: 'bg-yellow-100 text-yellow-800'\n    };\n    return colors[status as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  const accuracy = attempts > 0 ? Math.round((score / attempts) * 100) : 0;\n  const filteredData = getFilteredData();\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Game Header & Stats */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <div className=\"flex items-center gap-3\">\n          <Globe className=\"h-6 w-6 text-blue-600\" />\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-900\">UK International Memberships Triple Match</h3>\n            <p className=\"text-sm text-gray-600\">Match organizations with UK's roles and membership details</p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center gap-4\">\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-blue-600\">{score}/{filteredData.length}</div>\n            <div className=\"text-xs text-gray-500\">Matches</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-green-600\">{accuracy}%</div>\n            <div className=\"text-xs text-gray-500\">Accuracy</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"space-y-3\">\n        <div className=\"flex flex-wrap gap-2 items-center\">\n          <Filter className=\"h-4 w-4 text-gray-500\" />\n          <span className=\"text-sm font-medium text-gray-700\">Category:</span>\n          {categories.map(category => (\n            <Badge\n              key={category}\n              variant={filterCategory === category ? \"default\" : \"outline\"}\n              className={`cursor-pointer transition-colors ${\n                filterCategory === category \n                  ? 'bg-blue-600 text-white' \n                  : 'hover:bg-blue-100'\n              }`}\n              onClick={() => setFilterCategory(category)}\n            >\n              {category === 'all' ? 'All Categories' : category}\n            </Badge>\n          ))}\n        </div>\n        \n        <div className=\"flex flex-wrap gap-2 items-center\">\n          <Filter className=\"h-4 w-4 text-gray-500\" />\n          <span className=\"text-sm font-medium text-gray-700\">Status:</span>\n          {statuses.map(status => (\n            <Badge\n              key={status}\n              variant={filterStatus === status ? \"default\" : \"outline\"}\n              className={`cursor-pointer transition-colors ${\n                filterStatus === status \n                  ? 'bg-green-600 text-white' \n                  : 'hover:bg-green-100'\n              }`}\n              onClick={() => setFilterStatus(status)}\n            >\n              {status === 'all' ? 'All Statuses' : status}\n            </Badge>\n          ))}\n        </div>\n      </div>\n\n      {/* Game Controls */}\n      <div className=\"flex gap-2\">\n        <Button\n          onClick={initializeGame}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <Shuffle className=\"h-4 w-4\" />\n          Shuffle\n        </Button>\n        <Button\n          onClick={initializeGame}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <RotateCcw className=\"h-4 w-4\" />\n          Reset\n        </Button>\n      </div>\n\n      {gameComplete && (\n        <Card className=\"border-green-200 bg-green-50\">\n          <CardContent className=\"p-4 text-center\">\n            <h3 className=\"text-lg font-semibold text-green-800 mb-2\">🎉 Congratulations!</h3>\n            <p className=\"text-green-700\">\n              You've successfully matched all {filteredData.length} UK international memberships!\n            </p>\n            <p className=\"text-sm text-green-600 mt-1\">\n              Final Score: {score}/{filteredData.length} ({accuracy}% accuracy)\n            </p>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Matching Game Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Organizations Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Globe className=\"h-4 w-4 text-blue-600\" />\n              Organizations ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {organizations.map((org) => (\n              <div key={`org-${org.id}`} className=\"space-y-1\">\n                <button\n                  onClick={() => handleOrganizationClick(org)}\n                  className={getButtonStyle(org, selectedOrganization?.id === org.id)}\n                  disabled={matchedItems.has(org.id)}\n                >\n                  <div className=\"font-medium text-sm leading-relaxed\">{org.organization}</div>\n                  <div className=\"flex gap-1 mt-1 flex-wrap\">\n                    <Badge className={`text-xs ${getCategoryColor(org.category)}`}>\n                      {org.category}\n                    </Badge>\n                    <Badge className={`text-xs ${getStatusColor(org.status)}`}>\n                      {org.status}\n                    </Badge>\n                    <Badge className=\"text-xs bg-gray-100 text-gray-800\">\n                      {org.joinedYear}\n                    </Badge>\n                  </div>\n                </button>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Roles Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Globe className=\"h-4 w-4 text-green-600\" />\n              UK's Role ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {roles.map((role) => (\n              <button\n                key={`role-${role.id}`}\n                onClick={() => handleRoleClick(role)}\n                className={getButtonStyle(role, selectedRole?.id === role.id)}\n                disabled={matchedItems.has(role.id)}\n              >\n                <div className=\"font-bold text-center text-sm\">\n                  {role.role}\n                </div>\n                <Badge className={`text-xs w-full justify-center mt-1 ${getStatusColor(role.status)}`}>\n                  {role.status} Member\n                </Badge>\n              </button>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Details Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Globe className=\"h-4 w-4 text-purple-600\" />\n              Membership Details ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {details.map((detail) => (\n              <button\n                key={`detail-${detail.id}`}\n                onClick={() => handleDetailClick(detail)}\n                className={getButtonStyle(detail, selectedDetail?.id === detail.id)}\n                disabled={matchedItems.has(detail.id)}\n              >\n                <div className=\"font-medium text-sm leading-relaxed\">\n                  {detail.details}\n                </div>\n              </button>\n            ))}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Instructions */}\n      <Card className=\"bg-blue-50 border-blue-200\">\n        <CardContent className=\"p-4\">\n          <h4 className=\"font-semibold text-blue-900 mb-2\">How to Play:</h4>\n          <ul className=\"text-sm text-blue-800 space-y-1\">\n            <li>• Select one organization, one UK role, and one detail that all belong together</li>\n            <li>• All three selections must match the same international membership</li>\n            <li>• Correct matches turn green and celebrate with confetti</li>\n            <li>• Use category and status filters to focus on specific types of memberships</li>\n            <li>• Learn about UK's role in global governance and international cooperation!</li>\n          </ul>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":20260},"client/src/components/uk-parliament-devolution-matching.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Building2, RotateCcw, Info } from \"lucide-react\";\nimport confetti from 'canvas-confetti';\n\ninterface ParliamentTripleData {\n  id: string;\n  region: string;\n  parliament: string;\n  members: string;\n  elections: string;\n  powers: string;\n  details: string;\n  category: string;\n}\n\nconst parliamentData: ParliamentTripleData[] = [\n  {\n    id: \"1\",\n    region: \"England (UK-wide)\",\n    parliament: \"Westminster\",\n    members: \"MPs (650)\",\n    elections: \"Every 5 years, FPTP\",\n    powers: \"Reserved matters UK-wide\",\n    details: \"Houses of Commons and Lords, Prime Minister, UK Government\",\n    category: \"UK Parliament\"\n  },\n  {\n    id: \"2\",\n    region: \"Scotland\",\n    parliament: \"Holyrood\",\n    members: \"MSPs (129)\",\n    elections: \"Since 1999, proportional representation\",\n    powers: \"Education, justice, tax, health, etc.\",\n    details: \"Scottish Parliament building in Edinburgh\",\n    category: \"Devolved Parliament\"\n  },\n  {\n    id: \"3\",\n    region: \"Wales\",\n    parliament: \"Senedd (Cardiff)\",\n    members: \"MSs (60)\",\n    elections: \"Since 1999, proportional representation\",\n    powers: \"Education, health, services\",\n    details: \"Welsh Parliament in Cardiff Bay\",\n    category: \"Devolved Parliament\"\n  },\n  {\n    id: \"4\",\n    region: \"Northern Ireland\",\n    parliament: \"Stormont Assembly\",\n    members: \"MLAs (90)\",\n    elections: \"Since 1998, proportional representation\",\n    powers: \"Power-sharing executive, devolved matters\",\n    details: \"Belfast, power-sharing between unionists and nationalists\",\n    category: \"Devolved Assembly\"\n  },\n  {\n    id: \"5\",\n    region: \"Westminster\",\n    parliament: \"Houses of Parliament\",\n    members: \"650 MPs + Lords\",\n    elections: \"First Past The Post\",\n    powers: \"UK sovereignty, defense, foreign policy\",\n    details: \"Palace of Westminster, Big Ben, Thames location\",\n    category: \"Central Government\"\n  },\n  {\n    id: \"6\",\n    region: \"Holyrood\",\n    parliament: \"Scottish Parliament\",\n    members: \"129 elected MSPs\",\n    elections: \"Additional Member System\",\n    powers: \"Scottish law, education, NHS Scotland\",\n    details: \"Opened 2004, modern architecture, Royal Mile\",\n    category: \"National Parliament\"\n  },\n  {\n    id: \"7\",\n    region: \"Senedd\",\n    parliament: \"Welsh Parliament\",\n    members: \"60 Members of Senedd\",\n    elections: \"Mixed electoral system\",\n    powers: \"Welsh language, culture, local government\",\n    details: \"Cardiff Bay, sustainable building, public gallery\",\n    category: \"National Assembly\"\n  },\n  {\n    id: \"8\",\n    region: \"Stormont\",\n    parliament: \"Northern Ireland Assembly\",\n    members: \"90 Assembly Members\",\n    elections: \"Single Transferable Vote\",\n    powers: \"Justice, policing, welfare (conditional)\",\n    details: \"Stormont Castle, Belfast hills, peace process\",\n    category: \"Regional Assembly\"\n  },\n  {\n    id: \"9\",\n    region: \"House of Commons\",\n    parliament: \"Lower House\",\n    members: \"650 elected MPs\",\n    elections: \"5-year maximum terms\",\n    powers: \"Passes laws, controls taxation\",\n    details: \"Green benches, Speaker, government front bench\",\n    category: \"Parliamentary Chamber\"\n  },\n  {\n    id: \"10\",\n    region: \"House of Lords\",\n    parliament: \"Upper House\",\n    members: \"~800 appointed peers\",\n    elections: \"Appointed for life\",\n    powers: \"Reviews legislation, delays bills\",\n    details: \"Red benches, Lord Speaker, revising chamber\",\n    category: \"Parliamentary Chamber\"\n  },\n  {\n    id: \"11\",\n    region: \"Prime Minister\",\n    parliament: \"Head of Government\",\n    members: \"Leader of majority party\",\n    elections: \"Appointed by monarch\",\n    powers: \"Executive power, cabinet appointments\",\n    details: \"10 Downing Street, First Lord of Treasury\",\n    category: \"Executive Office\"\n  },\n  {\n    id: \"12\",\n    region: \"First Minister (Scotland)\",\n    parliament: \"Scottish Government Head\",\n    members: \"Leader of Scottish Executive\",\n    elections: \"Elected by Scottish Parliament\",\n    powers: \"Scottish domestic policy\",\n    details: \"Bute House, Edinburgh, SNP/other parties\",\n    category: \"Devolved Executive\"\n  },\n  {\n    id: \"13\",\n    region: \"First Minister (Wales)\",\n    parliament: \"Welsh Government Head\",\n    members: \"Leader of Welsh Government\",\n    elections: \"Elected by Senedd\",\n    powers: \"Welsh domestic affairs\",\n    details: \"Cardiff, Labour/other parties\",\n    category: \"Devolved Executive\"\n  },\n  {\n    id: \"14\",\n    region: \"First/Deputy Ministers (NI)\",\n    parliament: \"Power-sharing Executive\",\n    members: \"Joint First Ministers\",\n    elections: \"Largest parties from each community\",\n    powers: \"Shared executive authority\",\n    details: \"DUP/Sinn Fein or other arrangements\",\n    category: \"Shared Executive\"\n  },\n  {\n    id: \"15\",\n    region: \"FPTP Electoral System\",\n    parliament: \"First Past The Post\",\n    members: \"Winner takes constituency\",\n    elections: \"Simple majority in seat\",\n    powers: \"Used for Westminster elections\",\n    details: \"Single-member constituencies, tactical voting\",\n    category: \"Electoral System\"\n  },\n  {\n    id: \"16\",\n    region: \"Proportional Representation\",\n    parliament: \"PR Systems\",\n    members: \"Seats match vote share\",\n    elections: \"Multiple representation methods\",\n    powers: \"Used in devolved parliaments\",\n    details: \"AMS in Scotland/Wales, STV in Northern Ireland\",\n    category: \"Electoral System\"\n  },\n  {\n    id: \"17\",\n    region: \"Devolution Settlement\",\n    parliament: \"Power Distribution\",\n    members: \"Reserved vs Devolved\",\n    elections: \"1997 referendums\",\n    powers: \"Different powers to each nation\",\n    details: \"Asymmetric devolution, English question\",\n    category: \"Constitutional Framework\"\n  },\n  {\n    id: \"18\",\n    region: \"Reserved Powers\",\n    parliament: \"UK Government Only\",\n    members: \"Defense, Foreign Policy\",\n    elections: \"Immigration, Currency\",\n    powers: \"Constitution, National Security\",\n    details: \"Cannot be devolved without constitutional change\",\n    category: \"Constitutional Framework\"\n  }\n];\n\nconst categoryColors = {\n  \"UK Parliament\": \"bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\",\n  \"Devolved Parliament\": \"bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300\",\n  \"Devolved Assembly\": \"bg-yellow-100 text-yellow-800 dark:bg-yellow-900/30 dark:text-yellow-300\",\n  \"Central Government\": \"bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\",\n  \"National Parliament\": \"bg-teal-100 text-teal-800 dark:bg-teal-900/30 dark:text-teal-300\",\n  \"National Assembly\": \"bg-red-100 text-red-800 dark:bg-red-900/30 dark:text-red-300\",\n  \"Regional Assembly\": \"bg-orange-100 text-orange-800 dark:bg-orange-900/30 dark:text-orange-300\",\n  \"Parliamentary Chamber\": \"bg-indigo-100 text-indigo-800 dark:bg-indigo-900/30 dark:text-indigo-300\",\n  \"Executive Office\": \"bg-pink-100 text-pink-800 dark:bg-pink-900/30 dark:text-pink-300\",\n  \"Devolved Executive\": \"bg-cyan-100 text-cyan-800 dark:bg-cyan-900/30 dark:text-cyan-300\",\n  \"Shared Executive\": \"bg-amber-100 text-amber-800 dark:bg-amber-900/30 dark:text-amber-300\",\n  \"Electoral System\": \"bg-lime-100 text-lime-800 dark:bg-lime-900/30 dark:text-lime-300\",\n  \"Constitutional Framework\": \"bg-gray-100 text-gray-800 dark:bg-gray-900/30 dark:text-gray-300\"\n};\n\nconst celebrateWithTheme = (theme: string) => {\n  const colors = ['#0066CC', '#FFFFFF', '#CC0000', '#00AA00', '#FFD700'];\n  \n  confetti({\n    particleCount: 100,\n    spread: 70,\n    origin: { y: 0.6 },\n    colors: colors\n  });\n};\n\nexport default function UKParliamentDevolutionMatching({ userId }: { userId: string }) {\n  const [selectedRegion, setSelectedRegion] = useState<ParliamentTripleData | null>(null);\n  const [selectedParliament, setSelectedParliament] = useState<ParliamentTripleData | null>(null);\n  const [selectedPowers, setSelectedPowers] = useState<ParliamentTripleData | null>(null);\n  const [matchedItems, setMatchedItems] = useState<Set<string>>(new Set());\n  const [incorrectAttempts, setIncorrectAttempts] = useState<Set<string>>(new Set());\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [gameComplete, setGameComplete] = useState(false);\n  const [categoryFilter, setCategoryFilter] = useState<string>(\"All\");\n  const [showReference, setShowReference] = useState(false);\n\n  const categories = [\"All\", ...Array.from(new Set(parliamentData.map(item => item.category)))];\n\n  const getFilteredData = () => {\n    if (categoryFilter === \"All\") return parliamentData;\n    return parliamentData.filter(item => item.category === categoryFilter);\n  };\n\n  const filteredData = getFilteredData();\n\n  const shuffleArray = <T,>(array: T[]): T[] => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  const [shuffledRegions] = useState(() => shuffleArray(filteredData));\n  const [shuffledParliaments] = useState(() => shuffleArray(filteredData));\n  const [shuffledPowers] = useState(() => shuffleArray(filteredData));\n\n  const resetGame = () => {\n    setSelectedRegion(null);\n    setSelectedParliament(null);\n    setSelectedPowers(null);\n    setMatchedItems(new Set());\n    setIncorrectAttempts(new Set());\n    setScore(0);\n    setAttempts(0);\n    setGameComplete(false);\n  };\n\n  const getButtonStatus = (itemId: string, type: 'region' | 'parliament' | 'powers') => {\n    const isMatched = matchedItems.has(itemId);\n    const isSelected = type === 'region' ? selectedRegion?.id === itemId \n                     : type === 'parliament' ? selectedParliament?.id === itemId \n                     : selectedPowers?.id === itemId;\n    const isIncorrect = incorrectAttempts.has(itemId);\n    const isRecentMatch = isMatched && matchedItems.has(itemId);\n    \n    return { isMatched, isSelected, isIncorrect, isRecentMatch };\n  };\n\n  const handleRegionClick = (region: ParliamentTripleData) => {\n    if (matchedItems.has(region.id)) return;\n    setSelectedRegion(region);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handleParliamentClick = (parliament: ParliamentTripleData) => {\n    if (matchedItems.has(parliament.id)) return;\n    setSelectedParliament(parliament);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handlePowersClick = (powers: ParliamentTripleData) => {\n    if (matchedItems.has(powers.id)) return;\n    setSelectedPowers(powers);\n    setIncorrectAttempts(new Set());\n  };\n\n  useEffect(() => {\n    if (selectedRegion && selectedParliament && selectedPowers) {\n      setAttempts(prev => prev + 1);\n      \n      if (selectedRegion.id === selectedParliament.id && \n          selectedParliament.id === selectedPowers.id) {\n        // Correct match!\n        celebrateWithTheme('parliament');\n        setMatchedItems(prev => new Set(Array.from(prev).concat(selectedRegion.id)));\n        setScore(prev => prev + 1);\n        \n        // Check if game is complete\n        if (matchedItems.size + 1 >= filteredData.length) {\n          setGameComplete(true);\n          setTimeout(() => celebrateWithTheme('parliament'), 500);\n        }\n      } else {\n        // Incorrect match\n        const incorrectIds = new Set([selectedRegion.id, selectedParliament.id, selectedPowers.id]);\n        setIncorrectAttempts(incorrectIds);\n        \n        setTimeout(() => {\n          setIncorrectAttempts(new Set());\n        }, 3000);\n      }\n      \n      // Reset selections\n      setTimeout(() => {\n        setSelectedRegion(null);\n        setSelectedParliament(null);\n        setSelectedPowers(null);\n      }, incorrectAttempts.size > 0 ? 3000 : 1000);\n    }\n  }, [selectedRegion, selectedParliament, selectedPowers, matchedItems.size, filteredData.length]);\n\n  const sortedRegions = [...shuffledRegions.filter(item => !matchedItems.has(item.id)), \n                        ...shuffledRegions.filter(item => matchedItems.has(item.id))];\n  const sortedParliaments = [...shuffledParliaments.filter(item => !matchedItems.has(item.id)), \n                            ...shuffledParliaments.filter(item => matchedItems.has(item.id))];\n  const sortedPowers = [...shuffledPowers.filter(item => !matchedItems.has(item.id)), \n                       ...shuffledPowers.filter(item => matchedItems.has(item.id))];\n\n  const accuracy = attempts > 0 ? Math.round((score / attempts) * 100) : 0;\n\n  return (\n    <div className=\"w-full max-w-7xl mx-auto p-4\">\n      {/* Header */}\n      <div className=\"text-center mb-6\">\n        <div className=\"flex items-center justify-center gap-2 mb-4\">\n          <Building2 className=\"h-6 w-6 text-blue-600\" />\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n            UK Parliament & Devolution Triple Match Challenge\n          </h2>\n        </div>\n        <p className=\"text-gray-600 dark:text-gray-300 mb-4\">\n          Match regions with their parliaments and powers. Learn about UK government structure, devolution, and democratic institutions.\n        </p>\n      </div>\n\n      {/* Controls */}\n      <div className=\"flex flex-wrap items-center justify-between gap-4 mb-6\">\n        <div className=\"flex flex-wrap gap-2\">\n          <label className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">Filter by Category:</label>\n          {categories.slice(0, 6).map(category => (\n            <Button\n              key={category}\n              onClick={() => setCategoryFilter(category)}\n              variant={categoryFilter === category ? \"default\" : \"outline\"}\n              size=\"sm\"\n            >\n              {category}\n            </Button>\n          ))}\n        </div>\n        \n        <div className=\"flex gap-2\">\n          <Button\n            onClick={() => setShowReference(!showReference)}\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"flex items-center gap-2\"\n          >\n            <Info className=\"h-4 w-4\" />\n            {showReference ? \"Hide\" : \"Show\"} Parliament Reference\n          </Button>\n          <Button\n            onClick={resetGame}\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"flex items-center gap-2\"\n          >\n            <RotateCcw className=\"h-4 w-4\" />\n            Reset Game\n          </Button>\n        </div>\n      </div>\n\n      {/* Reference Panel */}\n      {showReference && (\n        <Card className=\"mb-6\">\n          <CardHeader>\n            <CardTitle className=\"text-lg\">UK Parliament & Devolution Reference</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n              {parliamentData.slice(0, 4).map((item) => (\n                <div key={item.id} className=\"p-3 border rounded-lg\">\n                  <h4 className=\"font-semibold text-sm\">{item.region}</h4>\n                  <Badge className={`text-xs mb-2 ${categoryColors[item.category as keyof typeof categoryColors]}`}>\n                    {item.category}\n                  </Badge>\n                  <div className=\"space-y-1 text-xs text-gray-600 dark:text-gray-400\">\n                    <p><strong>Parliament:</strong> {item.parliament}</p>\n                    <p><strong>Members:</strong> {item.members}</p>\n                    <p><strong>Elections:</strong> {item.elections}</p>\n                    <p><strong>Powers:</strong> {item.powers}</p>\n                    <p><strong>Details:</strong> {item.details}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Game Stats */}\n      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mb-6\">\n        <Card>\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold text-blue-600\">{score}</p>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">Correct Matches</p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold text-green-600\">{attempts}</p>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Attempts</p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold text-purple-600\">{accuracy}%</p>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">Accuracy</p>\n          </CardContent>\n        </Card>\n        <Card>\n          <CardContent className=\"p-4 text-center\">\n            <p className=\"text-2xl font-bold text-amber-600\">{filteredData.length - matchedItems.size}</p>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">Remaining</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Game Complete Message */}\n      {gameComplete && (\n        <Card className=\"mb-6 bg-green-50 dark:bg-green-900/20 border-green-200 dark:border-green-800\">\n          <CardContent className=\"p-4 text-center\">\n            <h3 className=\"text-lg font-bold text-green-800 dark:text-green-300 mb-2\">\n              🏛️ Congratulations! You've mastered UK Parliament & Devolution!\n            </h3>\n            <p className=\"text-green-700 dark:text-green-400\">\n              Final Score: {score}/{filteredData.length} ({accuracy}% accuracy)\n            </p>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Matching Game Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Regions Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Building2 className=\"h-4 w-4 text-blue-600\" />\n              Regions/Bodies ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {sortedRegions.map((region) => (\n              <div key={`region-${region.id}`} className=\"space-y-1\">\n                <button\n                  onClick={() => handleRegionClick(region)}\n                  className={`\n                    w-full p-3 text-left rounded-lg border transition-all duration-200\n                    ${getButtonStatus(region.id, 'region').isMatched\n                      ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 border-green-300'\n                      : getButtonStatus(region.id, 'region').isSelected\n                      ? 'bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200 border-blue-300'\n                      : getButtonStatus(region.id, 'region').isIncorrect\n                      ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 border-red-300'\n                      : 'bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 border-gray-200'\n                    }\n                  `}\n                  disabled={matchedItems.has(region.id)}\n                >\n                  <div className=\"font-medium text-sm leading-relaxed\">{region.region}</div>\n                  <Badge className={`text-xs mt-1 ${categoryColors[region.category as keyof typeof categoryColors]}`}>\n                    {region.category}\n                  </Badge>\n                </button>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Parliaments Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Building2 className=\"h-4 w-4 text-green-600\" />\n              Parliaments/Bodies ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {sortedParliaments.map((parliament) => (\n              <div key={`parliament-${parliament.id}`} className=\"space-y-1\">\n                <button\n                  onClick={() => handleParliamentClick(parliament)}\n                  className={`\n                    w-full p-3 text-left rounded-lg border transition-all duration-200\n                    ${getButtonStatus(parliament.id, 'parliament').isMatched\n                      ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 border-green-300'\n                      : getButtonStatus(parliament.id, 'parliament').isSelected\n                      ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 border-green-300'\n                      : getButtonStatus(parliament.id, 'parliament').isIncorrect\n                      ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 border-red-300'\n                      : 'bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 border-gray-200'\n                    }\n                  `}\n                  disabled={matchedItems.has(parliament.id)}\n                >\n                  <div className=\"font-medium text-sm leading-relaxed\">{parliament.parliament}</div>\n                  <div className=\"text-xs text-gray-600 dark:text-gray-400 mt-1\">{parliament.members}</div>\n                </button>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Powers Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Building2 className=\"h-4 w-4 text-purple-600\" />\n              Powers/Details ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {sortedPowers.map((powers) => (\n              <div key={`powers-${powers.id}`} className=\"space-y-1\">\n                <button\n                  onClick={() => handlePowersClick(powers)}\n                  className={`\n                    w-full p-3 text-left rounded-lg border transition-all duration-200\n                    ${getButtonStatus(powers.id, 'powers').isMatched\n                      ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200 border-green-300'\n                      : getButtonStatus(powers.id, 'powers').isSelected\n                      ? 'bg-purple-100 dark:bg-purple-900/30 text-purple-800 dark:text-purple-200 border-purple-300'\n                      : getButtonStatus(powers.id, 'powers').isIncorrect\n                      ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200 border-red-300'\n                      : 'bg-white dark:bg-gray-800 hover:bg-gray-50 dark:hover:bg-gray-700 border-gray-200'\n                    }\n                  `}\n                  disabled={matchedItems.has(powers.id)}\n                >\n                  <div className=\"font-medium text-sm leading-relaxed\">{powers.powers}</div>\n                  <div className=\"text-xs text-gray-600 dark:text-gray-400 mt-1\">{powers.elections}</div>\n                </button>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Instructions */}\n      <Card className=\"mt-8\">\n        <CardContent className=\"p-4\">\n          <h4 className=\"font-semibold mb-2\">How to Play:</h4>\n          <ul className=\"text-sm text-gray-600 dark:text-gray-400 space-y-1\">\n            <li>• Select one item from each column (Regions/Bodies, Parliaments/Bodies, Powers/Details)</li>\n            <li>• All three selections must match the same UK governmental institution</li>\n            <li>• Correct matches turn green and move to the bottom</li>\n            <li>• Incorrect matches briefly turn red - try again!</li>\n            <li>• Use category filters to focus on specific types of institutions</li>\n            <li>• Check the reference panel to learn about each parliament's structure and powers</li>\n          </ul>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":23979},"client/src/components/uk-places-matching.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Shuffle, RotateCcw, MapPin, Filter, Landmark } from \"lucide-react\";\nimport { celebrateWithTheme } from \"@/lib/confetti\";\n\ninterface PlaceData {\n  id: string;\n  place: string;\n  region: string;\n  description: string;\n  category: 'Historic Site' | 'Natural Landmark' | 'Cultural Site' | 'Royal Palace' | 'Religious Site' | 'Museum' | 'University' | 'Modern Attraction';\n  country: 'England' | 'Scotland' | 'Wales' | 'Northern Ireland';\n  significance: 'World Heritage' | 'National Importance' | 'Royal Connection' | 'Cultural Icon' | 'Natural Wonder' | 'Educational' | 'Religious';\n  details: string;\n}\n\nconst ukPlacesData: PlaceData[] = [\n  // England - London\n  {\n    id: \"1\",\n    place: \"Tower of London\",\n    region: \"London\",\n    description: \"Historic royal fortress and Crown Jewels location\",\n    category: \"Historic Site\",\n    country: \"England\",\n    significance: \"World Heritage\",\n    details: \"Norman castle, Crown Jewels, Yeoman Warders (Beefeaters), 1,000 years of history\"\n  },\n  {\n    id: \"2\",\n    place: \"Buckingham Palace\",\n    region: \"London\",\n    description: \"Official London residence of British monarch\",\n    category: \"Royal Palace\",\n    country: \"England\",\n    significance: \"Royal Connection\",\n    details: \"State rooms, Changing of Guard ceremony, official royal events\"\n  },\n  {\n    id: \"3\",\n    place: \"Westminster Abbey\",\n    region: \"London\",\n    description: \"Gothic abbey where monarchs are crowned and buried\",\n    category: \"Religious Site\",\n    country: \"England\",\n    significance: \"Royal Connection\",\n    details: \"Coronations, royal weddings, Poets' Corner, Henry VII Chapel\"\n  },\n  {\n    id: \"4\",\n    place: \"British Museum\",\n    region: \"London\",\n    description: \"World's largest collection of cultural artifacts\",\n    category: \"Museum\",\n    country: \"England\",\n    significance: \"Cultural Icon\",\n    details: \"Rosetta Stone, Egyptian mummies, Greek sculptures, free admission\"\n  },\n  {\n    id: \"5\",\n    place: \"Houses of Parliament\",\n    region: \"London\",\n    description: \"Seat of UK government with Big Ben clock tower\",\n    category: \"Historic Site\",\n    country: \"England\",\n    significance: \"National Importance\",\n    details: \"House of Commons, House of Lords, Westminster Hall, democratic heritage\"\n  },\n\n  // England - Other Regions\n  {\n    id: \"6\",\n    place: \"Stonehenge\",\n    region: \"Wiltshire\",\n    description: \"Prehistoric stone circle monument\",\n    category: \"Historic Site\",\n    country: \"England\",\n    significance: \"World Heritage\",\n    details: \"5,000 years old, astronomical alignments, Neolithic monument\"\n  },\n  {\n    id: \"7\",\n    place: \"Bath\",\n    region: \"Somerset\",\n    description: \"Roman spa town with Georgian architecture\",\n    category: \"Historic Site\",\n    country: \"England\",\n    significance: \"World Heritage\",\n    details: \"Roman Baths, Royal Crescent, Georgian terraces, natural hot springs\"\n  },\n  {\n    id: \"8\",\n    place: \"Canterbury Cathedral\",\n    region: \"Kent\",\n    description: \"Mother church of Anglican Communion\",\n    category: \"Religious Site\",\n    country: \"England\",\n    significance: \"World Heritage\",\n    details: \"Archbishop of Canterbury seat, Thomas Becket murder site, pilgrimage destination\"\n  },\n  {\n    id: \"9\",\n    place: \"University of Cambridge\",\n    region: \"Cambridgeshire\",\n    description: \"World-renowned university founded in 1209\",\n    category: \"University\",\n    country: \"England\",\n    significance: \"Educational\",\n    details: \"31 colleges, King's College Chapel, famous alumni, rowing tradition\"\n  },\n  {\n    id: \"10\",\n    place: \"University of Oxford\",\n    region: \"Oxfordshire\",\n    description: \"Oldest English-speaking university in the world\",\n    category: \"University\",\n    country: \"England\",\n    significance: \"Educational\",\n    details: \"38 colleges, Bodleian Library, Christ Church, tutorial system\"\n  },\n  {\n    id: \"11\",\n    place: \"Lake District\",\n    region: \"Cumbria\",\n    description: \"Mountainous region with lakes and fells\",\n    category: \"Natural Landmark\",\n    country: \"England\",\n    significance: \"World Heritage\",\n    details: \"16 major lakes, highest peak Scafell Pike, Wordsworth country, national park\"\n  },\n\n  // Scotland\n  {\n    id: \"12\",\n    place: \"Edinburgh Castle\",\n    region: \"Edinburgh\",\n    description: \"Historic fortress dominating Edinburgh skyline\",\n    category: \"Historic Site\",\n    country: \"Scotland\",\n    significance: \"National Importance\",\n    details: \"Crown Jewels of Scotland, Stone of Destiny, Military Tattoo venue\"\n  },\n  {\n    id: \"13\",\n    place: \"Loch Ness\",\n    region: \"Scottish Highlands\",\n    description: \"Famous deep freshwater loch\",\n    category: \"Natural Landmark\",\n    country: \"Scotland\",\n    significance: \"Cultural Icon\",\n    details: \"Largest loch by volume, Nessie legend, Urquhart Castle ruins\"\n  },\n  {\n    id: \"14\",\n    place: \"St. Andrews\",\n    region: \"Fife\",\n    description: \"Historic university town and golf's spiritual home\",\n    category: \"University\",\n    country: \"Scotland\",\n    significance: \"Educational\",\n    details: \"University of St Andrews, Old Course golf, royal connections\"\n  },\n  {\n    id: \"15\",\n    place: \"Isle of Skye\",\n    region: \"Scottish Highlands\",\n    description: \"Dramatic island with rugged landscapes\",\n    category: \"Natural Landmark\",\n    country: \"Scotland\",\n    significance: \"Natural Wonder\",\n    details: \"Cuillin mountains, Old Man of Storr, fairy pools, clan castles\"\n  },\n  {\n    id: \"16\",\n    place: \"Stirling Castle\",\n    region: \"Stirling\",\n    description: \"Renaissance palace and strategic fortress\",\n    category: \"Historic Site\",\n    country: \"Scotland\",\n    significance: \"National Importance\",\n    details: \"Mary Queen of Scots coronation, William Wallace monument nearby\"\n  },\n\n  // Wales\n  {\n    id: \"17\",\n    place: \"Caerphilly Castle\",\n    region: \"Caerphilly\",\n    description: \"Medieval fortress with leaning tower\",\n    category: \"Historic Site\",\n    country: \"Wales\",\n    significance: \"National Importance\",\n    details: \"Second largest castle in Britain, water defenses, 13th century\"\n  },\n  {\n    id: \"18\",\n    place: \"Snowdonia\",\n    region: \"Gwynedd\",\n    description: \"Mountainous national park with highest Welsh peak\",\n    category: \"Natural Landmark\",\n    country: \"Wales\",\n    significance: \"Natural Wonder\",\n    details: \"Mount Snowdon, Welsh language stronghold, slate quarries\"\n  },\n  {\n    id: \"19\",\n    place: \"Cardiff Castle\",\n    region: \"Cardiff\",\n    description: \"Victorian Gothic revival castle in capital city\",\n    category: \"Historic Site\",\n    country: \"Wales\",\n    significance: \"National Importance\",\n    details: \"Roman fort origins, Victorian transformation, Welsh capital landmark\"\n  },\n  {\n    id: \"20\",\n    place: \"Pembrokeshire Coast\",\n    region: \"Pembrokeshire\",\n    description: \"Dramatic coastline with cliffs and beaches\",\n    category: \"Natural Landmark\",\n    country: \"Wales\",\n    significance: \"Natural Wonder\",\n    details: \"National park, coastal path, puffins, prehistoric sites\"\n  },\n\n  // Northern Ireland\n  {\n    id: \"21\",\n    place: \"Giant's Causeway\",\n    region: \"County Antrim\",\n    description: \"Unique hexagonal basalt column formation\",\n    category: \"Natural Landmark\",\n    country: \"Northern Ireland\",\n    significance: \"World Heritage\",\n    details: \"40,000 interlocking columns, volcanic activity, Finn MacCool legend\"\n  }\n];\n\ninterface UKPlacesMatchingProps {\n  userId: string;\n}\n\nexport default function UKPlacesMatching({ userId }: UKPlacesMatchingProps) {\n  const [places, setPlaces] = useState<PlaceData[]>([]);\n  const [regions, setRegions] = useState<PlaceData[]>([]);\n  const [descriptions, setDescriptions] = useState<PlaceData[]>([]);\n  const [selectedPlace, setSelectedPlace] = useState<PlaceData | null>(null);\n  const [selectedRegion, setSelectedRegion] = useState<PlaceData | null>(null);\n  const [selectedDescription, setSelectedDescription] = useState<PlaceData | null>(null);\n  const [matchedItems, setMatchedItems] = useState<Set<string>>(new Set());\n  const [incorrectAttempts, setIncorrectAttempts] = useState<Set<string>>(new Set());\n  const [score, setScore] = useState(0);\n  const [attempts, setAttempts] = useState(0);\n  const [filterCountry, setFilterCountry] = useState<string>('all');\n  const [filterCategory, setFilterCategory] = useState<string>('all');\n  const [gameComplete, setGameComplete] = useState(false);\n  const [showReference, setShowReference] = useState(false);\n\n  const countries = ['all', 'England', 'Scotland', 'Wales', 'Northern Ireland'];\n  const categories = ['all', 'Historic Site', 'Natural Landmark', 'Cultural Site', 'Royal Palace', 'Religious Site', 'Museum', 'University', 'Modern Attraction'];\n\n  const getFilteredData = () => {\n    let filtered = ukPlacesData;\n    \n    if (filterCountry !== 'all') {\n      filtered = filtered.filter(item => item.country === filterCountry);\n    }\n    \n    if (filterCategory !== 'all') {\n      filtered = filtered.filter(item => item.category === filterCategory);\n    }\n    \n    return filtered;\n  };\n\n  const shuffleArray = <T,>(array: T[]): T[] => {\n    const shuffled = [...array];\n    for (let i = shuffled.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n    }\n    return shuffled;\n  };\n\n  const initializeGame = () => {\n    const filteredData = getFilteredData();\n    setPlaces(shuffleArray(filteredData));\n    setRegions(shuffleArray(filteredData));\n    setDescriptions(shuffleArray(filteredData));\n    setMatchedItems(new Set());\n    setIncorrectAttempts(new Set());\n    setSelectedPlace(null);\n    setSelectedRegion(null);\n    setSelectedDescription(null);\n    setScore(0);\n    setAttempts(0);\n    setGameComplete(false);\n  };\n\n  useEffect(() => {\n    initializeGame();\n  }, [filterCountry, filterCategory]);\n\n  const handlePlaceClick = (place: PlaceData) => {\n    if (matchedItems.has(place.id)) return;\n    setSelectedPlace(place);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handleRegionClick = (region: PlaceData) => {\n    if (matchedItems.has(region.id)) return;\n    setSelectedRegion(region);\n    setIncorrectAttempts(new Set());\n  };\n\n  const handleDescriptionClick = (description: PlaceData) => {\n    if (matchedItems.has(description.id)) return;\n    setSelectedDescription(description);\n    setIncorrectAttempts(new Set());\n  };\n\n  useEffect(() => {\n    if (selectedPlace && selectedRegion && selectedDescription) {\n      setAttempts(prev => prev + 1);\n      \n      if (selectedPlace.id === selectedRegion.id && \n          selectedRegion.id === selectedDescription.id) {\n        // Correct match!\n        celebrateWithTheme('general');\n        setMatchedItems(prev => new Set(Array.from(prev).concat(selectedPlace.id)));\n        setScore(prev => prev + 1);\n        \n        // Check if game is complete\n        const filteredData = getFilteredData();\n        if (matchedItems.size + 1 >= filteredData.length) {\n          setGameComplete(true);\n          setTimeout(() => celebrateWithTheme('general'), 500);\n        }\n      } else {\n        // Incorrect match\n        const incorrectIds = new Set([selectedPlace.id, selectedRegion.id, selectedDescription.id]);\n        setIncorrectAttempts(incorrectIds);\n        \n        setTimeout(() => {\n          setIncorrectAttempts(new Set());\n        }, 3000);\n      }\n      \n      // Reset selections\n      setTimeout(() => {\n        setSelectedPlace(null);\n        setSelectedRegion(null);\n        setSelectedDescription(null);\n      }, incorrectAttempts.size > 0 ? 3000 : 1000);\n    }\n  }, [selectedPlace, selectedRegion, selectedDescription, matchedItems.size]);\n\n  const getButtonStyle = (item: PlaceData, isSelected: boolean) => {\n    const baseClasses = \"w-full text-left p-3 rounded-lg border transition-all duration-300 hover:shadow-md\";\n    const isMatched = matchedItems.has(item.id);\n    const isIncorrect = incorrectAttempts.has(item.id);\n    \n    if (isMatched) {\n      return `${baseClasses} bg-green-100 border-green-300 text-green-800 cursor-default shadow-sm`;\n    }\n    \n    if (isIncorrect) {\n      return `${baseClasses} bg-red-100 border-red-300 text-red-800 animate-pulse cursor-pointer`;\n    }\n    \n    if (isSelected) {\n      return `${baseClasses} bg-emerald-100 border-emerald-400 text-emerald-800 shadow-lg cursor-pointer`;\n    }\n    \n    return `${baseClasses} bg-white border-gray-200 text-gray-800 hover:bg-gray-50 cursor-pointer`;\n  };\n\n  const getCountryColor = (country: string) => {\n    const colors = {\n      England: 'bg-red-100 text-red-800',\n      Scotland: 'bg-blue-100 text-blue-800',\n      Wales: 'bg-green-100 text-green-800',\n      'Northern Ireland': 'bg-orange-100 text-orange-800'\n    };\n    return colors[country as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  const getCategoryColor = (category: string) => {\n    const colors = {\n      'Historic Site': 'bg-amber-100 text-amber-800',\n      'Natural Landmark': 'bg-green-100 text-green-800',\n      'Cultural Site': 'bg-purple-100 text-purple-800',\n      'Royal Palace': 'bg-yellow-100 text-yellow-800',\n      'Religious Site': 'bg-blue-100 text-blue-800',\n      'Museum': 'bg-pink-100 text-pink-800',\n      'University': 'bg-indigo-100 text-indigo-800',\n      'Modern Attraction': 'bg-teal-100 text-teal-800'\n    };\n    return colors[category as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  const accuracy = attempts > 0 ? Math.round((score / attempts) * 100) : 0;\n  const filteredData = getFilteredData();\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Game Header & Stats */}\n      <div className=\"flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4\">\n        <div className=\"flex items-center gap-3\">\n          <MapPin className=\"h-6 w-6 text-emerald-600\" />\n          <div>\n            <h3 className=\"text-lg font-semibold text-gray-900\">UK Places of Interest Triple Match</h3>\n            <p className=\"text-sm text-gray-600\">Match places with their regions and descriptions across the UK</p>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center gap-4\">\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-emerald-600\">{score}/{filteredData.length}</div>\n            <div className=\"text-xs text-gray-500\">Matches</div>\n          </div>\n          <div className=\"text-center\">\n            <div className=\"text-lg font-bold text-green-600\">{accuracy}%</div>\n            <div className=\"text-xs text-gray-500\">Accuracy</div>\n          </div>\n        </div>\n      </div>\n\n      {/* Filters */}\n      <div className=\"space-y-3\">\n        <div className=\"flex flex-wrap gap-2 items-center\">\n          <Filter className=\"h-4 w-4 text-gray-500\" />\n          <span className=\"text-sm font-medium text-gray-700\">Country:</span>\n          {countries.map(country => (\n            <Badge\n              key={country}\n              variant={filterCountry === country ? \"default\" : \"outline\"}\n              className={`cursor-pointer transition-colors ${\n                filterCountry === country \n                  ? 'bg-emerald-600 text-white' \n                  : 'hover:bg-emerald-100'\n              }`}\n              onClick={() => setFilterCountry(country)}\n            >\n              {country === 'all' ? 'All Countries' : country}\n            </Badge>\n          ))}\n        </div>\n        \n        <div className=\"flex flex-wrap gap-2 items-center\">\n          <Filter className=\"h-4 w-4 text-gray-500\" />\n          <span className=\"text-sm font-medium text-gray-700\">Category:</span>\n          {categories.map(category => (\n            <Badge\n              key={category}\n              variant={filterCategory === category ? \"default\" : \"outline\"}\n              className={`cursor-pointer transition-colors ${\n                filterCategory === category \n                  ? 'bg-blue-600 text-white' \n                  : 'hover:bg-blue-100'\n              }`}\n              onClick={() => setFilterCategory(category)}\n            >\n              {category === 'all' ? 'All Categories' : category}\n            </Badge>\n          ))}\n        </div>\n      </div>\n\n      {/* Game Controls */}\n      <div className=\"flex gap-2\">\n        <Button\n          onClick={initializeGame}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <Shuffle className=\"h-4 w-4\" />\n          Shuffle\n        </Button>\n        <Button\n          onClick={initializeGame}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <RotateCcw className=\"h-4 w-4\" />\n          Reset\n        </Button>\n        <Button\n          onClick={() => setShowReference(!showReference)}\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"flex items-center gap-2\"\n        >\n          <Landmark className=\"h-4 w-4\" />\n          {showReference ? 'Hide' : 'Show'} Places Reference\n        </Button>\n      </div>\n\n      {gameComplete && (\n        <Card className=\"border-green-200 bg-green-50\">\n          <CardContent className=\"p-4 text-center\">\n            <h3 className=\"text-lg font-semibold text-green-800 mb-2\">🗺️ Geographic Mastery Achieved!</h3>\n            <p className=\"text-green-700\">\n              You've successfully matched all {filteredData.length} places of interest with their regions!\n            </p>\n            <p className=\"text-sm text-green-600 mt-1\">\n              Final Score: {score}/{filteredData.length} ({accuracy}% accuracy)\n            </p>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Places Reference Card */}\n      {showReference && (\n        <Card className=\"bg-emerald-50 border-emerald-200\">\n          <CardHeader>\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Landmark className=\"h-4 w-4 text-emerald-600\" />\n              UK Places of Interest Reference Guide\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3 text-sm\">\n              {filteredData.map((place) => (\n                <div key={`ref-${place.id}`} className=\"p-3 bg-white rounded border\">\n                  <div className=\"font-semibold text-emerald-800\">{place.place}</div>\n                  <div className=\"text-gray-600 mt-1 text-xs leading-relaxed\">{place.details}</div>\n                  <div className=\"flex gap-1 mt-2 flex-wrap\">\n                    <Badge className={`text-xs ${getCountryColor(place.country)}`}>\n                      {place.country}\n                    </Badge>\n                    <Badge className=\"text-xs bg-gray-100 text-gray-800\">\n                      {place.region}\n                    </Badge>\n                    <Badge className={`text-xs ${getCategoryColor(place.category)}`}>\n                      {place.category}\n                    </Badge>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Matching Game Grid */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Places Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <MapPin className=\"h-4 w-4 text-emerald-600\" />\n              Places of Interest ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {places.map((place) => (\n              <div key={`place-${place.id}`} className=\"space-y-1\">\n                <button\n                  onClick={() => handlePlaceClick(place)}\n                  className={getButtonStyle(place, selectedPlace?.id === place.id)}\n                  disabled={matchedItems.has(place.id)}\n                >\n                  <div className=\"font-medium text-sm leading-relaxed\">{place.place}</div>\n                  <div className=\"flex gap-1 mt-1 flex-wrap\">\n                    <Badge className={`text-xs ${getCountryColor(place.country)}`}>\n                      {place.country}\n                    </Badge>\n                    <Badge className={`text-xs ${getCategoryColor(place.category)}`}>\n                      {place.category}\n                    </Badge>\n                  </div>\n                </button>\n              </div>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Regions Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <MapPin className=\"h-4 w-4 text-green-600\" />\n              Regions ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {regions.map((region) => (\n              <button\n                key={`region-${region.id}`}\n                onClick={() => handleRegionClick(region)}\n                className={getButtonStyle(region, selectedRegion?.id === region.id)}\n                disabled={matchedItems.has(region.id)}\n              >\n                <div className=\"font-bold text-center text-sm\">\n                  {region.region}\n                </div>\n                <Badge className={`text-xs w-full justify-center mt-1 ${getCountryColor(region.country)}`}>\n                  {region.country}\n                </Badge>\n              </button>\n            ))}\n          </CardContent>\n        </Card>\n\n        {/* Descriptions Column */}\n        <Card>\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-base flex items-center gap-2\">\n              <Landmark className=\"h-4 w-4 text-purple-600\" />\n              Descriptions ({filteredData.length})\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-2\">\n            {descriptions.map((description) => (\n              <button\n                key={`description-${description.id}`}\n                onClick={() => handleDescriptionClick(description)}\n                className={getButtonStyle(description, selectedDescription?.id === description.id)}\n                disabled={matchedItems.has(description.id)}\n              >\n                <div className=\"font-medium text-sm leading-relaxed\">\n                  {description.description}\n                </div>\n              </button>\n            ))}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Instructions */}\n      <Card className=\"bg-emerald-50 border-emerald-200\">\n        <CardContent className=\"p-4\">\n          <h4 className=\"font-semibold text-emerald-900 mb-2\">How to Play:</h4>\n          <ul className=\"text-sm text-emerald-800 space-y-1\">\n            <li>• Select one place, one region, and one description that all belong together</li>\n            <li>• All three selections must match the same location of interest</li>\n            <li>• Correct matches turn green and celebrate with confetti</li>\n            <li>• Use country and category filters to focus on specific areas or types of places</li>\n            <li>• Click \"Show Places Reference\" for comprehensive information about each location</li>\n            <li>• Learn about UK geography from London landmarks to Scottish highlands!</li>\n          </ul>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":23616},"client/src/components/user-profile-dropdown.tsx":{"content":"import { useState } from 'react';\nimport { User, CreditCard, Settings, LogOut, Crown } from 'lucide-react';\nimport { useLocation } from 'wouter';\nimport { useAuth } from '@/contexts/AuthContext';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\n\ninterface UserProfileDropdownProps {\n  user: {\n    id: string;\n    firstName: string;\n    overallProgress: number;\n    subscriptionType?: string;\n    subscriptionStatus?: string;\n  };\n}\n\nexport default function UserProfileDropdown({ user }: UserProfileDropdownProps) {\n  const [, setLocation] = useLocation();\n  const { logout } = useAuth();\n\n  const getSubscriptionDisplay = () => {\n    if (!user.subscriptionType || user.subscriptionStatus !== 'active') {\n      return (\n        <Badge variant=\"outline\" className=\"text-xs\">\n          Free Access\n        </Badge>\n      );\n    }\n\n    const subscriptionLabels = {\n      basic: 'Learning App (3mo)',\n      group: 'Group Sessions',\n      guidance: 'Application Guide'\n    };\n\n    return (\n      <Badge variant=\"default\" className=\"text-xs bg-uk-blue\">\n        <Crown className=\"w-3 h-3 mr-1\" />\n        {subscriptionLabels[user.subscriptionType as keyof typeof subscriptionLabels] || 'Premium'}\n      </Badge>\n    );\n  };\n\n  const handlePaymentClick = () => {\n    setLocation('/payment');\n  };\n\n  const handleProfileClick = () => {\n    // Navigate to user profile/settings page\n    setLocation('/profile');\n  };\n\n  const handleLogout = async () => {\n    try {\n      await logout();\n      setLocation('/login');\n    } catch (error) {\n      console.error('Logout failed:', error);\n      // Still redirect to login even if logout API fails\n      setLocation('/login');\n    }\n  };\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button \n          variant=\"ghost\" \n          className=\"w-8 h-8 bg-uk-blue rounded-full flex items-center justify-center p-0 hover:bg-uk-blue/90\"\n        >\n          <User className=\"text-white text-sm\" size={16} />\n        </Button>\n      </DropdownMenuTrigger>\n      \n      <DropdownMenuContent align=\"end\" className=\"w-64\">\n        <div className=\"p-3 border-b\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"w-10 h-10 bg-uk-blue rounded-full flex items-center justify-center\">\n              <User className=\"text-white\" size={20} />\n            </div>\n            <div className=\"flex-1\">\n              <p className=\"font-medium text-sm\">{user.firstName}</p>\n              <div className=\"flex items-center space-x-2 mt-1\">\n                {getSubscriptionDisplay()}\n              </div>\n            </div>\n          </div>\n          <div className=\"mt-3\">\n            <div className=\"flex items-center justify-between text-xs text-gray-500 mb-1\">\n              <span>Progress</span>\n              <span>{user.overallProgress}%</span>\n            </div>\n            <div className=\"w-full bg-gray-200 rounded-full h-2\">\n              <div \n                className=\"bg-uk-blue h-2 rounded-full transition-all duration-300\" \n                style={{ width: `${user.overallProgress}%` }}\n              />\n            </div>\n          </div>\n        </div>\n\n        <DropdownMenuItem onClick={handlePaymentClick} className=\"p-3\">\n          <CreditCard className=\"w-4 h-4 mr-3\" />\n          <div className=\"flex-1\">\n            <div className=\"font-medium\">Payment & Plans</div>\n            <div className=\"text-xs text-gray-500\">Upgrade your learning experience</div>\n          </div>\n        </DropdownMenuItem>\n\n        <DropdownMenuItem onClick={handleProfileClick} className=\"p-3\">\n          <Settings className=\"w-4 h-4 mr-3\" />\n          <div className=\"flex-1\">\n            <div className=\"font-medium\">Profile Settings</div>\n            <div className=\"text-xs text-gray-500\">Manage your account</div>\n          </div>\n        </DropdownMenuItem>\n\n        <DropdownMenuSeparator />\n\n        <DropdownMenuItem onClick={handleLogout} className=\"p-3 text-red-600\">\n          <LogOut className=\"w-4 h-4 mr-3\" />\n          <div className=\"font-medium\">Sign Out</div>\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}","size_bytes":4344},"client/src/components/variant-selector.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { CheckCircle, Star, Trophy, Target } from \"lucide-react\";\n\ninterface VariantSelectorProps {\n  currentVariant: number;\n  onVariantChange: (variant: number) => void;\n  completedVariants: number[];\n  gameTitle: string;\n}\n\nconst VARIANT_OPTIONS = [\n  { size: 4, label: \"Starter\", icon: Target, description: \"4 items - Quick practice\", difficulty: \"Easy\" },\n  { size: 6, label: \"Standard\", icon: Star, description: \"6 items - Good challenge\", difficulty: \"Medium\" },\n  { size: 8, label: \"Advanced\", icon: Trophy, description: \"8 items - Serious test\", difficulty: \"Hard\" },\n  { size: 12, label: \"Master\", icon: CheckCircle, description: \"12 items - Complete mastery\", difficulty: \"Expert\" }\n];\n\nexport default function VariantSelector({ \n  currentVariant, \n  onVariantChange, \n  completedVariants, \n  gameTitle \n}: VariantSelectorProps) {\n  return (\n    <Card className=\"mb-6\">\n      <CardContent className=\"pt-6\">\n        <div className=\"space-y-4\">\n          <div className=\"text-center\">\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\n              Choose Your Challenge Level for {gameTitle}\n            </h3>\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n              Start with fewer items and work your way up to master all variants!\n            </p>\n          </div>\n          \n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\n            {VARIANT_OPTIONS.map(({ size, label, icon: Icon, description, difficulty }) => {\n              const isCompleted = completedVariants.includes(size);\n              const isCurrent = currentVariant === size;\n              \n              return (\n                <Button\n                  key={size}\n                  variant={isCurrent ? \"default\" : \"outline\"}\n                  className={`h-auto p-4 flex flex-col items-center gap-2 relative ${\n                    isCompleted ? \"border-green-500 bg-green-50 dark:bg-green-900/20\" : \"\"\n                  }`}\n                  onClick={() => onVariantChange(size)}\n                >\n                  {isCompleted && (\n                    <div className=\"absolute -top-1 -right-1\">\n                      <CheckCircle className=\"h-4 w-4 text-green-600 bg-white dark:bg-gray-800 rounded-full\" />\n                    </div>\n                  )}\n                  \n                  <Icon className={`h-6 w-6 ${isCompleted ? \"text-green-600\" : \"\"}`} />\n                  \n                  <div className=\"text-center\">\n                    <div className=\"font-semibold text-sm\">{label}</div>\n                    <div className=\"text-xs opacity-75\">{size} items</div>\n                  </div>\n                  \n                  <Badge \n                    variant=\"secondary\" \n                    className={`text-xs ${\n                      difficulty === \"Easy\" ? \"bg-green-100 text-green-700\" :\n                      difficulty === \"Medium\" ? \"bg-blue-100 text-blue-700\" :\n                      difficulty === \"Hard\" ? \"bg-orange-100 text-orange-700\" :\n                      \"bg-purple-100 text-purple-700\"\n                    }`}\n                  >\n                    {difficulty}\n                  </Badge>\n                </Button>\n              );\n            })}\n          </div>\n          \n          {completedVariants.length > 0 && (\n            <div className=\"text-center pt-2\">\n              <Badge variant=\"outline\" className=\"text-green-600 border-green-300\">\n                ✓ {completedVariants.length} of {VARIANT_OPTIONS.length} variants completed\n              </Badge>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}","size_bytes":3811},"client/src/components/video-section.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { PlayCircle, Check, Clock, Lock, X, Volume2, VolumeX, Image } from \"lucide-react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport type { VideoModule, UserVideoProgress } from \"@shared/schema\";\nimport { useState } from \"react\";\n\ninterface VideoSectionProps {\n  userId: string;\n}\n\nexport default function VideoSection({ userId }: VideoSectionProps) {\n  const [selectedVideo, setSelectedVideo] = useState<VideoModule | null>(null);\n  const [isPlayerOpen, setIsPlayerOpen] = useState(false);\n  const [speaking, setSpeaking] = useState<string | null>(null);\n\n  const { data: videos = [], isLoading } = useQuery<VideoModule[]>({\n    queryKey: [\"/api/videos\"],\n  });\n\n  const { data: progress = [] } = useQuery<UserVideoProgress[]>({\n    queryKey: [\"/api/videos/progress\", userId],\n  });\n\n  const handleVideoClick = (video: VideoModule) => {\n    console.log('Video clicked:', video.title);\n    console.log('Video URL:', video.videoUrl);\n    console.log('Is uploaded video:', video.videoUrl.startsWith('/uploads/'));\n    setSelectedVideo(video);\n    setIsPlayerOpen(true);\n  };\n\n  const handleClosePlayer = () => {\n    setIsPlayerOpen(false);\n    setSelectedVideo(null);\n    // Stop any playing audio\n    if (speaking) {\n      speechSynthesis.cancel();\n      setSpeaking(null);\n    }\n  };\n\n  const speakText = (text: string, videoId: string) => {\n    // Stop any currently speaking text\n    if (speaking) {\n      speechSynthesis.cancel();\n      setSpeaking(null);\n      return;\n    }\n\n    // Check if browser supports speech synthesis\n    if (!('speechSynthesis' in window)) {\n      alert('Your browser does not support text-to-speech functionality');\n      return;\n    }\n\n    // Ensure voices are loaded\n    const loadVoices = () => {\n      const voices = speechSynthesis.getVoices();\n      \n      // Create speech synthesis utterance\n      const utterance = new SpeechSynthesisUtterance(text);\n      \n      // Priority order for selecting female British voices\n      const preferredVoices = [\n        // Look for explicitly named female British voices\n        voices.find(voice => \n          voice.lang.includes('en-GB') && \n          (voice.name.toLowerCase().includes('kate') || \n           voice.name.toLowerCase().includes('emma') ||\n           voice.name.toLowerCase().includes('serena') ||\n           voice.name.toLowerCase().includes('fiona') ||\n           voice.name.toLowerCase().includes('victoria'))\n        ),\n        // Look for voices explicitly marked as female\n        voices.find(voice => \n          voice.lang.includes('en-GB') && \n          voice.name.toLowerCase().includes('female')\n        ),\n        // Look for common female voice names in any English variant\n        voices.find(voice => \n          voice.lang.startsWith('en') && \n          (voice.name.toLowerCase().includes('kate') || \n           voice.name.toLowerCase().includes('emma') ||\n           voice.name.toLowerCase().includes('serena') ||\n           voice.name.toLowerCase().includes('samantha') ||\n           voice.name.toLowerCase().includes('susan') ||\n           voice.name.toLowerCase().includes('fiona') ||\n           voice.name.toLowerCase().includes('victoria') ||\n           voice.name.toLowerCase().includes('zira') ||\n           voice.name.toLowerCase().includes('hazel'))\n        ),\n        // Filter British voices to exclude obviously male names\n        voices.find(voice => \n          voice.lang.includes('en-GB') && \n          !voice.name.toLowerCase().includes('daniel') &&\n          !voice.name.toLowerCase().includes('david') &&\n          !voice.name.toLowerCase().includes('george') &&\n          !voice.name.toLowerCase().includes('male')\n        )\n      ];\n\n      // Use the first available preferred voice\n      const selectedVoice = preferredVoices.find(voice => voice !== undefined);\n      if (selectedVoice) {\n        utterance.voice = selectedVoice;\n      }\n      \n      // Enhanced natural speech settings for female voice\n      utterance.rate = 0.85; // Natural speaking pace\n      utterance.pitch = 1.2; // Higher pitch to ensure female sound\n      utterance.volume = 0.9; // Comfortable volume level\n      \n      // Add natural pauses by preprocessing text\n      const naturalText = text\n        .replace(/\\./g, '... ') // Longer pause after periods\n        .replace(/,/g, ', ') // Short pause after commas\n        .replace(/:/g, ': ') // Pause after colons\n        .replace(/;/g, '; '); // Pause after semicolons\n      \n      utterance.text = naturalText;\n\n      // Set up event handlers\n      utterance.onstart = () => setSpeaking(videoId);\n      utterance.onend = () => setSpeaking(null);\n      utterance.onerror = () => setSpeaking(null);\n\n      // Start speaking\n      speechSynthesis.speak(utterance);\n    };\n\n    // Load voices if not already loaded\n    if (speechSynthesis.getVoices().length === 0) {\n      speechSynthesis.addEventListener('voiceschanged', loadVoices, { once: true });\n    } else {\n      loadVoices();\n    }\n  };\n\n  const formatDuration = (seconds: number) => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  };\n\n  const getVideoStatus = (videoId: string) => {\n    const videoProgress = progress.find((p) => p.videoId === videoId);\n    if (videoProgress?.completed) return \"completed\";\n    if (videoProgress?.watchTime && videoProgress.watchTime > 0) return \"in-progress\";\n    return \"available\"; // Changed from \"locked\" to \"available\" to make all videos accessible\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case \"completed\":\n        return <Check className=\"w-2 h-2 text-white\" />;\n      case \"in-progress\":\n        return <Clock className=\"w-2 h-2 text-white\" />;\n      default:\n        return <Lock className=\"w-2 h-2 text-white\" />;\n    }\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case \"completed\":\n        return \"bg-success\";\n      case \"in-progress\":\n        return \"bg-warning\";\n      default:\n        return \"bg-gray-400\";\n    }\n  };\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case \"completed\":\n        return \"Completed\";\n      case \"in-progress\":\n        return \"In Progress\";\n      default:\n        return \"Available\";\n    }\n  };\n\n  const getActionText = (status: string) => {\n    switch (status) {\n      case \"completed\":\n        return \"Watch Again\";\n      case \"in-progress\":\n        return \"Continue\";\n      default:\n        return \"Complete previous modules\";\n    }\n  };\n\n  const completedCount = progress.filter((p: any) => p.completed).length;\n\n  // Group videos by category\n  const videosByCategory = videos.reduce((acc, video) => {\n    if (!acc[video.category]) {\n      acc[video.category] = [];\n    }\n    acc[video.category].push(video);\n    return acc;\n  }, {} as Record<string, VideoModule[]>);\n\n  // Define category colors and descriptions\n  const categoryInfo = {\n    \"Government\": {\n      color: \"bg-uk-blue\",\n      description: \"Parliament, democracy, and political system\"\n    },\n    \"History\": {\n      color: \"bg-royal-purple\", \n      description: \"Key events and figures in British history\"\n    },\n    \"Geography\": {\n      color: \"bg-success\",\n      description: \"UK regions, countries, and physical features\"\n    },\n    \"Culture\": {\n      color: \"bg-warning\",\n      description: \"British values, traditions, and society\"\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <Card>\n        <CardContent className=\"p-6\">\n          <div className=\"animate-pulse space-y-4\">\n            <div className=\"h-4 bg-gray-200 rounded w-1/4\"></div>\n            <div className=\"grid md:grid-cols-2 gap-4\">\n              {[1, 2, 3, 4].map((i) => (\n                <div key={i} className=\"bg-gray-100 rounded-xl p-4\">\n                  <div className=\"aspect-video bg-gray-200 rounded-lg mb-4\"></div>\n                  <div className=\"h-4 bg-gray-200 rounded mb-2\"></div>\n                  <div className=\"h-3 bg-gray-200 rounded mb-3\"></div>\n                  <div className=\"flex justify-between\">\n                    <div className=\"h-3 bg-gray-200 rounded w-16\"></div>\n                    <div className=\"h-3 bg-gray-200 rounded w-20\"></div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  return (\n    <section id=\"videos\">\n      <Card className=\"shadow-sm border border-gray-200 overflow-hidden\">\n        <CardHeader className=\"border-b border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <CardTitle className=\"text-xl font-semibold text-gray-900 flex items-center\">\n              <PlayCircle className=\"text-uk-red mr-3\" size={24} />\n              Educational Videos\n            </CardTitle>\n            <Badge variant=\"secondary\" className=\"bg-success/10 text-success\">\n              {completedCount}/{videos.length} Completed\n            </Badge>\n          </div>\n        </CardHeader>\n        \n        <CardContent className=\"p-6\">\n          <div className=\"space-y-8\">\n            {Object.entries(videosByCategory).map(([category, categoryVideos]) => (\n              <div key={category}>\n                {/* Category Header */}\n                <div className=\"flex items-center mb-4\">\n                  <div className={`w-4 h-4 rounded-full ${categoryInfo[category as keyof typeof categoryInfo]?.color || 'bg-gray-400'} mr-3`}></div>\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-gray-900\">{category}</h3>\n                    <p className=\"text-sm text-gray-600\">{categoryInfo[category as keyof typeof categoryInfo]?.description}</p>\n                  </div>\n                  <div className=\"ml-auto\">\n                    <Badge variant=\"outline\" className=\"text-xs\">\n                      {categoryVideos.length} video{categoryVideos.length !== 1 ? 's' : ''}\n                    </Badge>\n                  </div>\n                </div>\n\n                {/* Category Videos Grid */}\n                <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {categoryVideos.map((video) => {\n                    const status = getVideoStatus(video.id);\n                    const isLocked = false; // Make all videos accessible\n                    \n                    return (\n                      <div key={video.id} className=\"bg-gray-50 rounded-xl p-4 hover:shadow-md transition-shadow border border-gray-100\">\n                        <div className=\"aspect-video bg-gray-300 rounded-lg mb-4 relative overflow-hidden\">\n                          {video.thumbnail ? (\n                            <img \n                              src={video.thumbnail} \n                              alt={video.title}\n                              className=\"w-full h-full object-cover\"\n                            />\n                          ) : (\n                            <div className=\"w-full h-full flex items-center justify-center bg-gradient-to-br from-gray-200 to-gray-300\">\n                              <PlayCircle className=\"text-gray-500\" size={48} />\n                            </div>\n                          )}\n                          <div \n                            className=\"absolute inset-0 bg-black/30 flex items-center justify-center cursor-pointer hover:bg-black/40 transition-colors\"\n                            onClick={() => handleVideoClick(video)}\n                          >\n                            <div className={`w-12 h-12 ${isLocked ? 'bg-gray-500/90' : 'bg-white/90'} rounded-full flex items-center justify-center hover:scale-110 transition-transform`}>\n                              {isLocked ? (\n                                <Lock className=\"text-gray-400\" size={20} />\n                              ) : (\n                                <PlayCircle className=\"text-uk-blue\" size={20} />\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"absolute top-2 right-2 bg-black/70 text-white text-xs px-2 py-1 rounded\">\n                            {formatDuration(video.duration)}\n                          </div>\n                          <div className={`absolute top-2 left-2 ${categoryInfo[category as keyof typeof categoryInfo]?.color || 'bg-gray-400'} text-white text-xs px-2 py-1 rounded font-medium`}>\n                            {category}\n                          </div>\n                        </div>\n                        <h4 className=\"font-medium text-gray-900 mb-2 line-clamp-2\">{video.title}</h4>\n                        <p className=\"text-sm text-gray-600 mb-3 line-clamp-2\">{video.description}</p>\n                        <div className=\"flex items-center justify-between mb-2\">\n                          <div className=\"flex items-center space-x-2\">\n                            <div className={`w-2 h-2 rounded-full ${getStatusColor(status)}`}>\n                              {getStatusIcon(status)}\n                            </div>\n                            <span className=\"text-xs text-gray-500\">{getStatusText(status)}</span>\n                          </div>\n                          {video.audioScript && (\n                            <Button\n                              variant=\"ghost\"\n                              size=\"sm\"\n                              onClick={() => speakText(video.audioScript || '', video.id)}\n                              className={`p-2 ${speaking === video.id ? 'text-uk-red bg-red-50' : 'text-gray-500 hover:text-uk-blue hover:bg-blue-50'}`}\n                            >\n                              {speaking === video.id ? <VolumeX className=\"h-4 w-4\" /> : <Volume2 className=\"h-4 w-4\" />}\n                            </Button>\n                          )}\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-1\">\n                            {video.detailedContent && (\n                              <Badge variant=\"outline\" className=\"text-xs bg-blue-50 text-blue-700\">\n                                <Image className=\"h-3 w-3 mr-1\" />\n                                Rich Content\n                              </Badge>\n                            )}\n                            {video.audioScript && (\n                              <Badge variant=\"outline\" className=\"text-xs bg-green-50 text-green-700\">\n                                <Volume2 className=\"h-3 w-3 mr-1\" />\n                                Audio\n                              </Badge>\n                            )}\n                          </div>\n                          {isLocked ? (\n                            <span className=\"text-gray-400 text-sm\">Locked</span>\n                          ) : (\n                            <Button \n                              variant=\"ghost\" \n                              size=\"sm\"\n                              className=\"text-uk-blue hover:text-uk-blue/80 text-sm font-medium\"\n                              onClick={() => handleVideoClick(video)}\n                            >\n                              Learn\n                            </Button>\n                          )}\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Enhanced Video Modal with Tabs */}\n      <Dialog open={isPlayerOpen} onOpenChange={handleClosePlayer}>\n        <DialogContent className=\"max-w-6xl max-h-[95vh] p-0\">\n          <DialogHeader className=\"p-6 pb-4 border-b\">\n            <div className=\"flex items-center justify-between\">\n              <DialogTitle className=\"text-xl font-semibold\">\n                {selectedVideo?.title}\n              </DialogTitle>\n              {selectedVideo?.audioScript && (\n                <Button\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => speakText(selectedVideo.audioScript || '', selectedVideo.id)}\n                  className={`${speaking === selectedVideo.id ? 'text-uk-red border-uk-red' : 'text-uk-blue border-uk-blue'}`}\n                >\n                  {speaking === selectedVideo.id ? <VolumeX className=\"h-4 w-4 mr-2\" /> : <Volume2 className=\"h-4 w-4 mr-2\" />}\n                  {speaking === selectedVideo.id ? 'Stop Audio' : 'Play Audio'}\n                </Button>\n              )}\n            </div>\n          </DialogHeader>\n          {selectedVideo && (\n            <div className=\"p-6\">\n              <Tabs defaultValue=\"video\" className=\"w-full\">\n                <TabsList className=\"grid w-full grid-cols-4\">\n                  <TabsTrigger value=\"video\">Video</TabsTrigger>\n                  <TabsTrigger value=\"content\">Content</TabsTrigger>\n                  <TabsTrigger value=\"images\">Images</TabsTrigger>\n                  <TabsTrigger value=\"audio\">Audio</TabsTrigger>\n                </TabsList>\n                \n                <TabsContent value=\"video\" className=\"mt-6\">\n                  <div className=\"aspect-video bg-black rounded-lg overflow-hidden\">\n                    {selectedVideo.videoUrl.startsWith('/uploads/') ? (\n                      <video\n                        src={selectedVideo.videoUrl}\n                        title={selectedVideo.title}\n                        className=\"w-full h-full\"\n                        controls\n                        preload=\"metadata\"\n                        onError={(e) => {\n                          console.error('Video load error:', e.currentTarget.error);\n                          console.error('Video URL:', selectedVideo.videoUrl);\n                        }}\n                        onLoadStart={() => {\n                          console.log('Video loading started:', selectedVideo.videoUrl);\n                        }}\n                        onCanPlay={() => {\n                          console.log('Video can play:', selectedVideo.videoUrl);\n                        }}\n                      >\n                        Your browser does not support the video tag.\n                      </video>\n                    ) : (\n                      <iframe\n                        src={selectedVideo.videoUrl}\n                        title={selectedVideo.title}\n                        className=\"w-full h-full\"\n                        frameBorder=\"0\"\n                        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                        allowFullScreen\n                      />\n                    )}\n                  </div>\n                  <div className=\"mt-4\">\n                    <p className=\"text-gray-600 text-sm leading-relaxed\">\n                      {selectedVideo.description}\n                    </p>\n                    <div className=\"flex items-center gap-4 mt-3 text-sm text-gray-500\">\n                      <span>Duration: {formatDuration(selectedVideo.duration)}</span>\n                      <span>Category: {selectedVideo.category}</span>\n                    </div>\n                  </div>\n                </TabsContent>\n\n                <TabsContent value=\"content\" className=\"mt-6\">\n                  <div className=\"bg-gray-50 rounded-lg p-6\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Detailed Learning Content</h3>\n                    {selectedVideo.detailedContent ? (\n                      <div className=\"prose prose-sm max-w-none\">\n                        <p className=\"text-gray-700 leading-relaxed whitespace-pre-line\">\n                          {selectedVideo.detailedContent}\n                        </p>\n                      </div>\n                    ) : (\n                      <p className=\"text-gray-500 italic\">Detailed content will be available soon for this topic.</p>\n                    )}\n                  </div>\n                </TabsContent>\n\n                <TabsContent value=\"images\" className=\"mt-6\">\n                  <div className=\"space-y-4\">\n                    <h3 className=\"text-lg font-semibold text-gray-900\">Visual Learning Resources</h3>\n                    {selectedVideo.keyImages ? (\n                      <div className=\"grid md:grid-cols-2 gap-4\">\n                        {JSON.parse(selectedVideo.keyImages || '[]').map((image: any, index: number) => (\n                          <div key={index} className=\"bg-gray-50 rounded-lg overflow-hidden\">\n                            <img \n                              src={image.url} \n                              alt={image.description}\n                              className=\"w-full h-48 object-cover\"\n                            />\n                            <div className=\"p-4\">\n                              <p className=\"text-sm text-gray-700 font-medium\">{image.description}</p>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    ) : (\n                      <p className=\"text-gray-500 italic\">Visual resources will be available soon for this topic.</p>\n                    )}\n                  </div>\n                </TabsContent>\n\n                <TabsContent value=\"audio\" className=\"mt-6\">\n                  <div className=\"bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg p-6\">\n                    <div className=\"flex items-center mb-4\">\n                      <Volume2 className=\"h-6 w-6 text-uk-blue mr-3\" />\n                      <h3 className=\"text-lg font-semibold text-gray-900\">AI Voice Narration</h3>\n                    </div>\n                    {selectedVideo.audioScript ? (\n                      <div className=\"space-y-4\">\n                        <div className=\"flex items-center justify-center\">\n                          <Button\n                            onClick={() => speakText(selectedVideo.audioScript || '', selectedVideo.id)}\n                            className={`px-8 py-3 ${speaking === selectedVideo.id ? 'bg-uk-red hover:bg-uk-red/90' : 'bg-uk-blue hover:bg-uk-blue/90'}`}\n                          >\n                            {speaking === selectedVideo.id ? (\n                              <>\n                                <VolumeX className=\"h-5 w-5 mr-2\" />\n                                Stop Narration\n                              </>\n                            ) : (\n                              <>\n                                <Volume2 className=\"h-5 w-5 mr-2\" />\n                                Play Narration\n                              </>\n                            )}\n                          </Button>\n                        </div>\n                        <div className=\"bg-white rounded-lg p-4 border\">\n                          <h4 className=\"font-medium text-gray-900 mb-2\">Audio Script:</h4>\n                          <p className=\"text-gray-700 text-sm leading-relaxed\">\n                            {selectedVideo.audioScript}\n                          </p>\n                        </div>\n                        <div className=\"flex items-center text-xs text-gray-500 bg-white rounded-lg p-3\">\n                          <Volume2 className=\"h-4 w-4 mr-2\" />\n                          <span>Female British voice • Natural pace • Educational content</span>\n                        </div>\n                      </div>\n                    ) : (\n                      <p className=\"text-gray-500 italic\">Audio narration will be available soon for this topic.</p>\n                    )}\n                  </div>\n                </TabsContent>\n              </Tabs>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n    </section>\n  );\n}\n","size_bytes":24181},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/confetti.ts":{"content":"import confetti from 'canvas-confetti';\n\n// Standard celebration confetti\nexport const celebrateCorrectMatch = () => {\n  confetti({\n    particleCount: 100,\n    spread: 70,\n    origin: { y: 0.6 }\n  });\n};\n\n// Game completion celebration with multiple bursts\nexport const celebrateGameComplete = () => {\n  const duration = 3000;\n  const animationEnd = Date.now() + duration;\n  const defaults = { startVelocity: 30, spread: 360, ticks: 60, zIndex: 0 };\n\n  function randomInRange(min: number, max: number) {\n    return Math.random() * (max - min) + min;\n  }\n\n  const interval: any = setInterval(function() {\n    const timeLeft = animationEnd - Date.now();\n\n    if (timeLeft <= 0) {\n      return clearInterval(interval);\n    }\n\n    const particleCount = 50 * (timeLeft / duration);\n    \n    // Since particles fall down, start a bit higher than random\n    confetti({\n      ...defaults,\n      particleCount,\n      origin: { x: randomInRange(0.1, 0.3), y: Math.random() - 0.2 }\n    });\n    confetti({\n      ...defaults,\n      particleCount,\n      origin: { x: randomInRange(0.7, 0.9), y: Math.random() - 0.2 }\n    });\n  }, 250);\n};\n\n// Themed confetti for different games\nexport const celebrateWithTheme = (theme: 'sports' | 'holidays' | 'art' | 'general' | 'ages' | 'royal' | 'justice' | 'religious' | 'international' | 'military' | 'legislative' | 'political') => {\n  const configs = {\n    sports: {\n      colors: ['#FFD700', '#FFA500', '#FF4500', '#32CD32'],\n      shapes: ['circle', 'square'],\n      particleCount: 120\n    },\n    holidays: {\n      colors: ['#FF0000', '#00FF00', '#FFD700', '#FFA500', '#8A2BE2'],\n      shapes: ['circle', 'square'],\n      particleCount: 100\n    },\n    art: {\n      colors: ['#FF69B4', '#9370DB', '#4169E1', '#20B2AA', '#FFB6C1'],\n      shapes: ['circle', 'square'],\n      particleCount: 110\n    },\n    general: {\n      colors: ['#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FECA57'],\n      shapes: ['circle', 'square'],\n      particleCount: 100\n    },\n    ages: {\n      colors: ['#3B82F6', '#1D4ED8', '#60A5FA', '#93C5FD', '#DBEAFE'],\n      shapes: ['circle', 'square'],\n      particleCount: 105\n    },\n    royal: {\n      colors: ['#7C3AED', '#A855F7', '#C084FC', '#FFD700', '#B91C1C'],\n      shapes: ['circle', 'square'],\n      particleCount: 130\n    },\n    justice: {\n      colors: ['#1E40AF', '#3B82F6', '#60A5FA', '#1F2937', '#6B7280'],\n      shapes: ['circle', 'square'],\n      particleCount: 125\n    },\n    religious: {\n      colors: ['#6366F1', '#8B5CF6', '#EC4899', '#F59E0B', '#10B981'],\n      shapes: ['circle', 'square'],\n      particleCount: 120\n    },\n    international: {\n      colors: ['#2563EB', '#1D4ED8', '#3B82F6', '#60A5FA', '#93C5FD'],\n      shapes: ['circle', 'square'],\n      particleCount: 115\n    },\n    military: {\n      colors: ['#DC2626', '#B91C1C', '#EF4444', '#F87171', '#FCA5A5'],\n      shapes: ['circle', 'square'],\n      particleCount: 140\n    },\n    legislative: {\n      colors: ['#D97706', '#F59E0B', '#FBBF24', '#FCD34D', '#FDE68A'],\n      shapes: ['circle', 'square'],\n      particleCount: 125\n    },\n    political: {\n      colors: ['#1E40AF', '#3B82F6', '#60A5FA', '#93C5FD', '#DBEAFE'],\n      shapes: ['circle', 'square'],\n      particleCount: 130\n    }\n  };\n\n  const config = configs[theme];\n  \n  confetti({\n    particleCount: config.particleCount,\n    spread: 80,\n    origin: { y: 0.6 },\n    colors: config.colors\n  });\n};","size_bytes":3393},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<any> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return await res.json();\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1391},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/chatbot.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { Send, Bot, User, MessageCircle, ArrowLeft, Lightbulb, BookOpen, Video, MapPin } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Link } from \"wouter\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface ChatMessage {\n  id: string;\n  type: 'user' | 'bot';\n  content: string;\n  timestamp: Date;\n  suggestions?: string[];\n  resources?: {\n    type: 'video' | 'timeline' | 'game' | 'resource';\n    title: string;\n    url: string;\n  }[];\n}\n\nexport default function ChatBot() {\n  const [messages, setMessages] = useState<ChatMessage[]>([\n    {\n      id: '1',\n      type: 'bot',\n      content: \"Hello! I'm your Life in UK study assistant. I can help you with questions about British history, culture, government, and citizenship test preparation. What would you like to learn about?\",\n      timestamp: new Date(),\n      suggestions: [\n        \"Tell me about the British Parliament\",\n        \"What are the key historical periods?\",\n        \"How does the UK government work?\",\n        \"What should I know about British culture?\"\n      ]\n    }\n  ]);\n  const [inputMessage, setInputMessage] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const { toast } = useToast();\n\n  const chatMutation = useMutation({\n    mutationFn: async (question: string) => {\n      const response = await apiRequest(\"POST\", \"/api/chatbot/ask\", { question });\n      if (!response.ok) {\n        throw new Error('Failed to get response');\n      }\n      return response.json();\n    },\n    onSuccess: (data) => {\n      setIsTyping(false);\n      const botMessage: ChatMessage = {\n        id: Date.now().toString(),\n        type: 'bot',\n        content: data.answer,\n        timestamp: new Date(),\n        suggestions: data.suggestions || [],\n        resources: data.resources || []\n      };\n      setMessages(prev => [...prev, botMessage]);\n    },\n    onError: (error) => {\n      setIsTyping(false);\n      toast({\n        title: \"Error\",\n        description: \"Failed to get response. Please try again.\",\n        variant: \"destructive\"\n      });\n    }\n  });\n\n  const handleSendMessage = (messageText: string) => {\n    if (!messageText.trim()) return;\n\n    const userMessage: ChatMessage = {\n      id: Date.now().toString(),\n      type: 'user',\n      content: messageText,\n      timestamp: new Date()\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage(\"\");\n    setIsTyping(true);\n    chatMutation.mutate(messageText);\n  };\n\n  const handleSuggestionClick = (suggestion: string) => {\n    handleSendMessage(suggestion);\n  };\n\n  const getResourceIcon = (type: string) => {\n    switch (type) {\n      case 'video': return <Video className=\"h-4 w-4\" />;\n      case 'timeline': return <BookOpen className=\"h-4 w-4\" />;\n      case 'game': return <Lightbulb className=\"h-4 w-4\" />;\n      case 'resource': return <MapPin className=\"h-4 w-4\" />;\n      default: return <BookOpen className=\"h-4 w-4\" />;\n    }\n  };\n\n  const formatTime = (date: Date) => {\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-green-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900\">\n      <div className=\"max-w-4xl mx-auto p-4\">\n        {/* Header */}\n        <div className=\"mb-6\">\n          <div className=\"flex items-center gap-4 mb-4\">\n            <Link href=\"/dashboard\">\n              <Button variant=\"ghost\" size=\"sm\" className=\"flex items-center gap-2\">\n                <ArrowLeft className=\"h-4 w-4\" />\n                Back to Dashboard\n              </Button>\n            </Link>\n          </div>\n          <div className=\"flex items-center gap-3 mb-2\">\n            <div className=\"w-12 h-12 bg-uk-blue rounded-full flex items-center justify-center\">\n              <Bot className=\"h-6 w-6 text-white\" />\n            </div>\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n                Life in UK Study Assistant\n              </h1>\n              <p className=\"text-gray-600 dark:text-gray-300\">\n                Ask questions about British history, culture, and citizenship\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Chat Interface */}\n        <Card className=\"h-[70vh] flex flex-col\">\n          <CardHeader className=\"pb-4\">\n            <CardTitle className=\"flex items-center gap-2\">\n              <MessageCircle className=\"h-5 w-5\" />\n              Chat with Study Assistant\n            </CardTitle>\n          </CardHeader>\n          \n          <CardContent className=\"flex-1 flex flex-col p-0\">\n            {/* Messages Area */}\n            <ScrollArea className=\"flex-1 p-4\">\n              <div className=\"space-y-4\">\n                {messages.map((message) => (\n                  <div\n                    key={message.id}\n                    className={`flex gap-3 ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}\n                  >\n                    {message.type === 'bot' && (\n                      <div className=\"w-8 h-8 bg-uk-blue rounded-full flex items-center justify-center flex-shrink-0\">\n                        <Bot className=\"h-4 w-4 text-white\" />\n                      </div>\n                    )}\n                    \n                    <div className={`max-w-[80%] ${message.type === 'user' ? 'order-1' : ''}`}>\n                      <div\n                        className={`p-3 rounded-lg ${\n                          message.type === 'user'\n                            ? 'bg-uk-blue text-white'\n                            : 'bg-gray-100 dark:bg-gray-700 text-gray-900 dark:text-white'\n                        }`}\n                      >\n                        <p className=\"whitespace-pre-wrap\">{message.content}</p>\n                      </div>\n                      \n                      <div className={`text-xs text-gray-500 mt-1 ${message.type === 'user' ? 'text-right' : ''}`}>\n                        {formatTime(message.timestamp)}\n                      </div>\n\n                      {/* Resources */}\n                      {message.resources && message.resources.length > 0 && (\n                        <div className=\"mt-3 space-y-2\">\n                          <p className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n                            Helpful Resources:\n                          </p>\n                          {message.resources.map((resource, index) => (\n                            <Link key={index} href={resource.url}>\n                              <div className=\"flex items-center gap-2 p-2 bg-blue-50 dark:bg-blue-900/20 rounded-lg hover:bg-blue-100 dark:hover:bg-blue-900/30 transition-colors cursor-pointer\">\n                                {getResourceIcon(resource.type)}\n                                <span className=\"text-sm text-blue-700 dark:text-blue-300\">\n                                  {resource.title}\n                                </span>\n                                <Badge variant=\"outline\" className=\"text-xs\">\n                                  {resource.type}\n                                </Badge>\n                              </div>\n                            </Link>\n                          ))}\n                        </div>\n                      )}\n\n                      {/* Suggestions */}\n                      {message.suggestions && message.suggestions.length > 0 && (\n                        <div className=\"mt-3 space-y-2\">\n                          <p className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n                            You might also ask:\n                          </p>\n                          <div className=\"flex flex-wrap gap-2\">\n                            {message.suggestions.map((suggestion, index) => (\n                              <Button\n                                key={index}\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={() => handleSuggestionClick(suggestion)}\n                                className=\"text-xs\"\n                              >\n                                {suggestion}\n                              </Button>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n                    </div>\n\n                    {message.type === 'user' && (\n                      <div className=\"w-8 h-8 bg-gray-300 rounded-full flex items-center justify-center flex-shrink-0\">\n                        <User className=\"h-4 w-4 text-gray-600\" />\n                      </div>\n                    )}\n                  </div>\n                ))}\n\n                {/* Typing Indicator */}\n                {isTyping && (\n                  <div className=\"flex gap-3 justify-start\">\n                    <div className=\"w-8 h-8 bg-uk-blue rounded-full flex items-center justify-center flex-shrink-0\">\n                      <Bot className=\"h-4 w-4 text-white\" />\n                    </div>\n                    <div className=\"bg-gray-100 dark:bg-gray-700 p-3 rounded-lg\">\n                      <div className=\"flex space-x-1\">\n                        <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\n                        <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                        <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </ScrollArea>\n\n            {/* Input Area */}\n            <div className=\"p-4 border-t\">\n              <div className=\"flex gap-2\">\n                <Input\n                  value={inputMessage}\n                  onChange={(e) => setInputMessage(e.target.value)}\n                  placeholder=\"Ask about British history, culture, government...\"\n                  onKeyPress={(e) => {\n                    if (e.key === 'Enter' && !e.shiftKey) {\n                      e.preventDefault();\n                      handleSendMessage(inputMessage);\n                    }\n                  }}\n                  disabled={chatMutation.isPending}\n                  className=\"flex-1\"\n                />\n                <Button\n                  onClick={() => handleSendMessage(inputMessage)}\n                  disabled={!inputMessage.trim() || chatMutation.isPending}\n                  size=\"icon\"\n                >\n                  <Send className=\"h-4 w-4\" />\n                </Button>\n              </div>\n              <p className=\"text-xs text-gray-500 mt-2\">\n                Press Enter to send • Shift+Enter for new line\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Quick Help */}\n        <Card className=\"mt-4\">\n          <CardContent className=\"p-4\">\n            <h3 className=\"font-medium text-gray-900 dark:text-white mb-3\">Quick Help Topics:</h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-2\">\n              {[\n                \"British Parliament\",\n                \"Historical Timeline\",\n                \"UK Geography\",\n                \"Cultural Traditions\",\n                \"Government System\",\n                \"Citizenship Test\",\n                \"Royal Family\",\n                \"British Laws\"\n              ].map((topic) => (\n                <Button\n                  key={topic}\n                  variant=\"outline\"\n                  size=\"sm\"\n                  onClick={() => handleSendMessage(`Tell me about ${topic}`)}\n                  className=\"text-left justify-start\"\n                >\n                  {topic}\n                </Button>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}","size_bytes":12292},"client/src/pages/dashboard.tsx":{"content":"import { Crown, Trophy, User, Upload, MessageCircle } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport VideoSection from \"@/components/video-section\";\nimport TimelineSection from \"@/components/timeline-section\";\nimport ExerciseSection from \"@/components/exercise-section\";\nimport ProgressRoadmap from \"@/components/progress-roadmap\";\nimport ResourcesSection from \"@/components/resources-section\";\nimport StudyStats from \"@/components/study-stats\";\nimport MobileNav from \"@/components/mobile-nav\";\nimport UserProfileDropdown from \"@/components/user-profile-dropdown\";\nimport FloatingChatbot from \"@/components/floating-chatbot\";\nimport StudentProgressStats from \"@/components/student-progress-stats\";\nimport { SimpleThemeToggle } from \"@/components/ThemeToggle\";\nimport { useAuth } from \"@/contexts/AuthContext\";\n\nexport default function Dashboard() {\n  const { user, isLoading } = useAuth();\n\n  // Show loading state while authentication is being checked\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"w-8 h-8 border-2 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <p className=\"text-gray-600 dark:text-gray-400\">Loading your dashboard...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Redirect to login if not authenticated (handled by ProtectedRoute)\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      {/* Navigation Header */}\n      <header className=\"bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700 sticky top-0 z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <div className=\"flex items-center space-x-3 flex-shrink-0\">\n              <div className=\"w-10 h-10 bg-uk-blue rounded-lg flex items-center justify-center\">\n                <Crown className=\"text-white\" size={20} />\n              </div>\n              <div className=\"hidden sm:block\">\n                <h1 className=\"text-xl font-bold text-gray-900 dark:text-white\">Life in UK Test</h1>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">E-Learning Platform</p>\n              </div>\n            </div>\n            \n            <nav className=\"hidden lg:flex items-center space-x-6 flex-1 justify-center max-w-4xl mx-auto\">\n              <Link href=\"/\" className=\"text-uk-blue font-medium border-b-2 border-uk-blue px-2 py-1 text-sm\">\n                Dashboard\n              </Link>\n              <Link href=\"/timeline\" className=\"text-gray-600 dark:text-gray-300 hover:text-uk-blue dark:hover:text-uk-blue transition-colors px-2 py-1 text-sm\">\n                Timeline\n              </Link>\n              <Link href=\"/diagrams\" className=\"text-gray-600 dark:text-gray-300 hover:text-uk-blue dark:hover:text-uk-blue transition-colors px-2 py-1 text-sm\">\n                Diagrams\n              </Link>\n              <Link href=\"/games\" className=\"text-gray-600 dark:text-gray-300 hover:text-uk-blue dark:hover:text-uk-blue transition-colors px-2 py-1 text-sm\">\n                Games\n              </Link>\n              <Link href=\"/practice-tests\" className=\"text-gray-600 dark:text-gray-300 hover:text-uk-blue dark:hover:text-uk-blue transition-colors px-2 py-1 text-sm\">\n                Tests\n              </Link>\n              <Link href=\"/interactive-map\" className=\"text-gray-600 dark:text-gray-300 hover:text-uk-blue dark:hover:text-uk-blue transition-colors px-2 py-1 text-sm\">\n                Map\n              </Link>\n            </nav>\n\n            <div className=\"flex items-center space-x-3 flex-shrink-0\">\n              <div className=\"hidden md:flex items-center space-x-2 bg-gray-100 dark:bg-gray-800 rounded-full px-3 py-1\">\n                <Trophy className=\"text-yellow-500\" size={16} />\n                <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">{user.overallProgress || 0}%</span>\n              </div>\n              <SimpleThemeToggle />\n              <UserProfileDropdown user={user} />\n              <div className=\"lg:hidden\">\n                <MobileNav />\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Dashboard Layout */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        \n        {/* Enhanced Welcome Hero Section */}\n        <div className=\"mb-8\">\n          <div className=\"relative overflow-hidden bg-gradient-to-r from-blue-600 via-purple-600 to-red-600 rounded-3xl shadow-2xl\">\n            {/* Background Pattern */}\n            <div className=\"absolute inset-0 bg-black/10\">\n              <div className=\"absolute inset-0\" style={{\n                backgroundImage: `url(\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.1'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")`,\n              }}>\n              </div>\n            </div>\n            \n            <div className=\"relative p-6 md:p-8\">\n              <div className=\"flex flex-col lg:flex-row items-center justify-between space-y-4 lg:space-y-0\">\n                {/* Welcome Content */}\n                <div className=\"text-center lg:text-left max-w-xl\">\n                  <div className=\"flex items-center justify-center lg:justify-start mb-3\">\n                    <div className=\"w-10 h-10 bg-white/20 rounded-full flex items-center justify-center mr-3\">\n                      <span className=\"text-xl\">🇬🇧</span>\n                    </div>\n                    <div className=\"text-white/90 text-xs font-medium uppercase tracking-wider\">\n                      Life in UK Test Preparation\n                    </div>\n                  </div>\n                  \n                  <h1 className=\"text-3xl lg:text-4xl font-bold text-white mb-3 leading-tight\">\n                    Welcome back, <span className=\"text-yellow-300\">{user.name}!</span>\n                  </h1>\n                  \n                  <p className=\"text-lg text-white/90 mb-4 leading-relaxed\">\n                    Continue your comprehensive journey to UK learning\n                  </p>\n                  \n                  {/* Quick Stats */}\n                  <div className=\"flex flex-wrap items-center justify-center lg:justify-start gap-3\">\n                    <div className=\"bg-white/10 backdrop-blur-sm rounded-lg px-4 py-3 text-center min-w-[100px]\">\n                      <div className=\"text-2xl font-bold text-yellow-300\">{user.overallProgress || 0}%</div>\n                      <div className=\"text-xs text-white/80\">Progress</div>\n                    </div>\n                    \n                    <div className=\"bg-white/10 backdrop-blur-sm rounded-lg px-4 py-3 text-center min-w-[100px]\">\n                      <div className=\"text-2xl font-bold text-green-300\">156h</div>\n                      <div className=\"text-xs text-white/80\">Study Time</div>\n                    </div>\n                    \n                    <div className=\"bg-white/10 backdrop-blur-sm rounded-lg px-4 py-3 text-center min-w-[100px]\">\n                      <div className=\"text-2xl font-bold text-blue-300\">12</div>\n                      <div className=\"text-xs text-white/80\">Day Streak</div>\n                    </div>\n                  </div>\n                </div>\n                \n                {/* Profile Avatar & Progress Ring */}\n                <div className=\"flex flex-col items-center space-y-4\">\n                  <div className=\"relative\">\n                    {/* Progress Ring */}\n                    <div className=\"w-28 h-28 relative\">\n                      <svg className=\"w-28 h-28 transform -rotate-90\" viewBox=\"0 0 120 120\">\n                        {/* Background circle */}\n                        <circle\n                          cx=\"60\"\n                          cy=\"60\"\n                          r=\"50\"\n                          stroke=\"rgba(255,255,255,0.2)\"\n                          strokeWidth=\"8\"\n                          fill=\"none\"\n                        />\n                        {/* Progress circle */}\n                        <circle\n                          cx=\"60\"\n                          cy=\"60\"\n                          r=\"50\"\n                          stroke=\"url(#progressGradient)\"\n                          strokeWidth=\"8\"\n                          fill=\"none\"\n                          strokeLinecap=\"round\"\n                          strokeDasharray={`${((user.overallProgress || 0) / 100) * 314} 314`}\n                          className=\"transition-all duration-1000 ease-out\"\n                        />\n                        <defs>\n                          <linearGradient id=\"progressGradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                            <stop offset=\"0%\" stopColor=\"#fbbf24\" />\n                            <stop offset=\"50%\" stopColor=\"#f59e0b\" />\n                            <stop offset=\"100%\" stopColor=\"#d97706\" />\n                          </linearGradient>\n                        </defs>\n                      </svg>\n                      \n                      {/* Avatar */}\n                      <div className=\"absolute inset-0 flex items-center justify-center\">\n                        <div className=\"w-20 h-20 bg-gradient-to-br from-yellow-400 to-orange-500 rounded-full flex items-center justify-center shadow-lg\">\n                          <span className=\"text-white font-bold text-2xl\">{user.name?.charAt(0) || 'U'}</span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  {/* Quick Action Buttons */}\n                  <div className=\"flex space-x-2\">\n                    <Link href=\"/practice-tests\">\n                      <button className=\"bg-white/20 hover:bg-white/30 text-white border border-white/30 backdrop-blur-sm px-4 py-2 rounded-full text-sm font-medium transition-all duration-200 hover:scale-105\">\n                        Practice →\n                      </button>\n                    </Link>\n                    <Link href=\"/mock-tests\">\n                      <button className=\"bg-yellow-500/90 hover:bg-yellow-400 text-white px-4 py-2 rounded-full text-sm font-medium transition-all duration-200 hover:scale-105 shadow-lg\">\n                        Mock Test →\n                      </button>\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Quick Access Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-6 mb-8\">\n          {/* Practice Tests */}\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 flex flex-col\">\n            <div className=\"text-center mb-4\">\n              <Link href=\"/practice-tests\">\n                <div className=\"bg-gradient-to-r from-green-500 to-blue-600 text-white rounded-full px-6 py-3 cursor-pointer hover:shadow-lg transition-shadow\">\n                  <div className=\"text-2xl font-bold\">45</div>\n                  <div className=\"text-sm\">Tests Available</div>\n                </div>\n              </Link>\n            </div>\n            <div className=\"mt-auto\">\n              <h3 className=\"text-lg font-bold text-gray-900 mb-1\">Practice Tests</h3>\n              <p className=\"text-sm text-gray-600\">Take full 24-question practice tests</p>\n            </div>\n          </div>\n\n          {/* Mock Tests */}\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 flex flex-col\">\n            <div className=\"text-center mb-4\">\n              <Link href=\"/mock-tests\">\n                <div className=\"bg-gradient-to-r from-red-500 to-orange-600 text-white rounded-full px-6 py-3 cursor-pointer hover:shadow-lg transition-shadow\">\n                  <div className=\"text-2xl font-bold\">50+</div>\n                  <div className=\"text-sm\">Mock Tests</div>\n                </div>\n              </Link>\n            </div>\n            <div className=\"mt-auto\">\n              <h3 className=\"text-lg font-bold text-gray-900 mb-1\">Mock Tests</h3>\n              <p className=\"text-sm text-gray-600\">Official exam simulation with timer</p>\n            </div>\n          </div>\n          \n          {/* Interactive Games */}\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 flex flex-col\">\n            <div className=\"text-center mb-4\">\n              <Link href=\"/games\">\n                <div className=\"bg-gradient-to-r from-purple-500 to-pink-600 text-white rounded-full px-6 py-3 cursor-pointer hover:shadow-lg transition-shadow\">\n                  <div className=\"text-2xl font-bold\">2</div>\n                  <div className=\"text-sm\">Games Available</div>\n                </div>\n              </Link>\n            </div>\n            <div className=\"mt-auto\">\n              <h3 className=\"text-lg font-bold text-gray-900 mb-1\">Interactive Games</h3>\n              <p className=\"text-sm text-gray-600\">Play matching cards and flip card games</p>\n            </div>\n          </div>\n\n          {/* UK System Diagrams */}\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 flex flex-col\">\n            <div className=\"text-center mb-4\">\n              <Link href=\"/diagrams\">\n                <div className=\"bg-gradient-to-r from-indigo-500 to-cyan-600 text-white rounded-full px-6 py-3 cursor-pointer hover:shadow-lg transition-shadow\">\n                  <div className=\"text-2xl font-bold\">3</div>\n                  <div className=\"text-sm\">Diagrams</div>\n                </div>\n              </Link>\n            </div>\n            <div className=\"mt-auto\">\n              <h3 className=\"text-lg font-bold text-gray-900 mb-1\">System Diagrams</h3>\n              <p className=\"text-sm text-gray-600\">Visual guides to UK government and justice systems</p>\n            </div>\n          </div>\n\n          {/* Interactive Map */}\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 flex flex-col\">\n            <div className=\"text-center mb-4\">\n              <Link href=\"/interactive-map\">\n                <div className=\"bg-gradient-to-r from-emerald-500 to-teal-600 text-white rounded-full px-6 py-3 cursor-pointer hover:shadow-lg transition-shadow\">\n                  <div className=\"text-2xl font-bold\">18</div>\n                  <div className=\"text-sm\">Locations</div>\n                </div>\n              </Link>\n            </div>\n            <div className=\"mt-auto\">\n              <h3 className=\"text-lg font-bold text-gray-900 mb-1\">Interactive Map</h3>\n              <p className=\"text-sm text-gray-600\">Explore UK geography and cultural regions</p>\n            </div>\n          </div>\n\n          {/* Video Upload */}\n          <div className=\"bg-white rounded-xl shadow-sm border border-gray-200 p-6 flex flex-col\">\n            <div className=\"text-center mb-4\">\n              <Link href=\"/video-upload\">\n                <div className=\"bg-gradient-to-r from-purple-500 to-violet-600 text-white rounded-full px-6 py-3 cursor-pointer hover:shadow-lg transition-shadow\">\n                  <Upload className=\"text-2xl mx-auto mb-1\" size={24} />\n                  <div className=\"text-sm\">Upload</div>\n                </div>\n              </Link>\n            </div>\n            <div className=\"mt-auto\">\n              <h3 className=\"text-lg font-bold text-gray-900 mb-1\">Upload Video</h3>\n              <p className=\"text-sm text-gray-600\">Add educational video content</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Learning Modules Grid */}\n        <div className=\"grid lg:grid-cols-3 gap-8\">\n          \n          {/* Left Column - Main Content */}\n          <div className=\"lg:col-span-2 space-y-8\">\n            <VideoSection userId={user.id} />\n            <TimelineSection />\n\n          </div>\n\n          {/* Right Column - Sidebar */}\n          <div className=\"space-y-6\">\n            <StudentProgressStats userId={user.id} />\n            <ProgressRoadmap userId={user.id} />\n            <ResourcesSection />\n            <StudyStats userId={user.id} />\n          </div>\n        </div>\n      </div>\n\n      <MobileNav />\n      <FloatingChatbot />\n      \n      {/* Add padding bottom for mobile navigation */}\n      <div className=\"h-20 md:hidden\"></div>\n    </div>\n  );\n}\n","size_bytes":16775},"client/src/pages/diagrams.tsx":{"content":"import { useState } from \"react\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { \n  ArrowLeft, \n  Crown, \n  Scale, \n  Building, \n  Users, \n  Gavel,\n  MapPin,\n  Shield,\n  BookOpen,\n  ChevronDown,\n  ChevronRight\n} from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function DiagramsPage() {\n  const [selectedRegion, setSelectedRegion] = useState<string>(\"england\");\n  const [expandedSections, setExpandedSections] = useState<Record<string, boolean>>({});\n\n  const toggleSection = (section: string) => {\n    setExpandedSections(prev => ({\n      ...prev,\n      [section]: !prev[section]\n    }));\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-50 dark:from-gray-900 dark:to-gray-800\">\n      {/* Header */}\n      <div className=\"bg-white dark:bg-gray-800 shadow-sm border-b\">\n        <div className=\"container mx-auto max-w-6xl p-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <Link href=\"/\">\n                <Button variant=\"ghost\" size=\"sm\">\n                  <ArrowLeft className=\"h-4 w-4 mr-2\" />\n                  Back to Dashboard\n                </Button>\n              </Link>\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white\">UK System Diagrams</h1>\n                <p className=\"text-gray-600 dark:text-gray-300\">Visual guides to understanding UK governance and justice</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Content */}\n      <div className=\"container mx-auto max-w-6xl p-4\">\n        <Tabs defaultValue=\"government\" className=\"w-full\">\n          <TabsList className=\"grid w-full grid-cols-3\">\n            <TabsTrigger value=\"government\" className=\"flex items-center space-x-2\">\n              <Crown className=\"h-4 w-4\" />\n              <span>Government System</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"justice\" className=\"flex items-center space-x-2\">\n              <Scale className=\"h-4 w-4\" />\n              <span>Justice System</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"parliament\" className=\"flex items-center space-x-2\">\n              <Building className=\"h-4 w-4\" />\n              <span>Parliament Structure</span>\n            </TabsTrigger>\n          </TabsList>\n\n          {/* Government System Diagram */}\n          <TabsContent value=\"government\" className=\"mt-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Crown className=\"h-5 w-5 text-purple-600\" />\n                  <span>UK Government System</span>\n                </CardTitle>\n                <CardDescription>\n                  The United Kingdom operates as a constitutional monarchy with a parliamentary democracy\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  {/* Head of State */}\n                  <div className=\"text-center\">\n                    <div className=\"inline-block bg-purple-100 dark:bg-purple-900 rounded-lg p-4 mb-4\">\n                      <Crown className=\"h-8 w-8 text-purple-600 mx-auto mb-2\" />\n                      <h3 className=\"font-semibold text-lg\">The Monarch</h3>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-300\">Head of State</p>\n                      <p className=\"text-xs text-gray-500 mt-1\">Currently King Charles III</p>\n                    </div>\n                  </div>\n\n                  {/* Executive Branch */}\n                  <div className=\"border-t pt-6\">\n                    <h3 className=\"font-semibold text-lg mb-4 flex items-center\">\n                      <Users className=\"h-5 w-5 mr-2 text-blue-600\" />\n                      Executive Branch\n                    </h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                      <Card className=\"bg-blue-50 dark:bg-blue-900\">\n                        <CardContent className=\"p-4\">\n                          <h4 className=\"font-semibold\">Prime Minister</h4>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-300\">Head of Government</p>\n                          <p className=\"text-xs mt-2\">• Leads the majority party</p>\n                          <p className=\"text-xs\">• Appoints Cabinet ministers</p>\n                          <p className=\"text-xs\">• Sets government policy</p>\n                        </CardContent>\n                      </Card>\n                      <Card className=\"bg-blue-50 dark:bg-blue-900\">\n                        <CardContent className=\"p-4\">\n                          <h4 className=\"font-semibold\">Cabinet</h4>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-300\">Senior Ministers</p>\n                          <p className=\"text-xs mt-2\">• Usually around 20-25 members</p>\n                          <p className=\"text-xs\">• Head government departments</p>\n                          <p className=\"text-xs\">• Make key decisions</p>\n                        </CardContent>\n                      </Card>\n                      <Card className=\"bg-blue-50 dark:bg-blue-900\">\n                        <CardContent className=\"p-4\">\n                          <h4 className=\"font-semibold\">Civil Service</h4>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-300\">Government Administration</p>\n                          <p className=\"text-xs mt-2\">• Politically neutral</p>\n                          <p className=\"text-xs\">• Implements government policy</p>\n                          <p className=\"text-xs\">• Provides continuity</p>\n                        </CardContent>\n                      </Card>\n                    </div>\n                  </div>\n\n                  {/* Legislative Branch */}\n                  <div className=\"border-t pt-6\">\n                    <h3 className=\"font-semibold text-lg mb-4 flex items-center\">\n                      <Building className=\"h-5 w-5 mr-2 text-green-600\" />\n                      Legislative Branch (Parliament)\n                    </h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <Card className=\"bg-green-50 dark:bg-green-900\">\n                        <CardContent className=\"p-4\">\n                          <h4 className=\"font-semibold\">House of Commons</h4>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-300\">Lower House - Elected</p>\n                          <p className=\"text-xs mt-2\">• 650 Members of Parliament (MPs)</p>\n                          <p className=\"text-xs\">• Elected every 5 years maximum</p>\n                          <p className=\"text-xs\">• Controls government spending</p>\n                          <p className=\"text-xs\">• Can remove government</p>\n                        </CardContent>\n                      </Card>\n                      <Card className=\"bg-green-50 dark:bg-green-900\">\n                        <CardContent className=\"p-4\">\n                          <h4 className=\"font-semibold\">House of Lords</h4>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-300\">Upper House - Appointed</p>\n                          <p className=\"text-xs mt-2\">• Around 800 members</p>\n                          <p className=\"text-xs\">• Life peers, bishops, hereditary peers</p>\n                          <p className=\"text-xs\">• Reviews and revises legislation</p>\n                          <p className=\"text-xs\">• Cannot block money bills</p>\n                        </CardContent>\n                      </Card>\n                    </div>\n                  </div>\n\n                  {/* Judicial Branch */}\n                  <div className=\"border-t pt-6\">\n                    <h3 className=\"font-semibold text-lg mb-4 flex items-center\">\n                      <Scale className=\"h-5 w-5 mr-2 text-red-600\" />\n                      Judicial Branch\n                    </h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                      <Card className=\"bg-red-50 dark:bg-red-900\">\n                        <CardContent className=\"p-4\">\n                          <h4 className=\"font-semibold\">Supreme Court</h4>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-300\">Highest Court</p>\n                          <p className=\"text-xs mt-2\">• 12 Justices</p>\n                          <p className=\"text-xs\">• Final court of appeal</p>\n                          <p className=\"text-xs\">• Constitutional matters</p>\n                        </CardContent>\n                      </Card>\n                      <Card className=\"bg-red-50 dark:bg-red-900\">\n                        <CardContent className=\"p-4\">\n                          <h4 className=\"font-semibold\">Court of Appeal</h4>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-300\">Appeals Court</p>\n                          <p className=\"text-xs mt-2\">• Civil and Criminal Divisions</p>\n                          <p className=\"text-xs\">• Hears appeals from lower courts</p>\n                        </CardContent>\n                      </Card>\n                      <Card className=\"bg-red-50 dark:bg-red-900\">\n                        <CardContent className=\"p-4\">\n                          <h4 className=\"font-semibold\">High Court</h4>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-300\">Major Cases</p>\n                          <p className=\"text-xs mt-2\">• Family, Chancery, Queen's Bench</p>\n                          <p className=\"text-xs\">• Serious civil and criminal cases</p>\n                        </CardContent>\n                      </Card>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          {/* Justice System Diagram */}\n          <TabsContent value=\"justice\" className=\"mt-6\">\n            <div className=\"space-y-6\">\n              {/* Region Selector */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <MapPin className=\"h-5 w-5 text-blue-600\" />\n                    <span>Select Region</span>\n                  </CardTitle>\n                  <CardDescription>\n                    The UK has different justice systems in each nation\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                    {[\n                      { id: \"england\", name: \"England & Wales\", color: \"bg-red-100 text-red-800\" },\n                      { id: \"scotland\", name: \"Scotland\", color: \"bg-blue-100 text-blue-800\" },\n                      { id: \"northern-ireland\", name: \"Northern Ireland\", color: \"bg-green-100 text-green-800\" }\n                    ].map((region) => (\n                      <Button\n                        key={region.id}\n                        variant={selectedRegion === region.id ? \"default\" : \"outline\"}\n                        onClick={() => setSelectedRegion(region.id)}\n                        className=\"h-auto p-4\"\n                      >\n                        <div>\n                          <div className=\"font-semibold\">{region.name}</div>\n                        </div>\n                      </Button>\n                    ))}\n                  </div>\n                </CardContent>\n              </Card>\n\n              {/* Justice System Details */}\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Scale className=\"h-5 w-5 text-purple-600\" />\n                    <span>\n                      {selectedRegion === \"england\" && \"England & Wales Justice System\"}\n                      {selectedRegion === \"scotland\" && \"Scotland Justice System\"}\n                      {selectedRegion === \"northern-ireland\" && \"Northern Ireland Justice System\"}\n                    </span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent>\n                  {selectedRegion === \"england\" && (\n                    <div className=\"space-y-6\">\n                      {/* Criminal Courts */}\n                      <div>\n                        <h3 className=\"font-semibold text-lg mb-4 flex items-center\">\n                          <Gavel className=\"h-5 w-5 mr-2 text-red-600\" />\n                          Criminal Courts Hierarchy\n                        </h3>\n                        <div className=\"space-y-4\">\n                          <Card className=\"bg-red-50 dark:bg-red-900\">\n                            <CardContent className=\"p-4\">\n                              <h4 className=\"font-semibold\">Supreme Court</h4>\n                              <p className=\"text-sm text-gray-600 dark:text-gray-300\">Final appeal court for criminal cases</p>\n                            </CardContent>\n                          </Card>\n                          <Card className=\"bg-red-100 dark:bg-red-800\">\n                            <CardContent className=\"p-4\">\n                              <h4 className=\"font-semibold\">Court of Appeal (Criminal Division)</h4>\n                              <p className=\"text-sm text-gray-600 dark:text-gray-300\">Appeals from Crown Court</p>\n                            </CardContent>\n                          </Card>\n                          <Card className=\"bg-red-200 dark:bg-red-700\">\n                            <CardContent className=\"p-4\">\n                              <h4 className=\"font-semibold\">Crown Court</h4>\n                              <p className=\"text-sm text-gray-600 dark:text-gray-300\">Serious criminal cases, jury trials</p>\n                            </CardContent>\n                          </Card>\n                          <Card className=\"bg-red-300 dark:bg-red-600\">\n                            <CardContent className=\"p-4\">\n                              <h4 className=\"font-semibold\">Magistrates' Court</h4>\n                              <p className=\"text-sm text-gray-600 dark:text-gray-300\">Minor criminal cases, preliminary hearings</p>\n                            </CardContent>\n                          </Card>\n                        </div>\n                      </div>\n\n                      {/* Civil Courts */}\n                      <div className=\"border-t pt-6\">\n                        <h3 className=\"font-semibold text-lg mb-4 flex items-center\">\n                          <BookOpen className=\"h-5 w-5 mr-2 text-blue-600\" />\n                          Civil Courts Hierarchy\n                        </h3>\n                        <div className=\"space-y-4\">\n                          <Card className=\"bg-blue-50 dark:bg-blue-900\">\n                            <CardContent className=\"p-4\">\n                              <h4 className=\"font-semibold\">Supreme Court</h4>\n                              <p className=\"text-sm text-gray-600 dark:text-gray-300\">Final appeal court for civil cases</p>\n                            </CardContent>\n                          </Card>\n                          <Card className=\"bg-blue-100 dark:bg-blue-800\">\n                            <CardContent className=\"p-4\">\n                              <h4 className=\"font-semibold\">Court of Appeal (Civil Division)</h4>\n                              <p className=\"text-sm text-gray-600 dark:text-gray-300\">Appeals from High Court and County Court</p>\n                            </CardContent>\n                          </Card>\n                          <Card className=\"bg-blue-200 dark:bg-blue-700\">\n                            <CardContent className=\"p-4\">\n                              <h4 className=\"font-semibold\">High Court</h4>\n                              <p className=\"text-sm text-gray-600 dark:text-gray-300\">Complex civil cases - Family, Chancery, Queen's Bench</p>\n                            </CardContent>\n                          </Card>\n                          <Card className=\"bg-blue-300 dark:bg-blue-600\">\n                            <CardContent className=\"p-4\">\n                              <h4 className=\"font-semibold\">County Court</h4>\n                              <p className=\"text-sm text-gray-600 dark:text-gray-300\">Most civil cases, small claims, family matters</p>\n                            </CardContent>\n                          </Card>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n\n                  {selectedRegion === \"scotland\" && (\n                    <div className=\"space-y-6\">\n                      <div className=\"bg-blue-50 dark:bg-blue-900 p-4 rounded-lg\">\n                        <h3 className=\"font-semibold text-lg mb-2\">Scotland's Unique System</h3>\n                        <p className=\"text-sm text-gray-600 dark:text-gray-300 mb-4\">\n                          Scotland has a distinct legal system with different courts and procedures\n                        </p>\n                        <div className=\"space-y-3\">\n                          <div className=\"bg-white dark:bg-gray-800 p-3 rounded\">\n                            <h4 className=\"font-semibold\">High Court of Justiciary</h4>\n                            <p className=\"text-sm text-gray-600 dark:text-gray-300\">Supreme court for criminal matters in Scotland</p>\n                          </div>\n                          <div className=\"bg-white dark:bg-gray-800 p-3 rounded\">\n                            <h4 className=\"font-semibold\">Court of Session</h4>\n                            <p className=\"text-sm text-gray-600 dark:text-gray-300\">Supreme court for civil matters in Scotland</p>\n                          </div>\n                          <div className=\"bg-white dark:bg-gray-800 p-3 rounded\">\n                            <h4 className=\"font-semibold\">Sheriff Courts</h4>\n                            <p className=\"text-sm text-gray-600 dark:text-gray-300\">Handle most criminal and civil cases</p>\n                          </div>\n                          <div className=\"bg-white dark:bg-gray-800 p-3 rounded\">\n                            <h4 className=\"font-semibold\">Justice of the Peace Courts</h4>\n                            <p className=\"text-sm text-gray-600 dark:text-gray-300\">Minor criminal offences</p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n\n                  {selectedRegion === \"northern-ireland\" && (\n                    <div className=\"space-y-6\">\n                      <div className=\"bg-green-50 dark:bg-green-900 p-4 rounded-lg\">\n                        <h3 className=\"font-semibold text-lg mb-2\">Northern Ireland System</h3>\n                        <p className=\"text-sm text-gray-600 dark:text-gray-300 mb-4\">\n                          Northern Ireland has its own court system with some unique features\n                        </p>\n                        <div className=\"space-y-3\">\n                          <div className=\"bg-white dark:bg-gray-800 p-3 rounded\">\n                            <h4 className=\"font-semibold\">Court of Appeal</h4>\n                            <p className=\"text-sm text-gray-600 dark:text-gray-300\">Highest court in Northern Ireland</p>\n                          </div>\n                          <div className=\"bg-white dark:bg-gray-800 p-3 rounded\">\n                            <h4 className=\"font-semibold\">High Court</h4>\n                            <p className=\"text-sm text-gray-600 dark:text-gray-300\">Serious civil and criminal cases</p>\n                          </div>\n                          <div className=\"bg-white dark:bg-gray-800 p-3 rounded\">\n                            <h4 className=\"font-semibold\">Crown Court</h4>\n                            <p className=\"text-sm text-gray-600 dark:text-gray-300\">Serious criminal cases with jury trials</p>\n                          </div>\n                          <div className=\"bg-white dark:bg-gray-800 p-3 rounded\">\n                            <h4 className=\"font-semibold\">Magistrates' Court</h4>\n                            <p className=\"text-sm text-gray-600 dark:text-gray-300\">Minor offences and preliminary hearings</p>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          {/* Parliament Structure Diagram */}\n          <TabsContent value=\"parliament\" className=\"mt-6\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center space-x-2\">\n                  <Building className=\"h-5 w-5 text-green-600\" />\n                  <span>UK Parliament Structure</span>\n                </CardTitle>\n                <CardDescription>\n                  The UK Parliament consists of the House of Commons, House of Lords, and the Monarch\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-6\">\n                  {/* Parliament Overview */}\n                  <div className=\"text-center\">\n                    <div className=\"inline-block bg-purple-100 dark:bg-purple-900 rounded-lg p-4 mb-4\">\n                      <Crown className=\"h-8 w-8 text-purple-600 mx-auto mb-2\" />\n                      <h3 className=\"font-semibold text-lg\">The Crown in Parliament</h3>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-300\">Monarch + House of Lords + House of Commons</p>\n                    </div>\n                  </div>\n\n                  {/* House of Commons Detail */}\n                  <div>\n                    <Button\n                      variant=\"ghost\"\n                      onClick={() => toggleSection(\"commons\")}\n                      className=\"w-full justify-between p-4 h-auto bg-green-50 dark:bg-green-900 hover:bg-green-100 dark:hover:bg-green-800\"\n                    >\n                      <div className=\"flex items-center space-x-3\">\n                        <Users className=\"h-6 w-6 text-green-600\" />\n                        <div className=\"text-left\">\n                          <h3 className=\"font-semibold text-lg\">House of Commons</h3>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-300\">Lower House - 650 elected MPs</p>\n                        </div>\n                      </div>\n                      {expandedSections.commons ? <ChevronDown className=\"h-5 w-5\" /> : <ChevronRight className=\"h-5 w-5\" />}\n                    </Button>\n                    \n                    {expandedSections.commons && (\n                      <Card className=\"mt-4 bg-green-50 dark:bg-green-900\">\n                        <CardContent className=\"p-4\">\n                          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                            <div>\n                              <h4 className=\"font-semibold mb-2\">Key Positions</h4>\n                              <ul className=\"text-sm space-y-1\">\n                                <li>• Speaker of the House</li>\n                                <li>• Prime Minister</li>\n                                <li>• Leader of the Opposition</li>\n                                <li>• Chief Whips</li>\n                                <li>• Committee Chairs</li>\n                              </ul>\n                            </div>\n                            <div>\n                              <h4 className=\"font-semibold mb-2\">Functions</h4>\n                              <ul className=\"text-sm space-y-1\">\n                                <li>• Pass legislation</li>\n                                <li>• Control government spending</li>\n                                <li>• Question ministers</li>\n                                <li>• Represent constituents</li>\n                                <li>• Form government</li>\n                              </ul>\n                            </div>\n                            <div>\n                              <h4 className=\"font-semibold mb-2\">Election System</h4>\n                              <ul className=\"text-sm space-y-1\">\n                                <li>• First Past the Post</li>\n                                <li>• 650 constituencies</li>\n                                <li>• 5-year maximum term</li>\n                                <li>• Simple majority wins</li>\n                                <li>• Secret ballot</li>\n                              </ul>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    )}\n                  </div>\n\n                  {/* House of Lords Detail */}\n                  <div>\n                    <Button\n                      variant=\"ghost\"\n                      onClick={() => toggleSection(\"lords\")}\n                      className=\"w-full justify-between p-4 h-auto bg-red-50 dark:bg-red-900 hover:bg-red-100 dark:hover:bg-red-800\"\n                    >\n                      <div className=\"flex items-center space-x-3\">\n                        <Crown className=\"h-6 w-6 text-red-600\" />\n                        <div className=\"text-left\">\n                          <h3 className=\"font-semibold text-lg\">House of Lords</h3>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-300\">Upper House - Around 800 appointed members</p>\n                        </div>\n                      </div>\n                      {expandedSections.lords ? <ChevronDown className=\"h-5 w-5\" /> : <ChevronRight className=\"h-5 w-5\" />}\n                    </Button>\n                    \n                    {expandedSections.lords && (\n                      <Card className=\"mt-4 bg-red-50 dark:bg-red-900\">\n                        <CardContent className=\"p-4\">\n                          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                            <div>\n                              <h4 className=\"font-semibold mb-2\">Types of Members</h4>\n                              <ul className=\"text-sm space-y-1\">\n                                <li>• Life Peers (majority)</li>\n                                <li>• Hereditary Peers (92)</li>\n                                <li>• Bishops (26)</li>\n                                <li>• Law Lords (retired)</li>\n                              </ul>\n                            </div>\n                            <div>\n                              <h4 className=\"font-semibold mb-2\">Functions</h4>\n                              <ul className=\"text-sm space-y-1\">\n                                <li>• Review legislation</li>\n                                <li>• Suggest amendments</li>\n                                <li>• Delay bills (not money bills)</li>\n                                <li>• Committee work</li>\n                                <li>• Specialist expertise</li>\n                              </ul>\n                            </div>\n                            <div>\n                              <h4 className=\"font-semibold mb-2\">Powers & Limits</h4>\n                              <ul className=\"text-sm space-y-1\">\n                                <li>• Cannot block money bills</li>\n                                <li>• Can delay bills by 1 year</li>\n                                <li>• Parliament Act can override</li>\n                                <li>• Convention limits powers</li>\n                                <li>• No confidence votes</li>\n                              </ul>\n                            </div>\n                          </div>\n                        </CardContent>\n                      </Card>\n                    )}\n                  </div>\n\n                  {/* Legislative Process */}\n                  <div className=\"border-t pt-6\">\n                    <h3 className=\"font-semibold text-lg mb-4 flex items-center\">\n                      <BookOpen className=\"h-5 w-5 mr-2 text-blue-600\" />\n                      Legislative Process\n                    </h3>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n                      {[\n                        { step: \"1st Reading\", description: \"Bill introduced, title read\", color: \"bg-blue-100 dark:bg-blue-900\" },\n                        { step: \"2nd Reading\", description: \"General debate on principles\", color: \"bg-green-100 dark:bg-green-900\" },\n                        { step: \"Committee Stage\", description: \"Detailed examination, amendments\", color: \"bg-yellow-100 dark:bg-yellow-900\" },\n                        { step: \"3rd Reading\", description: \"Final debate, usually no amendments\", color: \"bg-purple-100 dark:bg-purple-900\" }\n                      ].map((stage, index) => (\n                        <Card key={index} className={stage.color}>\n                          <CardContent className=\"p-4 text-center\">\n                            <div className=\"w-8 h-8 bg-white dark:bg-gray-800 rounded-full flex items-center justify-center mx-auto mb-2\">\n                              <span className=\"font-semibold text-sm\">{index + 1}</span>\n                            </div>\n                            <h4 className=\"font-semibold\">{stage.step}</h4>\n                            <p className=\"text-xs text-gray-600 dark:text-gray-300 mt-1\">{stage.description}</p>\n                          </CardContent>\n                        </Card>\n                      ))}\n                    </div>\n                    <div className=\"mt-4 text-center\">\n                      <Badge variant=\"outline\" className=\"text-sm\">\n                        Process repeats in both Houses, then Royal Assent\n                      </Badge>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  );\n}","size_bytes":30673},"client/src/pages/games-backup.tsx":{"content":"import { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport FlipCards from \"@/components/flip-cards\";\nimport MatchingCards from \"@/components/matching-cards\";\nimport HolidaysMatching from \"@/components/holidays-matching\";\nimport HolidayMeaningsMatching from \"@/components/holiday-meanings-matching\";\nimport SportsAchievementsMatching from \"@/components/sports-achievements-matching\";\nimport SportsHeroesMatching from \"@/components/sports-heroes-matching\";\nimport BritishArtistsMatching from \"@/components/british-artists-matching\";\nimport UKAgesMatching from \"@/components/uk-ages-matching\";\nimport TrueFalseGame from \"@/components/true-false-game\";\nimport BritishLeadersMatching from \"@/components/british-leaders-matching\";\nimport JusticeSystemMatching from \"@/components/justice-system-matching\";\nimport ReligionDemographicsMatching from \"@/components/religion-demographics-matching\";\nimport UKMembershipsMatching from \"@/components/uk-memberships-matching\";\nimport BattlesWarsMatching from \"@/components/battles-wars-matching\";\nimport ActsTreatiesBillsMatching from \"@/components/acts-treaties-bills-matching\";\nimport RulersReligionsMatching from \"@/components/rulers-religions-matching\";\nimport PrimeMinistersMatching from \"@/components/prime-ministers-matching\";\nimport UKPlacesMatching from \"@/components/uk-places-matching\";\nimport TraditionalFoodsMatching from \"@/components/traditional-foods-matching\";\nimport UKCulturalAwardsMatching from \"@/components/uk-cultural-awards-matching\";\nimport UKConstituentCountriesMatching from \"@/components/uk-constituent-countries-matching\";\nimport UKParliamentDevolutionMatching from \"@/components/uk-parliament-devolution-matching\";\nimport { Gamepad2, RotateCcw, RotateCw, Target, Trophy, ArrowLeft, Calendar, BookOpen, Medal, Palette, Clock, CheckCircle, Crown, Scale, Church, Globe, Sword, FileText, Cross, Building, MapPin, Utensils, Award, Flag, Building2 } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function GamesPage() {\n  const userId = \"176ee191-c925-40f7-8d6e-12b3342020d2\"; // In a real app, this would come from authentication\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900\">\n      <div className=\"container mx-auto px-4 py-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center gap-4 mb-6\">\n            <Link href=\"/\">\n              <Button variant=\"outline\" className=\"flex items-center gap-2\">\n                <ArrowLeft className=\"h-4 w-4\" />\n                Back to Dashboard\n              </Button>\n            </Link>\n          </div>\n          \n          <div className=\"text-center\">\n            <div className=\"flex items-center justify-center gap-2 mb-4\">\n              <Gamepad2 className=\"h-8 w-8 text-blue-600\" />\n              <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white\">\n                Interactive Learning Games\n              </h1>\n            </div>\n            <p className=\"text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\n              Master Life in UK test content through engaging interactive games and activities\n            </p>\n          </div>\n        </div>\n\n        {/* Game Stats Overview */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-8 gap-4 mb-8\">\n          <Card className=\"text-center\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-center gap-2 mb-2\">\n                <RotateCw className=\"h-5 w-5 text-blue-600\" />\n                <h3 className=\"text-sm font-semibold\">Flip Cards</h3>\n              </div>\n              <p className=\"text-2xl font-bold text-blue-600\">8</p>\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">Available Cards</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-center gap-2 mb-2\">\n                <Target className=\"h-5 w-5 text-purple-600\" />\n                <h3 className=\"text-sm font-semibold\">General Match</h3>\n              </div>\n              <p className=\"text-2xl font-bold text-purple-600\">10</p>\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">History & Facts</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-center gap-2 mb-2\">\n                <Calendar className=\"h-5 w-5 text-rose-600\" />\n                <h3 className=\"text-sm font-semibold\">Holiday Dates</h3>\n              </div>\n              <p className=\"text-2xl font-bold text-rose-600\">18</p>\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">Date Matching</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-center gap-2 mb-2\">\n                <BookOpen className=\"h-5 w-5 text-indigo-600\" />\n                <h3 className=\"text-sm font-semibold\">Holiday Meanings</h3>\n              </div>\n              <p className=\"text-2xl font-bold text-indigo-600\">18</p>\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">Meaning Match</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-center gap-2 mb-2\">\n                <Trophy className=\"h-5 w-5 text-amber-600\" />\n                <h3 className=\"text-sm font-semibold\">Sports Heroes</h3>\n              </div>\n              <p className=\"text-2xl font-bold text-amber-600\">18</p>\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">Athletes & Achievements</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-center gap-2 mb-2\">\n                <Medal className=\"h-5 w-5 text-blue-600\" />\n                <h3 className=\"text-sm font-semibold\">Triple Match</h3>\n              </div>\n              <p className=\"text-2xl font-bold text-blue-600\">21</p>\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">Name-Sport-Achievement</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-center gap-2 mb-2\">\n                <Palette className=\"h-5 w-5 text-indigo-600\" />\n                <h3 className=\"text-sm font-semibold\">British Artists</h3>\n              </div>\n              <p className=\"text-2xl font-bold text-indigo-600\">10</p>\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">Artists & Art Forms</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-center gap-2 mb-2\">\n                <Clock className=\"h-5 w-5 text-blue-600\" />\n                <h3 className=\"text-sm font-semibold\">UK Ages</h3>\n              </div>\n              <p className=\"text-2xl font-bold text-blue-600\">12</p>\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">Age Requirements</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-center gap-2 mb-2\">\n                <CheckCircle className=\"h-5 w-5 text-green-600\" />\n                <h3 className=\"text-sm font-semibold\">True/False</h3>\n              </div>\n              <p className=\"text-2xl font-bold text-green-600\">15</p>\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">Test Statements</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-center gap-2 mb-2\">\n                <Crown className=\"h-5 w-5 text-purple-600\" />\n                <h3 className=\"text-sm font-semibold\">British Leaders</h3>\n              </div>\n              <p className=\"text-2xl font-bold text-purple-600\">15</p>\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">Leaders & Achievements</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-center gap-2 mb-2\">\n                <Scale className=\"h-5 w-5 text-blue-600\" />\n                <h3 className=\"text-sm font-semibold\">Justice System</h3>\n              </div>\n              <p className=\"text-2xl font-bold text-blue-600\">21</p>\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">Courts & Jurisdictions</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-center gap-2 mb-2\">\n                <Church className=\"h-5 w-5 text-indigo-600\" />\n                <h3 className=\"text-sm font-semibold\">Religion & Demographics</h3>\n              </div>\n              <p className=\"text-2xl font-bold text-indigo-600\">21</p>\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">Faith & Ethnicity</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-center gap-2 mb-2\">\n                <Globe className=\"h-5 w-5 text-blue-600\" />\n                <h3 className=\"text-sm font-semibold\">UK Memberships</h3>\n              </div>\n              <p className=\"text-2xl font-bold text-blue-600\">21</p>\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">International Organizations</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-center gap-2 mb-2\">\n                <Sword className=\"h-5 w-5 text-red-600\" />\n                <h3 className=\"text-sm font-semibold\">Battles & Wars</h3>\n              </div>\n              <p className=\"text-2xl font-bold text-red-600\">21</p>\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">Historical Conflicts</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-center gap-2 mb-2\">\n                <FileText className=\"h-5 w-5 text-amber-600\" />\n                <h3 className=\"text-sm font-semibold\">Acts, Treaties & Bills</h3>\n              </div>\n              <p className=\"text-2xl font-bold text-amber-600\">21</p>\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">Legislative History</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-center gap-2 mb-2\">\n                <Cross className=\"h-5 w-5 text-purple-600\" />\n                <h3 className=\"text-sm font-semibold\">Rulers & Religions</h3>\n              </div>\n              <p className=\"text-2xl font-bold text-purple-600\">21</p>\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">Royal Religious History</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-center gap-2 mb-2\">\n                <Building className=\"h-5 w-5 text-blue-600\" />\n                <h3 className=\"text-sm font-semibold\">Prime Ministers</h3>\n              </div>\n              <p className=\"text-2xl font-bold text-blue-600\">21</p>\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">Political Leadership</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-center gap-2 mb-2\">\n                <MapPin className=\"h-5 w-5 text-emerald-600\" />\n                <h3 className=\"text-sm font-semibold\">UK Places</h3>\n              </div>\n              <p className=\"text-2xl font-bold text-emerald-600\">21</p>\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">Places of Interest</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-center gap-2 mb-2\">\n                <Utensils className=\"h-5 w-5 text-orange-600\" />\n                <h3 className=\"text-sm font-semibold\">Traditional Foods</h3>\n              </div>\n              <p className=\"text-2xl font-bold text-orange-600\">21</p>\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">Regional Dishes</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-center gap-2 mb-2\">\n                <Award className=\"h-5 w-5 text-purple-600\" />\n                <h3 className=\"text-sm font-semibold\">Cultural Awards</h3>\n              </div>\n              <p className=\"text-2xl font-bold text-purple-600\">15</p>\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">Arts & Culture</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-center gap-2 mb-2\">\n                <Flag className=\"h-5 w-5 text-red-600\" />\n                <h3 className=\"text-sm font-semibold\">UK Countries</h3>\n              </div>\n              <p className=\"text-2xl font-bold text-red-600\">18</p>\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">Countries & Symbols</p>\n            </CardContent>\n          </Card>\n\n          <Card className=\"text-center\">\n            <CardContent className=\"p-4\">\n              <div className=\"flex items-center justify-center gap-2 mb-2\">\n                <Building2 className=\"h-5 w-5 text-blue-600\" />\n                <h3 className=\"text-sm font-semibold\">Parliament & Devolution</h3>\n              </div>\n              <p className=\"text-2xl font-bold text-blue-600\">18</p>\n              <p className=\"text-xs text-gray-600 dark:text-gray-400\">Government Structure</p>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Difficulty Levels */}\n        <div className=\"mb-8\">\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">Difficulty Levels</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <Card className=\"border-green-200 dark:border-green-800\">\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"text-lg text-green-700 dark:text-green-300\">Beginner Level</CardTitle>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Single activities and basic learning</p>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-2\">\n                  <Badge className=\"bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300\">Flip Cards</Badge>\n                  <Badge className=\"bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300\">True/False</Badge>\n                </div>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"border-blue-200 dark:border-blue-800\">\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"text-lg text-blue-700 dark:text-blue-300\">Middle Level</CardTitle>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Double matching challenges</p>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-2 flex flex-wrap gap-1\">\n                  <Badge className=\"bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\">General Matching</Badge>\n                  <Badge className=\"bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\">Holiday Dates</Badge>\n                  <Badge className=\"bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\">Holiday Meanings</Badge>\n                  <Badge className=\"bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\">Sports Achievements</Badge>\n                  <Badge className=\"bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\">British Artists</Badge>\n                  <Badge className=\"bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\">UK Ages</Badge>\n                  <Badge className=\"bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\">British Leaders</Badge>\n                  <Badge className=\"bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\">Cultural Awards</Badge>\n                </div>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"border-purple-200 dark:border-purple-800\">\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"text-lg text-purple-700 dark:text-purple-300\">Advanced Level</CardTitle>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Triple matching challenges</p>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-2 flex flex-wrap gap-1\">\n                  <Badge className=\"bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\">Sports Heroes</Badge>\n                  <Badge className=\"bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\">Justice System</Badge>\n                  <Badge className=\"bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\">Religion & Demographics</Badge>\n                  <Badge className=\"bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\">UK Memberships</Badge>\n                  <Badge className=\"bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\">Battles & Wars</Badge>\n                  <Badge className=\"bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\">Acts, Treaties & Bills</Badge>\n                  <Badge className=\"bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\">Rulers & Religions</Badge>\n                  <Badge className=\"bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\">Prime Ministers</Badge>\n                  <Badge className=\"bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\">UK Places</Badge>\n                  <Badge className=\"bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\">Traditional Foods</Badge>\n                  <Badge className=\"bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\">UK Countries</Badge>\n                  <Badge className=\"bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\">Parliament & Devolution</Badge>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n\n        {/* Interactive Games Tabs */}\n        <Tabs defaultValue=\"beginner-level\" className=\"w-full\">\n          <TabsList className=\"grid w-full grid-cols-1 lg:grid-cols-3 mb-8\">\n            <TabsTrigger value=\"beginner-level\" className=\"flex items-center gap-2\">\n              <span className=\"w-3 h-3 bg-green-500 rounded-full\"></span>\n              Beginner Level\n            </TabsTrigger>\n            <TabsTrigger value=\"middle-level\" className=\"flex items-center gap-2\">\n              <span className=\"w-3 h-3 bg-blue-500 rounded-full\"></span>\n              Middle Level (Double Match)\n            </TabsTrigger>\n            <TabsTrigger value=\"advanced-level\" className=\"flex items-center gap-2\">\n              <span className=\"w-3 h-3 bg-purple-500 rounded-full\"></span>\n              Advanced Level (Triple Match)\n            </TabsTrigger>\n          </TabsList>\n\n          {/* Beginner Level */}\n          <TabsContent value=\"beginner-level\">\n            <div className=\"space-y-6\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <RotateCw className=\"h-5 w-5 text-green-600\" />\n                    Flip Cards Game\n                  </CardTitle>\n                  <p className=\"text-gray-600 dark:text-gray-300\">\n                    Click on cards to reveal the answers. Test your knowledge and mark cards as completed when you've mastered them.\n                  </p>\n                </CardHeader>\n                <CardContent>\n                  <FlipCards userId={userId} />\n                </CardContent>\n              </Card>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <CheckCircle className=\"h-5 w-5 text-green-600\" />\n                    True/False Challenge\n                  </CardTitle>\n                  <p className=\"text-gray-600 dark:text-gray-300\">\n                    Test your knowledge with True/False statements about UK facts, traditions, and values. Perfect for building confidence!\n                  </p>\n                </CardHeader>\n                <CardContent>\n                  <TrueFalseGame userId={userId} />\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          {/* Middle Level - Double Matching */}\n          <TabsContent value=\"middle-level\">\n            <div className=\"space-y-4\">\n              <div className=\"text-center mb-6\">\n                <h3 className=\"text-2xl font-bold text-blue-700 dark:text-blue-300 mb-2\">\n                  Middle Level - Double Matching Games\n                </h3>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Match items from two columns. Perfect for building connections between related concepts.\n                </p>\n              </div>\n              \n              <Tabs defaultValue=\"general-matching\" className=\"w-full\">\n                <TabsList className=\"grid w-full grid-cols-2 lg:grid-cols-8 mb-8\">\n            <TabsTrigger value=\"flip-cards\" className=\"flex items-center gap-2\">\n              <RotateCw className=\"h-4 w-4\" />\n              Flip Cards\n            </TabsTrigger>\n            <TabsTrigger value=\"matching-cards\" className=\"flex items-center gap-2\">\n              <Target className=\"h-4 w-4\" />\n              General Match\n            </TabsTrigger>\n            <TabsTrigger value=\"holidays-matching\" className=\"flex items-center gap-2\">\n              <Calendar className=\"h-4 w-4\" />\n              Holiday Dates\n            </TabsTrigger>\n            <TabsTrigger value=\"holiday-meanings-matching\" className=\"flex items-center gap-2\">\n              <BookOpen className=\"h-4 w-4\" />\n              Holiday Meanings\n            </TabsTrigger>\n            <TabsTrigger value=\"sports-achievements-matching\" className=\"flex items-center gap-2\">\n              <Trophy className=\"h-4 w-4\" />\n              Sports Heroes\n            </TabsTrigger>\n            <TabsTrigger value=\"sports-heroes-matching\" className=\"flex items-center gap-2\">\n              <Medal className=\"h-4 w-4\" />\n              Triple Match\n            </TabsTrigger>\n            <TabsTrigger value=\"british-artists-matching\" className=\"flex items-center gap-2\">\n              <Palette className=\"h-4 w-4\" />\n              British Artists\n            </TabsTrigger>\n            <TabsTrigger value=\"uk-ages-matching\" className=\"flex items-center gap-2\">\n              <Clock className=\"h-4 w-4\" />\n              UK Ages\n            </TabsTrigger>\n            <TabsTrigger value=\"true-false-game\" className=\"flex items-center gap-2\">\n              <CheckCircle className=\"h-4 w-4\" />\n              True/False\n            </TabsTrigger>\n            <TabsTrigger value=\"british-leaders-matching\" className=\"flex items-center gap-2\">\n              <Crown className=\"h-4 w-4\" />\n              British Leaders\n            </TabsTrigger>\n            <TabsTrigger value=\"justice-system-matching\" className=\"flex items-center gap-2\">\n              <Scale className=\"h-4 w-4\" />\n              Justice System\n            </TabsTrigger>\n            <TabsTrigger value=\"religion-demographics-matching\" className=\"flex items-center gap-2\">\n              <Church className=\"h-4 w-4\" />\n              Religion & Demographics\n            </TabsTrigger>\n            <TabsTrigger value=\"uk-memberships-matching\" className=\"flex items-center gap-2\">\n              <Globe className=\"h-4 w-4\" />\n              UK Memberships\n            </TabsTrigger>\n            <TabsTrigger value=\"battles-wars-matching\" className=\"flex items-center gap-2\">\n              <Sword className=\"h-4 w-4\" />\n              Battles & Wars\n            </TabsTrigger>\n            <TabsTrigger value=\"acts-treaties-bills-matching\" className=\"flex items-center gap-2\">\n              <FileText className=\"h-4 w-4\" />\n              Acts, Treaties & Bills\n            </TabsTrigger>\n            <TabsTrigger value=\"rulers-religions-matching\" className=\"flex items-center gap-2\">\n              <Cross className=\"h-4 w-4\" />\n              Rulers & Religions\n            </TabsTrigger>\n            <TabsTrigger value=\"prime-ministers-matching\" className=\"flex items-center gap-2\">\n              <Building className=\"h-4 w-4\" />\n              Prime Ministers\n            </TabsTrigger>\n            <TabsTrigger value=\"uk-places-matching\" className=\"flex items-center gap-2\">\n              <MapPin className=\"h-4 w-4\" />\n              UK Places\n            </TabsTrigger>\n            <TabsTrigger value=\"traditional-foods-matching\" className=\"flex items-center gap-2\">\n              <Utensils className=\"h-4 w-4\" />\n              Traditional Foods\n            </TabsTrigger>\n            <TabsTrigger value=\"uk-cultural-awards-matching\" className=\"flex items-center gap-2\">\n              <Award className=\"h-4 w-4\" />\n              Cultural Awards\n            </TabsTrigger>\n            <TabsTrigger value=\"uk-constituent-countries-matching\" className=\"flex items-center gap-2\">\n              <Flag className=\"h-4 w-4\" />\n              UK Countries\n            </TabsTrigger>\n            <TabsTrigger value=\"uk-parliament-devolution-matching\" className=\"flex items-center gap-2\">\n              <Building2 className=\"h-4 w-4\" />\n              Parliament & Devolution\n            </TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"flip-cards\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <RotateCw className=\"h-5 w-5\" />\n                  Flip Cards Game\n                </CardTitle>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Click on cards to reveal the answers. Test your knowledge and mark cards as completed when you've mastered them.\n                </p>\n              </CardHeader>\n              <CardContent>\n                <FlipCards userId={userId} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"matching-cards\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Target className=\"h-5 w-5\" />\n                  General Matching Game\n                </CardTitle>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Click one button from each column to match related items. Cards are shuffled to challenge your critical thinking. Correct matches turn green and move to bottom, incorrect matches show red for 3 seconds.\n                </p>\n              </CardHeader>\n              <CardContent>\n                <MatchingCards userId={userId} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"holidays-matching\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Calendar className=\"h-5 w-5\" />\n                  UK Holiday Dates Matching Game\n                </CardTitle>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Match UK holidays with their celebration dates. Learn about traditional British celebrations, religious festivals, and cultural events celebrated throughout the year.\n                </p>\n              </CardHeader>\n              <CardContent>\n                <HolidaysMatching userId={userId} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"holiday-meanings-matching\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <BookOpen className=\"h-5 w-5\" />\n                  Holiday Meanings Matching Game\n                </CardTitle>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Match UK holidays with their meanings and significance. Understand the cultural, religious, and historical importance of each celebration.\n                </p>\n              </CardHeader>\n              <CardContent>\n                <HolidayMeaningsMatching userId={userId} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"sports-achievements-matching\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Trophy className=\"h-5 w-5\" />\n                  Sports Achievements Matching Game\n                </CardTitle>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Match British sports champions with their greatest achievements. Learn about legendary athletes who have made Britain proud in international competition.\n                </p>\n              </CardHeader>\n              <CardContent>\n                <SportsAchievementsMatching userId={userId} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"sports-heroes-matching\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Medal className=\"h-5 w-5\" />\n                  Sports Heroes Triple Match Challenge\n                </CardTitle>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  The ultimate challenge! Match British sports legends with their sport AND their greatest achievement. All three selections must be correct for a successful match.\n                </p>\n              </CardHeader>\n              <CardContent>\n                <SportsHeroesMatching userId={userId} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"british-artists-matching\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Palette className=\"h-5 w-5\" />\n                  British Artists Matching Game\n                </CardTitle>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Match renowned British artists with their primary art forms. Discover the rich artistic heritage that has shaped British culture from the 18th century to today.\n                </p>\n              </CardHeader>\n              <CardContent>\n                <BritishArtistsMatching userId={userId} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"uk-ages-matching\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Clock className=\"h-5 w-5\" />\n                  UK Age Requirements Matching Game\n                </CardTitle>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Match legal activities with their age requirements in the UK. Learn important age milestones for employment, driving, voting, and other legal rights and responsibilities.\n                </p>\n              </CardHeader>\n              <CardContent>\n                <UKAgesMatching userId={userId} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"true-false-game\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <CheckCircle className=\"h-5 w-5\" />\n                  True or False Challenge\n                </CardTitle>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Test your Life in UK knowledge with true or false statements! Answer correctly to see celebratory confetti. Choose from different categories or challenge yourself with all questions.\n                </p>\n              </CardHeader>\n              <CardContent>\n                <TrueFalseGame userId={userId} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"british-leaders-matching\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Crown className=\"h-5 w-5\" />\n                  British Leaders Triple Match Challenge\n                </CardTitle>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  The ultimate test of British royal and political history! Match kings, queens, and prime ministers with their greatest achievements and the years they occurred. From Norman Conquest to modern times.\n                </p>\n              </CardHeader>\n              <CardContent>\n                <BritishLeadersMatching userId={userId} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"justice-system-matching\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Scale className=\"h-5 w-5\" />\n                  UK Justice System Triple Match Challenge\n                </CardTitle>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Master the complex UK justice system! Match courts with their jurisdictions and regions across England & Wales, Scotland, and Northern Ireland. Learn about criminal, civil, family, and appeal courts.\n                </p>\n              </CardHeader>\n              <CardContent>\n                <JusticeSystemMatching userId={userId} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"religion-demographics-matching\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Church className=\"h-5 w-5\" />\n                  UK Religion & Demographics Triple Match Challenge\n                </CardTitle>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Explore UK's religious diversity! Match religions with their population percentages and ethnic compositions. Learn about Christianity, Islam, Hinduism, Sikhism, Judaism, Buddhism, and secular demographics across different regions.\n                </p>\n              </CardHeader>\n              <CardContent>\n                <ReligionDemographicsMatching userId={userId} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"uk-memberships-matching\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Globe className=\"h-5 w-5\" />\n                  UK International Memberships Triple Match Challenge\n                </CardTitle>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Master UK's role in global governance! Match international organizations with UK's specific roles and membership details. Learn about UN Security Council, NATO, Commonwealth, G7, Brexit impact, and more.\n                </p>\n              </CardHeader>\n              <CardContent>\n                <UKMembershipsMatching userId={userId} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"battles-wars-matching\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Sword className=\"h-5 w-5\" />\n                  British Battles & Wars Triple Match Challenge\n                </CardTitle>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Journey through British military history! Match battles with their years and participants from medieval times to modern conflicts. Learn about Hastings, Agincourt, Trafalgar, Waterloo, World Wars, and more.\n                </p>\n              </CardHeader>\n              <CardContent>\n                <BattlesWarsMatching userId={userId} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"acts-treaties-bills-matching\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <FileText className=\"h-5 w-5\" />\n                  Acts, Treaties & Bills Triple Match Challenge\n                </CardTitle>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Master British legislative history! Match Acts, Treaties, and Bills with their years and historical significance. Learn about Magna Carta, Bill of Rights, Great Reform Act, Human Rights Act, Brexit, and more.\n                </p>\n              </CardHeader>\n              <CardContent>\n                <ActsTreatiesBillsMatching userId={userId} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"rulers-religions-matching\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Cross className=\"h-5 w-5\" />\n                  British Rulers & Religions Triple Match Challenge\n                </CardTitle>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Explore British royal religious history! Match rulers with their reign start dates and religious affiliations. Learn about Catholic Norman kings, Anglican reformation, and religious conflicts through the centuries.\n                </p>\n              </CardHeader>\n              <CardContent>\n                <RulersReligionsMatching userId={userId} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"prime-ministers-matching\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Building className=\"h-5 w-5\" />\n                  British Prime Ministers Triple Match Challenge\n                </CardTitle>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Master British political history! Match Prime Ministers with their term start dates and historical periods. Learn about Walpole, Churchill, Thatcher, Blair, and other key political leaders who shaped modern Britain.\n                </p>\n              </CardHeader>\n              <CardContent>\n                <PrimeMinistersMatching userId={userId} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"uk-places-matching\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <MapPin className=\"h-5 w-5\" />\n                  UK Places of Interest Triple Match Challenge\n                </CardTitle>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Discover Britain's iconic locations! Match places of interest with their regions and descriptions across England, Scotland, Wales, and Northern Ireland. Learn about historic sites, natural landmarks, and cultural treasures.\n                </p>\n              </CardHeader>\n              <CardContent>\n                <UKPlacesMatching userId={userId} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"traditional-foods-matching\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Utensils className=\"h-5 w-5\" />\n                  Traditional Foods Triple Match Challenge\n                </CardTitle>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Explore British culinary heritage! Match traditional dishes with their regions and ingredients across England, Scotland, Wales, and Northern Ireland. Learn about fish and chips, haggis, Welsh rarebit, and more.\n                </p>\n              </CardHeader>\n              <CardContent>\n                <TraditionalFoodsMatching userId={userId} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"uk-cultural-awards-matching\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Award className=\"h-5 w-5\" />\n                  UK Cultural Awards Matching Challenge\n                </CardTitle>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Match British cultural awards with their categories. Learn about prestigious honors in theatre, music, literature, and the arts including BRIT Awards, Turner Prize, Booker Prize, and more.\n                </p>\n              </CardHeader>\n              <CardContent>\n                <UKCulturalAwardsMatching userId={userId} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"uk-constituent-countries-matching\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Flag className=\"h-5 w-5\" />\n                  UK Constituent Countries Triple Match Challenge\n                </CardTitle>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Match countries with their capitals and symbols. Test your knowledge of UK geography, culture, and national identity including patron saints, symbols, flags, and major cities.\n                </p>\n              </CardHeader>\n              <CardContent>\n                <UKConstituentCountriesMatching userId={userId} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n\n          <TabsContent value=\"uk-parliament-devolution-matching\">\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"flex items-center gap-2\">\n                  <Building2 className=\"h-5 w-5\" />\n                  UK Parliament & Devolution Triple Match Challenge\n                </CardTitle>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Match regions with their parliaments and powers. Learn about UK government structure, devolution, and democratic institutions including Westminster, Holyrood, Senedd, and Stormont.\n                </p>\n              </CardHeader>\n              <CardContent>\n                <UKParliamentDevolutionMatching userId={userId} />\n              </CardContent>\n            </Card>\n          </TabsContent>\n        </Tabs>\n\n        {/* Game Instructions */}\n        <Card className=\"mt-8\">\n          <CardHeader>\n            <CardTitle>How to Play</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div>\n              <h4 className=\"font-semibold mb-2\">Flip Cards:</h4>\n              <ul className=\"list-disc list-inside text-gray-600 dark:text-gray-300 space-y-1\">\n                <li>Click on any card to flip it and reveal the answer</li>\n                <li>Use category filters to focus on specific topics</li>\n                <li>Mark cards as \"Got it!\" when you've mastered the content</li>\n                <li>Track your progress and reset when needed</li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-semibold mb-2\">General Matching:</h4>\n              <ul className=\"list-disc list-inside text-gray-600 dark:text-gray-300 space-y-1\">\n                <li>Click one button from Column A to select it</li>\n                <li>Click the matching button from Column B</li>\n                <li>Correct matches turn green and move to bottom of columns</li>\n                <li>Incorrect matches show red for 3 seconds, then reset for retry</li>\n                <li>Cards remain shuffled to challenge critical thinking</li>\n                <li>Track your score and accuracy as you play</li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-semibold mb-2\">Holiday Dates Matching:</h4>\n              <ul className=\"list-disc list-inside text-gray-600 dark:text-gray-300 space-y-1\">\n                <li>Match UK holidays with their correct celebration dates</li>\n                <li>Learn when different religious and cultural festivals occur</li>\n                <li>Includes Christian, Hindu, Sikh, Jewish, and Islamic celebrations</li>\n                <li>Correct matches turn green and move to the bottom</li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-semibold mb-2\">Holiday Meanings Matching:</h4>\n              <ul className=\"list-disc list-inside text-gray-600 dark:text-gray-300 space-y-1\">\n                <li>Match UK holidays with their meanings and significance</li>\n                <li>Understand the cultural and religious importance of each celebration</li>\n                <li>Filter by categories: Christian, Islamic, Hindu/Sikh, Jewish, Cultural</li>\n                <li>Learn about Britain's diverse multicultural heritage</li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-semibold mb-2\">UK Age Requirements:</h4>\n              <ul className=\"list-disc list-inside text-gray-600 dark:text-gray-300 space-y-1\">\n                <li>Match legal activities with their correct age requirements</li>\n                <li>Learn about employment, driving, voting, and other legal milestones</li>\n                <li>Filter by categories: Employment, Transport, Legal Rights, Gambling, Civic Duties, Benefits</li>\n                <li>Understand important ages: 16 (NINO, moped), 17 (car), 18 (voting, betting), 75+ (free TV licence)</li>\n              </ul>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}","size_bytes":47784},"client/src/pages/games.tsx":{"content":"import { useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport FlipCards from \"@/components/flip-cards\";\nimport MatchingCards from \"@/components/matching-cards\";\nimport EnhancedMatchingCards from \"@/components/enhanced-matching-cards\";\nimport HolidaysMatching from \"@/components/holidays-matching\";\nimport HolidayMeaningsMatching from \"@/components/holiday-meanings-matching\";\nimport SportsAchievementsMatching from \"@/components/sports-achievements-matching\";\nimport SportsHeroesMatching from \"@/components/sports-heroes-matching\";\nimport EnhancedSportsHeroesMatching from \"@/components/enhanced-sports-heroes-matching\";\nimport BritishArtistsMatching from \"@/components/british-artists-matching\";\nimport UKAgesMatching from \"@/components/uk-ages-matching\";\nimport TrueFalseGame from \"@/components/true-false-game\";\nimport BritishLeadersMatching from \"@/components/british-leaders-matching\";\nimport JusticeSystemMatching from \"@/components/justice-system-matching\";\nimport ReligionDemographicsMatching from \"@/components/religion-demographics-matching\";\nimport UKMembershipsMatching from \"@/components/uk-memberships-matching\";\nimport BattlesWarsMatching from \"@/components/battles-wars-matching\";\nimport ActsTreatiesBillsMatching from \"@/components/acts-treaties-bills-matching\";\nimport RulersReligionsMatching from \"@/components/rulers-religions-matching\";\nimport PrimeMinistersMatching from \"@/components/prime-ministers-matching\";\nimport UKPlacesMatching from \"@/components/uk-places-matching\";\nimport TraditionalFoodsMatching from \"@/components/traditional-foods-matching\";\nimport UKCulturalAwardsMatching from \"@/components/uk-cultural-awards-matching\";\nimport UKConstituentCountriesMatching from \"@/components/uk-constituent-countries-matching\";\nimport UKParliamentDevolutionMatching from \"@/components/uk-parliament-devolution-matching\";\nimport AIExercisesGame from \"@/components/ai-exercises-game\";\nimport { Gamepad2, RotateCcw, RotateCw, Target, Trophy, ArrowLeft, Calendar, BookOpen, Medal, Palette, Clock, CheckCircle, Crown, Scale, Church, Globe, Sword, FileText, Cross, Building, MapPin, Utensils, Award, Flag, Building2, Sparkles } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { useAuth } from \"@/contexts/AuthContext\";\n\nexport default function GamesPage() {\n  const { user } = useAuth();\n\n  // Redirect to login if not authenticated (handled by ProtectedRoute)\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900\">\n      <div className=\"container mx-auto px-4 py-8\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center gap-4 mb-6\">\n            <Link href=\"/\">\n              <Button variant=\"outline\" className=\"flex items-center gap-2\">\n                <ArrowLeft className=\"h-4 w-4\" />\n                Back to Dashboard\n              </Button>\n            </Link>\n          </div>\n          \n          <div className=\"text-center\">\n            <div className=\"flex items-center justify-center gap-2 mb-4\">\n              <Gamepad2 className=\"h-8 w-8 text-blue-600\" />\n              <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white\">\n                Interactive Learning Games\n              </h1>\n            </div>\n            <p className=\"text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\n              Master Life in UK test content through engaging interactive games and activities\n            </p>\n          </div>\n        </div>\n\n        {/* Game Categories Overview */}\n        <div className=\"mb-8\">\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">Game Categories</h2>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            <Card className=\"border-purple-200 dark:border-purple-800 bg-gradient-to-br from-purple-50 to-purple-100 dark:from-purple-900/20 dark:to-purple-800/20\">\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"text-xl text-purple-700 dark:text-purple-300 flex items-center gap-2\">\n                  <Sparkles className=\"h-6 w-6\" />\n                  AI Generated\n                </CardTitle>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Smart personalized practice questions using artificial intelligence</p>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-2\">\n                  <Badge className=\"bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\">Fill-in-the-Blank</Badge>\n                  <Badge className=\"bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\">Multiple Choice</Badge>\n                  <Badge className=\"bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\">Authentic Content</Badge>\n                  <Badge className=\"bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-300\">7 Topics</Badge>\n                </div>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"border-green-200 dark:border-green-800 bg-gradient-to-br from-green-50 to-green-100 dark:from-green-900/20 dark:to-green-800/20\">\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"text-xl text-green-700 dark:text-green-300 flex items-center gap-2\">\n                  <CheckCircle className=\"h-6 w-6\" />\n                  True/False\n                </CardTitle>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Quick decision-based learning with immediate feedback</p>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-2\">\n                  <Badge className=\"bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300\">Quick Learning</Badge>\n                  <Badge className=\"bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300\">Instant Feedback</Badge>\n                  <Badge className=\"bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300\">Score Tracking</Badge>\n                  <Badge className=\"bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-300\">UK Facts</Badge>\n                </div>\n              </CardContent>\n            </Card>\n            \n            <Card className=\"border-blue-200 dark:border-blue-800 bg-gradient-to-br from-blue-50 to-blue-100 dark:from-blue-900/20 dark:to-blue-800/20\">\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"text-xl text-blue-700 dark:text-blue-300 flex items-center gap-2\">\n                  <RotateCw className=\"h-6 w-6\" />\n                  Match the Cards\n                </CardTitle>\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Interactive matching games with difficulty levels and variants</p>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-2\">\n                  <Badge className=\"bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\">Flip Cards</Badge>\n                  <Badge className=\"bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\">2-Column Match</Badge>\n                  <Badge className=\"bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\">3-Column Match</Badge>\n                  <Badge className=\"bg-blue-100 text-blue-800 dark:bg-blue-900/30 dark:text-blue-300\">20+ Topics</Badge>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n\n        {/* Interactive Games Tabs */}\n        <Tabs defaultValue=\"ai-generated\" className=\"w-full\">\n          <TabsList className=\"grid w-full grid-cols-1 lg:grid-cols-3 mb-8\">\n            <TabsTrigger value=\"ai-generated\" className=\"flex items-center gap-2\">\n              <Sparkles className=\"w-4 h-4 text-purple-600\" />\n              AI Generated\n            </TabsTrigger>\n            <TabsTrigger value=\"true-false\" className=\"flex items-center gap-2\">\n              <CheckCircle className=\"w-4 h-4 text-green-600\" />\n              True/False\n            </TabsTrigger>\n            <TabsTrigger value=\"match-cards\" className=\"flex items-center gap-2\">\n              <RotateCw className=\"w-4 h-4 text-blue-600\" />\n              Match the Cards\n            </TabsTrigger>\n          </TabsList>\n\n          {/* AI Generated Games */}\n          <TabsContent value=\"ai-generated\">\n            <div className=\"space-y-6\">\n              <div className=\"text-center mb-6\">\n                <h3 className=\"text-2xl font-bold text-purple-700 dark:text-purple-300 mb-2 flex items-center justify-center gap-2\">\n                  <Sparkles className=\"h-6 w-6\" />\n                  AI-Powered Exercise Generator\n                </h3>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Generate personalized practice exercises using advanced AI. Choose your topic and difficulty level for tailored learning using authentic Life in UK content.\n                </p>\n              </div>\n              \n              <AIExercisesGame userId={user.id} />\n            </div>\n          </TabsContent>\n\n          {/* True/False Games */}\n          <TabsContent value=\"true-false\">\n            <div className=\"space-y-6\">\n              <div className=\"text-center mb-6\">\n                <h3 className=\"text-2xl font-bold text-green-700 dark:text-green-300 mb-2 flex items-center justify-center gap-2\">\n                  <CheckCircle className=\"h-6 w-6\" />\n                  True/False Challenge Games\n                </h3>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Test your knowledge with True/False statements about UK facts, traditions, and values. Perfect for quick learning and building confidence!\n                </p>\n              </div>\n\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <CheckCircle className=\"h-5 w-5 text-green-600\" />\n                    True/False Challenge\n                  </CardTitle>\n                  <p className=\"text-gray-600 dark:text-gray-300\">\n                    Answer True or False questions about Life in UK topics. Get instant feedback and track your progress.\n                  </p>\n                </CardHeader>\n                <CardContent>\n                  <TrueFalseGame userId={user.id} />\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          {/* Match the Cards Games */}\n          <TabsContent value=\"match-cards\">\n            <div className=\"space-y-6\">\n              <div className=\"text-center mb-6\">\n                <h3 className=\"text-2xl font-bold text-blue-700 dark:text-blue-300 mb-2 flex items-center justify-center gap-2\">\n                  <RotateCw className=\"h-6 w-6\" />\n                  Match the Cards Games\n                </h3>\n                <p className=\"text-gray-600 dark:text-gray-300\">\n                  Interactive card matching games with different difficulty levels. Start with flip cards, then progress to 2-column and 3-column matching challenges.\n                </p>\n              </div>\n\n              {/* Flip Cards Section */}\n              <Card className=\"border-green-200 dark:border-green-800\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <RotateCw className=\"h-5 w-5 text-green-600\" />\n                    Flip Cards Game\n                  </CardTitle>\n                  <p className=\"text-gray-600 dark:text-gray-300\">\n                    Click on cards to reveal the answers. Test your knowledge and mark cards as completed when you've mastered them.\n                  </p>\n                </CardHeader>\n                <CardContent>\n                  <FlipCards userId={user.id} />\n                </CardContent>\n              </Card>\n\n              {/* 2-Column Matching Games */}\n              <Card className=\"border-blue-200 dark:border-blue-800\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <Target className=\"h-5 w-5 text-blue-600\" />\n                    2-Column Matching Games\n                  </CardTitle>\n                  <p className=\"text-gray-600 dark:text-gray-300\">\n                    Match items from two columns. Perfect for building connections between related concepts.\n                  </p>\n                </CardHeader>\n                <CardContent>\n              \n                  <Tabs defaultValue=\"general-matching\" className=\"w-full\">\n                <TabsList className=\"grid w-full grid-cols-2 lg:grid-cols-8 mb-8\">\n                  <TabsTrigger value=\"general-matching\" className=\"flex items-center gap-2\">\n                    <Target className=\"h-4 w-4\" />\n                    General Match\n                  </TabsTrigger>\n                  <TabsTrigger value=\"holidays-matching\" className=\"flex items-center gap-2\">\n                    <Calendar className=\"h-4 w-4\" />\n                    Holiday Dates\n                  </TabsTrigger>\n                  <TabsTrigger value=\"holiday-meanings-matching\" className=\"flex items-center gap-2\">\n                    <BookOpen className=\"h-4 w-4\" />\n                    Holiday Meanings\n                  </TabsTrigger>\n                  <TabsTrigger value=\"sports-achievements-matching\" className=\"flex items-center gap-2\">\n                    <Trophy className=\"h-4 w-4\" />\n                    Sports Achievements\n                  </TabsTrigger>\n                  <TabsTrigger value=\"british-artists-matching\" className=\"flex items-center gap-2\">\n                    <Palette className=\"h-4 w-4\" />\n                    British Artists\n                  </TabsTrigger>\n                  <TabsTrigger value=\"uk-ages-matching\" className=\"flex items-center gap-2\">\n                    <Clock className=\"h-4 w-4\" />\n                    UK Ages\n                  </TabsTrigger>\n                  <TabsTrigger value=\"british-leaders-matching\" className=\"flex items-center gap-2\">\n                    <Crown className=\"h-4 w-4\" />\n                    British Leaders\n                  </TabsTrigger>\n                  <TabsTrigger value=\"uk-cultural-awards-matching\" className=\"flex items-center gap-2\">\n                    <Award className=\"h-4 w-4\" />\n                    Cultural Awards\n                  </TabsTrigger>\n                </TabsList>\n\n                <TabsContent value=\"general-matching\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Target className=\"h-5 w-5\" />\n                        General Matching Game\n                      </CardTitle>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        Choose your difficulty (4, 6, 8, or 12 items) and match related concepts. Complete all variants to progress!\n                      </p>\n                    </CardHeader>\n                    <CardContent>\n                      <EnhancedMatchingCards \n                        userId={user.id} \n                        nextGameTitle=\"Holiday Dates Matching\"\n                        onNextGame={() => {\n                          // Switch to next tab\n                          const nextTab = document.querySelector('[value=\"holidays-matching\"]') as HTMLElement;\n                          nextTab?.click();\n                        }}\n                      />\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n\n                <TabsContent value=\"holidays-matching\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Calendar className=\"h-5 w-5\" />\n                        UK Holiday Dates Matching Game\n                      </CardTitle>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        Match UK holidays with their celebration dates. Learn about traditional British celebrations, religious festivals, and cultural events.\n                      </p>\n                    </CardHeader>\n                    <CardContent>\n                      <HolidaysMatching userId={user.id} />\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n\n                <TabsContent value=\"holiday-meanings-matching\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <BookOpen className=\"h-5 w-5\" />\n                        Holiday Meanings Matching Game\n                      </CardTitle>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        Match UK holidays with their meanings and significance. Understand the cultural, religious, and historical importance of each celebration.\n                      </p>\n                    </CardHeader>\n                    <CardContent>\n                      <HolidayMeaningsMatching userId={user.id} />\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n\n                <TabsContent value=\"sports-achievements-matching\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Trophy className=\"h-5 w-5\" />\n                        Sports Achievements Matching Game\n                      </CardTitle>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        Match British sports champions with their greatest accomplishments. Learn about Olympic heroes, World Cup winners, and sporting legends.\n                      </p>\n                    </CardHeader>\n                    <CardContent>\n                      <SportsAchievementsMatching userId={user.id} />\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n\n                <TabsContent value=\"british-artists-matching\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Palette className=\"h-5 w-5\" />\n                        British Artists Matching Game\n                      </CardTitle>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        Match renowned British artists with their art forms. Explore centuries of artistic heritage from landscape painting to modern sculpture.\n                      </p>\n                    </CardHeader>\n                    <CardContent>\n                      <BritishArtistsMatching userId={user.id} />\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n\n                <TabsContent value=\"uk-ages-matching\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Clock className=\"h-5 w-5\" />\n                        UK Age Requirements Matching Game\n                      </CardTitle>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        Match legal activities with their correct age requirements. Learn about employment, driving, voting, and other important legal milestones in the UK.\n                      </p>\n                    </CardHeader>\n                    <CardContent>\n                      <UKAgesMatching userId={user.id} />\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n\n                <TabsContent value=\"british-leaders-matching\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Crown className=\"h-5 w-5\" />\n                        British Leaders Matching Game\n                      </CardTitle>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        Match British monarchs, prime ministers, and historical figures with their achievements. Explore leadership throughout British history.\n                      </p>\n                    </CardHeader>\n                    <CardContent>\n                      <BritishLeadersMatching userId={user.id} />\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n\n                <TabsContent value=\"uk-cultural-awards-matching\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Award className=\"h-5 w-5\" />\n                        UK Cultural Awards Matching Challenge\n                      </CardTitle>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        Match British cultural awards with their categories. Learn about prestigious honors in theatre, music, literature, and the arts including BRIT Awards, Turner Prize, Booker Prize, and more.\n                      </p>\n                    </CardHeader>\n                    <CardContent>\n                      <UKCulturalAwardsMatching userId={user.id} />\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n                  </Tabs>\n                </CardContent>\n              </Card>\n\n              {/* 3-Column Matching Games */}\n              <Card className=\"border-purple-200 dark:border-purple-800\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center gap-2\">\n                    <Trophy className=\"h-5 w-5 text-purple-600\" />\n                    3-Column Matching Games (Advanced)\n                  </CardTitle>\n                  <p className=\"text-gray-600 dark:text-gray-300\">\n                    Advanced matching games with three columns. Challenge yourself with complex relationships and deeper knowledge connections.\n                  </p>\n                </CardHeader>\n                <CardContent>\n                  <Tabs defaultValue=\"acts-treaties-bills-matching\" className=\"w-full\">\n                <TabsList className=\"grid w-full grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-2 h-auto p-2 mb-8\">\n                  <TabsTrigger value=\"acts-treaties-bills-matching\" className=\"flex flex-col items-center gap-1 p-3 text-xs\">\n                    <FileText className=\"h-4 w-4\" />\n                    <span className=\"text-center leading-tight\">Acts, Treaties & Bills</span>\n                  </TabsTrigger>\n                  <TabsTrigger value=\"battles-wars-matching\" className=\"flex flex-col items-center gap-1 p-3 text-xs\">\n                    <Sword className=\"h-4 w-4\" />\n                    <span className=\"text-center leading-tight\">Battles & Wars</span>\n                  </TabsTrigger>\n                  <TabsTrigger value=\"justice-system-matching\" className=\"flex flex-col items-center gap-1 p-3 text-xs\">\n                    <Scale className=\"h-4 w-4\" />\n                    <span className=\"text-center leading-tight\">Justice System</span>\n                  </TabsTrigger>\n                  <TabsTrigger value=\"prime-ministers-matching\" className=\"flex flex-col items-center gap-1 p-3 text-xs\">\n                    <Building className=\"h-4 w-4\" />\n                    <span className=\"text-center leading-tight\">Prime Ministers</span>\n                  </TabsTrigger>\n                  <TabsTrigger value=\"religion-demographics-matching\" className=\"flex flex-col items-center gap-1 p-3 text-xs\">\n                    <Church className=\"h-4 w-4\" />\n                    <span className=\"text-center leading-tight\">Religion & Demographics</span>\n                  </TabsTrigger>\n                  <TabsTrigger value=\"rulers-religions-matching\" className=\"flex flex-col items-center gap-1 p-3 text-xs\">\n                    <Cross className=\"h-4 w-4\" />\n                    <span className=\"text-center leading-tight\">Rulers & Religions</span>\n                  </TabsTrigger>\n                  <TabsTrigger value=\"sports-heroes-matching\" className=\"flex flex-col items-center gap-1 p-3 text-xs\">\n                    <Medal className=\"h-4 w-4\" />\n                    <span className=\"text-center leading-tight\">Sports Heroes</span>\n                  </TabsTrigger>\n                  <TabsTrigger value=\"traditional-foods-matching\" className=\"flex flex-col items-center gap-1 p-3 text-xs\">\n                    <Utensils className=\"h-4 w-4\" />\n                    <span className=\"text-center leading-tight\">Traditional Foods</span>\n                  </TabsTrigger>\n                  <TabsTrigger value=\"uk-memberships-matching\" className=\"flex flex-col items-center gap-1 p-3 text-xs\">\n                    <Globe className=\"h-4 w-4\" />\n                    <span className=\"text-center leading-tight\">UK Memberships</span>\n                  </TabsTrigger>\n                  <TabsTrigger value=\"uk-constituent-countries-matching\" className=\"flex flex-col items-center gap-1 p-3 text-xs\">\n                    <Flag className=\"h-4 w-4\" />\n                    <span className=\"text-center leading-tight\">UK Countries</span>\n                  </TabsTrigger>\n                  <TabsTrigger value=\"uk-parliament-devolution-matching\" className=\"flex flex-col items-center gap-1 p-3 text-xs\">\n                    <Building2 className=\"h-4 w-4\" />\n                    <span className=\"text-center leading-tight\">UK Parliament & Devolution</span>\n                  </TabsTrigger>\n                  <TabsTrigger value=\"uk-places-matching\" className=\"flex flex-col items-center gap-1 p-3 text-xs\">\n                    <MapPin className=\"h-4 w-4\" />\n                    <span className=\"text-center leading-tight\">UK Places</span>\n                  </TabsTrigger>\n                </TabsList>\n\n                <TabsContent value=\"acts-treaties-bills-matching\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <FileText className=\"h-5 w-5\" />\n                        Acts, Treaties & Bills Triple Match Challenge\n                      </CardTitle>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        Match important British acts, treaties, and bills with their years and purposes. Learn about landmark legislation that shaped UK history.\n                      </p>\n                    </CardHeader>\n                    <CardContent>\n                      <ActsTreatiesBillsMatching userId={user.id} />\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n\n\n\n                <TabsContent value=\"sports-heroes-matching\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Medal className=\"h-5 w-5\" />\n                        Sports Heroes Triple Match Challenge\n                      </CardTitle>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        Choose your challenge level (4, 6, 8, or 12 heroes) and match British sports legends with their sports and achievements. Complete all variants to unlock the next challenge!\n                      </p>\n                    </CardHeader>\n                    <CardContent>\n                      <EnhancedSportsHeroesMatching \n                        userId={user.id}\n                        nextGameTitle=\"Justice System Triple Match\"\n                        onNextGame={() => {\n                          // Switch to next tab\n                          const nextTab = document.querySelector('[value=\"justice-system-matching\"]') as HTMLElement;\n                          nextTab?.click();\n                        }}\n                      />\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n\n                <TabsContent value=\"justice-system-matching\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Scale className=\"h-5 w-5\" />\n                        UK Justice System Triple Match Challenge\n                      </CardTitle>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        Match courts with their jurisdictions and regions. Learn about the complex UK justice system across England & Wales, Scotland, and Northern Ireland.\n                      </p>\n                    </CardHeader>\n                    <CardContent>\n                      <JusticeSystemMatching userId={user.id} />\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n\n                <TabsContent value=\"religion-demographics-matching\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Church className=\"h-5 w-5\" />\n                        UK Religion & Demographics Triple Match Challenge\n                      </CardTitle>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        Match religions with their percentages and ethnic compositions. Understand the UK's diverse religious and demographic landscape.\n                      </p>\n                    </CardHeader>\n                    <CardContent>\n                      <ReligionDemographicsMatching userId={user.id} />\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n\n                <TabsContent value=\"uk-memberships-matching\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Globe className=\"h-5 w-5\" />\n                        UK International Memberships Triple Match Challenge\n                      </CardTitle>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        Match international organizations with the UK's role and membership details. Learn about Britain's place in global institutions.\n                      </p>\n                    </CardHeader>\n                    <CardContent>\n                      <UKMembershipsMatching userId={user.id} />\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n\n                <TabsContent value=\"battles-wars-matching\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Sword className=\"h-5 w-5\" />\n                        British Battles & Wars Triple Match Challenge\n                      </CardTitle>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        Match battles with their years and participants. Explore major military conflicts throughout British history from medieval times to modern warfare.\n                      </p>\n                    </CardHeader>\n                    <CardContent>\n                      <BattlesWarsMatching userId={user.id} />\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n\n                <TabsContent value=\"rulers-religions-matching\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Cross className=\"h-5 w-5\" />\n                        British Rulers & Religions Triple Match Challenge\n                      </CardTitle>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        Match rulers with their reign periods and religious affiliations. Explore the complex relationship between monarchy and religion in British history.\n                      </p>\n                    </CardHeader>\n                    <CardContent>\n                      <RulersReligionsMatching userId={user.id} />\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n\n                <TabsContent value=\"prime-ministers-matching\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Building className=\"h-5 w-5\" />\n                        British Prime Ministers Triple Match Challenge\n                      </CardTitle>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        Match Prime Ministers with their terms and historical periods. Learn about political leadership throughout British democratic history.\n                      </p>\n                    </CardHeader>\n                    <CardContent>\n                      <PrimeMinistersMatching userId={user.id} />\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n\n                <TabsContent value=\"uk-places-matching\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <MapPin className=\"h-5 w-5\" />\n                        UK Places of Interest Triple Match Challenge\n                      </CardTitle>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        Match places with their regions and descriptions. Discover iconic locations across England, Scotland, Wales, and Northern Ireland.\n                      </p>\n                    </CardHeader>\n                    <CardContent>\n                      <UKPlacesMatching userId={user.id} />\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n\n                <TabsContent value=\"traditional-foods-matching\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Utensils className=\"h-5 w-5\" />\n                        Traditional Foods Triple Match Challenge\n                      </CardTitle>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        Match dishes with their regions and ingredients. Explore British culinary heritage across all four countries of the UK.\n                      </p>\n                    </CardHeader>\n                    <CardContent>\n                      <TraditionalFoodsMatching userId={user.id} />\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n\n                <TabsContent value=\"uk-constituent-countries-matching\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Flag className=\"h-5 w-5\" />\n                        UK Constituent Countries Triple Match Challenge\n                      </CardTitle>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        Match countries with their capitals and symbols. Test your knowledge of UK geography, culture, and national identity including patron saints, symbols, flags, and major cities.\n                      </p>\n                    </CardHeader>\n                    <CardContent>\n                      <UKConstituentCountriesMatching userId={user.id} />\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n\n                <TabsContent value=\"uk-parliament-devolution-matching\">\n                  <Card>\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center gap-2\">\n                        <Building2 className=\"h-5 w-5\" />\n                        UK Parliament & Devolution Triple Match Challenge\n                      </CardTitle>\n                      <p className=\"text-gray-600 dark:text-gray-300\">\n                        Match regions with their parliaments and powers. Learn about UK government structure, devolution, and democratic institutions including Westminster, Holyrood, Senedd, and Stormont.\n                      </p>\n                    </CardHeader>\n                    <CardContent>\n                      <UKParliamentDevolutionMatching userId={user.id} />\n                    </CardContent>\n                  </Card>\n                </TabsContent>\n                  </Tabs>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n        </Tabs>\n\n        {/* Game Instructions */}\n        <Card className=\"mt-8\">\n          <CardHeader>\n            <CardTitle>How to Play</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div>\n              <h4 className=\"font-semibold mb-2\">Beginner Level:</h4>\n              <ul className=\"list-disc list-inside text-gray-600 dark:text-gray-300 space-y-1\">\n                <li><strong>Flip Cards:</strong> Click on any card to flip it and reveal the answer. Mark cards as \"Got it!\" when you've mastered the content.</li>\n                <li><strong>True/False:</strong> Read statements carefully and select True or False. Get immediate feedback with explanations.</li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-semibold mb-2\">Middle Level (Double Matching):</h4>\n              <ul className=\"list-disc list-inside text-gray-600 dark:text-gray-300 space-y-1\">\n                <li>Click one button from each of the two columns to make a match</li>\n                <li>Correct matches turn green and move to bottom of columns</li>\n                <li>Incorrect matches show red for 3 seconds, then reset for retry</li>\n                <li>Cards remain shuffled to challenge critical thinking</li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-semibold mb-2\">Advanced Level (Triple Matching):</h4>\n              <ul className=\"list-disc list-inside text-gray-600 dark:text-gray-300 space-y-1\">\n                <li>Select one item from each of the three columns to make a complete match</li>\n                <li>All three selections must relate to the same concept</li>\n                <li>Requires deeper knowledge and understanding of complex relationships</li>\n                <li>Perfect for mastering intricate Life in UK test topics</li>\n              </ul>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}","size_bytes":39037},"client/src/pages/interactive-map.tsx":{"content":"import { ArrowLeft } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport UKInteractiveMap from \"@/components/uk-interactive-map\";\n\nexport default function InteractiveMapPage() {\n  const userId = \"guest\"; // In a real app, this would come from authentication\n\n  return (\n    <div className=\"container mx-auto px-4 py-8 max-w-7xl\">\n      {/* Header */}\n      <div className=\"flex items-center gap-4 mb-6\">\n        <Link href=\"/\" className=\"flex items-center gap-2 text-blue-600 hover:text-blue-800 transition-colors\">\n          <ArrowLeft className=\"h-4 w-4\" />\n          Back to Dashboard\n        </Link>\n      </div>\n\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Interactive UK Map</h1>\n        <p className=\"text-gray-600\">\n          Explore the capitals, attractions, historical locations, and cultural regions of the United Kingdom and Northern Ireland. \n          Discover notable artists, writers, and literary figures from each region.\n        </p>\n      </div>\n\n      {/* Interactive Map Component */}\n      <UKInteractiveMap userId={userId} />\n    </div>\n  );\n}","size_bytes":1122},"client/src/pages/mock-test.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useRoute, useLocation } from \"wouter\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Clock, CheckCircle, XCircle, ArrowLeft, ArrowRight } from \"lucide-react\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useAuth } from \"@/contexts/AuthContext\";\n\ninterface Question {\n  id: number;\n  question: string;\n  options: [string, string, string, string];\n  correctAnswer: number;\n  explanation: string;\n  category: string;\n}\n\ninterface MockTest {\n  id: string;\n  title: string;\n  description: string;\n  questions: Question[];\n  orderIndex: number;\n  difficulty: number;\n}\n\nexport default function MockTestPage() {\n  const [match, params] = useRoute(\"/mock-test/:id\");\n  const [, setLocation] = useLocation();\n  const queryClient = useQueryClient();\n  const { user } = useAuth();\n  const testId = match ? params?.id : null;\n\n  // Redirect to login if not authenticated (handled by ProtectedRoute)\n  if (!user) {\n    return null;\n  }\n  \n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState<number[]>([]);\n  const [timeLeft, setTimeLeft] = useState(45 * 60); // 45 minutes in seconds\n  const [isFinished, setIsFinished] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n\n  const { data: mockTest, isLoading } = useQuery<MockTest>({\n    queryKey: [`/api/mock-tests/${testId}`],\n    enabled: !!testId,\n  });\n\n  const submitMutation = useMutation({\n    mutationFn: async (data: { userId: string; answers: number[]; timeSpent: number }) => {\n      const response = await fetch(`/api/mock-tests/${testId}/submit`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n      });\n      \n      if (!response.ok) {\n        throw new Error(\"Failed to submit mock test\");\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [`/api/mock-tests/${testId}/attempts`] });\n    },\n  });\n\n  // Timer countdown\n  useEffect(() => {\n    if (isFinished || showResults || timeLeft <= 0) return;\n\n    const timer = setInterval(() => {\n      setTimeLeft((prev) => {\n        if (prev <= 1) {\n          handleSubmitTest();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [isFinished, showResults, timeLeft]);\n\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const handleAnswerSelect = (answerIndex: number) => {\n    if (isFinished) return;\n    \n    const newAnswers = [...answers];\n    newAnswers[currentQuestion] = answerIndex;\n    setAnswers(newAnswers);\n  };\n\n  const handleNextQuestion = () => {\n    if (currentQuestion < 23) {\n      setCurrentQuestion(currentQuestion + 1);\n    }\n  };\n\n  const handlePreviousQuestion = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(currentQuestion - 1);\n    }\n  };\n\n  const handleSubmitTest = async () => {\n    if (isFinished) return;\n    \n    setIsFinished(true);\n    const timeSpent = (45 * 60) - timeLeft;\n    \n    try {\n      await submitMutation.mutateAsync({\n        userId: user.id,\n        answers,\n        timeSpent\n      });\n      setShowResults(true);\n    } catch (error) {\n      console.error(\"Error submitting mock test:\", error);\n      setShowResults(true); // Show results anyway for demo\n    }\n  };\n\n  const getAnswerClass = (questionIndex: number, optionIndex: number) => {\n    if (!showResults) {\n      const isSelected = answers[questionIndex] === optionIndex;\n      return isSelected \n        ? \"border-blue-500 bg-blue-50\" \n        : \"border-gray-300 hover:border-gray-400\";\n    }\n\n    const currentQ = mockTest?.questions[questionIndex];\n    if (!currentQ) return \"border-gray-300\";\n\n    const isCorrect = optionIndex === currentQ.correctAnswer;\n    const isSelected = answers[questionIndex] === optionIndex;\n\n    if (isCorrect) {\n      return \"border-green-500 bg-green-50 text-green-900\";\n    } else if (isSelected) {\n      return \"border-red-500 bg-red-50 text-red-900\";\n    }\n    return \"border-gray-300\";\n  };\n\n  const getScoreColor = (score: number, total: number) => {\n    const percentage = (score / total) * 100;\n    if (percentage >= 75) return \"text-green-600\";\n    if (percentage >= 60) return \"text-yellow-600\";\n    return \"text-red-600\";\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading mock test...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!mockTest) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">Mock Test Not Found</h1>\n          <Button onClick={() => setLocation(\"/mock-tests\")}>\n            Back to Mock Tests\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  const currentQ = mockTest.questions[currentQuestion];\n  const score = answers.reduce((total, answer, index) => {\n    return total + (answer === mockTest.questions[index].correctAnswer ? 1 : 0);\n  }, 0);\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"container mx-auto max-w-4xl px-4 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <Button \n                variant=\"outline\" \n                size=\"sm\"\n                onClick={() => setLocation(\"/mock-tests\")}\n              >\n                <ArrowLeft className=\"h-4 w-4 mr-2\" />\n                Back\n              </Button>\n              <div>\n                <h1 className=\"text-xl font-bold text-gray-900\">{mockTest.title}</h1>\n                <p className=\"text-sm text-gray-600\">Official Mock Test Conditions</p>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center text-sm\">\n                <Clock className=\"h-4 w-4 mr-1 text-orange-600\" />\n                <span className={timeLeft < 300 ? \"text-red-600 font-bold\" : \"text-gray-600\"}>\n                  {formatTime(timeLeft)}\n                </span>\n              </div>\n              {showResults && (\n                <Badge className={score >= 18 ? \"bg-green-100 text-green-800\" : \"bg-red-100 text-red-800\"}>\n                  {score >= 18 ? \"PASSED\" : \"FAILED\"}\n                </Badge>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Progress */}\n      <div className=\"bg-white border-b\">\n        <div className=\"container mx-auto max-w-4xl px-4 py-3\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-sm text-gray-600\">\n              Question {currentQuestion + 1} of 24\n            </span>\n            <span className=\"text-sm text-gray-600\">\n              {answers.filter(a => a !== undefined).length} answered\n            </span>\n          </div>\n          <Progress value={((currentQuestion + 1) / 24) * 100} className=\"h-2\" />\n        </div>\n      </div>\n\n      {/* Question Content */}\n      <div className=\"container mx-auto max-w-4xl p-4\">\n        {/* Quick Navigation - Always Visible */}\n        <div className=\"flex items-center justify-between mb-4 p-3 bg-white rounded-lg shadow-sm border\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={handlePreviousQuestion}\n            disabled={currentQuestion === 0}\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-1\" />\n            Previous\n          </Button>\n          \n          <div className=\"flex items-center space-x-3\">\n            {!isFinished && !showResults && (\n              <Button\n                size=\"sm\"\n                onClick={handleSubmitTest}\n                disabled={answers.filter(a => a !== undefined).length < 24}\n                className=\"bg-green-600 hover:bg-green-700\"\n              >\n                Submit Test\n              </Button>\n            )}\n            \n            {showResults && (\n              <div className=\"text-center\">\n                <p className={`text-lg font-bold ${getScoreColor(score, 24)}`}>\n                  {score}/24 ({Math.round((score / 24) * 100)}%)\n                </p>\n              </div>\n            )}\n          </div>\n\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={handleNextQuestion}\n            disabled={currentQuestion === 23}\n          >\n            Next\n            <ArrowRight className=\"h-4 w-4 ml-1\" />\n          </Button>\n        </div>\n\n        <Card className=\"mb-6\">\n          <CardHeader>\n            <CardTitle className=\"text-lg\">\n              {currentQ.question}\n            </CardTitle>\n            <CardDescription>\n              Category: {currentQ.category}\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              {currentQ.options.map((option, index) => (\n                <button\n                  key={index}\n                  className={`w-full p-4 text-left border-2 rounded-lg transition-colors ${getAnswerClass(currentQuestion, index)}`}\n                  onClick={() => handleAnswerSelect(index)}\n                  disabled={isFinished && !showResults}\n                >\n                  <div className=\"flex items-center\">\n                    <span className=\"w-8 h-8 rounded-full border-2 border-gray-300 flex items-center justify-center mr-3 text-sm font-medium\">\n                      {String.fromCharCode(65 + index)}\n                    </span>\n                    {option}\n                  </div>\n                </button>\n              ))}\n            </div>\n\n            {showResults && (\n              <div className=\"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n                <div className=\"flex items-start\">\n                  {answers[currentQuestion] === currentQ.correctAnswer ? (\n                    <CheckCircle className=\"h-5 w-5 text-green-600 mr-2 mt-0.5 flex-shrink-0\" />\n                  ) : (\n                    <XCircle className=\"h-5 w-5 text-red-600 mr-2 mt-0.5 flex-shrink-0\" />\n                  )}\n                  <div>\n                    <p className=\"font-medium text-gray-900 mb-1\">Explanation:</p>\n                    <p className=\"text-gray-700\">{currentQ.explanation}</p>\n                  </div>\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Bottom Navigation - Duplicate for convenience */}\n        <div className=\"flex items-center justify-between\">\n          <Button\n            variant=\"ghost\"\n            onClick={handlePreviousQuestion}\n            disabled={currentQuestion === 0}\n          >\n            Previous\n          </Button>\n\n          <div className=\"flex space-x-2\">\n            {showResults && (\n              <div className=\"text-center\">\n                <p className={`text-2xl font-bold ${getScoreColor(score, 24)}`}>\n                  Score: {score}/24 ({Math.round((score / 24) * 100)}%)\n                </p>\n                <p className=\"text-sm text-gray-600 mt-1\">\n                  {score >= 18 ? \"Congratulations! You passed the mock test.\" : \"Keep studying and try again.\"}\n                </p>\n              </div>\n            )}\n          </div>\n\n          <Button\n            variant=\"ghost\"\n            onClick={handleNextQuestion}\n            disabled={currentQuestion === 23}\n          >\n            Next\n          </Button>\n        </div>\n\n        {showResults && (\n          <div className=\"mt-6 text-center\">\n            <div className=\"space-x-4\">\n              <Button \n                onClick={() => setLocation(\"/mock-tests\")}\n                variant=\"outline\"\n              >\n                Try Another Mock Test\n              </Button>\n              <Button \n                onClick={() => window.location.reload()}\n                className=\"bg-blue-600 hover:bg-blue-700\"\n              >\n                Retake This Test\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":13029},"client/src/pages/mock-tests.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useLocation } from \"wouter\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Clock, Target, CheckCircle, BookOpen, Users } from \"lucide-react\";\n\ninterface MockTest {\n  id: string;\n  title: string;\n  description: string;\n  questions: any[];\n  orderIndex: number;\n  difficulty: number;\n  createdAt: string;\n}\n\nexport default function MockTestsPage() {\n  const [, setLocation] = useLocation();\n  \n  const { data: mockTests, isLoading } = useQuery<MockTest[]>({\n    queryKey: [\"/api/mock-tests\"],\n  });\n\n  const getDifficultyColor = (difficulty: number) => {\n    switch (difficulty) {\n      case 1: return \"bg-green-100 text-green-800 border-green-200\";\n      case 2: return \"bg-blue-100 text-blue-800 border-blue-200\";\n      case 3: return \"bg-yellow-100 text-yellow-800 border-yellow-200\";\n      case 4: return \"bg-orange-100 text-orange-800 border-orange-200\";\n      case 5: return \"bg-red-100 text-red-800 border-red-200\";\n      default: return \"bg-gray-100 text-gray-800 border-gray-200\";\n    }\n  };\n\n  const getDifficultyLabel = (difficulty: number) => {\n    switch (difficulty) {\n      case 1: return \"Beginner\";\n      case 2: return \"Easy\";\n      case 3: return \"Medium\";\n      case 4: return \"Hard\";\n      case 5: return \"Expert\";\n      default: return \"Unknown\";\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50 p-4\">\n        <div className=\"container mx-auto max-w-6xl\">\n          <div className=\"text-center py-12\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n            <p className=\"mt-4 text-gray-600\">Loading mock tests...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"container mx-auto max-w-6xl px-4 py-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900\">Life in UK Mock Tests</h1>\n              <p className=\"text-gray-600 mt-2\">Practice with 24-question tests in 45-minute timed conditions</p>\n            </div>\n            <Button \n              variant=\"outline\" \n              onClick={() => setLocation(\"/practice-tests\")}\n            >\n              Back to Practice Tests\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      {/* Stats Section */}\n      <div className=\"bg-white border-b\">\n        <div className=\"container mx-auto max-w-6xl px-4 py-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <div className=\"flex items-center space-x-2\">\n              <BookOpen className=\"h-5 w-5 text-blue-600\" />\n              <div>\n                <p className=\"text-sm text-gray-600\">Total Tests</p>\n                <p className=\"font-bold text-lg\">{mockTests?.length || 0}</p>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Clock className=\"h-5 w-5 text-orange-600\" />\n              <div>\n                <p className=\"text-sm text-gray-600\">Time Limit</p>\n                <p className=\"font-bold text-lg\">45 Minutes</p>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <Target className=\"h-5 w-5 text-green-600\" />\n              <div>\n                <p className=\"text-sm text-gray-600\">Questions</p>\n                <p className=\"font-bold text-lg\">24 Each</p>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-2\">\n              <CheckCircle className=\"h-5 w-5 text-purple-600\" />\n              <div>\n                <p className=\"text-sm text-gray-600\">Pass Mark</p>\n                <p className=\"font-bold text-lg\">18/24 (75%)</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Mock Tests Grid */}\n      <div className=\"container mx-auto max-w-6xl p-4\">\n        <div className=\"mb-6\">\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n            <div className=\"flex items-start\">\n              <Users className=\"h-5 w-5 text-blue-600 mr-2 mt-0.5 flex-shrink-0\" />\n              <div>\n                <h3 className=\"font-medium text-blue-900 mb-1\">Official Mock Test Conditions</h3>\n                <p className=\"text-blue-700 text-sm\">\n                  These mock tests simulate the real Life in UK test experience with 24 questions, 45-minute time limit, \n                  and the same 75% pass mark. Perfect for final preparation before your official test.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n          {mockTests?.map((test) => (\n            <Card key={test.id} className=\"hover:shadow-lg transition-shadow duration-200 border-2 hover:border-blue-200\">\n              <CardHeader className=\"pb-3\">\n                <div className=\"flex items-center justify-between\">\n                  <Badge className={getDifficultyColor(test.difficulty)}>\n                    {getDifficultyLabel(test.difficulty)}\n                  </Badge>\n                  <span className=\"text-xs text-gray-500\">#{test.orderIndex}</span>\n                </div>\n                <CardTitle className=\"text-lg\">{test.title}</CardTitle>\n                <CardDescription className=\"text-sm\">\n                  24 questions covering all test categories\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"pt-0\">\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center justify-between text-sm text-gray-600\">\n                    <div className=\"flex items-center\">\n                      <Clock className=\"h-4 w-4 mr-1\" />\n                      <span>45 minutes</span>\n                    </div>\n                    <div className=\"flex items-center\">\n                      <Target className=\"h-4 w-4 mr-1\" />\n                      <span>24 questions</span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"text-xs text-gray-500\">\n                    <p>Pass mark: 18/24 (75%)</p>\n                  </div>\n\n                  <Button \n                    className=\"w-full mt-4\" \n                    onClick={() => setLocation(`/mock-test/${test.id}`)}\n                  >\n                    Start Mock Test\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        {mockTests && mockTests.length === 0 && (\n          <div className=\"text-center py-12\">\n            <Target className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Mock Tests Available</h3>\n            <p className=\"text-gray-600\">Mock tests are being prepared. Please check back soon.</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":7415},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/payment-success.tsx":{"content":"import { useEffect, useState } from 'react';\nimport { useLocation } from 'wouter';\nimport { CheckCircle, ArrowRight } from 'lucide-react';\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport confetti from 'canvas-confetti';\n\nexport default function PaymentSuccess() {\n  const [, setLocation] = useLocation();\n  const [redirectCount, setRedirectCount] = useState(5);\n\n  useEffect(() => {\n    // Trigger confetti celebration\n    confetti({\n      particleCount: 100,\n      spread: 70,\n      origin: { y: 0.6 },\n      colors: ['#1e40af', '#059669', '#dc2626']\n    });\n\n    // Countdown and redirect\n    const timer = setInterval(() => {\n      setRedirectCount((prev) => {\n        if (prev <= 1) {\n          clearInterval(timer);\n          setLocation('/dashboard');\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [setLocation]);\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex items-center justify-center py-12\">\n      <div className=\"max-w-md mx-auto px-4\">\n        <Card className=\"text-center\">\n          <CardHeader>\n            <div className=\"w-16 h-16 mx-auto mb-4 rounded-full bg-green-500 flex items-center justify-center\">\n              <CheckCircle className=\"w-10 h-10 text-white\" />\n            </div>\n            <CardTitle className=\"text-2xl text-green-600 mb-2\">\n              Payment Successful!\n            </CardTitle>\n          </CardHeader>\n          \n          <CardContent className=\"space-y-4\">\n            <p className=\"text-gray-600\">\n              Thank you for your purchase! Your Life in UK test preparation package is now active.\n            </p>\n            \n            <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\n              <p className=\"text-sm text-green-700\">\n                You now have full access to all features in your selected plan. Start your preparation journey today!\n              </p>\n            </div>\n\n            <div className=\"space-y-3\">\n              <Button \n                onClick={() => setLocation('/dashboard')}\n                className=\"w-full bg-uk-blue hover:bg-uk-blue/90\"\n              >\n                Go to Dashboard\n                <ArrowRight className=\"w-4 h-4 ml-2\" />\n              </Button>\n              \n              <p className=\"text-xs text-gray-500\">\n                Redirecting automatically in {redirectCount} seconds...\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}","size_bytes":2616},"client/src/pages/payment.tsx":{"content":"import { useState, useEffect } from 'react';\nimport { useStripe, Elements, PaymentElement, useElements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { CheckCircle, Star, Users, FileText, ArrowLeft } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\n// Make sure to call `loadStripe` outside of a component's render to avoid\n// recreating the `Stripe` object on every render.\nif (!import.meta.env.VITE_STRIPE_PUBLIC_KEY) {\n  throw new Error('Missing required Stripe key: VITE_STRIPE_PUBLIC_KEY');\n}\nconst stripePromise = loadStripe(import.meta.env.VITE_STRIPE_PUBLIC_KEY);\n\nconst PaymentForm = ({ selectedPlan, onBack }: { selectedPlan: any, onBack: () => void }) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const { toast } = useToast();\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setIsProcessing(true);\n\n    if (!stripe || !elements) {\n      setIsProcessing(false);\n      return;\n    }\n\n    const { error } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        return_url: `${window.location.origin}/payment-success`,\n      },\n    });\n\n    if (error) {\n      toast({\n        title: \"Payment Failed\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    } else {\n      toast({\n        title: \"Payment Successful\",\n        description: `Welcome to ${selectedPlan.name}! You now have access to all features.`,\n      });\n    }\n    setIsProcessing(false);\n  };\n\n  return (\n    <div className=\"max-w-2xl mx-auto\">\n      <div className=\"mb-6\">\n        <Button \n          variant=\"ghost\" \n          onClick={onBack}\n          className=\"mb-4\"\n        >\n          <ArrowLeft className=\"w-4 h-4 mr-2\" />\n          Back to Plans\n        </Button>\n        \n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center justify-between\">\n              {selectedPlan.name}\n              <Badge variant=\"secondary\">£{selectedPlan.price}</Badge>\n            </CardTitle>\n            <CardDescription>{selectedPlan.description}</CardDescription>\n          </CardHeader>\n        </Card>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Complete Your Payment</CardTitle>\n          <CardDescription>\n            Enter your payment details to get started with {selectedPlan.name}\n          </CardDescription>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            <PaymentElement />\n            <Button \n              type=\"submit\" \n              className=\"w-full\" \n              disabled={!stripe || isProcessing}\n            >\n              {isProcessing ? 'Processing...' : `Pay £${selectedPlan.price}`}\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default function Payment() {\n  const [selectedPlan, setSelectedPlan] = useState<any>(null);\n  const [clientSecret, setClientSecret] = useState(\"\");\n  const { toast } = useToast();\n\n  const plans = [\n    {\n      id: 'basic',\n      name: 'Learning App Access',\n      price: 60,\n      description: 'One-off payment for 3 months complete access to all learning features',\n      features: [\n        '3 months full platform access',\n        'One-time payment - no recurring charges',\n        'Unlimited access to all video modules',\n        'Interactive matching games with all difficulty levels',\n        'Practice tests and mock exams',\n        'Historical timeline explorer',\n        'Downloadable study materials',\n        'Progress tracking and statistics',\n        'Mobile-friendly interface',\n        'Perfect for 1-month intensive study preparation'\n      ],\n      icon: <Star className=\"w-6 h-6\" />,\n      color: 'from-blue-500 to-blue-600',\n      isOneTime: true,\n      duration: '3 months'\n    },\n    {\n      id: 'group',\n      name: 'Group Video Sessions',\n      price: 80,\n      description: 'Group video calls with specialist for test preparation and learning support',\n      features: [\n        'Everything in Learning App Access',\n        'Live group video sessions with UK test specialist',\n        'Interactive Q&A sessions',\n        'Test-taking strategies and tips',\n        'Group study coordination',\n        'Weekly practice sessions',\n        'Expert clarification on difficult topics'\n      ],\n      icon: <Users className=\"w-6 h-6\" />,\n      color: 'from-green-500 to-green-600'\n    },\n    {\n      id: 'guidance',\n      name: 'Citizenship Application Guidance',\n      price: 30,\n      description: 'Step-by-step guidance for completing your UK citizenship application form',\n      features: [\n        'Complete application form walkthrough',\n        'Document preparation checklist',\n        'Form completion assistance',\n        'Common mistakes prevention',\n        'Application timeline guidance',\n        'Required documents explanation',\n        'Direct support for application questions'\n      ],\n      icon: <FileText className=\"w-6 h-6\" />,\n      color: 'from-purple-500 to-purple-600'\n    }\n  ];\n\n  useEffect(() => {\n    if (selectedPlan) {\n      // Create payment intent when plan is selected\n      apiRequest(\"POST\", \"/api/create-payment-intent\", { \n        amount: selectedPlan.price,\n        planType: selectedPlan.id \n      })\n      .then((res) => res.json())\n      .then((data) => {\n        setClientSecret(data.clientSecret);\n      })\n      .catch((error) => {\n        toast({\n          title: \"Error\",\n          description: \"Failed to initialize payment. Please try again.\",\n          variant: \"destructive\",\n        });\n        console.error('Payment initialization error:', error);\n      });\n    }\n  }, [selectedPlan, toast]);\n\n  if (selectedPlan && clientSecret) {\n    return (\n      <Elements stripe={stripePromise} options={{ clientSecret }}>\n        <PaymentForm selectedPlan={selectedPlan} onBack={() => setSelectedPlan(null)} />\n      </Elements>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-12\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"text-center mb-12\">\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-4\">\n            Choose Your Life in UK Test Package\n          </h1>\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto mb-4\">\n            Select the perfect package to help you succeed in your UK citizenship test preparation\n          </p>\n          <div className=\"inline-flex items-center bg-green-50 border border-green-200 rounded-lg px-4 py-2\">\n            <CheckCircle className=\"w-5 h-5 text-green-600 mr-2\" />\n            <span className=\"text-sm text-green-700\">\n              <strong>Learning App Access:</strong> One-time payment gives you 3 months complete access - perfect timing for 1 month intensive study preparation\n            </span>\n          </div>\n        </div>\n\n        <div className=\"grid md:grid-cols-3 gap-8 mb-12\">\n          {plans.map((plan) => (\n            <Card \n              key={plan.id} \n              className=\"relative overflow-hidden border-2 hover:border-uk-blue/50 transition-all duration-300 hover:shadow-lg\"\n            >\n              <div className={`absolute top-0 left-0 right-0 h-2 bg-gradient-to-r ${plan.color}`} />\n              \n              <CardHeader className=\"text-center pb-4\">\n                <div className={`w-16 h-16 mx-auto mb-4 rounded-full bg-gradient-to-r ${plan.color} flex items-center justify-center text-white`}>\n                  {plan.icon}\n                </div>\n                <CardTitle className=\"text-xl mb-2\">{plan.name}</CardTitle>\n                <div className=\"text-3xl font-bold text-uk-blue mb-2\">\n                  {plan.isOneTime && (\n                    <div className=\"text-sm font-normal text-green-600 mt-1\">\n                      One-time payment\n                    </div>\n                  )}\n                  {plan.duration && (\n                    <div className=\"text-sm font-normal text-gray-500 mt-1\">\n                      {plan.duration} access\n                    </div>\n                  )}\n                </div>\n                <CardDescription>{plan.description}</CardDescription>\n              </CardHeader>\n\n              <CardContent className=\"pt-0\">\n                <ul className=\"space-y-3 mb-6\">\n                  {plan.features.map((feature, index) => (\n                    <li key={index} className=\"flex items-start space-x-3\">\n                      <CheckCircle className=\"w-5 h-5 text-green-500 mt-0.5 flex-shrink-0\" />\n                      <span className=\"text-sm text-gray-600\">{feature}</span>\n                    </li>\n                  ))}\n                </ul>\n\n                <Button \n                  onClick={() => setSelectedPlan(plan)}\n                  className=\"w-full bg-uk-blue hover:bg-uk-blue/90\"\n                >\n                  Choose {plan.name}\n                </Button>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        <div className=\"text-center\">\n          <div className=\"inline-flex items-center space-x-2 text-sm text-gray-500\">\n            <CheckCircle className=\"w-4 h-4 text-green-500\" />\n            <span>Secure payment processing with Stripe</span>\n          </div>\n          <div className=\"mt-2\">\n            <Link href=\"/dashboard\">\n              <Button variant=\"ghost\" className=\"text-uk-blue\">\n                Return to Dashboard\n              </Button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":9912},"client/src/pages/practice-test.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useRoute, useLocation } from \"wouter\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Clock, CheckCircle, XCircle, RotateCcw, ArrowLeft, ArrowRight } from \"lucide-react\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useAuth } from \"@/contexts/AuthContext\";\n\ninterface Question {\n  id: number;\n  question: string;\n  options: [string, string, string, string];\n  correctAnswer: number;\n  explanation: string;\n  category: string;\n}\n\ninterface PracticeTest {\n  id: string;\n  title: string;\n  description: string;\n  category: string;\n  difficulty: number;\n  questions: Question[];\n  orderIndex: number;\n}\n\nexport default function PracticeTestPage() {\n  const [match, params] = useRoute(\"/practice-test/:id\");\n  const [, setLocation] = useLocation();\n  const queryClient = useQueryClient();\n  const { user } = useAuth();\n  const testId = match ? params?.id : null;\n\n  // Redirect to login if not authenticated (handled by ProtectedRoute)\n  if (!user) {\n    return null;\n  }\n  \n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [answers, setAnswers] = useState<number[]>([]);\n  const [timeLeft, setTimeLeft] = useState(45 * 60); // 45 minutes in seconds\n  const [isFinished, setIsFinished] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n\n  const { data: test, isLoading } = useQuery<PracticeTest>({\n    queryKey: [`/api/practice-tests/${testId}`],\n    enabled: !!testId,\n  });\n\n  const submitTestMutation = useMutation({\n    mutationFn: async (testData: any) => {\n      return apiRequest(\"POST\", \"/api/practice-tests/attempt\", testData);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/practice-tests/attempts\"] });\n      setShowResults(true);\n    },\n  });\n\n  // Timer effect\n  useEffect(() => {\n    if (isFinished || showResults || timeLeft <= 0) return;\n\n    const timer = setInterval(() => {\n      setTimeLeft((prev) => {\n        if (prev <= 1) {\n          setIsFinished(true);\n          handleSubmitTest();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [isFinished, showResults, timeLeft]);\n\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const handleAnswerSelect = (answerIndex: number) => {\n    if (isFinished || showResults) return;\n    \n    const newAnswers = [...answers];\n    newAnswers[currentQuestion] = answerIndex;\n    setAnswers(newAnswers);\n  };\n\n  const handleNextQuestion = () => {\n    if (currentQuestion < (test?.questions.length || 0) - 1) {\n      setCurrentQuestion(currentQuestion + 1);\n    }\n  };\n\n  const handlePreviousQuestion = () => {\n    if (currentQuestion > 0) {\n      setCurrentQuestion(currentQuestion - 1);\n    }\n  };\n\n  const handleSubmitTest = () => {\n    if (!test) return;\n\n    const score = answers.reduce((total, answer, index) => {\n      return total + (answer === test.questions[index].correctAnswer ? 1 : 0);\n    }, 0);\n\n    const testData = {\n      userId: user.id,\n      testId: test.id,\n      answers: answers,\n      score: score,\n      totalQuestions: test.questions.length,\n      passedTest: score >= 18, // 75% pass rate\n    };\n\n    submitTestMutation.mutate(testData);\n    setIsFinished(true);\n  };\n\n  const getScoreColor = (score: number, total: number) => {\n    const percentage = (score / total) * 100;\n    if (percentage >= 75) return \"text-green-600\";\n    if (percentage >= 60) return \"text-yellow-600\";\n    return \"text-red-600\";\n  };\n\n  const getAnswerClass = (questionIndex: number, optionIndex: number) => {\n    if (!showResults) {\n      return answers[questionIndex] === optionIndex \n        ? \"bg-blue-100 border-blue-500\" \n        : \"bg-white border-gray-200 hover:border-gray-300\";\n    }\n\n    const question = test?.questions[questionIndex];\n    if (!question) return \"bg-white border-gray-200\";\n\n    const isCorrect = optionIndex === question.correctAnswer;\n    const isSelected = answers[questionIndex] === optionIndex;\n\n    if (isCorrect) {\n      return \"bg-green-100 border-green-500 text-green-800\";\n    } else if (isSelected && !isCorrect) {\n      return \"bg-red-100 border-red-500 text-red-800\";\n    }\n    return \"bg-white border-gray-200\";\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50 p-4\">\n        <div className=\"container mx-auto max-w-4xl\">\n          <div className=\"text-center py-12\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n            <p className=\"mt-4 text-gray-600\">Loading practice test...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!test) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50 p-4\">\n        <div className=\"container mx-auto max-w-4xl\">\n          <div className=\"text-center py-12\">\n            <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">Test Not Found</h1>\n            <Button onClick={() => setLocation(\"/practice-tests\")}>\n              Back to Practice Tests\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  const currentQ = test.questions[currentQuestion];\n  const score = answers.reduce((total, answer, index) => {\n    return total + (answer === test.questions[index].correctAnswer ? 1 : 0);\n  }, 0);\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"container mx-auto max-w-4xl px-4 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <Button \n                variant=\"outline\" \n                size=\"sm\"\n                onClick={() => setLocation(\"/practice-tests\")}\n              >\n                <ArrowLeft className=\"h-4 w-4 mr-2\" />\n                Back\n              </Button>\n              <div>\n                <h1 className=\"text-xl font-bold text-gray-900\">{test.title}</h1>\n                <p className=\"text-sm text-gray-600\">{test.category}</p>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"flex items-center text-sm\">\n                <Clock className=\"h-4 w-4 mr-1 text-orange-600\" />\n                <span className={timeLeft < 300 ? \"text-red-600 font-bold\" : \"text-gray-600\"}>\n                  {formatTime(timeLeft)}\n                </span>\n              </div>\n              {showResults && (\n                <Badge className={score >= 18 ? \"bg-green-100 text-green-800\" : \"bg-red-100 text-red-800\"}>\n                  {score >= 18 ? \"PASSED\" : \"FAILED\"}\n                </Badge>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Progress */}\n      <div className=\"bg-white border-b\">\n        <div className=\"container mx-auto max-w-4xl px-4 py-3\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-sm text-gray-600\">\n              Question {currentQuestion + 1} of {test.questions.length}\n            </span>\n            <span className=\"text-sm text-gray-600\">\n              {answers.filter(a => a !== undefined).length} answered\n            </span>\n          </div>\n          <Progress value={((currentQuestion + 1) / test.questions.length) * 100} className=\"h-2\" />\n        </div>\n      </div>\n\n      {/* Question Content */}\n      <div className=\"container mx-auto max-w-4xl p-4\">\n        {/* Quick Navigation - Always Visible */}\n        <div className=\"flex items-center justify-between mb-4 p-3 bg-white rounded-lg shadow-sm border\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={handlePreviousQuestion}\n            disabled={currentQuestion === 0}\n          >\n            <ArrowLeft className=\"h-4 w-4 mr-1\" />\n            Previous\n          </Button>\n          \n          <div className=\"flex items-center space-x-3\">\n            {!isFinished && !showResults && (\n              <Button\n                size=\"sm\"\n                onClick={handleSubmitTest}\n                disabled={answers.filter(a => a !== undefined).length < test.questions.length}\n                className=\"bg-green-600 hover:bg-green-700\"\n              >\n                Submit Test\n              </Button>\n            )}\n            \n            {showResults && (\n              <div className=\"text-center\">\n                <p className={`text-lg font-bold ${getScoreColor(score, test.questions.length)}`}>\n                  {score}/{test.questions.length} ({Math.round((score / test.questions.length) * 100)}%)\n                </p>\n              </div>\n            )}\n          </div>\n\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={handleNextQuestion}\n            disabled={currentQuestion === test.questions.length - 1}\n          >\n            Next\n            <ArrowRight className=\"h-4 w-4 ml-1\" />\n          </Button>\n        </div>\n\n        <Card className=\"mb-6\">\n          <CardHeader>\n            <CardTitle className=\"text-lg\">\n              {currentQ.question}\n            </CardTitle>\n            <CardDescription>\n              Category: {currentQ.category}\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              {currentQ.options.map((option, index) => (\n                <button\n                  key={index}\n                  className={`w-full p-4 text-left border-2 rounded-lg transition-colors ${getAnswerClass(currentQuestion, index)}`}\n                  onClick={() => handleAnswerSelect(index)}\n                  disabled={isFinished && !showResults}\n                >\n                  <div className=\"flex items-center\">\n                    <span className=\"w-8 h-8 rounded-full border-2 border-gray-300 flex items-center justify-center mr-3 text-sm font-medium\">\n                      {String.fromCharCode(65 + index)}\n                    </span>\n                    {option}\n                  </div>\n                </button>\n              ))}\n            </div>\n\n            {showResults && (\n              <div className=\"mt-6 p-4 bg-blue-50 border border-blue-200 rounded-lg\">\n                <div className=\"flex items-start\">\n                  {answers[currentQuestion] === currentQ.correctAnswer ? (\n                    <CheckCircle className=\"h-5 w-5 text-green-600 mr-2 mt-0.5 flex-shrink-0\" />\n                  ) : (\n                    <XCircle className=\"h-5 w-5 text-red-600 mr-2 mt-0.5 flex-shrink-0\" />\n                  )}\n                  <div>\n                    <p className=\"font-medium text-gray-900 mb-1\">Explanation:</p>\n                    <p className=\"text-gray-700\">{currentQ.explanation}</p>\n                  </div>\n                </div>\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Bottom Navigation - Duplicate for convenience */}\n        <div className=\"flex items-center justify-between\">\n          <Button\n            variant=\"ghost\"\n            onClick={handlePreviousQuestion}\n            disabled={currentQuestion === 0}\n          >\n            Previous\n          </Button>\n\n          <div className=\"flex space-x-2\">\n            {showResults && (\n              <div className=\"text-center\">\n                <p className={`text-2xl font-bold ${getScoreColor(score, test.questions.length)}`}>\n                  Score: {score}/{test.questions.length} ({Math.round((score / test.questions.length) * 100)}%)\n                </p>\n                <p className=\"text-sm text-gray-600 mt-1\">\n                  {score >= 18 ? \"Congratulations! You passed.\" : \"Keep studying and try again.\"}\n                </p>\n              </div>\n            )}\n          </div>\n\n          <Button\n            variant=\"ghost\"\n            onClick={handleNextQuestion}\n            disabled={currentQuestion === test.questions.length - 1}\n          >\n            Next\n          </Button>\n        </div>\n\n        {showResults && (\n          <div className=\"mt-6 text-center\">\n            <Button \n              onClick={() => setLocation(\"/practice-tests\")}\n              className=\"mr-3\"\n            >\n              Back to Tests\n            </Button>\n            <Button \n              variant=\"outline\"\n              onClick={() => window.location.reload()}\n            >\n              <RotateCcw className=\"h-4 w-4 mr-2\" />\n              Retake Test\n            </Button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":13109},"client/src/pages/practice-tests.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useLocation } from \"wouter\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Clock, Target, CheckCircle } from \"lucide-react\";\n\ninterface PracticeTest {\n  id: string;\n  title: string;\n  description: string;\n  category: string;\n  difficulty: number;\n  questions: any[];\n  orderIndex: number;\n}\n\nexport default function PracticeTestsPage() {\n  const [, setLocation] = useLocation();\n  \n  const { data: tests, isLoading } = useQuery<PracticeTest[]>({\n    queryKey: [\"/api/practice-tests\"],\n  });\n\n  const getDifficultyColor = (difficulty: number) => {\n    switch (difficulty) {\n      case 1: return \"bg-green-100 text-green-800 border-green-200\";\n      case 2: return \"bg-blue-100 text-blue-800 border-blue-200\";\n      case 3: return \"bg-yellow-100 text-yellow-800 border-yellow-200\";\n      case 4: return \"bg-orange-100 text-orange-800 border-orange-200\";\n      case 5: return \"bg-red-100 text-red-800 border-red-200\";\n      default: return \"bg-gray-100 text-gray-800 border-gray-200\";\n    }\n  };\n\n  const getDifficultyLabel = (difficulty: number) => {\n    switch (difficulty) {\n      case 1: return \"Beginner\";\n      case 2: return \"Easy\";\n      case 3: return \"Medium\";\n      case 4: return \"Hard\";\n      case 5: return \"Expert\";\n      default: return \"Unknown\";\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50 p-4\">\n        <div className=\"container mx-auto max-w-6xl\">\n          <div className=\"text-center py-12\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n            <p className=\"mt-4 text-gray-600\">Loading practice tests...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"container mx-auto max-w-6xl px-4 py-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900\">Life in UK Practice Tests</h1>\n              <p className=\"text-gray-600 mt-2\">Complete 24-question tests to prepare for your official exam</p>\n            </div>\n            <div className=\"flex space-x-3\">\n              <Button \n                onClick={() => setLocation(\"/mock-tests\")}\n                className=\"bg-green-600 hover:bg-green-700\"\n              >\n                Mock Tests\n              </Button>\n              <Button \n                variant=\"outline\" \n                onClick={() => setLocation(\"/dashboard\")}\n              >\n                Back to Dashboard\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Content */}\n      <div className=\"container mx-auto max-w-6xl p-4\">\n        {/* Stats Overview */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\">\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center space-x-2\">\n                <Target className=\"h-8 w-8 text-blue-600\" />\n                <div>\n                  <p className=\"text-2xl font-bold\">{tests?.length || 0}</p>\n                  <p className=\"text-sm text-gray-600\">Total Tests</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center space-x-2\">\n                <CheckCircle className=\"h-8 w-8 text-green-600\" />\n                <div>\n                  <p className=\"text-2xl font-bold\">24</p>\n                  <p className=\"text-sm text-gray-600\">Questions Each</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center space-x-2\">\n                <Clock className=\"h-8 w-8 text-orange-600\" />\n                <div>\n                  <p className=\"text-2xl font-bold\">45</p>\n                  <p className=\"text-sm text-gray-600\">Minutes</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n          <Card>\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center space-x-2\">\n                <Target className=\"h-8 w-8 text-purple-600\" />\n                <div>\n                  <p className=\"text-2xl font-bold\">75%</p>\n                  <p className=\"text-sm text-gray-600\">Pass Mark</p>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Test Grid */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {tests?.map((test) => (\n            <Card key={test.id} className=\"hover:shadow-lg transition-shadow duration-200\">\n              <CardHeader>\n                <div className=\"flex items-start justify-between\">\n                  <div className=\"flex-1\">\n                    <CardTitle className=\"text-lg\">{test.title}</CardTitle>\n                    <CardDescription className=\"mt-2 text-sm\">\n                      {test.description}\n                    </CardDescription>\n                  </div>\n                  <Badge className={`ml-2 ${getDifficultyColor(test.difficulty)}`}>\n                    {getDifficultyLabel(test.difficulty)}\n                  </Badge>\n                </div>\n              </CardHeader>\n              <CardContent>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between text-sm text-gray-600\">\n                    <span className=\"flex items-center\">\n                      <Target className=\"h-4 w-4 mr-1\" />\n                      {test.category}\n                    </span>\n                    <span className=\"flex items-center\">\n                      <CheckCircle className=\"h-4 w-4 mr-1\" />\n                      24 Questions\n                    </span>\n                  </div>\n                  \n                  <Button \n                    className=\"w-full bg-blue-600 hover:bg-blue-700\" \n                    onClick={() => setLocation(`/practice-test/${test.id}`)}\n                  >\n                    Start Test\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        {!tests?.length && !isLoading && (\n          <div className=\"text-center py-12\">\n            <Target className=\"h-16 w-16 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">No Practice Tests Available</h3>\n            <p className=\"text-gray-600\">Practice tests are being prepared. Please check back soon.</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":7089},"client/src/pages/profile.tsx":{"content":"import { useState } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { \n  ArrowLeft,\n  User,\n  Crown,\n  CreditCard,\n  Settings,\n  Mail,\n  Phone,\n  Calendar,\n  Trophy,\n  BookOpen,\n  Target,\n  Clock,\n  CheckCircle,\n  Loader2\n} from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\nexport default function ProfilePage() {\n  const [, setLocation] = useLocation();\n  const [isEditing, setIsEditing] = useState(false);\n  const { user, isLoading, updateUser } = useAuth();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  // Show loading state while authentication is being checked\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"w-8 h-8 border-2 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading your profile...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Redirect to login if not authenticated (handled by ProtectedRoute)\n  if (!user) {\n    return null;\n  }\n\n  const [formData, setFormData] = useState({\n    firstName: user.name || \"\",\n    email: user.email || \"\",\n    username: user.username || \"\"\n  });\n\n  const getSubscriptionDisplay = () => {\n    if (!user.subscriptionType || user.subscriptionStatus !== 'active') {\n      return {\n        badge: <Badge variant=\"outline\" className=\"text-xs\">Free Access</Badge>,\n        description: \"Limited access to basic features\"\n      };\n    }\n\n    const subscriptionInfo = {\n      basic: {\n        label: 'Learning App Access',\n        description: '3 months complete platform access - Perfect for intensive study preparation',\n        badge: <Badge className=\"text-xs bg-green-600\"><Crown className=\"w-3 h-3 mr-1\" />Learning App (3mo)</Badge>\n      },\n      group: {\n        label: 'Group Video Sessions',\n        description: 'Premium package with live group video calls and UK test specialist support',\n        badge: <Badge className=\"text-xs bg-blue-600\"><Crown className=\"w-3 h-3 mr-1\" />Group Sessions</Badge>\n      },\n      guidance: {\n        label: 'Citizenship Application Guidance',\n        description: 'Dedicated support for completing UK citizenship application forms',\n        badge: <Badge className=\"text-xs bg-purple-600\"><Crown className=\"w-3 h-3 mr-1\" />Application Guide</Badge>\n      }\n    };\n\n    return subscriptionInfo[user.subscriptionType as keyof typeof subscriptionInfo] || {\n      badge: <Badge className=\"text-xs bg-uk-blue\"><Crown className=\"w-3 h-3 mr-1\" />Premium</Badge>,\n      description: \"Premium access to all features\"\n    };\n  };\n\n  // Profile update mutation\n  const updateProfileMutation = useMutation({\n    mutationFn: async (profileData: { firstName?: string; email?: string; username?: string }) => {\n      const response = await apiRequest('PUT', '/api/user/profile', profileData);\n      return await response.json();\n    },\n    onSuccess: (data) => {\n      // Update the user context with new data\n      updateUser(data.user);\n      \n      // Invalidate user-related queries\n      queryClient.invalidateQueries({ queryKey: ['/api/auth/me'] });\n      \n      toast({\n        title: \"Profile Updated\",\n        description: \"Your profile information has been successfully updated.\",\n      });\n      setIsEditing(false);\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Update Failed\",\n        description: error.message || \"Failed to update profile. Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  });\n\n  const handleSave = () => {\n    // Prepare data for API call\n    const updateData: { firstName?: string; email?: string; username?: string } = {};\n    \n    if (formData.firstName !== user.name) {\n      updateData.firstName = formData.firstName;\n    }\n    if (formData.email !== user.email) {\n      updateData.email = formData.email;\n    }\n    if (formData.username !== user.username) {\n      updateData.username = formData.username;\n    }\n\n    // Only proceed if there are changes\n    if (Object.keys(updateData).length === 0) {\n      toast({\n        title: \"No Changes\",\n        description: \"No changes were made to your profile.\",\n      });\n      setIsEditing(false);\n      return;\n    }\n\n    updateProfileMutation.mutate(updateData);\n  };\n\n  const handleCancel = () => {\n    setFormData({\n      firstName: user.name || \"\",\n      email: user.email || \"\",\n      username: user.username || \"\"\n    });\n    setIsEditing(false);\n  };\n\n  const subscriptionInfo = getSubscriptionDisplay();\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900\">\n      {/* Header */}\n      <div className=\"bg-white/80 backdrop-blur-sm shadow-lg border-b border-blue-100 dark:bg-gray-800/80 dark:border-gray-700\">\n        <div className=\"container mx-auto max-w-6xl px-4 py-8\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-6\">\n              <Button \n                variant=\"ghost\"\n                size=\"sm\"\n                onClick={() => setLocation('/dashboard')}\n                className=\"group flex items-center gap-2 px-4 py-2 text-gray-600 dark:text-gray-300 hover:text-uk-blue dark:hover:text-blue-400 hover:bg-blue-50 dark:hover:bg-gray-700/50 rounded-lg transition-all duration-200 font-medium\"\n                data-testid=\"button-back\"\n              >\n                <ArrowLeft className=\"h-4 w-4 transition-transform group-hover:-translate-x-0.5 duration-200\" />\n                <span className=\"text-sm\">Back to Dashboard</span>\n              </Button>\n              <div>\n                <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">Profile Settings</h1>\n                <p className=\"text-gray-600 dark:text-gray-300 text-sm\">Manage your account information and learning preferences</p>\n              </div>\n            </div>\n            <div className=\"flex items-center space-x-3\">\n              {subscriptionInfo.badge}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container mx-auto max-w-4xl p-4\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Main Profile Information */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            <Card className=\"bg-white/90 backdrop-blur-sm shadow-xl border-0 ring-1 ring-blue-100/50 dark:bg-gray-800/90 dark:ring-gray-700/50\">\n              <CardHeader className=\"bg-gradient-to-r from-blue-50 to-indigo-50 dark:from-gray-700 dark:to-gray-600 rounded-t-lg\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <CardTitle className=\"flex items-center space-x-2 text-gray-900 dark:text-white\">\n                      <User className=\"h-5 w-5 text-uk-blue\" />\n                      <span>Personal Information</span>\n                    </CardTitle>\n                    <CardDescription className=\"text-gray-600 dark:text-gray-300\">\n                      Update your personal details and account information\n                    </CardDescription>\n                  </div>\n                  {!isEditing ? (\n                    <Button variant=\"outline\" size=\"sm\" onClick={() => setIsEditing(true)}>\n                      <Settings className=\"h-4 w-4 mr-2\" />\n                      Edit\n                    </Button>\n                  ) : (\n                    <div className=\"space-x-2\">\n                      <Button \n                        variant=\"outline\" \n                        size=\"sm\" \n                        onClick={handleCancel}\n                        disabled={updateProfileMutation.isPending}\n                        data-testid=\"button-cancel\"\n                      >\n                        Cancel\n                      </Button>\n                      <Button \n                        size=\"sm\" \n                        onClick={handleSave}\n                        disabled={updateProfileMutation.isPending}\n                        data-testid=\"button-save\"\n                      >\n                        {updateProfileMutation.isPending ? (\n                          <>\n                            <Loader2 className=\"h-4 w-4 mr-2 animate-spin\" />\n                            Saving...\n                          </>\n                        ) : (\n                          <>\n                            <CheckCircle className=\"h-4 w-4 mr-2\" />\n                            Save Changes\n                          </>\n                        )}\n                      </Button>\n                    </div>\n                  )}\n                </div>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"firstName\">First Name</Label>\n                  <Input\n                    id=\"firstName\"\n                    data-testid=\"input-firstName\"\n                    value={formData.firstName}\n                    onChange={(e) => setFormData(prev => ({ ...prev, firstName: e.target.value }))}\n                    disabled={!isEditing}\n                    className={!isEditing ? \"bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100\" : \"text-gray-900 dark:text-gray-100\"}\n                  />\n                </div>\n                \n                <div>\n                  <Label htmlFor=\"username\" className=\"flex items-center space-x-2\">\n                    <User className=\"h-4 w-4\" />\n                    <span>Username</span>\n                  </Label>\n                  <Input\n                    id=\"username\"\n                    data-testid=\"input-username\"\n                    value={formData.username}\n                    onChange={(e) => setFormData(prev => ({ ...prev, username: e.target.value }))}\n                    disabled={!isEditing}\n                    className={!isEditing ? \"bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100\" : \"text-gray-900 dark:text-gray-100\"}\n                  />\n                </div>\n\n                <div>\n                  <Label htmlFor=\"email\" className=\"flex items-center space-x-2\">\n                    <Mail className=\"h-4 w-4\" />\n                    <span>Email Address</span>\n                  </Label>\n                  <Input\n                    id=\"email\"\n                    data-testid=\"input-email\"\n                    type=\"email\"\n                    value={formData.email}\n                    onChange={(e) => setFormData(prev => ({ ...prev, email: e.target.value }))}\n                    disabled={!isEditing}\n                    className={!isEditing ? \"bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100\" : \"text-gray-900 dark:text-gray-100\"}\n                  />\n                </div>\n\n                <div>\n                  <Label className=\"flex items-center space-x-2\">\n                    <Calendar className=\"h-4 w-4\" />\n                    <span>Member Since</span>\n                  </Label>\n                  <Input\n                    value={user.createdAt ? new Date(user.createdAt).toLocaleDateString('en-GB', { \n                      year: 'numeric', \n                      month: 'long', \n                      day: 'numeric' \n                    }) : \"N/A\"}\n                    disabled\n                    className=\"bg-gray-50 dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\n                  />\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Subscription Information */}\n            <Card className=\"bg-white/90 backdrop-blur-sm shadow-xl border-0 ring-1 ring-blue-100/50 dark:bg-gray-800/90 dark:ring-gray-700/50\">\n              <CardHeader className=\"bg-gradient-to-r from-green-50 to-emerald-50 dark:from-gray-700 dark:to-gray-600 rounded-t-lg\">\n                <CardTitle className=\"flex items-center space-x-2 text-gray-900 dark:text-white\">\n                  <CreditCard className=\"h-5 w-5 text-green-600\" />\n                  <span>Subscription Details</span>\n                </CardTitle>\n                <CardDescription className=\"text-gray-600 dark:text-gray-300\">\n                  Your current plan and subscription information\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <div className=\"flex items-center justify-between p-6 bg-gradient-to-r from-blue-50 to-green-50 dark:from-gray-700 dark:to-gray-600 rounded-lg border-l-4 border-uk-blue mt-6\">\n                  <div className=\"flex-1 \">\n                    <div className=\"flex items-center space-x-2 mb-2\">\n                      {subscriptionInfo.badge}\n                    </div>\n                    <p className=\"text-sm text-gray-700 dark:text-gray-200 mb-2\">{subscriptionInfo.description}</p>\n                    <div className=\"flex items-center space-x-2\">\n                      <div className={`w-2 h-2 rounded-full ${user.subscriptionStatus === 'active' ? 'bg-green-500' : 'bg-gray-400'}`}></div>\n                      <p className=\"text-xs font-medium text-gray-600 dark:text-gray-300\">\n                        Status: {user.subscriptionStatus === 'active' ? 'Active' : 'Inactive'}\n                      </p>\n                    </div>\n                  </div>\n                  <Button \n                    variant=\"outline\" \n                    onClick={() => setLocation('/payment')}\n                    className=\"hover:bg-blue-50 dark:hover:bg-gray-600 transition-colors\"\n                    data-testid=\"button-manage-plan\"\n                  >\n                    <CreditCard className=\"h-4 w-4 mr-2\" />\n                    Manage Plan\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Stats and Progress */}\n          <div className=\"space-y-6\">\n            <Card className=\"bg-white/90 backdrop-blur-sm shadow-xl border-0 ring-1 ring-yellow-100/50 dark:bg-gray-800/90 dark:ring-gray-700/50\">\n              <CardHeader className=\"bg-gradient-to-r from-yellow-50 to-orange-50 dark:from-gray-700 dark:to-gray-600 rounded-t-lg\">\n                <CardTitle className=\"flex items-center space-x-2 text-gray-900 dark:text-white\">\n                  <Trophy className=\"h-5 w-5 text-yellow-600\" />\n                  <span>Learning Progress</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-6 p-6\">\n                <div className=\"text-center\">\n                  <div className=\"relative inline-flex items-center justify-center w-24 h-24\">\n                    <svg className=\"w-24 h-24 transform -rotate-90\" viewBox=\"0 0 100 100\">\n                      <circle\n                        cx=\"50\"\n                        cy=\"50\"\n                        r=\"40\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"8\"\n                        fill=\"transparent\"\n                        className=\"text-gray-200 dark:text-gray-600\"\n                      />\n                      <circle\n                        cx=\"50\"\n                        cy=\"50\"\n                        r=\"40\"\n                        stroke=\"currentColor\"\n                        strokeWidth=\"8\"\n                        fill=\"transparent\"\n                        strokeDasharray={`${2.51 * (user.overallProgress || 0)} 251.2`}\n                        className=\"text-uk-blue transition-all duration-500\"\n                      />\n                    </svg>\n                    <div className=\"absolute inset-0 flex items-center justify-center\">\n                      <span className=\"text-2xl font-bold text-uk-blue\">{user.overallProgress || 0}%</span>\n                    </div>\n                  </div>\n                  <div className=\"text-sm text-gray-600 dark:text-gray-300 mt-2\">Overall Progress</div>\n                </div>\n                <Separator />\n                <div className=\"grid grid-cols-1 gap-4\">\n                  <div className=\"flex items-center justify-between p-3 bg-blue-50 dark:bg-gray-700 rounded-lg\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-8 h-8 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center\">\n                        <Clock className=\"h-4 w-4 text-blue-600\" />\n                      </div>\n                      <span className=\"text-sm font-medium\">Study Time</span>\n                    </div>\n                    <span className=\"font-bold text-blue-600\">{Math.floor((user.totalStudyTime || 0) / 60)}h {(user.totalStudyTime || 0) % 60}m</span>\n                  </div>\n                  <div className=\"flex items-center justify-between p-3 bg-green-50 dark:bg-gray-700 rounded-lg\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-8 h-8 bg-green-100 dark:bg-green-900 rounded-full flex items-center justify-center\">\n                        <BookOpen className=\"h-4 w-4 text-green-600\" />\n                      </div>\n                      <span className=\"text-sm font-medium\">Exercises</span>\n                    </div>\n                    <span className=\"font-bold text-green-600\">0</span>\n                  </div>\n                  <div className=\"flex items-center justify-between p-3 bg-purple-50 dark:bg-gray-700 rounded-lg\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-8 h-8 bg-purple-100 dark:bg-purple-900 rounded-full flex items-center justify-center\">\n                        <Target className=\"h-4 w-4 text-purple-600\" />\n                      </div>\n                      <span className=\"text-sm font-medium\">Avg Score</span>\n                    </div>\n                    <span className=\"font-bold text-purple-600\">0%</span>\n                  </div>\n                  <div className=\"flex items-center justify-between p-3 bg-yellow-50 dark:bg-gray-700 rounded-lg\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-8 h-8 bg-yellow-100 dark:bg-yellow-900 rounded-full flex items-center justify-center\">\n                        <Trophy className=\"h-4 w-4 text-yellow-600\" />\n                      </div>\n                      <span className=\"text-sm font-medium\">Streak</span>\n                    </div>\n                    <span className=\"font-bold text-yellow-600\">{user.currentStreak || 0} days</span>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"bg-white/90 backdrop-blur-sm shadow-xl border-0 ring-1 ring-blue-100/50 dark:bg-gray-800/90 dark:ring-gray-700/50\">\n              <CardHeader className=\"bg-gradient-to-r from-indigo-50 to-purple-50 dark:from-gray-700 dark:to-gray-600 rounded-t-lg\">\n                <CardTitle className=\"flex items-center space-x-2 text-gray-900 dark:text-white\">\n                  <Calendar className=\"h-5 w-5 text-indigo-600\" />\n                  <span>Account Activity</span>\n                </CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4 p-6\">\n                <div className=\"flex items-center justify-between p-3 bg-indigo-50 dark:bg-gray-700 rounded-lg\">\n                  <div>\n                    <div className=\"text-sm font-medium text-gray-800 dark:text-gray-200\">Last Activity</div>\n                    <div className=\"text-lg font-bold text-indigo-600\">Today</div>\n                  </div>\n                  <div className=\"w-3 h-3 bg-green-500 rounded-full animate-pulse\"></div>\n                </div>\n                <div className=\"flex items-center justify-between p-3 bg-purple-50 dark:bg-gray-700 rounded-lg\">\n                  <div>\n                    <div className=\"text-sm font-medium text-gray-800 dark:text-gray-200\">Member Since</div>\n                    <div className=\"text-lg font-bold text-purple-600\">\n                      {user.createdAt ? new Date(user.createdAt).toLocaleDateString('en-GB', { \n                        year: 'numeric', \n                        month: 'short' \n                      }) : \"N/A\"}\n                    </div>\n                  </div>\n                  <Calendar className=\"h-5 w-5 text-purple-600\" />\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":21009},"client/src/pages/timeline-test.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useLocation, useParams } from \"wouter\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { \n  ArrowLeft,\n  Users,\n  Trophy,\n  Music,\n  BookOpen,\n  PartyPopper,\n  Crown,\n  FileText,\n  Vote,\n  Map,\n  ShoppingCart,\n  Palette,\n  Lightbulb,\n  Church,\n  Clock,\n  CheckCircle,\n  XCircle,\n  Shuffle,\n  RotateCcw\n} from \"lucide-react\";\nimport confetti from \"canvas-confetti\";\n\ninterface TimelineEvent {\n  id: string;\n  year: number;\n  title: string;\n  description: string;\n  details?: string;\n  category: string;\n  importance: number;\n  keyFigures?: string;\n  timelineTopic: string;\n}\n\ninterface MatchingItem {\n  id: string;\n  title: string;\n  match: string;\n}\n\ninterface TrueFalseQuestion {\n  id: string;\n  statement: string;\n  isTrue: boolean;\n  explanation: string;\n}\n\nconst TIMELINE_TOPICS = [\n  { id: \"population-migration\", title: \"Population & Migration\", icon: Users },\n  { id: \"sports-athletics\", title: \"Sports & Athletics\", icon: Trophy },\n  { id: \"literature\", title: \"Literature & Writers\", icon: BookOpen },\n  { id: \"british-holidays\", title: \"British Holidays & Traditions\", icon: PartyPopper },\n  { id: \"british-sports\", title: \"British Sports Heritage\", icon: Trophy },\n  { id: \"parliament\", title: \"Evolution of Parliament\", icon: Crown },\n  { id: \"documents\", title: \"Important Historical Documents\", icon: FileText },\n  { id: \"voting_rights\", title: \"Evolution of Voting Rights\", icon: Vote },\n  { id: \"territories\", title: \"Territorial Evolution\", icon: Map },\n  { id: \"trades\", title: \"Trade and Economic History\", icon: ShoppingCart },\n  { id: \"arts\", title: \"Arts & Visual Culture\", icon: Palette },\n  { id: \"inventions\", title: \"Inventions & Discoveries\", icon: Lightbulb },\n  { id: \"church\", title: \"Church Evolution\", icon: Church },\n  { id: \"historical\", title: \"Historical Timeline\", icon: Clock }\n];\n\nexport default function TimelineTestPage() {\n  const params = useParams();\n  const topicId = params.topicId;\n  const [, setLocation] = useLocation();\n  const [gameMode, setGameMode] = useState<'menu' | 'matching' | 'truefalse'>('menu');\n  const [matchingItems, setMatchingItems] = useState<MatchingItem[]>([]);\n  const [trueFalseQuestions, setTrueFalseQuestions] = useState<TrueFalseQuestion[]>([]);\n  const [selectedMatches, setSelectedMatches] = useState<{[key: string]: string}>({});\n  const [selectedLeftItem, setSelectedLeftItem] = useState<string | null>(null);\n  const [matchedPairs, setMatchedPairs] = useState<Set<string>>(new Set());\n  const [shuffledRightItems, setShuffledRightItems] = useState<MatchingItem[]>([]);\n  const [currentTrueFalseIndex, setCurrentTrueFalseIndex] = useState(0);\n  const [trueFalseAnswers, setTrueFalseAnswers] = useState<{[key: string]: boolean}>({});\n  const [showResults, setShowResults] = useState(false);\n  const [gameComplete, setGameComplete] = useState(false);\n\n  const topicData = TIMELINE_TOPICS.find(topic => topic.id === topicId);\n\n  const { data: events, isLoading } = useQuery<TimelineEvent[]>({\n    queryKey: ['/api/timeline', topicId],\n    queryFn: async () => {\n      const response = await fetch(`/api/timeline?topic=${topicId}`);\n      if (!response.ok) throw new Error('Failed to fetch timeline events');\n      return response.json();\n    },\n    enabled: !!topicId\n  });\n\n  const generateMatchingGame = () => {\n    if (!events || events.length === 0) return;\n    \n    // Create matching pairs from timeline events\n    const items: MatchingItem[] = events.slice(0, 8).map(event => ({\n      id: event.id,\n      title: event.title,\n      match: `${event.year} - ${event.category}`\n    }));\n    \n    // Shuffle the right column items for analytical thinking\n    const shuffled = [...items].sort(() => Math.random() - 0.5);\n    \n    setMatchingItems(items);\n    setShuffledRightItems(shuffled);\n    setSelectedMatches({});\n    setSelectedLeftItem(null);\n    setMatchedPairs(new Set());\n    setShowResults(false);\n    setGameComplete(false);\n    setGameMode('matching');\n  };\n\n  const generateTrueFalseGame = () => {\n    if (!events || events.length === 0) return;\n    \n    const questions: TrueFalseQuestion[] = [];\n    \n    // Generate true statements\n    events.slice(0, 6).forEach(event => {\n      questions.push({\n        id: `true-${event.id}`,\n        statement: `${event.title} occurred in ${event.year}.`,\n        isTrue: true,\n        explanation: `Correct! ${event.title} did occur in ${event.year}. ${event.description}`\n      });\n    });\n    \n    // Generate false statements by mixing years\n    if (events.length >= 4) {\n      questions.push({\n        id: `false-1`,\n        statement: `${events[0].title} occurred in ${events[1].year}.`,\n        isTrue: false,\n        explanation: `False! ${events[0].title} actually occurred in ${events[0].year}, not ${events[1].year}.`\n      });\n      \n      questions.push({\n        id: `false-2`,\n        statement: `${events[2].title} occurred in ${events[3].year}.`,\n        isTrue: false,\n        explanation: `False! ${events[2].title} actually occurred in ${events[2].year}, not ${events[3].year}.`\n      });\n    }\n    \n    // Shuffle questions\n    const shuffledQuestions = questions.sort(() => Math.random() - 0.5).slice(0, 8);\n    \n    setTrueFalseQuestions(shuffledQuestions);\n    setCurrentTrueFalseIndex(0);\n    setTrueFalseAnswers({});\n    setShowResults(false);\n    setGameComplete(false);\n    setGameMode('truefalse');\n  };\n\n  const handleLeftItemClick = (itemId: string) => {\n    if (matchedPairs.has(itemId)) return; // Don't allow reselection of matched items\n    setSelectedLeftItem(itemId);\n  };\n\n  const handleRightItemClick = (matchValue: string) => {\n    if (!selectedLeftItem) return;\n    \n    // Check if this is a correct match\n    const leftItem = matchingItems.find(item => item.id === selectedLeftItem);\n    if (leftItem && leftItem.match === matchValue) {\n      // Correct match!\n      setSelectedMatches(prev => ({\n        ...prev,\n        [selectedLeftItem]: matchValue\n      }));\n      setMatchedPairs(prev => new Set([...Array.from(prev), selectedLeftItem]));\n      setSelectedLeftItem(null);\n      \n      // Trigger confetti for correct match\n      confetti({\n        particleCount: 50,\n        spread: 60,\n        origin: { y: 0.6 }\n      });\n      \n      // Check if all matches are complete\n      if (matchedPairs.size + 1 === matchingItems.length) {\n        setTimeout(() => {\n          confetti({\n            particleCount: 100,\n            spread: 70,\n            origin: { y: 0.6 }\n          });\n          setGameComplete(true);\n        }, 500);\n      }\n    } else {\n      // Incorrect match - just clear selection\n      setSelectedLeftItem(null);\n    }\n  };\n\n  const checkMatchingResults = () => {\n    const allMatched = matchingItems.every(item => selectedMatches[item.id] === item.match);\n    if (allMatched) {\n      confetti({\n        particleCount: 100,\n        spread: 70,\n        origin: { y: 0.6 }\n      });\n    }\n    setShowResults(true);\n    setGameComplete(allMatched);\n  };\n\n  const handleTrueFalseAnswer = (answer: boolean) => {\n    const currentQuestion = trueFalseQuestions[currentTrueFalseIndex];\n    setTrueFalseAnswers(prev => ({\n      ...prev,\n      [currentQuestion.id]: answer\n    }));\n    \n    if (currentTrueFalseIndex < trueFalseQuestions.length - 1) {\n      setCurrentTrueFalseIndex(prev => prev + 1);\n    } else {\n      // Game complete, show results\n      setShowResults(true);\n      const correctAnswers = trueFalseQuestions.filter(q => \n        trueFalseAnswers[q.id] === q.isTrue || \n        (currentQuestion.id === q.id && answer === q.isTrue)\n      ).length;\n      \n      if (correctAnswers >= trueFalseQuestions.length * 0.8) {\n        confetti({\n          particleCount: 100,\n          spread: 70,\n          origin: { y: 0.6 }\n        });\n      }\n      setGameComplete(true);\n    }\n  };\n\n  const resetGame = () => {\n    setGameMode('menu');\n    setSelectedMatches({});\n    setSelectedLeftItem(null);\n    setMatchedPairs(new Set());\n    setTrueFalseAnswers({});\n    setCurrentTrueFalseIndex(0);\n    setShowResults(false);\n    setGameComplete(false);\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50 flex items-center justify-center\">\n        <div className=\"animate-spin w-8 h-8 border-4 border-primary border-t-transparent rounded-full\" />\n      </div>\n    );\n  }\n\n  if (!events || events.length === 0) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50\">\n        <div className=\"container mx-auto max-w-4xl p-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>No Timeline Data Available</CardTitle>\n              <CardDescription>\n                There are no events available for this timeline topic yet.\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <Button onClick={() => setLocation('/timeline')}>\n                <ArrowLeft className=\"h-4 w-4 mr-2\" />\n                Back to Timeline\n              </Button>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n\n  const IconComponent = topicData?.icon || Clock;\n\n  if (gameMode === 'menu') {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50\">\n        {/* Header */}\n        <div className=\"bg-white shadow-sm border-b\">\n          <div className=\"container mx-auto max-w-6xl px-4 py-6\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center space-x-4\">\n                <Button \n                  variant=\"outline\" \n                  size=\"sm\"\n                  onClick={() => setLocation('/timeline')}\n                >\n                  <ArrowLeft className=\"h-4 w-4 mr-2\" />\n                  Back to Timeline\n                </Button>\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"w-10 h-10 rounded-lg bg-gradient-to-br from-blue-50 to-blue-100 flex items-center justify-center\">\n                    <IconComponent className=\"h-5 w-5 text-gray-700\" />\n                  </div>\n                  <div>\n                    <h1 className=\"text-2xl font-bold text-gray-900\">Timeline Test: {topicData?.title}</h1>\n                    <p className=\"text-gray-600 text-sm\">Test your knowledge with games based on this timeline</p>\n                  </div>\n                </div>\n              </div>\n              <Badge className=\"bg-blue-100 text-blue-800 border-blue-200\">\n                {events.length} Events Available\n              </Badge>\n            </div>\n          </div>\n        </div>\n\n        {/* Game Mode Selection */}\n        <div className=\"container mx-auto max-w-4xl p-4\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mt-8\">\n            <Card className=\"hover:shadow-lg transition-all duration-200 cursor-pointer border-2 hover:border-blue-300 group\">\n              <CardHeader>\n                <div className=\"w-12 h-12 rounded-lg bg-gradient-to-br from-green-50 to-green-100 flex items-center justify-center mb-3 group-hover:scale-110 transition-transform\">\n                  <Shuffle className=\"h-6 w-6 text-green-700\" />\n                </div>\n                <CardTitle className=\"text-lg group-hover:text-blue-600 transition-colors\">\n                  Matching Cards Game\n                </CardTitle>\n                <CardDescription>\n                  Match historical events with their years and categories. Test your knowledge of when key events occurred.\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <Button \n                  className=\"w-full group-hover:bg-blue-600 group-hover:text-white transition-colors\" \n                  variant=\"outline\"\n                  onClick={generateMatchingGame}\n                >\n                  Start Matching Game\n                </Button>\n              </CardContent>\n            </Card>\n\n            <Card className=\"hover:shadow-lg transition-all duration-200 cursor-pointer border-2 hover:border-blue-300 group\">\n              <CardHeader>\n                <div className=\"w-12 h-12 rounded-lg bg-gradient-to-br from-purple-50 to-purple-100 flex items-center justify-center mb-3 group-hover:scale-110 transition-transform\">\n                  <CheckCircle className=\"h-6 w-6 text-purple-700\" />\n                </div>\n                <CardTitle className=\"text-lg group-hover:text-blue-600 transition-colors\">\n                  True or False Challenge\n                </CardTitle>\n                <CardDescription>\n                  Answer true or false questions about historical events, dates, and facts from this timeline.\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <Button \n                  className=\"w-full group-hover:bg-blue-600 group-hover:text-white transition-colors\" \n                  variant=\"outline\"\n                  onClick={generateTrueFalseGame}\n                >\n                  Start True/False Game\n                </Button>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (gameMode === 'matching') {\n    const allAnswered = matchingItems.every(item => selectedMatches[item.id]);\n    \n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50\">\n        <div className=\"container mx-auto max-w-4xl p-4\">\n          <div className=\"mb-6 flex items-center justify-between\">\n            <Button variant=\"outline\" onClick={resetGame}>\n              <ArrowLeft className=\"h-4 w-4 mr-2\" />\n              Back to Menu\n            </Button>\n            <h2 className=\"text-xl font-semibold\">Matching Cards: {topicData?.title}</h2>\n            <div className=\"text-sm text-gray-600\">\n              {Object.keys(selectedMatches).length} / {matchingItems.length} matched\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            {/* Events Column (Left) */}\n            <div>\n              <h3 className=\"text-lg font-medium mb-4 text-center\">Historical Events</h3>\n              <div className=\"space-y-3\">\n                {/* Unmatched items first */}\n                {matchingItems.filter(item => !matchedPairs.has(item.id)).map(item => (\n                  <Card \n                    key={item.id}\n                    className={`p-4 cursor-pointer transition-all duration-300 hover:shadow-md ${\n                      selectedLeftItem === item.id \n                        ? 'border-blue-500 bg-blue-100 shadow-lg transform scale-105' \n                        : 'border-gray-200 hover:border-blue-300 hover:bg-blue-50'\n                    }`}\n                    onClick={() => handleLeftItemClick(item.id)}\n                  >\n                    <div className=\"text-sm font-medium text-gray-900\">{item.title}</div>\n                    <div className=\"text-xs text-gray-500 mt-1\">Click to select</div>\n                  </Card>\n                ))}\n                \n                {/* Matched items at bottom */}\n                {matchingItems.filter(item => matchedPairs.has(item.id)).map(item => (\n                  <Card \n                    key={item.id}\n                    className=\"p-4 border-green-500 bg-green-50 opacity-75\"\n                  >\n                    <div className=\"text-sm font-medium text-green-800\">{item.title}</div>\n                    <div className=\"text-xs text-green-600 mt-1\">\n                      ✓ Matched with: {selectedMatches[item.id]}\n                    </div>\n                  </Card>\n                ))}\n              </div>\n            </div>\n\n            {/* Years & Categories Column (Right) */}\n            <div>\n              <h3 className=\"text-lg font-medium mb-4 text-center\">Years & Categories</h3>\n              <div className=\"space-y-3\">\n                {/* Unmatched items first (shuffled) */}\n                {shuffledRightItems.filter(item => !matchedPairs.has(item.id)).map(item => (\n                  <Card \n                    key={`match-${item.id}`}\n                    className={`p-4 cursor-pointer transition-all duration-300 hover:shadow-md ${\n                      selectedLeftItem \n                        ? 'border-orange-300 bg-orange-50 hover:border-orange-500 hover:bg-orange-100' \n                        : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\n                    }`}\n                    onClick={() => handleRightItemClick(item.match)}\n                  >\n                    <div className=\"text-sm font-medium text-gray-900\">{item.match}</div>\n                    <div className=\"text-xs text-gray-500 mt-1\">\n                      {selectedLeftItem ? 'Click to match' : 'Select an event first'}\n                    </div>\n                  </Card>\n                ))}\n                \n                {/* Matched items at bottom */}\n                {shuffledRightItems.filter(item => matchedPairs.has(item.id)).map(item => (\n                  <Card \n                    key={`match-${item.id}`}\n                    className=\"p-4 border-green-500 bg-green-50 opacity-75\"\n                  >\n                    <div className=\"text-sm font-medium text-green-800\">{item.match}</div>\n                    <div className=\"text-xs text-green-600 mt-1\">✓ Matched successfully!</div>\n                  </Card>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"mt-8 text-center space-y-4\">\n            {/* Game Progress Indicator */}\n            <div className=\"flex items-center justify-center space-x-4 mb-6\">\n              <div className=\"text-sm text-gray-600\">\n                Progress: {matchedPairs.size} / {matchingItems.length} matches\n              </div>\n              <div className=\"w-48 h-2 bg-gray-200 rounded-full\">\n                <div \n                  className=\"h-full bg-blue-500 rounded-full transition-all duration-500\"\n                  style={{ width: `${(matchedPairs.size / matchingItems.length) * 100}%` }}\n                />\n              </div>\n            </div>\n\n            {/* Instructions */}\n            {matchedPairs.size === 0 && (\n              <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 max-w-md mx-auto\">\n                <div className=\"text-sm text-blue-800\">\n                  <strong>How to play:</strong><br/>\n                  1. Click an event in the left column<br/>\n                  2. Click its matching year & category in the right column<br/>\n                  3. Correct matches will move to the bottom with confetti!\n                </div>\n              </div>\n            )}\n            \n            {gameComplete && (\n              <div className=\"space-y-4\">\n                <div className=\"text-xl font-bold text-green-600 bg-green-50 border border-green-200 rounded-lg p-6\">\n                  🎉 Congratulations! Perfect Score!<br/>\n                  <span className=\"text-sm font-normal\">You matched all {matchingItems.length} events correctly!</span>\n                </div>\n                <div className=\"flex justify-center space-x-4\">\n                  <Button onClick={generateMatchingGame} variant=\"outline\">\n                    <Shuffle className=\"h-4 w-4 mr-2\" />\n                    Play Again\n                  </Button>\n                  <Button onClick={resetGame}>\n                    Back to Menu\n                  </Button>\n                </div>\n              </div>\n            )}\n\n            {/* Selected item indicator */}\n            {selectedLeftItem && !gameComplete && (\n              <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-3 max-w-md mx-auto\">\n                <div className=\"text-sm text-yellow-800\">\n                  Selected: <strong>{matchingItems.find(item => item.id === selectedLeftItem)?.title}</strong><br/>\n                  Now click its matching year & category on the right →\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (gameMode === 'truefalse') {\n    const currentQuestion = trueFalseQuestions[currentTrueFalseIndex];\n    const totalAnswered = Object.keys(trueFalseAnswers).length;\n    \n    if (showResults) {\n      const correctAnswers = trueFalseQuestions.filter(q => \n        trueFalseAnswers[q.id] === q.isTrue\n      ).length;\n      const percentage = Math.round((correctAnswers / trueFalseQuestions.length) * 100);\n      \n      return (\n        <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50\">\n          <div className=\"container mx-auto max-w-4xl p-4\">\n            <Card>\n              <CardHeader className=\"text-center\">\n                <CardTitle className={`text-2xl ${percentage >= 80 ? 'text-green-600' : 'text-red-600'}`}>\n                  {percentage >= 80 ? '🎉 Excellent!' : '📚 Keep Learning!'}\n                </CardTitle>\n                <CardDescription>\n                  You got {correctAnswers} out of {trueFalseQuestions.length} questions correct ({percentage}%)\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                {trueFalseQuestions.map(question => (\n                  <div key={question.id} className=\"border rounded-lg p-4\">\n                    <div className=\"flex items-start space-x-3\">\n                      {trueFalseAnswers[question.id] === question.isTrue ? (\n                        <CheckCircle className=\"h-5 w-5 text-green-600 mt-0.5\" />\n                      ) : (\n                        <XCircle className=\"h-5 w-5 text-red-600 mt-0.5\" />\n                      )}\n                      <div className=\"flex-1\">\n                        <div className=\"text-sm font-medium mb-1\">{question.statement}</div>\n                        <div className=\"text-xs text-gray-600\">{question.explanation}</div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n                \n                <div className=\"flex justify-center space-x-4 pt-4\">\n                  <Button onClick={generateTrueFalseGame} variant=\"outline\">\n                    <RotateCcw className=\"h-4 w-4 mr-2\" />\n                    Try Again\n                  </Button>\n                  <Button onClick={resetGame}>\n                    Back to Menu\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      );\n    }\n    \n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50\">\n        <div className=\"container mx-auto max-w-4xl p-4\">\n          <div className=\"mb-6 flex items-center justify-between\">\n            <Button variant=\"outline\" onClick={resetGame}>\n              <ArrowLeft className=\"h-4 w-4 mr-2\" />\n              Back to Menu\n            </Button>\n            <h2 className=\"text-xl font-semibold\">True or False: {topicData?.title}</h2>\n            <div className=\"text-sm text-gray-600\">\n              Question {currentTrueFalseIndex + 1} / {trueFalseQuestions.length}\n            </div>\n          </div>\n\n          <Card className=\"max-w-2xl mx-auto\">\n            <CardHeader>\n              <CardTitle className=\"text-center\">\n                {currentQuestion?.statement}\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div className=\"flex justify-center space-x-8\">\n                <Button \n                  onClick={() => handleTrueFalseAnswer(true)}\n                  className=\"bg-green-600 hover:bg-green-700 text-white px-8 py-3\"\n                  size=\"lg\"\n                >\n                  <CheckCircle className=\"h-5 w-5 mr-2\" />\n                  True\n                </Button>\n                <Button \n                  onClick={() => handleTrueFalseAnswer(false)}\n                  className=\"bg-red-600 hover:bg-red-700 text-white px-8 py-3\"\n                  size=\"lg\"\n                >\n                  <XCircle className=\"h-5 w-5 mr-2\" />\n                  False\n                </Button>\n              </div>\n              \n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div \n                  className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                  style={{ width: `${((totalAnswered + 1) / trueFalseQuestions.length) * 100}%` }}\n                />\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    );\n  }\n\n  return null;\n}","size_bytes":24961},"client/src/pages/timeline.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useLocation } from \"wouter\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { \n  Calendar, \n  Crown, \n  FileText, \n  Vote, \n  Map, \n  ShoppingCart,\n  ArrowLeft,\n  Clock,\n  Users,\n  Star,\n  Volume2,\n  VolumeX,\n  Trophy,\n  Music,\n  Palette,\n  BookOpen,\n  PartyPopper,\n  Lightbulb,\n  Church,\n  Play,\n  Video,\n  ExternalLink\n} from \"lucide-react\";\n\ninterface TimelineEvent {\n  id: string;\n  year: number;\n  title: string;\n  description: string;\n  details?: string;\n  category: string;\n  importance: number;\n  keyFigures?: string;\n  timelineTopic: string;\n  videoLink?: string;\n  accomplishment?: string;\n  sport?: string;\n}\n\nconst TIMELINE_TOPICS = [\n  {\n    id: \"parliament\",\n    title: \"Evolution of Parliament\",\n    description: \"Major parliamentary events, reforms, and the development of the UK's democratic system\",\n    icon: Crown,\n    color: \"bg-purple-100 text-purple-800 border-purple-200\",\n    bgColor: \"from-purple-50 to-purple-100\"\n  },\n  {\n    id: \"documents\",\n    title: \"Important Historical Documents\",\n    description: \"Key documents that shaped British law, governance, and society\",\n    icon: FileText,\n    color: \"bg-blue-100 text-blue-800 border-blue-200\",\n    bgColor: \"from-blue-50 to-blue-100\"\n  },\n  {\n    id: \"voting_rights\",\n    title: \"Evolution of Voting Rights\",\n    description: \"The expansion of suffrage and democratic participation throughout British history\",\n    icon: Vote,\n    color: \"bg-green-100 text-green-800 border-green-200\",\n    bgColor: \"from-green-50 to-green-100\"\n  },\n  {\n    id: \"territories\",\n    title: \"Territorial Evolution\",\n    description: \"The formation and expansion of the United Kingdom and its territories\",\n    icon: Map,\n    color: \"bg-red-100 text-red-800 border-red-200\",\n    bgColor: \"from-red-50 to-red-100\"\n  },\n  {\n    id: \"trades\",\n    title: \"Trade and Economic History\",\n    description: \"Development of trade, commerce, and economic systems in British history\",\n    icon: ShoppingCart,\n    color: \"bg-orange-100 text-orange-800 border-orange-200\",\n    bgColor: \"from-orange-50 to-orange-100\"\n  },\n  {\n    id: \"population-migration\",\n    title: \"Population & Migration\",\n    description: \"Migration waves from Norman Conquest to modern Commonwealth immigration, including Windrush Generation\",\n    icon: Users,\n    color: \"bg-teal-100 text-teal-800 border-teal-200\",\n    bgColor: \"from-teal-50 to-teal-100\"\n  },\n  {\n    id: \"sports-athletics\",\n    title: \"Sports & Athletics\", \n    description: \"Development of British sports from Football Association founding to Olympic achievements\",\n    icon: Trophy,\n    color: \"bg-yellow-100 text-yellow-800 border-yellow-200\",\n    bgColor: \"from-yellow-50 to-yellow-100\"\n  },\n\n  {\n    id: \"inventions\",\n    title: \"Inventions & Discoveries\",\n    description: \"British inventors and scientists whose innovations shaped the modern world\",\n    icon: Lightbulb,\n    color: \"bg-amber-100 text-amber-800 border-amber-200\",\n    bgColor: \"from-amber-50 to-amber-100\"\n  },\n  {\n    id: \"arts\",\n    title: \"Arts & Visual Culture\",\n    description: \"British artists, movements, and innovations that shaped visual arts and cultural expression\",\n    icon: Palette,\n    color: \"bg-indigo-100 text-indigo-800 border-indigo-200\",\n    bgColor: \"from-indigo-50 to-indigo-100\"\n  },\n  {\n    id: \"literature\", \n    title: \"Literature & Writers\",\n    description: \"Literary development from Beowulf and Shakespeare to Harry Potter phenomenon\",\n    icon: BookOpen,\n    color: \"bg-emerald-100 text-emerald-800 border-emerald-200\",\n    bgColor: \"from-emerald-50 to-emerald-100\"\n  },\n  {\n    id: \"british-holidays\",\n    title: \"British Holidays & Traditions\",\n    description: \"Evolution of British celebrations from Guy Fawkes Night to modern bank holidays\",\n    icon: PartyPopper,\n    color: \"bg-rose-100 text-rose-800 border-rose-200\",\n    bgColor: \"from-rose-50 to-rose-100\"\n  },\n  {\n    id: \"church\",\n    title: \"Church Evolution\",\n    description: \"Development of Christianity and religious institutions across all UK regions from ancient times to present\",\n    icon: Church,\n    color: \"bg-slate-100 text-slate-800 border-slate-200\",\n    bgColor: \"from-slate-50 to-slate-100\"\n  },\n  {\n    id: \"historical\",\n    title: \"Historical Timeline\",\n    description: \"Key British historical events from prehistoric times to 1746 AD based on Life in UK test content\",\n    icon: Clock,\n    color: \"bg-gray-100 text-gray-800 border-gray-200\",\n    bgColor: \"from-gray-50 to-gray-100\"\n  },\n  {\n    id: \"british-sports\",\n    title: \"British Sports Heritage\",\n    description: \"Sporting heritage from rugby invention at Rugby School to England's World Cup victory\",\n    icon: Trophy,\n    color: \"bg-emerald-100 text-emerald-800 border-emerald-200\",\n    bgColor: \"from-emerald-50 to-emerald-100\"\n  }\n];\n\nexport default function TimelinePage() {\n  const [selectedTopic, setSelectedTopic] = useState<string | null>(null);\n  const [, setLocation] = useLocation();\n  const [speaking, setSpeaking] = useState<string | null>(null);\n\n  const { data: events, isLoading } = useQuery<TimelineEvent[]>({\n    queryKey: [\"/api/timeline\", selectedTopic],\n    queryFn: () => fetch(`/api/timeline?topic=${selectedTopic}`).then(res => res.json()),\n    enabled: !!selectedTopic,\n  });\n\n  const selectedTopicData = TIMELINE_TOPICS.find(t => t.id === selectedTopic);\n\n  const getImportanceColor = (importance: number) => {\n    switch (importance) {\n      case 5: return \"bg-red-100 text-red-800 border-red-200\";\n      case 4: return \"bg-orange-100 text-orange-800 border-orange-200\";\n      case 3: return \"bg-yellow-100 text-yellow-800 border-yellow-200\";\n      case 2: return \"bg-blue-100 text-blue-800 border-blue-200\";\n      case 1: return \"bg-gray-100 text-gray-800 border-gray-200\";\n      default: return \"bg-gray-100 text-gray-800 border-gray-200\";\n    }\n  };\n\n  const getImportanceStars = (importance: number) => {\n    return Array.from({ length: 5 }, (_, i) => (\n      <Star \n        key={i} \n        className={`h-3 w-3 ${i < importance ? 'text-yellow-500 fill-yellow-500' : 'text-gray-300'}`} \n      />\n    ));\n  };\n\n  const speakText = (text: string, eventId: string) => {\n    // Stop any currently speaking text\n    if (speaking) {\n      speechSynthesis.cancel();\n      setSpeaking(null);\n      return;\n    }\n\n    // Check if browser supports speech synthesis\n    if (!('speechSynthesis' in window)) {\n      alert('Your browser does not support text-to-speech functionality');\n      return;\n    }\n\n    // Ensure voices are loaded\n    const loadVoices = () => {\n      const voices = speechSynthesis.getVoices();\n      \n      // Create speech synthesis utterance\n      const utterance = new SpeechSynthesisUtterance(text);\n      \n      // Priority order for selecting female voices only\n      const preferredVoices = [\n        // Look for explicitly named female British voices\n        voices.find(voice => \n          voice.lang.includes('en-GB') && \n          (voice.name.toLowerCase().includes('kate') || \n           voice.name.toLowerCase().includes('emma') ||\n           voice.name.toLowerCase().includes('serena') ||\n           voice.name.toLowerCase().includes('fiona') ||\n           voice.name.toLowerCase().includes('victoria'))\n        ),\n        // Look for voices explicitly marked as female\n        voices.find(voice => \n          voice.lang.includes('en-GB') && \n          voice.name.toLowerCase().includes('female')\n        ),\n        // Look for common female voice names in any English variant\n        voices.find(voice => \n          voice.lang.startsWith('en') && \n          (voice.name.toLowerCase().includes('kate') || \n           voice.name.toLowerCase().includes('emma') ||\n           voice.name.toLowerCase().includes('serena') ||\n           voice.name.toLowerCase().includes('samantha') ||\n           voice.name.toLowerCase().includes('susan') ||\n           voice.name.toLowerCase().includes('fiona') ||\n           voice.name.toLowerCase().includes('victoria') ||\n           voice.name.toLowerCase().includes('zira') ||\n           voice.name.toLowerCase().includes('hazel'))\n        ),\n        // Look for any voice marked as female\n        voices.find(voice => \n          voice.lang.startsWith('en') && \n          voice.name.toLowerCase().includes('female')\n        ),\n        // Filter British voices to exclude obviously male names\n        voices.find(voice => \n          voice.lang.includes('en-GB') && \n          !voice.name.toLowerCase().includes('daniel') &&\n          !voice.name.toLowerCase().includes('david') &&\n          !voice.name.toLowerCase().includes('george') &&\n          !voice.name.toLowerCase().includes('male')\n        ),\n        // Last resort: any English voice that doesn't sound male\n        voices.find(voice => \n          voice.lang.startsWith('en') && \n          !voice.name.toLowerCase().includes('daniel') &&\n          !voice.name.toLowerCase().includes('david') &&\n          !voice.name.toLowerCase().includes('george') &&\n          !voice.name.toLowerCase().includes('male')\n        )\n      ];\n\n      // Use the first available preferred voice\n      const selectedVoice = preferredVoices.find(voice => voice !== undefined);\n      if (selectedVoice) {\n        utterance.voice = selectedVoice;\n        console.log('Selected voice:', selectedVoice.name, selectedVoice.lang);\n      } else {\n        console.log('No female voice found, using default');\n      }\n      \n      // Enhanced natural speech settings for female voice\n      utterance.rate = 0.85; // Natural speaking pace\n      utterance.pitch = 1.2; // Higher pitch to ensure female sound\n      utterance.volume = 0.9; // Comfortable volume level\n      \n      // Force female characteristics if no female voice was found\n      if (!selectedVoice || !selectedVoice.name.toLowerCase().match(/(female|kate|emma|serena|samantha|susan|fiona|victoria|zira|hazel)/)) {\n        utterance.pitch = 1.3; // Even higher pitch to simulate female voice\n      }\n      \n      // Add natural pauses by preprocessing text\n      const naturalText = text\n        .replace(/\\./g, '... ') // Longer pause after periods\n        .replace(/,/g, ', ') // Short pause after commas\n        .replace(/:/g, ': ') // Pause after colons\n        .replace(/;/g, '; ') // Pause after semicolons\n        .replace(/Year (\\d+)/g, 'In the year $1') // More natural year reading\n        .replace(/Key figures:/g, 'The key figures involved were:'); // More conversational\n      \n      utterance.text = naturalText;\n\n      // Set up event handlers\n      utterance.onstart = () => setSpeaking(eventId);\n      utterance.onend = () => setSpeaking(null);\n      utterance.onerror = () => setSpeaking(null);\n\n      // Start speaking\n      speechSynthesis.speak(utterance);\n    };\n\n    // Load voices if not already loaded\n    if (speechSynthesis.getVoices().length === 0) {\n      speechSynthesis.addEventListener('voiceschanged', loadVoices, { once: true });\n    } else {\n      loadVoices();\n    }\n  };\n\n  if (!selectedTopic) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50\">\n        {/* Header */}\n        <div className=\"bg-white shadow-sm border-b\">\n          <div className=\"container mx-auto max-w-6xl px-4 py-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h1 className=\"text-3xl font-bold text-gray-900\">Interactive Historical Timeline</h1>\n                <p className=\"text-gray-600 mt-2\">Explore key moments in British history by topic</p>\n              </div>\n              <Button \n                variant=\"outline\" \n                onClick={() => setLocation(\"/dashboard\")}\n              >\n                <ArrowLeft className=\"h-4 w-4 mr-2\" />\n                Back to Dashboard\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        {/* Topic Selection */}\n        <div className=\"container mx-auto max-w-6xl p-4\">\n          <div className=\"mb-8\">\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\n              <div className=\"flex items-start\">\n                <Calendar className=\"h-5 w-5 text-blue-600 mr-2 mt-0.5 flex-shrink-0\" />\n                <div className=\"flex-1\">\n                  <h3 className=\"font-medium text-blue-900 mb-1\">Choose Your Historical Journey</h3>\n                  <p className=\"text-blue-700 text-sm\">\n                    Select a timeline topic to explore major events, key figures, and important developments\n                    that shaped the United Kingdom throughout history.\n                  </p>\n                </div>\n                <div className=\"flex items-center text-xs text-blue-600 bg-blue-100 px-2 py-1 rounded-full ml-4\">\n                  <Volume2 className=\"h-3 w-3 mr-1\" />\n                  Female Voice Available\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {TIMELINE_TOPICS.map((topic) => {\n              const IconComponent = topic.icon;\n              return (\n                <Card \n                  key={topic.id} \n                  className=\"hover:shadow-lg transition-all duration-200 cursor-pointer border-2 hover:border-blue-300 group\"\n                  onClick={() => setSelectedTopic(topic.id)}\n                >\n                  <CardHeader className=\"pb-3\">\n                    <div className={`w-12 h-12 rounded-lg bg-gradient-to-br ${topic.bgColor} flex items-center justify-center mb-3 group-hover:scale-110 transition-transform`}>\n                      <IconComponent className=\"h-6 w-6 text-gray-700\" />\n                    </div>\n                    <CardTitle className=\"text-lg group-hover:text-blue-600 transition-colors\">\n                      {topic.title}\n                    </CardTitle>\n                    <CardDescription className=\"text-sm leading-relaxed\">\n                      {topic.description}\n                    </CardDescription>\n                  </CardHeader>\n                  <CardContent className=\"pt-0\">\n                    <div className=\"space-y-2\">\n                      <Button \n                        className=\"w-full group-hover:bg-blue-600 group-hover:text-white transition-colors\" \n                        variant=\"outline\"\n                      >\n                        Explore Timeline\n                      </Button>\n                      <Button \n                        className=\"w-full bg-green-100 text-green-800 hover:bg-green-200 border-green-200\" \n                        variant=\"outline\"\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          setLocation(`/timeline-test/${topic.id}`);\n                        }}\n                      >\n                        Test\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"container mx-auto max-w-6xl px-4 py-6\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <Button \n                variant=\"outline\" \n                size=\"sm\"\n                onClick={() => setSelectedTopic(null)}\n              >\n                <ArrowLeft className=\"h-4 w-4 mr-2\" />\n                Back to Topics\n              </Button>\n              <div>\n                <h1 className=\"text-2xl font-bold text-gray-900\">{selectedTopicData?.title}</h1>\n                <p className=\"text-gray-600 text-sm\">{selectedTopicData?.description}</p>\n              </div>\n            </div>\n            <Badge className={selectedTopicData?.color}>\n              {events?.length || 0} Events\n            </Badge>\n          </div>\n        </div>\n      </div>\n\n      {/* Timeline Content */}\n      <div className=\"container mx-auto max-w-4xl p-4\">\n        {isLoading ? (\n          <div className=\"text-center py-12\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n            <p className=\"mt-4 text-gray-600\">Loading timeline events...</p>\n          </div>\n        ) : (\n          <div className=\"relative\">\n            {/* Timeline Line */}\n            <div className=\"absolute left-8 top-0 bottom-0 w-0.5 bg-gray-300\"></div>\n            \n            <div className=\"space-y-8\">\n              {events?.sort((a, b) => a.year - b.year).map((event, index) => (\n                <div key={event.id} className=\"relative flex items-start space-x-6\">\n                  {/* Timeline Dot */}\n                  <div className={`relative z-10 w-16 h-16 rounded-full bg-gradient-to-br ${selectedTopicData?.bgColor} border-4 border-white shadow-lg flex items-center justify-center flex-shrink-0`}>\n                    <span className=\"font-bold text-sm text-gray-700\">{event.year}</span>\n                  </div>\n                  \n                  {/* Event Card */}\n                  <Card className=\"flex-1 shadow-md hover:shadow-lg transition-shadow\">\n                    <CardHeader className=\"pb-3\">\n                      <div className=\"flex items-start justify-between\">\n                        <div className=\"flex-1\">\n                          <div className=\"flex items-center space-x-2 mb-2\">\n                            <Badge className={getImportanceColor(event.importance)}>\n                              Importance Level {event.importance}\n                            </Badge>\n                            <div className=\"flex items-center space-x-1\">\n                              {getImportanceStars(event.importance)}\n                            </div>\n                          </div>\n                          <CardTitle className=\"text-lg\">{event.title}</CardTitle>\n                          <div className=\"flex items-center text-sm text-gray-500 mt-1\">\n                            <Clock className=\"h-4 w-4 mr-1\" />\n                            <span>{event.year}</span>\n                            {event.keyFigures && (\n                              <>\n                                <span className=\"mx-2\">•</span>\n                                <Users className=\"h-4 w-4 mr-1\" />\n                                <span>Key Figures</span>\n                              </>\n                            )}\n                          </div>\n                        </div>\n                        \n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => {\n                            const textToSpeak = `${event.title}. This occurred in ${event.year}. ${event.description}. ${event.details || ''}${event.keyFigures ? ` The key figures involved were: ${event.keyFigures}.` : ''}`;\n                            speakText(textToSpeak, event.id);\n                          }}\n                          className={`p-2 ml-2 ${speaking === event.id ? 'text-uk-red bg-red-50' : 'text-gray-500 hover:text-uk-blue hover:bg-blue-50'}`}\n                          title={speaking === event.id ? \"Stop reading\" : \"Read aloud\"}\n                        >\n                          {speaking === event.id ? (\n                            <VolumeX className=\"h-5 w-5\" />\n                          ) : (\n                            <Volume2 className=\"h-5 w-5\" />\n                          )}\n                        </Button>\n                      </div>\n                    </CardHeader>\n                    <CardContent>\n                      <p className=\"text-gray-700 mb-3\">{event.description}</p>\n                      \n                      {event.keyFigures && (\n                        <div className=\"mb-3\">\n                          <p className=\"text-sm font-medium text-gray-900 mb-1\">Key Figures:</p>\n                          <p className=\"text-sm text-gray-600\">{event.keyFigures}</p>\n                        </div>\n                      )}\n                      \n                      {event.details && (\n                        <div className=\"bg-gray-50 rounded-lg p-3\">\n                          <p className=\"text-sm text-gray-700\">{event.details}</p>\n                        </div>\n                      )}\n                      \n                      {selectedTopic === 'british_sportsmen' && (\n                        <div className=\"mt-4 p-4 bg-emerald-50 border border-emerald-200 rounded-lg\">\n                          <div className=\"flex items-start justify-between gap-4\">\n                            <div className=\"flex-1\">\n                              {event.sport && (\n                                <div className=\"mb-2\">\n                                  <Badge className=\"bg-emerald-100 text-emerald-800 text-xs\">\n                                    {event.sport}\n                                  </Badge>\n                                </div>\n                              )}\n                              {event.accomplishment && (\n                                <div className=\"mb-3\">\n                                  <h5 className=\"font-medium text-emerald-900 mb-1\">Achievement:</h5>\n                                  <p className=\"text-sm text-emerald-800\">{event.accomplishment}</p>\n                                </div>\n                              )}\n                              <div className=\"flex items-center gap-2\">\n                                <Video className=\"h-4 w-4 text-emerald-600\" />\n                                <span className=\"text-sm font-medium text-emerald-900\">Video Link:</span>\n                              </div>\n                            </div>\n                            <div className=\"flex-shrink-0\">\n                              {event.videoLink ? (\n                                <Button\n                                  size=\"sm\"\n                                  className=\"bg-emerald-600 hover:bg-emerald-700 text-white\"\n                                  onClick={() => window.open(event.videoLink, '_blank')}\n                                >\n                                  <Play className=\"h-3 w-3 mr-1\" />\n                                  Watch\n                                  <ExternalLink className=\"h-3 w-3 ml-1\" />\n                                </Button>\n                              ) : (\n                                <div className=\"p-2 border-2 border-dashed border-emerald-300 rounded-lg text-center min-w-[100px]\">\n                                  <Video className=\"h-4 w-4 text-emerald-400 mx-auto mb-1\" />\n                                  <p className=\"text-xs text-emerald-600\">Video link space</p>\n                                  <p className=\"text-xs text-emerald-500\">To be added</p>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </CardContent>\n                  </Card>\n                </div>\n              ))}\n            </div>\n\n            {events && events.length === 0 && (\n              <div className=\"text-center py-12\">\n                <Calendar className=\"h-12 w-12 text-gray-400 mx-auto mb-4\" />\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Events Found</h3>\n                <p className=\"text-gray-600\">This timeline topic is being prepared. Please check back soon.</p>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":24036},"client/src/pages/video-upload.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Upload, VideoIcon, CheckCircle, AlertCircle, ArrowLeft } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { apiRequest } from \"@/lib/queryClient\";\n\nconst uploadFormSchema = z.object({\n  title: z.string().min(3, \"Title must be at least 3 characters\"),\n  description: z.string().min(10, \"Description must be at least 10 characters\"),\n  category: z.string().min(1, \"Please select a category\"),\n  orderIndex: z.number().min(0, \"Order index must be 0 or greater\"),\n  detailedContent: z.string().optional(),\n  duration: z.number().min(1, \"Duration must be greater than 0\").optional(),\n});\n\ntype UploadFormData = z.infer<typeof uploadFormSchema>;\n\nconst categories = [\n  \"Government\",\n  \"History\", \n  \"Geography\",\n  \"Culture\",\n  \"Society\",\n  \"Law\",\n  \"Education\",\n  \"Sports\",\n  \"Arts\",\n  \"Economy\"\n];\n\nexport default function VideoUploadPage() {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [uploadStatus, setUploadStatus] = useState<'idle' | 'uploading' | 'success' | 'error'>('idle');\n  const [uploadedVideo, setUploadedVideo] = useState<any>(null);\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const form = useForm<UploadFormData>({\n    resolver: zodResolver(uploadFormSchema),\n    defaultValues: {\n      title: \"\",\n      description: \"\",\n      category: \"\",\n      orderIndex: 0,\n      detailedContent: \"\",\n      duration: undefined,\n    },\n  });\n\n  const uploadMutation = useMutation({\n    mutationFn: async (data: UploadFormData & { file: File }) => {\n      const formData = new FormData();\n      formData.append('video', data.file);\n      formData.append('title', data.title);\n      formData.append('description', data.description);\n      formData.append('category', data.category);\n      formData.append('orderIndex', data.orderIndex.toString());\n      if (data.detailedContent) {\n        formData.append('detailedContent', data.detailedContent);\n      }\n\n      const response = await fetch('/api/videos/upload', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        const error = await response.json();\n        throw new Error(error.message || 'Upload failed');\n      }\n\n      return response.json();\n    },\n    onSuccess: (result) => {\n      setUploadStatus('success');\n      setUploadedVideo(result.video);\n      queryClient.invalidateQueries({ queryKey: ['/api/videos'] });\n      \n      toast({\n        title: \"Video uploaded successfully!\",\n        description: `${result.video.title} has been added to the video library.`,\n      });\n\n      // If duration was provided, update it\n      if (form.getValues('duration')) {\n        updateDurationMutation.mutate({\n          videoId: result.video.id,\n          duration: form.getValues('duration')!\n        });\n      }\n    },\n    onError: (error: Error) => {\n      setUploadStatus('error');\n      toast({\n        title: \"Upload failed\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const updateDurationMutation = useMutation({\n    mutationFn: async ({ videoId, duration }: { videoId: string; duration: number }) => {\n      const response = await fetch(`/api/videos/${videoId}/duration`, {\n        method: 'PATCH',\n        body: JSON.stringify({ duration }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to update duration');\n      }\n      \n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/videos'] });\n      toast({\n        title: \"Video duration updated\",\n        description: \"Video duration has been set successfully.\",\n      });\n    },\n  });\n\n  const handleFileSelect = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      // Validate file type\n      if (!file.type.startsWith('video/')) {\n        toast({\n          title: \"Invalid file type\",\n          description: \"Please select a video file (MP4, AVI, MOV, etc.)\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n\n      // Validate file size (500MB limit)\n      if (file.size > 500 * 1024 * 1024) {\n        toast({\n          title: \"File too large\",\n          description: \"Please select a video file smaller than 500MB\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n\n      setSelectedFile(file);\n      setUploadStatus('idle');\n      \n      // Try to get video duration\n      const video = document.createElement('video');\n      video.preload = 'metadata';\n      video.onloadedmetadata = () => {\n        const duration = Math.round(video.duration);\n        form.setValue('duration', duration);\n        window.URL.revokeObjectURL(video.src);\n      };\n      video.src = URL.createObjectURL(file);\n    }\n  };\n\n  const onSubmit = (data: UploadFormData) => {\n    if (!selectedFile) {\n      toast({\n        title: \"No file selected\",\n        description: \"Please select a video file to upload\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    setUploadStatus('uploading');\n    uploadMutation.mutate({ ...data, file: selectedFile });\n  };\n\n  const resetForm = () => {\n    form.reset();\n    setSelectedFile(null);\n    setUploadStatus('idle');\n    setUploadedVideo(null);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-green-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 p-4\">\n      <div className=\"max-w-4xl mx-auto\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center gap-4 mb-4\">\n            <Link href=\"/dashboard\">\n              <Button variant=\"ghost\" size=\"sm\" className=\"flex items-center gap-2\">\n                <ArrowLeft className=\"h-4 w-4\" />\n                Back to Dashboard\n              </Button>\n            </Link>\n          </div>\n          <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-2\">\n            Upload Video Content\n          </h1>\n          <p className=\"text-lg text-gray-600 dark:text-gray-300\">\n            Add educational video content to enhance the Life in UK test preparation experience\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Upload Form */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center gap-2\">\n                <VideoIcon className=\"h-5 w-5\" />\n                Video Upload Form\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <Form {...form}>\n                <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                  {/* File Upload */}\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium\">Video File</label>\n                    <div className=\"border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-lg p-6 text-center\">\n                      <input\n                        type=\"file\"\n                        accept=\"video/*\"\n                        onChange={handleFileSelect}\n                        className=\"hidden\"\n                        id=\"video-upload\"\n                        disabled={uploadStatus === 'uploading'}\n                      />\n                      {!selectedFile ? (\n                        <label htmlFor=\"video-upload\" className=\"cursor-pointer\">\n                          <Upload className=\"h-12 w-12 text-gray-400 mx-auto mb-2\" />\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                            Click to select video file\n                          </p>\n                          <p className=\"text-xs text-gray-500 mt-1\">\n                            Supports MP4, AVI, MOV (max 500MB)\n                          </p>\n                        </label>\n                      ) : (\n                        <div className=\"space-y-4\">\n                          <div className=\"aspect-video bg-black rounded-lg overflow-hidden max-w-md mx-auto\">\n                            <video\n                              src={URL.createObjectURL(selectedFile)}\n                              className=\"w-full h-full object-contain\"\n                              controls\n                              preload=\"metadata\"\n                            >\n                              Your browser does not support the video tag.\n                            </video>\n                          </div>\n                          <div className=\"space-y-2\">\n                            <p className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n                              {selectedFile.name}\n                            </p>\n                            <p className=\"text-xs text-gray-500\">\n                              Size: {(selectedFile.size / (1024 * 1024)).toFixed(2)} MB\n                            </p>\n                            <Button\n                              type=\"button\"\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => {\n                                setSelectedFile(null);\n                                form.setValue('duration', undefined);\n                              }}\n                              className=\"mt-2\"\n                            >\n                              Choose Different File\n                            </Button>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n\n                  {/* Title */}\n                  <FormField\n                    control={form.control}\n                    name=\"title\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Video Title</FormLabel>\n                        <FormControl>\n                          <Input placeholder=\"Enter video title\" {...field} />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  {/* Description */}\n                  <FormField\n                    control={form.control}\n                    name=\"description\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Description</FormLabel>\n                        <FormControl>\n                          <Textarea \n                            placeholder=\"Describe what this video covers...\"\n                            className=\"min-h-[100px]\"\n                            {...field}\n                          />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  {/* Category */}\n                  <FormField\n                    control={form.control}\n                    name=\"category\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Category</FormLabel>\n                        <Select onValueChange={field.onChange} value={field.value}>\n                          <FormControl>\n                            <SelectTrigger>\n                              <SelectValue placeholder=\"Select a category\" />\n                            </SelectTrigger>\n                          </FormControl>\n                          <SelectContent>\n                            {categories.map((category) => (\n                              <SelectItem key={category} value={category}>\n                                {category}\n                              </SelectItem>\n                            ))}\n                          </SelectContent>\n                        </Select>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  {/* Order Index */}\n                  <FormField\n                    control={form.control}\n                    name=\"orderIndex\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Order Index</FormLabel>\n                        <FormControl>\n                          <Input \n                            type=\"number\" \n                            placeholder=\"0\"\n                            {...field}\n                            onChange={(e) => field.onChange(parseInt(e.target.value) || 0)}\n                          />\n                        </FormControl>\n                        <FormDescription>\n                          Position in the video list (0 = first)\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  {/* Duration */}\n                  <FormField\n                    control={form.control}\n                    name=\"duration\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Duration (seconds)</FormLabel>\n                        <FormControl>\n                          <Input \n                            type=\"number\" \n                            placeholder=\"Auto-detected from video\"\n                            {...field}\n                            onChange={(e) => field.onChange(parseInt(e.target.value) || undefined)}\n                          />\n                        </FormControl>\n                        <FormDescription>\n                          Leave empty to auto-detect from video file\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  {/* Detailed Content */}\n                  <FormField\n                    control={form.control}\n                    name=\"detailedContent\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Detailed Content (Optional)</FormLabel>\n                        <FormControl>\n                          <Textarea \n                            placeholder=\"Additional educational content and context...\"\n                            className=\"min-h-[120px]\"\n                            {...field}\n                          />\n                        </FormControl>\n                        <FormDescription>\n                          Rich text content about the topic covered in the video\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  {/* Submit Button */}\n                  <div className=\"flex gap-4\">\n                    <Button \n                      type=\"submit\" \n                      disabled={!selectedFile || uploadStatus === 'uploading'}\n                      className=\"flex-1\"\n                    >\n                      {uploadStatus === 'uploading' ? (\n                        <>\n                          <Upload className=\"h-4 w-4 mr-2 animate-spin\" />\n                          Uploading...\n                        </>\n                      ) : (\n                        <>\n                          <Upload className=\"h-4 w-4 mr-2\" />\n                          Upload Video\n                        </>\n                      )}\n                    </Button>\n                    \n                    <Button \n                      type=\"button\" \n                      variant=\"outline\" \n                      onClick={resetForm}\n                      disabled={uploadStatus === 'uploading'}\n                    >\n                      Reset\n                    </Button>\n                  </div>\n                </form>\n              </Form>\n            </CardContent>\n          </Card>\n\n          {/* Upload Status */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Upload Status</CardTitle>\n            </CardHeader>\n            <CardContent>\n              {uploadStatus === 'idle' && (\n                <div className=\"text-center py-8\">\n                  <VideoIcon className=\"h-16 w-16 text-gray-300 mx-auto mb-4\" />\n                  <p className=\"text-gray-500\">Ready to upload video content</p>\n                </div>\n              )}\n\n              {uploadStatus === 'uploading' && (\n                <div className=\"text-center py-8\">\n                  <Upload className=\"h-16 w-16 text-blue-500 mx-auto mb-4 animate-spin\" />\n                  <p className=\"text-blue-600 font-medium\">Uploading video...</p>\n                  <p className=\"text-gray-500 text-sm mt-2\">This may take a few moments</p>\n                </div>\n              )}\n\n              {uploadStatus === 'success' && uploadedVideo && (\n                <div className=\"py-8\">\n                  <div className=\"text-center mb-4\">\n                    <CheckCircle className=\"h-16 w-16 text-green-500 mx-auto mb-4\" />\n                    <p className=\"text-green-600 font-medium mb-2\">Upload successful!</p>\n                  </div>\n                  \n                  {/* Video Preview */}\n                  <div className=\"aspect-video bg-black rounded-lg overflow-hidden mb-4\">\n                    <video\n                      src={uploadedVideo.videoUrl}\n                      className=\"w-full h-full object-contain\"\n                      controls\n                      preload=\"metadata\"\n                    >\n                      Your browser does not support the video tag.\n                    </video>\n                  </div>\n                  \n                  <div className=\"bg-green-50 dark:bg-green-900/20 p-4 rounded-lg text-left\">\n                    <h4 className=\"font-medium text-green-800 dark:text-green-200 mb-2\">\n                      {uploadedVideo.title}\n                    </h4>\n                    <p className=\"text-green-700 dark:text-green-300 text-sm mb-2\">\n                      {uploadedVideo.description}\n                    </p>\n                    <div className=\"text-xs text-green-600 dark:text-green-400 space-y-1\">\n                      <p>Category: {uploadedVideo.category}</p>\n                      <p>Duration: {uploadedVideo.duration}s</p>\n                      <p>File: {uploadedVideo.videoUrl}</p>\n                    </div>\n                    \n                    <div className=\"mt-3 pt-3 border-t border-green-200 dark:border-green-700\">\n                      <p className=\"text-xs text-green-600 dark:text-green-400 mb-2 font-medium\">\n                        Next Steps:\n                      </p>\n                      <ul className=\"text-xs text-green-600 dark:text-green-400 space-y-1\">\n                        <li>• Video is now available to students in the {uploadedVideo.category} section</li>\n                        <li>• Students can access it from the main dashboard</li>\n                        <li>• Video preview is shown above - this is how students will see it</li>\n                      </ul>\n                    </div>\n                  </div>\n                </div>\n              )}\n\n              {uploadStatus === 'error' && (\n                <div className=\"text-center py-8\">\n                  <AlertCircle className=\"h-16 w-16 text-red-500 mx-auto mb-4\" />\n                  <p className=\"text-red-600 font-medium\">Upload failed</p>\n                  <p className=\"text-gray-500 text-sm mt-2\">Please try again or check the file format</p>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":20473},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }","size_bytes":1126},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"import * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & {\n    value?: number\n  }\n>(({ className, value, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <div\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </div>\n))\nProgress.displayName = \"Progress\"\n\nexport { Progress }","size_bytes":596},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }","size_bytes":1882},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/components/ProtectedRoute.tsx":{"content":"import { useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { Loader2 } from \"lucide-react\";\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n  requireRole?: \"student\" | \"admin\";\n  redirectTo?: string;\n}\n\nexport default function ProtectedRoute({ \n  children, \n  requireRole, \n  redirectTo = \"/login\" \n}: ProtectedRouteProps) {\n  const { isAuthenticated, isLoading, user } = useAuth();\n  const [, setLocation] = useLocation();\n\n  useEffect(() => {\n    if (!isLoading) {\n      if (!isAuthenticated) {\n        setLocation(redirectTo);\n        return;\n      }\n\n      if (requireRole && user?.role !== requireRole) {\n        // Redirect based on user role\n        if (user?.role === \"admin\") {\n          setLocation(\"/admin/dashboard\");\n        } else {\n          setLocation(\"/dashboard\");\n        }\n        return;\n      }\n    }\n  }, [isAuthenticated, isLoading, user, requireRole, redirectTo, setLocation]);\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900\">\n        <div className=\"flex flex-col items-center space-y-4\">\n          <Loader2 className=\"w-8 h-8 animate-spin text-blue-600\" />\n          <p className=\"text-gray-600 dark:text-gray-400\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!isAuthenticated) {\n    return null; // Will be redirected by useEffect\n  }\n\n  if (requireRole && user?.role !== requireRole) {\n    return null; // Will be redirected by useEffect\n  }\n\n  return <>{children}</>;\n}","size_bytes":1583},"client/src/components/ThemeToggle.tsx":{"content":"import { Moon, Sun } from \"lucide-react\";\nimport { useTheme } from \"@/contexts/ThemeContext\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\n\nexport function ThemeToggle() {\n  const { theme, setTheme } = useTheme();\n\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button\n          variant=\"outline\"\n          size=\"icon\"\n          className=\"relative\"\n          data-testid=\"button-theme-toggle\"\n        >\n          <Sun className=\"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\n          <Moon className=\"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\n          <span className=\"sr-only\">Toggle theme</span>\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\">\n        <DropdownMenuItem \n          onClick={() => setTheme(\"light\")}\n          data-testid=\"menu-item-light-theme\"\n          className={theme === \"light\" ? \"bg-accent\" : \"\"}\n        >\n          <Sun className=\"mr-2 h-4 w-4\" />\n          Light\n        </DropdownMenuItem>\n        <DropdownMenuItem \n          onClick={() => setTheme(\"dark\")}\n          data-testid=\"menu-item-dark-theme\"\n          className={theme === \"dark\" ? \"bg-accent\" : \"\"}\n        >\n          <Moon className=\"mr-2 h-4 w-4\" />\n          Dark\n        </DropdownMenuItem>\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n\n// Simple toggle button variant\nexport function SimpleThemeToggle() {\n  const { theme, toggleTheme } = useTheme();\n\n  return (\n    <Button\n      variant=\"outline\"\n      size=\"icon\"\n      onClick={toggleTheme}\n      className=\"relative\"\n      data-testid=\"button-simple-theme-toggle\"\n    >\n      <Sun className=\"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\n      <Moon className=\"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\n      <span className=\"sr-only\">Toggle theme</span>\n    </Button>\n  );\n}","size_bytes":2141},"client/src/contexts/AuthContext.tsx":{"content":"import { createContext, useContext, useEffect, useState, ReactNode } from \"react\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\n\nexport interface User {\n  id: string;\n  name: string;\n  username: string;\n  email: string;\n  role: \"student\" | \"admin\";\n  overallProgress?: number;\n  totalStudyTime?: number;\n  currentStreak?: number;\n  stripeCustomerId?: string;\n  stripeSubscriptionId?: string;\n  subscriptionType?: string;\n  subscriptionStatus?: string;\n  createdAt?: string;\n}\n\ninterface AuthContextType {\n  user: User | null;\n  login: (email: string, password: string) => Promise<void>;\n  register: (data: RegisterData) => Promise<void>;\n  logout: () => void;\n  updateUser: (updatedUser: User) => void;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n}\n\ninterface RegisterData {\n  firstName: string;\n  username: string;\n  email: string;\n  password: string;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport function AuthProvider({ children }: AuthProviderProps) {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Initialize auth state on app load\n  useEffect(() => {\n    initializeAuth();\n  }, []);\n\n  const initializeAuth = async () => {\n    try {\n      const accessToken = localStorage.getItem(\"accessToken\");\n      const refreshToken = localStorage.getItem(\"refreshToken\");\n\n      if (!accessToken || !refreshToken) {\n        setIsLoading(false);\n        return;\n      }\n\n      // Try to get current user\n      const response = await fetch(\"/api/auth/me\", {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n      } else if (response.status === 401) {\n        // Try to refresh token\n        await refreshTokens();\n      } else {\n        // Invalid tokens, clear them\n        clearTokens();\n      }\n    } catch (error) {\n      console.error(\"Auth initialization error:\", error);\n      clearTokens();\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const refreshTokens = async () => {\n    try {\n      const refreshToken = localStorage.getItem(\"refreshToken\");\n      if (!refreshToken) throw new Error(\"No refresh token\");\n\n      const response = await fetch(\"/api/auth/refresh\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ refreshToken }),\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem(\"accessToken\", data.accessToken);\n        localStorage.setItem(\"refreshToken\", data.refreshToken);\n\n        // Get user data with new token\n        const userResponse = await fetch(\"/api/auth/me\", {\n          headers: {\n            Authorization: `Bearer ${data.accessToken}`,\n          },\n        });\n\n        if (userResponse.ok) {\n          const userData = await userResponse.json();\n          setUser(userData);\n        }\n      } else {\n        throw new Error(\"Token refresh failed\");\n      }\n    } catch (error) {\n      console.error(\"Token refresh error:\", error);\n      clearTokens();\n    }\n  };\n\n  const clearTokens = () => {\n    localStorage.removeItem(\"accessToken\");\n    localStorage.removeItem(\"refreshToken\");\n    setUser(null);\n  };\n\n  const login = async (email: string, password: string) => {\n    try {\n      const response = await apiRequest(\"POST\", \"/api/auth/login\", { email, password });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Login failed\");\n      }\n\n      const data = await response.json();\n      \n      // Store tokens\n      localStorage.setItem(\"accessToken\", data.accessToken);\n      localStorage.setItem(\"refreshToken\", data.refreshToken);\n      \n      // Set user\n      setUser(data.user);\n\n      // Clear any cached data\n      queryClient.clear();\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      throw error;\n    }\n  };\n\n  const register = async (registerData: RegisterData) => {\n    try {\n      const response = await apiRequest(\"POST\", \"/api/auth/register\", registerData);\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || \"Registration failed\");\n      }\n\n      const data = await response.json();\n      \n      // Store tokens\n      localStorage.setItem(\"accessToken\", data.accessToken);\n      localStorage.setItem(\"refreshToken\", data.refreshToken);\n      \n      // Set user\n      setUser(data.user);\n\n      // Clear any cached data\n      queryClient.clear();\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      const refreshToken = localStorage.getItem(\"refreshToken\");\n      \n      if (refreshToken) {\n        await apiRequest(\"POST\", \"/api/auth/logout\", { refreshToken });\n      }\n    } catch (error) {\n      console.error(\"Logout error:\", error);\n    } finally {\n      clearTokens();\n      queryClient.clear();\n    }\n  };\n\n  const updateUser = (updatedUser: User) => {\n    setUser(updatedUser);\n  };\n\n  const value: AuthContextType = {\n    user,\n    login,\n    register,\n    logout,\n    updateUser,\n    isAuthenticated: !!user,\n    isLoading,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n\n// Axios interceptor setup for automatic token handling\nexport const setupAuthInterceptors = () => {\n  // Request interceptor to add auth token\n  const requestInterceptor = (config: any) => {\n    const token = localStorage.getItem(\"accessToken\");\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  };\n\n  // Response interceptor to handle token refresh\n  const responseInterceptor = async (error: any) => {\n    const originalRequest = error.config;\n\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n\n      try {\n        const refreshToken = localStorage.getItem(\"refreshToken\");\n        if (!refreshToken) throw new Error(\"No refresh token\");\n\n        const response = await fetch(\"/api/auth/refresh\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ refreshToken }),\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          localStorage.setItem(\"accessToken\", data.accessToken);\n          localStorage.setItem(\"refreshToken\", data.refreshToken);\n\n          // Retry original request with new token\n          originalRequest.headers.Authorization = `Bearer ${data.accessToken}`;\n          return fetch(originalRequest);\n        } else {\n          // Refresh failed, redirect to login\n          localStorage.removeItem(\"accessToken\");\n          localStorage.removeItem(\"refreshToken\");\n          window.location.href = \"/login\";\n        }\n      } catch (refreshError) {\n        localStorage.removeItem(\"accessToken\");\n        localStorage.removeItem(\"refreshToken\");\n        window.location.href = \"/login\";\n      }\n    }\n\n    return Promise.reject(error);\n  };\n\n  return { requestInterceptor, responseInterceptor };\n};","size_bytes":7558},"client/src/contexts/ThemeContext.tsx":{"content":"import { createContext, useContext, useEffect, useState, ReactNode } from \"react\";\n\ntype Theme = \"light\" | \"dark\";\n\ninterface ThemeContextType {\n  theme: Theme;\n  toggleTheme: () => void;\n  setTheme: (theme: Theme) => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\ninterface ThemeProviderProps {\n  children: ReactNode;\n  defaultTheme?: Theme;\n}\n\nexport function ThemeProvider({ children, defaultTheme = \"light\" }: ThemeProviderProps) {\n  const [theme, setThemeState] = useState<Theme>(() => {\n    // Check localStorage for saved theme preference\n    if (typeof window !== \"undefined\") {\n      const savedTheme = localStorage.getItem(\"theme\") as Theme;\n      if (savedTheme === \"light\" || savedTheme === \"dark\") {\n        return savedTheme;\n      }\n      \n      // Check system preference\n      if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n        return \"dark\";\n      }\n    }\n    return defaultTheme;\n  });\n\n  useEffect(() => {\n    const root = document.documentElement;\n    \n    // Remove both classes first\n    root.classList.remove(\"light\", \"dark\");\n    \n    // Add the current theme class\n    root.classList.add(theme);\n    \n    // Save to localStorage\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n\n  // Listen for system theme changes\n  useEffect(() => {\n    const mediaQuery = window.matchMedia(\"(prefers-color-scheme: dark)\");\n    \n    const handleChange = (e: MediaQueryListEvent) => {\n      // Only update if user hasn't manually set a preference\n      const savedTheme = localStorage.getItem(\"theme\");\n      if (!savedTheme) {\n        setThemeState(e.matches ? \"dark\" : \"light\");\n      }\n    };\n\n    mediaQuery.addEventListener(\"change\", handleChange);\n    return () => mediaQuery.removeEventListener(\"change\", handleChange);\n  }, []);\n\n  const toggleTheme = () => {\n    setThemeState(prev => prev === \"light\" ? \"dark\" : \"light\");\n  };\n\n  const setTheme = (newTheme: Theme) => {\n    setThemeState(newTheme);\n  };\n\n  const value: ThemeContextType = {\n    theme,\n    toggleTheme,\n    setTheme,\n  };\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport function useTheme() {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\n  }\n  return context;\n}","size_bytes":2383},"client/src/pages/LoginPage.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { loginSchema, type LoginData } from \"@shared/schema\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { useTheme } from \"@/contexts/ThemeContext\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Eye, EyeOff, LogIn, UserPlus, Moon, Sun } from \"lucide-react\";\n\nexport default function LoginPage() {\n  const [, setLocation] = useLocation();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { login } = useAuth();\n  const { theme, toggleTheme } = useTheme();\n  const { toast } = useToast();\n\n  const form = useForm<LoginData>({\n    resolver: zodResolver(loginSchema),\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n    },\n  });\n\n  const onSubmit = async (data: LoginData) => {\n    setIsSubmitting(true);\n    try {\n      await login(data.email, data.password);\n      toast({\n        title: \"Login successful\",\n        description: \"Welcome back! Redirecting to dashboard...\",\n      });\n      setLocation(\"/dashboard\");\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      toast({\n        title: \"Login failed\",\n        description: error instanceof Error ? error.message : \"Invalid credentials. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 via-white to-red-50 dark:bg-gradient-to-br dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        {/* Theme Toggle */}\n        <div className=\"flex justify-end\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={toggleTheme}\n            className=\"p-2\"\n            data-testid=\"button-theme-toggle\"\n          >\n            {theme === \"light\" ? (\n              <Moon className=\"h-4 w-4\" />\n            ) : (\n              <Sun className=\"h-4 w-4\" />\n            )}\n          </Button>\n        </div>\n\n        <div className=\"text-center\">\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n            Life in UK Test\n          </h1>\n          <p className=\"mt-2 text-gray-600 dark:text-gray-400\">\n            Your gateway to UK citizenship preparation\n          </p>\n        </div>\n\n        <Card className=\"shadow-lg\">\n          <CardHeader className=\"text-center\">\n            <CardTitle className=\"flex items-center justify-center gap-2\">\n              <LogIn className=\"w-5 h-5\" />\n              Sign In\n            </CardTitle>\n            <CardDescription>\n              Enter your credentials to access your account\n            </CardDescription>\n          </CardHeader>\n\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n              <CardContent className=\"space-y-4\">\n                <FormField\n                  control={form.control}\n                  name=\"email\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Email</FormLabel>\n                      <FormControl>\n                        <Input\n                          {...field}\n                          type=\"email\"\n                          placeholder=\"Enter your email address\"\n                          data-testid=\"input-email\"\n                          className=\"transition-colors\"\n                          disabled={isSubmitting}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"password\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Password</FormLabel>\n                      <FormControl>\n                        <div className=\"relative\">\n                          <Input\n                            {...field}\n                            type={showPassword ? \"text\" : \"password\"}\n                            placeholder=\"Enter your password\"\n                            data-testid=\"input-password\"\n                            className=\"pr-10 transition-colors\"\n                            disabled={isSubmitting}\n                          />\n                          <Button\n                            type=\"button\"\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                            onClick={() => setShowPassword(!showPassword)}\n                            data-testid=\"button-toggle-password\"\n                            disabled={isSubmitting}\n                          >\n                            {showPassword ? (\n                              <EyeOff className=\"h-4 w-4 text-gray-500\" />\n                            ) : (\n                              <Eye className=\"h-4 w-4 text-gray-500\" />\n                            )}\n                          </Button>\n                        </div>\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </CardContent>\n\n              <CardFooter className=\"flex flex-col space-y-4\">\n                <Button\n                  type=\"submit\"\n                  className=\"w-full\"\n                  disabled={isSubmitting}\n                  data-testid=\"button-login\"\n                >\n                  {isSubmitting ? (\n                    <div className=\"flex items-center gap-2\">\n                      <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n                      Signing in...\n                    </div>\n                  ) : (\n                    <div className=\"flex items-center gap-2\">\n                      <LogIn className=\"w-4 h-4\" />\n                      Sign In\n                    </div>\n                  )}\n                </Button>\n\n                <div className=\"text-center\">\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                    Don't have an account?{\" \"}\n                    <Link href=\"/register\">\n                      <Button\n                        variant=\"link\"\n                        className=\"p-0 h-auto font-medium text-blue-600 hover:text-blue-500\"\n                        data-testid=\"link-register\"\n                      >\n                        <UserPlus className=\"w-4 h-4 mr-1\" />\n                        Create one here\n                      </Button>\n                    </Link>\n                  </p>\n                </div>\n              </CardFooter>\n            </form>\n          </Form>\n        </Card>\n\n        <div className=\"text-center\">\n          <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n            By signing in, you agree to our Terms of Service and Privacy Policy\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":7688},"client/src/pages/RegisterPage.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { registerSchema, type RegisterData } from \"@shared/schema\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { useTheme } from \"@/contexts/ThemeContext\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { Eye, EyeOff, UserPlus, LogIn, Moon, Sun } from \"lucide-react\";\n\nexport default function RegisterPage() {\n  const [, setLocation] = useLocation();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { register } = useAuth();\n  const { theme, toggleTheme } = useTheme();\n  const { toast } = useToast();\n\n  const form = useForm<RegisterData>({\n    resolver: zodResolver(registerSchema),\n    defaultValues: {\n      firstName: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    },\n  });\n\n  const onSubmit = async (data: RegisterData) => {\n    setIsSubmitting(true);\n    try {\n      await register(data);\n      toast({\n        title: \"Registration successful\",\n        description: \"Welcome! Your account has been created. Redirecting to dashboard...\",\n      });\n      setLocation(\"/dashboard\");\n    } catch (error) {\n      console.error(\"Registration error:\", error);\n      toast({\n        title: \"Registration failed\",\n        description: error instanceof Error ? error.message : \"Registration failed. Please try again.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 via-white to-red-50 dark:bg-gradient-to-br dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        {/* Theme Toggle */}\n        <div className=\"flex justify-end\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={toggleTheme}\n            className=\"p-2\"\n            data-testid=\"button-theme-toggle\"\n          >\n            {theme === \"light\" ? (\n              <Moon className=\"h-4 w-4\" />\n            ) : (\n              <Sun className=\"h-4 w-4\" />\n            )}\n          </Button>\n        </div>\n\n        <div className=\"text-center\">\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\n            Life in UK Test\n          </h1>\n          <p className=\"mt-2 text-gray-600 dark:text-gray-400\">\n            Start your journey to UK citizenship\n          </p>\n        </div>\n\n        <Card className=\"shadow-lg\">\n          <CardHeader className=\"text-center\">\n            <CardTitle className=\"flex items-center justify-center gap-2\">\n              <UserPlus className=\"w-5 h-5\" />\n              Create Account\n            </CardTitle>\n            <CardDescription>\n              Join thousands preparing for the Life in UK test\n            </CardDescription>\n          </CardHeader>\n\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n              <CardContent className=\"space-y-4\">\n                <FormField\n                  control={form.control}\n                  name=\"firstName\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>First Name</FormLabel>\n                      <FormControl>\n                        <Input\n                          {...field}\n                          type=\"text\"\n                          placeholder=\"John\"\n                          data-testid=\"input-first-name\"\n                          className=\"transition-colors\"\n                          disabled={isSubmitting}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"username\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Username</FormLabel>\n                      <FormControl>\n                        <Input\n                          {...field}\n                          type=\"text\"\n                          placeholder=\"Choose a unique username\"\n                          data-testid=\"input-username\"\n                          className=\"transition-colors\"\n                          disabled={isSubmitting}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"email\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Email Address</FormLabel>\n                      <FormControl>\n                        <Input\n                          {...field}\n                          type=\"email\"\n                          placeholder=\"john@example.com\"\n                          data-testid=\"input-email\"\n                          className=\"transition-colors\"\n                          disabled={isSubmitting}\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"password\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Password</FormLabel>\n                      <FormControl>\n                        <div className=\"relative\">\n                          <Input\n                            {...field}\n                            type={showPassword ? \"text\" : \"password\"}\n                            placeholder=\"Choose a strong password\"\n                            data-testid=\"input-password\"\n                            className=\"pr-10 transition-colors\"\n                            disabled={isSubmitting}\n                          />\n                          <Button\n                            type=\"button\"\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            className=\"absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent\"\n                            onClick={() => setShowPassword(!showPassword)}\n                            data-testid=\"button-toggle-password\"\n                            disabled={isSubmitting}\n                          >\n                            {showPassword ? (\n                              <EyeOff className=\"h-4 w-4 text-gray-500\" />\n                            ) : (\n                              <Eye className=\"h-4 w-4 text-gray-500\" />\n                            )}\n                          </Button>\n                        </div>\n                      </FormControl>\n                      <FormMessage />\n                      <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n                        Password must be at least 6 characters long\n                      </p>\n                    </FormItem>\n                  )}\n                />\n              </CardContent>\n\n              <CardFooter className=\"flex flex-col space-y-4\">\n                <Button\n                  type=\"submit\"\n                  className=\"w-full\"\n                  disabled={isSubmitting}\n                  data-testid=\"button-register\"\n                >\n                  {isSubmitting ? (\n                    <div className=\"flex items-center gap-2\">\n                      <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n                      Creating account...\n                    </div>\n                  ) : (\n                    <div className=\"flex items-center gap-2\">\n                      <UserPlus className=\"w-4 h-4\" />\n                      Create Account\n                    </div>\n                  )}\n                </Button>\n\n                <div className=\"text-center\">\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                    Already have an account?{\" \"}\n                    <Link href=\"/login\">\n                      <Button\n                        variant=\"link\"\n                        className=\"p-0 h-auto font-medium text-blue-600 hover:text-blue-500\"\n                        data-testid=\"link-login\"\n                      >\n                        <LogIn className=\"w-4 h-4 mr-1\" />\n                        Sign in here\n                      </Button>\n                    </Link>\n                  </p>\n                </div>\n              </CardFooter>\n            </form>\n          </Form>\n        </Card>\n\n        <div className=\"text-center\">\n          <p className=\"text-xs text-gray-500 dark:text-gray-400\">\n            By creating an account, you agree to our Terms of Service and Privacy Policy\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":9514},"server/middleware/auth.ts":{"content":"import { Request, Response, NextFunction } from 'express';\nimport { verifyAccessToken, JWTPayload } from '../services/jwt';\n\nexport interface AuthenticatedRequest extends Request {\n  user?: JWTPayload;\n}\n\nexport function authenticateToken(req: AuthenticatedRequest, res: Response, next: NextFunction) {\n  const authHeader = req.headers.authorization;\n  const token = authHeader && authHeader.split(' ')[1]; // Bearer TOKEN\n\n  if (!token) {\n    return res.status(401).json({ error: 'Access token required' });\n  }\n\n  const payload = verifyAccessToken(token);\n  if (!payload) {\n    return res.status(403).json({ error: 'Invalid or expired token' });\n  }\n\n  req.user = payload;\n  next();\n}\n\nexport function requireRole(roles: string[]) {\n  return (req: AuthenticatedRequest, res: Response, next: NextFunction) => {\n    if (!req.user) {\n      return res.status(401).json({ error: 'Authentication required' });\n    }\n\n    if (!roles.includes(req.user.role)) {\n      return res.status(403).json({ error: 'Insufficient permissions' });\n    }\n\n    next();\n  };\n}\n\nexport const requireStudent = requireRole(['student', 'admin']);\nexport const requireAdmin = requireRole(['admin']);","size_bytes":1172},"server/services/jwt.ts":{"content":"import jwt from 'jsonwebtoken';\nimport { randomBytes } from 'crypto';\n\n// Enforce JWT secrets at startup - never use defaults in production\nconst JWT_SECRET = process.env.JWT_SECRET || 'your-super-secret-jwt-key-change-in-production';\nconst REFRESH_SECRET = process.env.REFRESH_SECRET || 'your-super-secret-refresh-key-change-in-production';\n\nif (process.env.NODE_ENV === 'production' && (!process.env.JWT_SECRET || !process.env.REFRESH_SECRET)) {\n  throw new Error('Missing required JWT secrets in production environment');\n}\nconst ACCESS_TOKEN_EXPIRES_IN = '15m';\nconst REFRESH_TOKEN_EXPIRES_IN = '7d';\n\nexport interface JWTPayload {\n  userId: string;\n  username: string;\n  email: string;\n  role: 'student' | 'admin' | 'superadmin';\n}\n\nexport interface TokenPair {\n  accessToken: string;\n  refreshToken: string;\n}\n\nexport function generateAccessToken(payload: JWTPayload): string {\n  return jwt.sign(payload, JWT_SECRET, { \n    expiresIn: ACCESS_TOKEN_EXPIRES_IN,\n    issuer: 'lifeinuk-app'\n  });\n}\n\nexport function generateRefreshToken(): string {\n  return randomBytes(64).toString('hex');\n}\n\nexport function verifyAccessToken(token: string): JWTPayload | null {\n  try {\n    const decoded = jwt.verify(token, JWT_SECRET) as JWTPayload;\n    return decoded;\n  } catch (error) {\n    return null;\n  }\n}\n\nexport function generateTokenPair(payload: JWTPayload): TokenPair {\n  const accessToken = generateAccessToken(payload);\n  const refreshToken = generateRefreshToken();\n  \n  return {\n    accessToken,\n    refreshToken\n  };\n}\n\nexport function getRefreshTokenExpiry(): Date {\n  const expiry = new Date();\n  expiry.setDate(expiry.getDate() + 7); // 7 days from now\n  return expiry;\n}","size_bytes":1680},"client/src/pages/LandingPage.tsx":{"content":"import { Crown, BookOpen, GamepadIcon, Map, Video, Trophy, Check, ArrowRight, Star, Users, Timer, MessageCircle } from \"lucide-react\";\nimport { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { SimpleThemeToggle } from \"@/components/ThemeToggle\";\n\nexport default function LandingPage() {\n  const features = [\n    {\n      icon: BookOpen,\n      title: \"Practice Tests\",\n      description: \"Take comprehensive 24-question practice tests with instant feedback and detailed explanations\",\n      color: \"from-green-500 to-blue-600\"\n    },\n    {\n      icon: Timer,\n      title: \"Mock Tests\",\n      description: \"Official exam simulation with timer to prepare you for the real test experience\",\n      color: \"from-red-500 to-orange-600\"\n    },\n    {\n      icon: GamepadIcon,\n      title: \"Interactive Games\",\n      description: \"Learn through engaging matching games, flip cards, and True/False challenges\",\n      color: \"from-purple-500 to-pink-600\"\n    },\n    {\n      icon: Map,\n      title: \"Interactive UK Map\",\n      description: \"Explore UK geography, cultural regions, and important landmarks\",\n      color: \"from-emerald-500 to-teal-600\"\n    },\n    {\n      icon: Video,\n      title: \"Video Learning\",\n      description: \"Watch educational videos covering government, history, geography, and culture\",\n      color: \"from-indigo-500 to-cyan-600\"\n    },\n    {\n      icon: MessageCircle,\n      title: \"AI Study Assistant\",\n      description: \"Get instant help from our AI chatbot with comprehensive UK knowledge\",\n      color: \"from-violet-500 to-purple-600\"\n    }\n  ];\n\n  const stats = [\n    { number: \"45+\", label: \"Practice Tests\" },\n    { number: \"50+\", label: \"Mock Tests\" },\n    { number: \"18\", label: \"UK Locations\" },\n    { number: \"1000+\", label: \"Questions\" }\n  ];\n\n  const testimonials = [\n    {\n      text: \"The interactive games made learning so much fun. I passed my test on the first try!\",\n      name: \"Sarah M.\",\n      rating: 5\n    },\n    {\n      text: \"The mock tests gave me confidence for the real exam. Excellent preparation platform.\",\n      name: \"Ahmed K.\",\n      rating: 5\n    },\n    {\n      text: \"Comprehensive content covering everything I needed to know about UK history and culture.\",\n      name: \"Maria L.\",\n      rating: 5\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-red-50 dark:bg-gradient-to-br dark:from-gray-900 dark:via-gray-800 dark:to-gray-900\">\n      {/* Navigation Header */}\n      <header className=\"bg-white dark:bg-gray-800 shadow-sm border-b border-gray-200 dark:border-gray-700 sticky top-0 z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-10 h-10 bg-uk-blue rounded-lg flex items-center justify-center\">\n                <Crown className=\"text-white\" size={20} />\n              </div>\n              <div>\n                <h1 className=\"text-xl font-bold text-gray-900 dark:text-white\">Life in UK Test</h1>\n                <p className=\"text-xs text-gray-500 dark:text-gray-400\">E-Learning Platform</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center space-x-4\">\n              <SimpleThemeToggle />\n              <Link href=\"/login\">\n                <Button variant=\"outline\" size=\"sm\" data-testid=\"button-login\">\n                  Login\n                </Button>\n              </Link>\n              <Link href=\"/register\">\n                <Button size=\"sm\" className=\"bg-uk-blue hover:bg-uk-blue/90\" data-testid=\"button-signup\">\n                  Sign Up\n                </Button>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      {/* Hero Section */}\n      <section className=\"relative overflow-hidden bg-gradient-to-r from-blue-600 via-purple-600 to-red-600 dark:bg-gradient-to-r dark:from-blue-900 dark:via-purple-900 dark:to-red-900 py-20 lg:py-32\">\n        {/* Background Pattern */}\n        <div className=\"absolute inset-0 bg-black/10\">\n          <div className=\"absolute inset-0\" style={{\n            backgroundImage: `url(\"data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.1'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E\")`,\n          }}>\n          </div>\n        </div>\n        \n        <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center\">\n            <div className=\"flex items-center justify-center mb-6\">\n              <div className=\"w-16 h-16 bg-white/20 rounded-full flex items-center justify-center mr-4\">\n                <span className=\"text-4xl\">🇬🇧</span>\n              </div>\n              <div className=\"text-white/90 text-sm font-medium uppercase tracking-wider\">\n                Official Life in UK Test Preparation\n              </div>\n            </div>\n            \n            <h1 className=\"text-4xl lg:text-6xl font-bold text-white mb-6 leading-tight\">\n              Master Your <span className=\"text-yellow-300\">UK Citizenship Test</span>\n            </h1>\n            \n            <p className=\"text-xl lg:text-2xl text-white/90 mb-8 max-w-3xl mx-auto leading-relaxed\">\n              Comprehensive e-learning platform with interactive tests, games, and AI-powered study assistance \n              to help you pass the Life in UK test with confidence.\n            </p>\n            \n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center mb-12\">\n              <Link href=\"/register\">\n                <Button size=\"lg\" className=\"bg-yellow-500 hover:bg-yellow-400 text-black font-semibold px-8 py-4 text-lg\" data-testid=\"button-get-started\">\n                  Get Started Free <ArrowRight className=\"ml-2\" size={20} />\n                </Button>\n              </Link>\n              <Link href=\"/login\">\n                <Button variant=\"outline\" size=\"lg\" className=\"border-white text-white hover:bg-white hover:text-blue-600 px-8 py-4 text-lg\" data-testid=\"button-login-hero\">\n                  Login to Continue\n                </Button>\n              </Link>\n            </div>\n\n            {/* Quick Stats */}\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6 max-w-2xl mx-auto\">\n              {stats.map((stat, index) => (\n                <div key={index} className=\"bg-white/10 backdrop-blur-sm rounded-lg p-4 text-center\">\n                  <div className=\"text-2xl lg:text-3xl font-bold text-yellow-300\" data-testid={`stat-${stat.label.toLowerCase().replace(' ', '-')}`}>\n                    {stat.number}\n                  </div>\n                  <div className=\"text-sm text-white/80\">{stat.label}</div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section */}\n      <section className=\"py-20 bg-gradient-to-br from-white via-blue-50 to-white dark:bg-gradient-to-br dark:from-gray-800 dark:via-gray-700 dark:to-gray-800\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-gray-900 dark:text-white mb-4\">\n              Everything You Need to Pass\n            </h2>\n            <p className=\"text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto\">\n              Our comprehensive platform combines proven learning methods with modern technology \n              to give you the best preparation experience.\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {features.map((feature, index) => (\n              <Card key={index} className=\"border-0 shadow-lg hover:shadow-xl transition-shadow duration-300\" data-testid={`feature-${feature.title.toLowerCase().replace(' ', '-')}`}>\n                <CardContent className=\"p-6\">\n                  <div className={`w-12 h-12 bg-gradient-to-r ${feature.color} rounded-lg flex items-center justify-center mb-4`}>\n                    <feature.icon className=\"text-white\" size={24} />\n                  </div>\n                  <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-3\">\n                    {feature.title}\n                  </h3>\n                  <p className=\"text-gray-600 dark:text-gray-300 leading-relaxed\">\n                    {feature.description}\n                  </p>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* How It Works Section */}\n      <section className=\"py-20 bg-gradient-to-br from-red-50 via-white to-blue-50 dark:bg-gradient-to-br dark:from-gray-900 dark:via-gray-800 dark:to-gray-900\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-gray-900 dark:text-white mb-4\">\n              How It Works\n            </h2>\n            <p className=\"text-xl text-gray-600 dark:text-gray-300 max-w-2xl mx-auto\">\n              Simple steps to get you prepared and confident for your test\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8 lg:gap-12\">\n            <div className=\"text-center\" data-testid=\"step-signup\">\n              <div className=\"w-16 h-16 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center mx-auto mb-6\">\n                <span className=\"text-2xl font-bold text-blue-600 dark:text-blue-400\">1</span>\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-3\">Sign Up</h3>\n              <p className=\"text-gray-600 dark:text-gray-300\">\n                Create your free account and get instant access to our comprehensive learning platform.\n              </p>\n            </div>\n\n            <div className=\"text-center\" data-testid=\"step-learn\">\n              <div className=\"w-16 h-16 bg-green-100 dark:bg-green-900 rounded-full flex items-center justify-center mx-auto mb-6\">\n                <span className=\"text-2xl font-bold text-green-600 dark:text-green-400\">2</span>\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-3\">Learn & Practice</h3>\n              <p className=\"text-gray-600 dark:text-gray-300\">\n                Study with our interactive content, take practice tests, and play educational games.\n              </p>\n            </div>\n\n            <div className=\"text-center\" data-testid=\"step-pass\">\n              <div className=\"w-16 h-16 bg-yellow-100 dark:bg-yellow-900 rounded-full flex items-center justify-center mx-auto mb-6\">\n                <span className=\"text-2xl font-bold text-yellow-600 dark:text-yellow-400\">3</span>\n              </div>\n              <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-3\">Pass Your Test</h3>\n              <p className=\"text-gray-600 dark:text-gray-300\">\n                Take your official test with confidence, knowing you're fully prepared for success.\n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Testimonials Section */}\n      <section className=\"py-20 bg-gradient-to-br from-white via-red-50 to-white dark:bg-gradient-to-br dark:from-gray-800 dark:via-gray-700 dark:to-gray-800\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"text-center mb-16\">\n            <h2 className=\"text-3xl lg:text-4xl font-bold text-gray-900 dark:text-white mb-4\">\n              Success Stories\n            </h2>\n            <p className=\"text-xl text-gray-600 dark:text-gray-300\">\n              Join thousands who have passed their Life in UK test with our platform\n            </p>\n          </div>\n\n          <div className=\"grid md:grid-cols-3 gap-8\">\n            {testimonials.map((testimonial, index) => (\n              <Card key={index} className=\"border-0 shadow-lg\" data-testid={`testimonial-${index}`}>\n                <CardContent className=\"p-6\">\n                  <div className=\"flex mb-4\">\n                    {[...Array(testimonial.rating)].map((_, i) => (\n                      <Star key={i} className=\"text-yellow-400 fill-current\" size={20} />\n                    ))}\n                  </div>\n                  <p className=\"text-gray-600 dark:text-gray-300 mb-4 italic\">\n                    \"{testimonial.text}\"\n                  </p>\n                  <div className=\"font-semibold text-gray-900 dark:text-white\">\n                    {testimonial.name}\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 bg-gradient-to-r from-blue-600 to-purple-600\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-3xl lg:text-4xl font-bold text-white mb-6\">\n            Ready to Start Your Journey?\n          </h2>\n          <p className=\"text-xl text-white/90 mb-8 max-w-2xl mx-auto\">\n            Join thousands of successful students who have passed their Life in UK test \n            with our comprehensive preparation platform.\n          </p>\n          \n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <Link href=\"/register\">\n              <Button size=\"lg\" className=\"bg-yellow-500 hover:bg-yellow-400 text-black font-semibold px-8 py-4 text-lg\" data-testid=\"button-start-learning\">\n                Start Learning Today <ArrowRight className=\"ml-2\" size={20} />\n              </Button>\n            </Link>\n            <Link href=\"/login\">\n              <Button variant=\"outline\" size=\"lg\" className=\"border-white text-white hover:bg-white hover:text-blue-600 px-8 py-4 text-lg\" data-testid=\"button-continue-learning\">\n                Continue Learning\n              </Button>\n            </Link>\n          </div>\n\n          <div className=\"mt-8 text-white/80 text-sm\">\n            <p>Free account • No credit card required • Instant access</p>\n          </div>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <footer className=\"bg-gray-900 dark:bg-black text-white py-12\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"grid md:grid-cols-4 gap-8\">\n            <div className=\"md:col-span-2\">\n              <div className=\"flex items-center space-x-3 mb-4\">\n                <div className=\"w-10 h-10 bg-uk-blue rounded-lg flex items-center justify-center\">\n                  <Crown className=\"text-white\" size={20} />\n                </div>\n                <div>\n                  <h3 className=\"text-xl font-bold\">Life in UK Test</h3>\n                  <p className=\"text-sm text-gray-400\">E-Learning Platform</p>\n                </div>\n              </div>\n              <p className=\"text-gray-400 mb-4 max-w-md\">\n                The most comprehensive online platform for Life in UK test preparation. \n                Master UK history, culture, and government with our interactive learning tools.\n              </p>\n            </div>\n\n            <div>\n              <h4 className=\"font-semibold mb-4\">Quick Links</h4>\n              <ul className=\"space-y-2 text-gray-400\">\n                <li><Link href=\"/login\" className=\"hover:text-white transition-colors\">Login</Link></li>\n                <li><Link href=\"/register\" className=\"hover:text-white transition-colors\">Sign Up</Link></li>\n              </ul>\n            </div>\n\n            <div>\n              <h4 className=\"font-semibold mb-4\">Features</h4>\n              <ul className=\"space-y-2 text-gray-400\">\n                <li>Practice Tests</li>\n                <li>Mock Exams</li>\n                <li>Interactive Games</li>\n                <li>AI Study Assistant</li>\n              </ul>\n            </div>\n          </div>\n\n          <div className=\"border-t border-gray-800 mt-8 pt-8 text-center text-gray-400\">\n            <p>&copy; 2025 Life in UK Test E-Learning Platform. All rights reserved.</p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  );\n}","size_bytes":16530},"client/src/components/AdminRoute.tsx":{"content":"import { useAuth } from \"@/contexts/AuthContext\";\nimport { useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { Loader2 } from \"lucide-react\";\n\ninterface AdminRouteProps {\n  children: React.ReactNode;\n}\n\n// Helper function to check if user is admin\nconst isAdminUser = (role: string | undefined): boolean => {\n  return role === 'admin' || role === 'superadmin';\n};\n\nexport default function AdminRoute({ children }: AdminRouteProps) {\n  const { user, isLoading, isAuthenticated } = useAuth();\n  const [, setLocation] = useLocation();\n\n  useEffect(() => {\n    if (!isLoading && !isAuthenticated) {\n      setLocation(\"/login\");\n    } else if (!isLoading && isAuthenticated && user && !isAdminUser(user.role)) {\n      // Redirect non-admin users to dashboard\n      setLocation(\"/dashboard\");\n    }\n  }, [isAuthenticated, isLoading, user, setLocation]);\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900\">\n        <div className=\"flex flex-col items-center space-y-4\">\n          <Loader2 className=\"w-8 h-8 animate-spin text-blue-600\" />\n          <p className=\"text-gray-600 dark:text-gray-400\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!isAuthenticated) {\n    return null; // Will be redirected by useEffect\n  }\n\n  if (!user || !isAdminUser(user.role)) {\n    return null; // Will be redirected by useEffect\n  }\n\n  return <>{children}</>;\n}","size_bytes":1454},"client/src/pages/AdminLoginPage.tsx":{"content":"import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { Link, useLocation } from \"wouter\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Eye, EyeOff, Shield, ArrowLeft } from \"lucide-react\";\n\nconst adminLoginSchema = z.object({\n  email: z.string().email(\"Please enter a valid email address\"),\n  password: z.string().min(1, \"Password is required\"),\n});\n\ntype AdminLoginForm = z.infer<typeof adminLoginSchema>;\n\nexport default function AdminLoginPage() {\n  const { toast } = useToast();\n  const { login } = useAuth();\n  const [, setLocation] = useLocation();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const form = useForm<AdminLoginForm>({\n    resolver: zodResolver(adminLoginSchema),\n    defaultValues: {\n      email: \"\",\n      password: \"\",\n    },\n  });\n\n  const loginMutation = useMutation({\n    mutationFn: async (data: AdminLoginForm) => {\n      return apiRequest(\"POST\", \"/api/auth/login\", data);\n    },\n    onSuccess: async (response: any) => {\n      const { accessToken, refreshToken, user } = response;\n      \n      // Check if user is admin\n      if (user.role !== 'admin' && user.role !== 'superadmin') {\n        toast({\n          title: \"Access Denied\",\n          description: \"Admin privileges required to access this area.\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n\n      // Store tokens and user data\n      localStorage.setItem(\"accessToken\", accessToken);\n      localStorage.setItem(\"refreshToken\", refreshToken);\n      \n      await login(accessToken, refreshToken);\n      \n      toast({\n        title: \"Welcome Admin\",\n        description: `Successfully logged in as ${user.firstName || user.username}`,\n      });\n      \n      // Redirect to admin dashboard\n      setLocation(\"/admin/dashboard\");\n    },\n    onError: (error: any) => {\n      console.error(\"Admin login error:\", error);\n      toast({\n        title: \"Login Failed\",\n        description: error.message || \"Invalid credentials or insufficient privileges\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = (data: AdminLoginForm) => {\n    loginMutation.mutate(data);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-red-50 via-blue-50 to-red-100 dark:from-gray-900 dark:via-blue-900 dark:to-gray-800 flex items-center justify-center p-4\">\n      <div className=\"w-full max-w-md space-y-6\">\n        {/* Back to regular login */}\n        <div className=\"flex justify-center\">\n          <Link href=\"/login\">\n            <Button variant=\"outline\" size=\"sm\" data-testid=\"button-back-regular-login\">\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Regular Login\n            </Button>\n          </Link>\n        </div>\n\n        <Card className=\"border-0 shadow-xl bg-white/80 dark:bg-gray-800/80 backdrop-blur-sm\" data-testid=\"card-admin-login\">\n          <CardHeader className=\"space-y-4 text-center\">\n            <div className=\"mx-auto w-16 h-16 bg-gradient-to-r from-red-600 to-blue-600 rounded-full flex items-center justify-center\">\n              <Shield className=\"w-8 h-8 text-white\" />\n            </div>\n            <div className=\"space-y-2\">\n              <CardTitle className=\"text-2xl font-bold bg-gradient-to-r from-red-600 to-blue-600 bg-clip-text text-transparent\">\n                Admin Access\n              </CardTitle>\n              <CardDescription className=\"text-gray-600 dark:text-gray-300\">\n                Administrative login for Life in UK platform\n              </CardDescription>\n            </div>\n          </CardHeader>\n          \n          <CardContent>\n            <Form {...form}>\n              <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n                <FormField\n                  control={form.control}\n                  name=\"email\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Admin Email</FormLabel>\n                      <FormControl>\n                        <Input\n                          {...field}\n                          type=\"email\"\n                          placeholder=\"admin@example.com\"\n                          disabled={loginMutation.isPending}\n                          data-testid=\"input-admin-email\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <FormField\n                  control={form.control}\n                  name=\"password\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>Admin Password</FormLabel>\n                      <FormControl>\n                        <div className=\"relative\">\n                          <Input\n                            {...field}\n                            type={showPassword ? \"text\" : \"password\"}\n                            placeholder=\"Enter admin password\"\n                            disabled={loginMutation.isPending}\n                            data-testid=\"input-admin-password\"\n                          />\n                          <Button\n                            type=\"button\"\n                            variant=\"ghost\"\n                            size=\"sm\"\n                            className=\"absolute right-0 top-0 h-full px-3 hover:bg-transparent\"\n                            onClick={() => setShowPassword(!showPassword)}\n                            disabled={loginMutation.isPending}\n                            data-testid=\"button-toggle-password\"\n                          >\n                            {showPassword ? (\n                              <EyeOff className=\"h-4 w-4 text-gray-400\" />\n                            ) : (\n                              <Eye className=\"h-4 w-4 text-gray-400\" />\n                            )}\n                          </Button>\n                        </div>\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                <Button\n                  type=\"submit\"\n                  className=\"w-full bg-gradient-to-r from-red-600 to-blue-600 hover:from-red-700 hover:to-blue-700 text-white\"\n                  disabled={loginMutation.isPending}\n                  data-testid=\"button-admin-login\"\n                >\n                  {loginMutation.isPending ? (\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\n                      <span>Verifying...</span>\n                    </div>\n                  ) : (\n                    <>\n                      <Shield className=\"w-4 h-4 mr-2\" />\n                      Admin Login\n                    </>\n                  )}\n                </Button>\n              </form>\n            </Form>\n\n            {/* Admin credentials hint */}\n            <div className=\"mt-6 p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg border border-blue-200 dark:border-blue-700\" data-testid=\"card-admin-credentials\">\n              <h4 className=\"text-sm font-medium text-blue-800 dark:text-blue-200 mb-2\">\n                Default Admin Credentials\n              </h4>\n              <div className=\"text-xs text-blue-600 dark:text-blue-300 space-y-1\">\n                <div><strong>Email:</strong> admin@example.com</div>\n                <div><strong>Password:</strong> admin123</div>\n              </div>\n              <p className=\"text-xs text-blue-500 dark:text-blue-400 mt-2\">\n                Change these credentials in production\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Footer */}\n        <div className=\"text-center text-sm text-gray-600 dark:text-gray-400\">\n          <p>Life in UK Test Platform - Administrative Access</p>\n          <Link href=\"/\" className=\"text-blue-600 hover:text-blue-700 dark:text-blue-400\">\n            ← Back to Main Site\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":8673},"client/src/pages/admin/AdminAuditLogs.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Link } from \"wouter\";\nimport { ArrowLeft, Activity, User, Shield, AlertTriangle } from \"lucide-react\";\n\ninterface AuditLog {\n  id: string;\n  adminUserId: string;\n  action: string;\n  entity: string;\n  entityId: string;\n  before: string | null;\n  after: string | null;\n  ip: string | null;\n  timestamp: string;\n}\n\ninterface AuditLogsResponse {\n  logs: AuditLog[];\n  pagination: {\n    page: number;\n    limit: number;\n    hasMore: boolean;\n  };\n}\n\nexport default function AdminAuditLogs() {\n  const [page, setPage] = useState(1);\n  const limit = 50;\n\n  const { data: auditData, isLoading } = useQuery<AuditLogsResponse>({\n    queryKey: ['/api/admin/audit-logs', page],\n    refetchOnWindowFocus: false,\n  });\n\n  const getActionBadgeVariant = (action: string) => {\n    if (action.includes('delete') || action.includes('suspend')) {\n      return 'destructive';\n    } else if (action.includes('update') || action.includes('create')) {\n      return 'default';\n    }\n    return 'secondary';\n  };\n\n  const getActionIcon = (action: string) => {\n    if (action.includes('user')) {\n      return User;\n    } else if (action.includes('admin') || action.includes('role')) {\n      return Shield;\n    } else if (action.includes('suspend') || action.includes('delete')) {\n      return AlertTriangle;\n    }\n    return Activity;\n  };\n\n  const formatTimestamp = (timestamp: string) => {\n    const date = new Date(timestamp);\n    return date.toLocaleString();\n  };\n\n  const formatDetails = (before: string | null, after: string | null) => {\n    if (after) {\n      try {\n        const parsed = JSON.parse(after);\n        return Object.entries(parsed).map(([key, value]) => \n          `${key}: ${JSON.stringify(value)}`\n        ).join(', ');\n      } catch {\n        return after;\n      }\n    }\n    return 'No details';\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 p-6\">\n      <div className=\"max-w-7xl mx-auto space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <Link href=\"/admin/dashboard\">\n              <Button variant=\"outline\" size=\"sm\" data-testid=\"button-back-dashboard\">\n                <ArrowLeft className=\"w-4 h-4 mr-2\" />\n                Back to Dashboard\n              </Button>\n            </Link>\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\" data-testid=\"text-audit-logs-title\">\n                Audit Logs\n              </h1>\n              <p className=\"text-gray-600 dark:text-gray-300\">\n                Track all administrative actions and system events\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Audit Logs Table */}\n        <Card data-testid=\"card-audit-logs\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center space-x-2\">\n              <Activity className=\"w-5 h-5\" />\n              <span>Administrative Actions</span>\n              <Badge variant=\"secondary\" data-testid=\"badge-logs-count\">\n                {auditData?.logs.length || 0} entries\n              </Badge>\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {isLoading ? (\n              <div className=\"flex items-center justify-center py-8\">\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n              </div>\n            ) : (\n              <div className=\"overflow-x-auto\">\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Timestamp</TableHead>\n                      <TableHead>Admin</TableHead>\n                      <TableHead>Action</TableHead>\n                      <TableHead>Entity</TableHead>\n                      <TableHead>Target</TableHead>\n                      <TableHead>Details</TableHead>\n                      <TableHead>IP</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {auditData?.logs.map((log) => {\n                      const ActionIcon = getActionIcon(log.action);\n                      return (\n                        <TableRow key={log.id} data-testid={`row-audit-${log.id}`}>\n                          <TableCell>\n                            <div className=\"text-sm\" data-testid={`text-audit-timestamp-${log.id}`}>\n                              {formatTimestamp(log.timestamp || new Date().toISOString())}\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"text-sm font-medium\" data-testid={`text-audit-admin-${log.id}`}>\n                              {log.adminUserId}\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <Badge \n                              variant={getActionBadgeVariant(log.action)}\n                              data-testid={`badge-audit-action-${log.id}`}\n                            >\n                              <ActionIcon className=\"w-3 h-3 mr-1\" />\n                              {log.action.replace(/_/g, ' ')}\n                            </Badge>\n                          </TableCell>\n                          <TableCell>\n                            <span className=\"text-sm capitalize\" data-testid={`text-audit-entity-${log.id}`}>\n                              {log.entity}\n                            </span>\n                          </TableCell>\n                          <TableCell>\n                            <span className=\"text-sm text-gray-600\" data-testid={`text-audit-entity-id-${log.id}`}>\n                              {log.entityId}\n                            </span>\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"text-xs text-gray-500 max-w-xs truncate\" data-testid={`text-audit-details-${log.id}`}>\n                              {formatDetails(log.before, log.after)}\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <span className=\"text-xs text-gray-500\" data-testid={`text-audit-ip-${log.id}`}>\n                              {log.ip || 'N/A'}\n                            </span>\n                          </TableCell>\n                        </TableRow>\n                      );\n                    })}\n                  </TableBody>\n                </Table>\n\n                {auditData?.logs.length === 0 && !isLoading && (\n                  <div className=\"text-center py-8\" data-testid=\"text-no-audit-logs\">\n                    <Activity className=\"w-12 h-12 text-gray-300 mx-auto mb-4\" />\n                    <p className=\"text-gray-500\">No audit logs found</p>\n                    <p className=\"text-sm text-gray-400\">Administrative actions will appear here</p>\n                  </div>\n                )}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Pagination */}\n        {auditData?.pagination && (\n          <div className=\"flex items-center justify-between\">\n            <Button\n              variant=\"outline\"\n              onClick={() => setPage(Math.max(1, page - 1))}\n              disabled={page === 1}\n              data-testid=\"button-prev-page\"\n            >\n              Previous\n            </Button>\n            <span className=\"text-sm text-gray-600\" data-testid=\"text-page-info\">\n              Page {page}\n            </span>\n            <Button\n              variant=\"outline\"\n              onClick={() => setPage(page + 1)}\n              disabled={!auditData.pagination.hasMore}\n              data-testid=\"button-next-page\"\n            >\n              Next\n            </Button>\n          </div>\n        )}\n\n        {/* Legend */}\n        <Card data-testid=\"card-audit-legend\">\n          <CardHeader>\n            <CardTitle className=\"text-lg\">Action Types</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n              <div className=\"flex items-center space-x-2\">\n                <Badge variant=\"default\">Update Actions</Badge>\n                <span className=\"text-gray-600\">Data modifications</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Badge variant=\"destructive\">Critical Actions</Badge>\n                <span className=\"text-gray-600\">Deletions, suspensions</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Badge variant=\"secondary\">System Actions</Badge>\n                <span className=\"text-gray-600\">General activities</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <User className=\"w-4 h-4\" />\n                <span className=\"text-gray-600\">User-related</span>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}","size_bytes":9492},"client/src/pages/admin/AdminDashboard.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { Link } from \"wouter\";\nimport { \n  Users, \n  UserCheck, \n  Crown, \n  Activity,\n  TrendingUp,\n  Shield,\n  Database,\n  Server,\n  Clock,\n  BarChart3\n} from \"lucide-react\";\n\ninterface SystemStatus {\n  database: string;\n  server: string;\n  timestamp: string;\n  uptime: number;\n  memory: {\n    rss: number;\n    heapTotal: number;\n    heapUsed: number;\n    external: number;\n    arrayBuffers: number;\n  };\n}\n\ninterface AnalyticsData {\n  totalUsers: number;\n  activeUsers: number;\n  subscriptionStats: {\n    premium: number;\n    free: number;\n    total: number;\n  };\n  recentSignups: number;\n  lastUpdated: string;\n}\n\nexport default function AdminDashboard() {\n  const { data: analytics, isLoading: analyticsLoading } = useQuery<AnalyticsData>({\n    queryKey: ['/api/admin/analytics'],\n    refetchInterval: 30000, // Refetch every 30 seconds\n  });\n\n  const { data: systemStatus, isLoading: statusLoading } = useQuery<SystemStatus>({\n    queryKey: ['/api/admin/system-status'],\n    refetchInterval: 10000, // Refetch every 10 seconds\n  });\n\n  const formatUptime = (seconds: number) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    return `${hours}h ${minutes}m`;\n  };\n\n  const formatMemory = (bytes: number) => {\n    return `${(bytes / 1024 / 1024).toFixed(1)} MB`;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 p-6\">\n      <div className=\"max-w-7xl mx-auto space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\" data-testid=\"text-admin-dashboard-title\">\n              Admin Dashboard\n            </h1>\n            <p className=\"text-gray-600 dark:text-gray-300\">\n              Life in UK Test Platform Administration\n            </p>\n          </div>\n          <div className=\"flex space-x-3\">\n            <Link href=\"/admin/users\">\n              <Button variant=\"outline\" data-testid=\"button-manage-users\">\n                <Users className=\"w-4 h-4 mr-2\" />\n                Manage Users\n              </Button>\n            </Link>\n            <Link href=\"/admin/audit-logs\">\n              <Button variant=\"outline\" data-testid=\"button-view-audit-logs\">\n                <Activity className=\"w-4 h-4 mr-2\" />\n                Audit Logs\n              </Button>\n            </Link>\n          </div>\n        </div>\n\n        <Tabs defaultValue=\"overview\" className=\"w-full\">\n          <TabsList className=\"grid w-full grid-cols-3\">\n            <TabsTrigger value=\"overview\" data-testid=\"tab-overview\">Overview</TabsTrigger>\n            <TabsTrigger value=\"analytics\" data-testid=\"tab-analytics\">Analytics</TabsTrigger>\n            <TabsTrigger value=\"system\" data-testid=\"tab-system\">System Status</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"overview\" className=\"space-y-6\">\n            {/* Quick Stats */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              <Card data-testid=\"card-total-users\">\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Total Users</CardTitle>\n                  <Users className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\" data-testid=\"text-total-users-count\">\n                    {analyticsLoading ? \"...\" : analytics?.totalUsers || 0}\n                  </div>\n                  <p className=\"text-xs text-muted-foreground\">\n                    Registered platform users\n                  </p>\n                </CardContent>\n              </Card>\n\n              <Card data-testid=\"card-active-users\">\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Active Users</CardTitle>\n                  <UserCheck className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\" data-testid=\"text-active-users-count\">\n                    {analyticsLoading ? \"...\" : analytics?.activeUsers || 0}\n                  </div>\n                  <p className=\"text-xs text-muted-foreground\">\n                    Users with activity\n                  </p>\n                </CardContent>\n              </Card>\n\n              <Card data-testid=\"card-premium-users\">\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Premium Users</CardTitle>\n                  <Crown className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\" data-testid=\"text-premium-users-count\">\n                    {analyticsLoading ? \"...\" : analytics?.subscriptionStats.premium || 0}\n                  </div>\n                  <p className=\"text-xs text-muted-foreground\">\n                    Active subscriptions\n                  </p>\n                </CardContent>\n              </Card>\n\n              <Card data-testid=\"card-recent-signups\">\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Recent Signups</CardTitle>\n                  <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\" data-testid=\"text-recent-signups-count\">\n                    {analyticsLoading ? \"...\" : analytics?.recentSignups || 0}\n                  </div>\n                  <p className=\"text-xs text-muted-foreground\">\n                    Last 7 days\n                  </p>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"analytics\" className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <Card data-testid=\"card-user-breakdown\">\n                <CardHeader>\n                  <CardTitle>User Breakdown</CardTitle>\n                  <CardDescription>Distribution of user types</CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"w-3 h-3 bg-blue-600 rounded-full\"></div>\n                      <span>Free Users</span>\n                    </div>\n                    <span className=\"font-medium\" data-testid=\"text-free-users-count\">\n                      {analytics?.subscriptionStats.free || 0}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-2\">\n                      <div className=\"w-3 h-3 bg-amber-500 rounded-full\"></div>\n                      <span>Premium Users</span>\n                    </div>\n                    <span className=\"font-medium\" data-testid=\"text-premium-breakdown-count\">\n                      {analytics?.subscriptionStats.premium || 0}\n                    </span>\n                  </div>\n                  {analytics && (\n                    <Progress \n                      value={(analytics.subscriptionStats.premium / analytics.subscriptionStats.total) * 100} \n                      className=\"w-full\"\n                      data-testid=\"progress-premium-ratio\"\n                    />\n                  )}\n                  <p className=\"text-xs text-muted-foreground\">\n                    {analytics && analytics.subscriptionStats.total > 0 \n                      ? `${Math.round((analytics.subscriptionStats.premium / analytics.subscriptionStats.total) * 100)}% premium conversion`\n                      : 'No users yet'\n                    }\n                  </p>\n                </CardContent>\n              </Card>\n\n              <Card data-testid=\"card-activity-overview\">\n                <CardHeader>\n                  <CardTitle>Activity Overview</CardTitle>\n                  <CardDescription>Platform engagement metrics</CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <span>Active Rate</span>\n                    <Badge variant=\"outline\" data-testid=\"badge-active-rate\">\n                      {analytics && analytics.totalUsers > 0 \n                        ? `${Math.round((analytics.activeUsers / analytics.totalUsers) * 100)}%`\n                        : '0%'\n                      }\n                    </Badge>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <span>New Signups (7d)</span>\n                    <Badge variant=\"secondary\" data-testid=\"badge-signups-week\">\n                      {analytics?.recentSignups || 0}\n                    </Badge>\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"system\" className=\"space-y-6\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n              <Card data-testid=\"card-system-health\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <Shield className=\"w-5 h-5\" />\n                    <span>System Health</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-2\">\n                      <Database className=\"w-4 h-4\" />\n                      <span>Database</span>\n                    </div>\n                    <Badge \n                      variant={systemStatus?.database === 'connected' ? 'default' : 'destructive'}\n                      data-testid=\"badge-database-status\"\n                    >\n                      {statusLoading ? '...' : systemStatus?.database || 'unknown'}\n                    </Badge>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-2\">\n                      <Server className=\"w-4 h-4\" />\n                      <span>Server</span>\n                    </div>\n                    <Badge \n                      variant={systemStatus?.server === 'running' ? 'default' : 'destructive'}\n                      data-testid=\"badge-server-status\"\n                    >\n                      {statusLoading ? '...' : systemStatus?.server || 'unknown'}\n                    </Badge>\n                  </div>\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-2\">\n                      <Clock className=\"w-4 h-4\" />\n                      <span>Uptime</span>\n                    </div>\n                    <span className=\"text-sm font-medium\" data-testid=\"text-uptime\">\n                      {statusLoading ? '...' : systemStatus ? formatUptime(systemStatus.uptime) : 'unknown'}\n                    </span>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card data-testid=\"card-memory-usage\">\n                <CardHeader>\n                  <CardTitle className=\"flex items-center space-x-2\">\n                    <BarChart3 className=\"w-5 h-5\" />\n                    <span>Memory Usage</span>\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  {systemStatus?.memory && (\n                    <>\n                      <div className=\"flex items-center justify-between\">\n                        <span>Heap Used</span>\n                        <span className=\"text-sm font-medium\" data-testid=\"text-heap-used\">\n                          {formatMemory(systemStatus.memory.heapUsed)}\n                        </span>\n                      </div>\n                      <div className=\"flex items-center justify-between\">\n                        <span>Heap Total</span>\n                        <span className=\"text-sm font-medium\" data-testid=\"text-heap-total\">\n                          {formatMemory(systemStatus.memory.heapTotal)}\n                        </span>\n                      </div>\n                      <div className=\"flex items-center justify-between\">\n                        <span>RSS</span>\n                        <span className=\"text-sm font-medium\" data-testid=\"text-rss\">\n                          {formatMemory(systemStatus.memory.rss)}\n                        </span>\n                      </div>\n                      <Progress \n                        value={(systemStatus.memory.heapUsed / systemStatus.memory.heapTotal) * 100}\n                        className=\"w-full\"\n                        data-testid=\"progress-memory-usage\"\n                      />\n                    </>\n                  )}\n                  {statusLoading && <div className=\"text-sm text-muted-foreground\">Loading...</div>}\n                </CardContent>\n              </Card>\n            </div>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  );\n}","size_bytes":14062},"client/src/pages/admin/AdminUsers.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Link } from \"wouter\";\nimport { \n  ArrowLeft,\n  Search,\n  Filter,\n  Edit3,\n  UserX,\n  UserCheck,\n  Crown,\n  Shield,\n  User\n} from \"lucide-react\";\n\ninterface User {\n  id: string;\n  firstName: string;\n  username: string;\n  email: string;\n  role: string;\n  overallProgress: number;\n  totalStudyTime: number;\n  currentStreak: number;\n  subscriptionType?: string;\n  subscriptionStatus?: string;\n  createdAt: string;\n}\n\ninterface UsersResponse {\n  users: User[];\n  pagination: {\n    page: number;\n    limit: number;\n    hasMore: boolean;\n  };\n}\n\nexport default function AdminUsers() {\n  const { toast } = useToast();\n  const [page, setPage] = useState(1);\n  const [search, setSearch] = useState(\"\");\n  const [roleFilter, setRoleFilter] = useState<string>(\"\");\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [isRoleDialogOpen, setIsRoleDialogOpen] = useState(false);\n\n  // Fetch users with pagination and filters\n  const { data: usersData, isLoading } = useQuery<UsersResponse>({\n    queryKey: ['/api/admin/users', page, roleFilter],\n    refetchOnWindowFocus: false,\n  });\n\n  // Role update mutation\n  const updateRoleMutation = useMutation({\n    mutationFn: async ({ userId, role }: { userId: string; role: string }) => {\n      return apiRequest('PUT', `/api/admin/users/${userId}/role`, { role });\n    },\n    onSuccess: () => {\n      toast({ title: \"Success\", description: \"User role updated successfully\" });\n      queryClient.invalidateQueries({ queryKey: ['/api/admin/users'] });\n      setIsRoleDialogOpen(false);\n      setSelectedUser(null);\n    },\n    onError: (error: any) => {\n      toast({ \n        title: \"Error\", \n        description: error.message || \"Failed to update user role\",\n        variant: \"destructive\"\n      });\n    }\n  });\n\n  // User suspension mutation\n  const suspendUserMutation = useMutation({\n    mutationFn: async ({ userId, suspended, reason }: { userId: string; suspended: boolean; reason?: string }) => {\n      return apiRequest('PUT', `/api/admin/users/${userId}/suspend`, { suspended, reason });\n    },\n    onSuccess: (_, { suspended }) => {\n      toast({ \n        title: \"Success\", \n        description: `User ${suspended ? 'suspended' : 'unsuspended'} successfully` \n      });\n      queryClient.invalidateQueries({ queryKey: ['/api/admin/users'] });\n    },\n    onError: (error: any) => {\n      toast({ \n        title: \"Error\", \n        description: error.message || \"Failed to update user status\",\n        variant: \"destructive\"\n      });\n    }\n  });\n\n  const handleRoleUpdate = (newRole: string) => {\n    if (selectedUser) {\n      updateRoleMutation.mutate({\n        userId: selectedUser.id,\n        role: newRole\n      });\n    }\n  };\n\n  const handleSuspendUser = (user: User, suspended: boolean) => {\n    const reason = suspended ? \"Suspended by admin\" : undefined;\n    suspendUserMutation.mutate({\n      userId: user.id,\n      suspended,\n      reason\n    });\n  };\n\n  const getRoleBadgeVariant = (role: string) => {\n    switch (role) {\n      case 'admin':\n        return 'default';\n      case 'superadmin':\n        return 'destructive';\n      default:\n        return 'secondary';\n    }\n  };\n\n  const getRoleIcon = (role: string) => {\n    switch (role) {\n      case 'admin':\n        return Shield;\n      case 'superadmin':\n        return Crown;\n      default:\n        return User;\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString();\n  };\n\n  // Filter users based on search\n  const filteredUsers = usersData?.users.filter(user =>\n    user.firstName?.toLowerCase().includes(search.toLowerCase()) ||\n    user.username.toLowerCase().includes(search.toLowerCase()) ||\n    user.email.toLowerCase().includes(search.toLowerCase())\n  ) || [];\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 p-6\">\n      <div className=\"max-w-7xl mx-auto space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-4\">\n            <Link href=\"/admin/dashboard\">\n              <Button variant=\"outline\" size=\"sm\" data-testid=\"button-back-dashboard\">\n                <ArrowLeft className=\"w-4 h-4 mr-2\" />\n                Back to Dashboard\n              </Button>\n            </Link>\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\" data-testid=\"text-users-title\">\n                User Management\n              </h1>\n              <p className=\"text-gray-600 dark:text-gray-300\">\n                Manage platform users, roles, and permissions\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Filters */}\n        <Card data-testid=\"card-user-filters\">\n          <CardContent className=\"pt-6\">\n            <div className=\"flex flex-col sm:flex-row gap-4\">\n              <div className=\"flex-1\">\n                <div className=\"relative\">\n                  <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\n                  <Input\n                    placeholder=\"Search users by name, username, or email...\"\n                    value={search}\n                    onChange={(e) => setSearch(e.target.value)}\n                    className=\"pl-10\"\n                    data-testid=\"input-search-users\"\n                  />\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Filter className=\"w-4 h-4 text-gray-600\" />\n                <Select value={roleFilter} onValueChange={setRoleFilter}>\n                  <SelectTrigger className=\"w-[160px]\" data-testid=\"select-role-filter\">\n                    <SelectValue placeholder=\"Filter by role\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"\">All roles</SelectItem>\n                    <SelectItem value=\"student\">Students</SelectItem>\n                    <SelectItem value=\"admin\">Admins</SelectItem>\n                    <SelectItem value=\"superadmin\">Super Admins</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Users Table */}\n        <Card data-testid=\"card-users-table\">\n          <CardHeader>\n            <CardTitle>\n              Users ({filteredUsers.length} {roleFilter ? `${roleFilter}s` : 'total'})\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            {isLoading ? (\n              <div className=\"flex items-center justify-center py-8\">\n                <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n              </div>\n            ) : (\n              <div className=\"overflow-x-auto\">\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>User</TableHead>\n                      <TableHead>Role</TableHead>\n                      <TableHead>Progress</TableHead>\n                      <TableHead>Subscription</TableHead>\n                      <TableHead>Study Time</TableHead>\n                      <TableHead>Joined</TableHead>\n                      <TableHead>Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {filteredUsers.map((user) => {\n                      const RoleIcon = getRoleIcon(user.role);\n                      return (\n                        <TableRow key={user.id} data-testid={`row-user-${user.id}`}>\n                          <TableCell>\n                            <div>\n                              <div className=\"font-medium\" data-testid={`text-user-name-${user.id}`}>\n                                {user.firstName || user.username}\n                              </div>\n                              <div className=\"text-sm text-gray-500\" data-testid={`text-user-email-${user.id}`}>\n                                {user.email}\n                              </div>\n                              <div className=\"text-xs text-gray-400\">\n                                @{user.username}\n                              </div>\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <Badge \n                              variant={getRoleBadgeVariant(user.role)}\n                              data-testid={`badge-user-role-${user.id}`}\n                            >\n                              <RoleIcon className=\"w-3 h-3 mr-1\" />\n                              {user.role}\n                            </Badge>\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"text-sm\">\n                              <span className=\"font-medium\" data-testid={`text-user-progress-${user.id}`}>\n                                {user.overallProgress || 0}%\n                              </span>\n                              <div className=\"text-xs text-gray-500\">\n                                Streak: {user.currentStreak || 0} days\n                              </div>\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <Badge \n                              variant={user.subscriptionType === 'premium' ? 'default' : 'secondary'}\n                              data-testid={`badge-user-subscription-${user.id}`}\n                            >\n                              {user.subscriptionType || 'free'}\n                            </Badge>\n                          </TableCell>\n                          <TableCell>\n                            <span className=\"text-sm\" data-testid={`text-user-study-time-${user.id}`}>\n                              {Math.floor((user.totalStudyTime || 0) / 60)}h {(user.totalStudyTime || 0) % 60}m\n                            </span>\n                          </TableCell>\n                          <TableCell>\n                            <span className=\"text-sm text-gray-500\" data-testid={`text-user-joined-${user.id}`}>\n                              {formatDate(user.createdAt)}\n                            </span>\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"flex items-center space-x-1\">\n                              <Button\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={() => {\n                                  setSelectedUser(user);\n                                  setIsRoleDialogOpen(true);\n                                }}\n                                data-testid={`button-edit-role-${user.id}`}\n                              >\n                                <Edit3 className=\"w-3 h-3\" />\n                              </Button>\n                              <Button\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={() => handleSuspendUser(user, false)}\n                                disabled={suspendUserMutation.isPending}\n                                data-testid={`button-unsuspend-${user.id}`}\n                              >\n                                <UserCheck className=\"w-3 h-3\" />\n                              </Button>\n                              <Button\n                                variant=\"outline\"\n                                size=\"sm\"\n                                onClick={() => handleSuspendUser(user, true)}\n                                disabled={suspendUserMutation.isPending}\n                                data-testid={`button-suspend-${user.id}`}\n                              >\n                                <UserX className=\"w-3 h-3\" />\n                              </Button>\n                            </div>\n                          </TableCell>\n                        </TableRow>\n                      );\n                    })}\n                  </TableBody>\n                </Table>\n                \n                {filteredUsers.length === 0 && !isLoading && (\n                  <div className=\"text-center py-8\" data-testid=\"text-no-users\">\n                    <p className=\"text-gray-500\">No users found</p>\n                  </div>\n                )}\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Pagination */}\n        {usersData?.pagination && (\n          <div className=\"flex items-center justify-between\">\n            <Button\n              variant=\"outline\"\n              onClick={() => setPage(Math.max(1, page - 1))}\n              disabled={page === 1}\n              data-testid=\"button-prev-page\"\n            >\n              Previous\n            </Button>\n            <span className=\"text-sm text-gray-600\" data-testid=\"text-page-info\">\n              Page {page}\n            </span>\n            <Button\n              variant=\"outline\"\n              onClick={() => setPage(page + 1)}\n              disabled={!usersData.pagination.hasMore}\n              data-testid=\"button-next-page\"\n            >\n              Next\n            </Button>\n          </div>\n        )}\n      </div>\n\n      {/* Role Update Dialog */}\n      <Dialog open={isRoleDialogOpen} onOpenChange={setIsRoleDialogOpen}>\n        <DialogContent data-testid=\"dialog-update-role\">\n          <DialogHeader>\n            <DialogTitle>Update User Role</DialogTitle>\n          </DialogHeader>\n          {selectedUser && (\n            <div className=\"space-y-4\">\n              <div>\n                <p className=\"text-sm text-gray-600\">\n                  Update role for: <span className=\"font-medium\">{selectedUser.firstName || selectedUser.username}</span>\n                </p>\n                <p className=\"text-xs text-gray-500\">{selectedUser.email}</p>\n              </div>\n              \n              <div className=\"space-y-2\">\n                <label className=\"text-sm font-medium\">New Role</label>\n                <div className=\"grid grid-cols-3 gap-2\">\n                  <Button\n                    variant={selectedUser.role === 'student' ? 'default' : 'outline'}\n                    onClick={() => handleRoleUpdate('student')}\n                    disabled={updateRoleMutation.isPending}\n                    data-testid=\"button-set-student\"\n                  >\n                    <User className=\"w-4 h-4 mr-2\" />\n                    Student\n                  </Button>\n                  <Button\n                    variant={selectedUser.role === 'admin' ? 'default' : 'outline'}\n                    onClick={() => handleRoleUpdate('admin')}\n                    disabled={updateRoleMutation.isPending}\n                    data-testid=\"button-set-admin\"\n                  >\n                    <Shield className=\"w-4 h-4 mr-2\" />\n                    Admin\n                  </Button>\n                  <Button\n                    variant={selectedUser.role === 'superadmin' ? 'default' : 'outline'}\n                    onClick={() => handleRoleUpdate('superadmin')}\n                    disabled={updateRoleMutation.isPending}\n                    data-testid=\"button-set-superadmin\"\n                  >\n                    <Crown className=\"w-4 h-4 mr-2\" />\n                    Super Admin\n                  </Button>\n                </div>\n              </div>\n              \n              {updateRoleMutation.isPending && (\n                <div className=\"flex items-center justify-center py-2\">\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"></div>\n                  <span className=\"ml-2 text-sm\">Updating...</span>\n                </div>\n              )}\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}","size_bytes":16656}},"version":1}